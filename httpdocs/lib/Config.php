<?php
/**
 * Generated by Haxe 4.1.1
 * Haxe source file: src/Config.hx
 */

use \php\Boot;
use \sys\io\File;
use \php\_Boot\HxString;
use \haxe\ds\StringMap;
use \tjson\TJSON;

/**
 * ...
 * @author axel@cunity.me
 */
class Config {
	/**
	 * @param string $cjs
	 * 
	 * @return StringMap
	 */
	public static function load ($cjs) {
		#src/Config.hx:20: characters 3-40
		$js = File::getContent($cjs);
		#src/Config.hx:23: characters 3-44
		$vars = HxString::split($js, "var");
		#src/Config.hx:24: characters 3-15
		if ($vars->length > 0) {
			$vars->length--;
		}
		array_shift($vars->arr);
		#src/Config.hx:25: characters 3-46
		$result = new StringMap();
		#src/Config.hx:27: lines 27-32
		$_g = 0;
		while ($_g < $vars->length) {
			#src/Config.hx:27: characters 8-9
			$v = ($vars->arr[$_g] ?? null);
			#src/Config.hx:27: lines 27-32
			++$_g;
			#src/Config.hx:29: characters 4-42
			$data = HxString::split($v, "=");
			#src/Config.hx:30: characters 4-44
			$json = TJSON::parse(($data->arr[1] ?? null));
			#src/Config.hx:31: characters 4-36
			$key = trim(($data->arr[0] ?? null));
			$result->data[$key] = $json;
		}
		#src/Config.hx:33: characters 3-16
		return $result;
	}
}

Boot::registerClass(Config::class, 'Config');
