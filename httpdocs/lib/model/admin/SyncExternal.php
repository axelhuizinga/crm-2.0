<?php
/**
 * Generated by Haxe 4.1.1
 * Haxe source file: src/model/admin/SyncExternal.hx
 */

namespace model\admin;

use \php\_Boot\HxDynamicStr;
use \php\_Boot\HxAnon;
use \php\Boot;
use \haxe\Log;
use \php\Lib;
use \shared\DbData;
use \haxe\ds\StringMap;

/**
 * ...
 * @author axel@bi4.me
 */
class SyncExternal extends \Model {
	/**
	 * @var SyncExternalClients
	 */
	public $sEC;

	/**
	 * @param DbData $dbData
	 * 
	 * @return string
	 */
	public static function getMissing ($dbData) {
		#src/model/admin/SyncExternal.hx:183: lines 183-188
		$sql = "\x0D\x0A\x09\x09SELECT DISTINCT(cl.client_id) FROM clients cl \x0D\x0AINNER JOIN pay_plan pp \x0D\x0AON pp.client_id=cl.client_id \x0D\x0AINNER JOIN pay_source ps \x0D\x0AON ps.client_id = cl.client_id;";
		#src/model/admin/SyncExternal.hx:189: characters 9-54
		$stmt = \S::$syncDbh->query($sql);
		#src/model/admin/SyncExternal.hx:190: lines 190-194
		if ($stmt === false) {
			#src/model/admin/SyncExternal.hx:192: characters 4-9
			(Log::$trace)(\S::$syncDbh->errorInfo(), new HxAnon([
				"fileName" => "src/model/admin/SyncExternal.hx",
				"lineNumber" => 192,
				"className" => "model.admin.SyncExternal",
				"methodName" => "getMissing",
			]));
			#src/model/admin/SyncExternal.hx:193: characters 25-65
			$_g = new StringMap();
			$value = \S::$syncDbh->errorInfo();
			$_g->data["getAll query:"] = $value;
			#src/model/admin/SyncExternal.hx:193: characters 4-66
			\S::sendErrors($dbData, $_g, new HxAnon([
				"fileName" => "src/model/admin/SyncExternal.hx",
				"lineNumber" => 193,
				"className" => "model.admin.SyncExternal",
				"methodName" => "getMissing",
			]));
		}
		#src/model/admin/SyncExternal.hx:195: lines 195-198
		if ($stmt->errorCode() !== "00000") {
			#src/model/admin/SyncExternal.hx:197: characters 4-9
			(Log::$trace)($stmt->errorInfo(), new HxAnon([
				"fileName" => "src/model/admin/SyncExternal.hx",
				"lineNumber" => 197,
				"className" => "model.admin.SyncExternal",
				"methodName" => "getMissing",
			]));
		}
		#src/model/admin/SyncExternal.hx:199: characters 3-76
		$res = ($stmt->execute() ? $stmt->fetchAll(\PDO::FETCH_NUM) : null);
		#src/model/admin/SyncExternal.hx:201: characters 3-8
		(Log::$trace)(count($res), new HxAnon([
			"fileName" => "src/model/admin/SyncExternal.hx",
			"lineNumber" => 201,
			"className" => "model.admin.SyncExternal",
			"methodName" => "getMissing",
		]));
		#src/model/admin/SyncExternal.hx:203: characters 3-76
		$cleared = \S::$dbh->exec("CREATE TEMP TABLE contact_ids(id BIGINT)");
		#src/model/admin/SyncExternal.hx:204: lines 204-209
		if (\S::$dbh->errorCode() !== "00000") {
			#src/model/admin/SyncExternal.hx:206: characters 4-9
			(Log::$trace)(\S::$dbh->errorInfo(), new HxAnon([
				"fileName" => "src/model/admin/SyncExternal.hx",
				"lineNumber" => 206,
				"className" => "model.admin.SyncExternal",
				"methodName" => "getMissing",
			]));
		} else {
			#src/model/admin/SyncExternal.hx:209: characters 4-9
			(Log::$trace)("created temp table contact_ids", new HxAnon([
				"fileName" => "src/model/admin/SyncExternal.hx",
				"lineNumber" => 209,
				"className" => "model.admin.SyncExternal",
				"methodName" => "getMissing",
			]));
		}
		#src/model/admin/SyncExternal.hx:210: characters 3-89
		$cIDs = array_map(function($r){return $r[0];}, $res);
		#src/model/admin/SyncExternal.hx:211: characters 3-8
		(Log::$trace)(print_r($cIDs[0],1), new HxAnon([
			"fileName" => "src/model/admin/SyncExternal.hx",
			"lineNumber" => 211,
			"className" => "model.admin.SyncExternal",
			"methodName" => "getMissing",
		]));
		#src/model/admin/SyncExternal.hx:212: characters 3-62
		$ok = \S::$dbh->pgsqlCopyFromArray("contact_ids", $cIDs);
		#src/model/admin/SyncExternal.hx:213: lines 213-216
		if (!$ok) {
			#src/model/admin/SyncExternal.hx:215: characters 4-9
			(Log::$trace)(\S::$dbh->errorInfo(), new HxAnon([
				"fileName" => "src/model/admin/SyncExternal.hx",
				"lineNumber" => 215,
				"className" => "model.admin.SyncExternal",
				"methodName" => "getMissing",
			]));
		}
		#src/model/admin/SyncExternal.hx:217: lines 217-220
		if (\S::$dbh->errorCode() !== "00000") {
			#src/model/admin/SyncExternal.hx:219: characters 4-9
			(Log::$trace)(\S::$dbh->errorInfo(), new HxAnon([
				"fileName" => "src/model/admin/SyncExternal.hx",
				"lineNumber" => 219,
				"className" => "model.admin.SyncExternal",
				"methodName" => "getMissing",
			]));
		}
		#src/model/admin/SyncExternal.hx:221: characters 3-34
		$sql = "\x0D\x0A" . "SELECT ARRAY_TO_STRING(array_agg(acid.id),',') from contact_ids acid\x0D\x0A" . "left join \x0D\x0A" . "(SELECT 1 as gg,id from contacts) c\x0D\x0A" . "ON acid.id=c.id\x0D\x0A" . "where c.id IS NULL\x0D\x0A" . "GROUP BY gg;\x0D\x0A" . "";
		#src/model/admin/SyncExternal.hx:229: characters 3-26
		$stmt = \S::$dbh->query($sql);
		#src/model/admin/SyncExternal.hx:230: lines 230-234
		if ($stmt === false) {
			#src/model/admin/SyncExternal.hx:232: characters 4-9
			(Log::$trace)("" . ($sql??'null') . " " . (\Std::parseInt((\S::$dbQuery->dbParams->data["limit"] ?? null))??'null'), new HxAnon([
				"fileName" => "src/model/admin/SyncExternal.hx",
				"lineNumber" => 232,
				"className" => "model.admin.SyncExternal",
				"methodName" => "getMissing",
			]));
			#src/model/admin/SyncExternal.hx:233: characters 25-72
			$_g = new StringMap();
			$value = \S::$syncDbh->errorInfo();
			$_g->data["getMissingIDs query:"] = $value;
			#src/model/admin/SyncExternal.hx:233: characters 4-73
			\S::sendErrors($dbData, $_g, new HxAnon([
				"fileName" => "src/model/admin/SyncExternal.hx",
				"lineNumber" => 233,
				"className" => "model.admin.SyncExternal",
				"methodName" => "getMissing",
			]));
		}
		#src/model/admin/SyncExternal.hx:235: lines 235-238
		if ($stmt->errorCode() !== "00000") {
			#src/model/admin/SyncExternal.hx:237: characters 4-9
			(Log::$trace)($stmt->errorInfo(), new HxAnon([
				"fileName" => "src/model/admin/SyncExternal.hx",
				"lineNumber" => 237,
				"className" => "model.admin.SyncExternal",
				"methodName" => "getMissing",
			]));
		}
		#src/model/admin/SyncExternal.hx:239: characters 3-73
		$ids = ($stmt->execute() ? $stmt->fetch(\PDO::FETCH_COLUMN, 0) : null);
		#src/model/admin/SyncExternal.hx:240: characters 3-8
		(Log::$trace)($ids, new HxAnon([
			"fileName" => "src/model/admin/SyncExternal.hx",
			"lineNumber" => 240,
			"className" => "model.admin.SyncExternal",
			"methodName" => "getMissing",
		]));
		#src/model/admin/SyncExternal.hx:241: characters 3-13
		return $ids;
	}

	/**
	 * @param StringMap $param
	 * 
	 * @return void
	 */
	public function __construct ($param) {
		#src/model/admin/SyncExternal.hx:35: characters 3-15
		parent::__construct($param);
		#src/model/admin/SyncExternal.hx:40: characters 10-16
		if ($this->action === "syncAll") {
			#src/model/admin/SyncExternal.hx:42: characters 5-14
			$this->syncAll();
		} else {
			#src/model/admin/SyncExternal.hx:44: characters 5-10
			$this->run();
		}
	}

	/**
	 * @return DbData
	 */
	public function saveUserDetails () {
		#src/model/admin/SyncExternal.hx:93: characters 9-29
		$updated = 0;
		#src/model/admin/SyncExternal.hx:95: characters 9-38
		$stmt = null;
		#src/model/admin/SyncExternal.hx:96: characters 15-56
		$tmp = ($this->dbData->dataRows->arr[$this->dbData->dataRows->length - 2] ?? null);
		#src/model/admin/SyncExternal.hx:96: characters 9-14
		(Log::$trace)(($tmp === null ? "null" : $tmp->toString()), new HxAnon([
			"fileName" => "src/model/admin/SyncExternal.hx",
			"lineNumber" => 96,
			"className" => "model.admin.SyncExternal",
			"methodName" => "saveUserDetails",
		]));
		#src/model/admin/SyncExternal.hx:97: lines 97-125
		$_g = 0;
		$_g1 = $this->dbData->dataRows;
		while ($_g < $_g1->length) {
			#src/model/admin/SyncExternal.hx:97: characters 13-15
			$dR = ($_g1->arr[$_g] ?? null);
			#src/model/admin/SyncExternal.hx:97: lines 97-125
			++$_g;
			#src/model/admin/SyncExternal.hx:114: characters 13-105
			$external_text = $this->row2jsonb(Lib::objectOfAssociativeArray($dR->data));
			#src/model/admin/SyncExternal.hx:115: lines 115-117
			$sql = "\x0D\x0A" . ("UPDATE crm.users SET active='" . (($dR->data["active"] ?? null)??'null') . "',edited_by=101, external = jsonb_object('{" . ($external_text??'null') . "}')::jsonb WHERE user_name='" . (($dR->data["user"] ?? null)??'null') . "'\x0D\x0A") . "";
			#src/model/admin/SyncExternal.hx:119: characters 13-68
			$q = \S::$dbh->query($sql);
			#src/model/admin/SyncExternal.hx:120: lines 120-124
			if (!$q) {
				#src/model/admin/SyncExternal.hx:122: characters 36-82
				$_g2 = new StringMap();
				$key = "" . ($this->action??'null');
				$value = \Std::string(\S::$dbh->errorInfo());
				$_g2->data[$key] = $value;
				#src/model/admin/SyncExternal.hx:122: characters 16-82
				$this->dbData->dataErrors = $_g2;
				#src/model/admin/SyncExternal.hx:123: characters 16-29
				return $this->dbData;
			}
		}
		#src/model/admin/SyncExternal.hx:126: characters 27-42
		$tmp = $this->dbData->dataInfo;
		#src/model/admin/SyncExternal.hx:127: characters 4-69
		$_g = new StringMap();
		$_g->data["saveUserDetails"] = "OK";
		$value = \Std::string($updated);
		$_g->data["updatedRows"] = $value;
		#src/model/admin/SyncExternal.hx:126: lines 126-127
		$this->dbData->dataInfo = \Util::copyStringMap($tmp, $_g);
		#src/model/admin/SyncExternal.hx:128: characters 9-14
		(Log::$trace)(($this->dbData->dataInfo === null ? "null" : $this->dbData->dataInfo->toString()), new HxAnon([
			"fileName" => "src/model/admin/SyncExternal.hx",
			"lineNumber" => 128,
			"className" => "model.admin.SyncExternal",
			"methodName" => "saveUserDetails",
		]));
		#src/model/admin/SyncExternal.hx:129: characters 3-16
		return $this->dbData;
	}

	/**
	 * Import or Update crm clients, deals + accounts
	 * 
	 * @return void
	 */
	public function syncAll () {
		#src/model/admin/SyncExternal.hx:53: characters 3-8
		(Log::$trace)(($this->param === null ? "null" : $this->param->toString()), new HxAnon([
			"fileName" => "src/model/admin/SyncExternal.hx",
			"lineNumber" => 53,
			"className" => "model.admin.SyncExternal",
			"methodName" => "syncAll",
		]));
		#src/model/admin/SyncExternal.hx:54: characters 3-39
		$this->sEC = new SyncExternalClients($this->param);
		#src/model/admin/SyncExternal.hx:55: characters 16-22
		$tmp = $this->dbData;
		#src/model/admin/SyncExternal.hx:55: characters 23-40
		$_g = new StringMap();
		$_g->data["syncAll"] = "OK";
		#src/model/admin/SyncExternal.hx:55: characters 3-41
		\S::sendErrors($tmp, $_g, new HxAnon([
			"fileName" => "src/model/admin/SyncExternal.hx",
			"lineNumber" => 55,
			"className" => "model.admin.SyncExternal",
			"methodName" => "syncAll",
		]));
	}

	/**
	 * @return void
	 */
	public function syncBankTransferRequests () {
		#src/model/admin/SyncExternal.hx:60: characters 3-127
		$res = $this->fetchAll("SELECT * FROM `buchungs_anforderungen`", \S::$syncDbh, "syncBankTransferRequests", \PDO::FETCH_NUM, new HxAnon([
			"fileName" => "src/model/admin/SyncExternal.hx",
			"lineNumber" => 60,
			"className" => "model.admin.SyncExternal",
			"methodName" => "syncBankTransferRequests",
		]));
		#src/model/admin/SyncExternal.hx:61: characters 3-8
		(Log::$trace)($res, new HxAnon([
			"fileName" => "src/model/admin/SyncExternal.hx",
			"lineNumber" => 61,
			"className" => "model.admin.SyncExternal",
			"methodName" => "syncBankTransferRequests",
		]));
		#src/model/admin/SyncExternal.hx:62: lines 62-70
		if ($res !== null) {
			#src/model/admin/SyncExternal.hx:65: characters 4-39
			$updated = $this->syncUserIds($res);
			#src/model/admin/SyncExternal.hx:66: characters 15-21
			$tmp = $this->dbData;
			#src/model/admin/SyncExternal.hx:66: characters 22-57
			$_g = new StringMap();
			$_g->data["syncUserDetail"] = "DONE " . ($updated??'null');
			#src/model/admin/SyncExternal.hx:66: characters 4-58
			\S::sendInfo($tmp, $_g);
		} else {
			#src/model/admin/SyncExternal.hx:70: characters 15-21
			$tmp = $this->dbData;
			#src/model/admin/SyncExternal.hx:70: characters 22-57
			$_g = new StringMap();
			$_g->data["syncUserDetail"] = "no results???";
			#src/model/admin/SyncExternal.hx:70: characters 4-58
			\S::sendInfo($tmp, $_g);
		}
		#src/model/admin/SyncExternal.hx:71: characters 3-8
		(Log::$trace)("done", new HxAnon([
			"fileName" => "src/model/admin/SyncExternal.hx",
			"lineNumber" => 71,
			"className" => "model.admin.SyncExternal",
			"methodName" => "syncBankTransferRequests",
		]));
	}

	/**
	 * @param mixed $user
	 * 
	 * @return void
	 */
	public function syncUserDetails ($user = null) {
		#src/model/admin/SyncExternal.hx:76: lines 76-77
		$res = $this->fetchAll("SELECT user, full_name, active FROM asterisk.vicidial_users \x0D\x0A\x09\x09WHERE CAST(user AS UNSIGNED)>0 AND active=\"Y\"", \S::$syncDbh, "syncUserDetails", 3, new HxAnon([
			"fileName" => "src/model/admin/SyncExternal.hx",
			"lineNumber" => 76,
			"className" => "model.admin.SyncExternal",
			"methodName" => "syncUserDetails",
		]));
		#src/model/admin/SyncExternal.hx:78: characters 3-8
		(Log::$trace)($res, new HxAnon([
			"fileName" => "src/model/admin/SyncExternal.hx",
			"lineNumber" => 78,
			"className" => "model.admin.SyncExternal",
			"methodName" => "syncUserDetails",
		]));
		#src/model/admin/SyncExternal.hx:79: lines 79-87
		if ($res !== null) {
			#src/model/admin/SyncExternal.hx:82: characters 4-39
			$updated = $this->syncUserIds($res);
			#src/model/admin/SyncExternal.hx:83: characters 15-21
			$tmp = $this->dbData;
			#src/model/admin/SyncExternal.hx:83: characters 22-57
			$_g = new StringMap();
			$_g->data["syncUserDetail"] = "DONE " . ($updated??'null');
			#src/model/admin/SyncExternal.hx:83: characters 4-58
			\S::sendInfo($tmp, $_g);
		} else {
			#src/model/admin/SyncExternal.hx:87: characters 15-21
			$tmp = $this->dbData;
			#src/model/admin/SyncExternal.hx:87: characters 22-57
			$_g = new StringMap();
			$_g->data["syncUserDetail"] = "no results???";
			#src/model/admin/SyncExternal.hx:87: characters 4-58
			\S::sendInfo($tmp, $_g);
		}
		#src/model/admin/SyncExternal.hx:88: characters 3-8
		(Log::$trace)("done", new HxAnon([
			"fileName" => "src/model/admin/SyncExternal.hx",
			"lineNumber" => 88,
			"className" => "model.admin.SyncExternal",
			"methodName" => "syncUserDetails",
		]));
	}

	/**
	 * @param mixed $vdUsers
	 * 
	 * @return int
	 */
	public function syncUserIds ($vdUsers) {
		#src/model/admin/SyncExternal.hx:149: characters 3-23
		$updated = 0;
		#src/model/admin/SyncExternal.hx:151: characters 15-33
		$data = array_values($vdUsers);
		$_g_current = 0;
		$_g_length = count($data);
		$_g_data = $data;
		#src/model/admin/SyncExternal.hx:151: lines 151-178
		while ($_g_current < $_g_length) {
			$nrow = $_g_data[$_g_current++];
			#src/model/admin/SyncExternal.hx:155: characters 4-51
			$row = \Array_hx::wrap($nrow);
			#src/model/admin/SyncExternal.hx:157: characters 4-47
			$name = HxDynamicStr::wrap(($row->arr[1] ?? null))->split(" ");
			#src/model/admin/SyncExternal.hx:158: characters 4-56
			$last_name = null;
			#src/model/admin/SyncExternal.hx:158: characters 20-55
			if ($name->length === 3) {
				#src/model/admin/SyncExternal.hx:158: characters 4-56
				$last_name = ($name->arr[1] ?? null);
			} else {
				#src/model/admin/SyncExternal.hx:158: characters 44-54
				if ($name->length > 0) {
					$name->length--;
				}
				#src/model/admin/SyncExternal.hx:158: characters 4-56
				$last_name = array_pop($name->arr);
			}
			#src/model/admin/SyncExternal.hx:159: characters 4-53
			$first_name = null;
			#src/model/admin/SyncExternal.hx:159: characters 21-52
			if ($name->length > 0) {
				#src/model/admin/SyncExternal.hx:159: characters 36-48
				if ($name->length > 0) {
					$name->length--;
				}
				#src/model/admin/SyncExternal.hx:159: characters 4-53
				$first_name = array_shift($name->arr);
			} else {
				$first_name = "";
			}
			#src/model/admin/SyncExternal.hx:160: characters 4-22
			$user = ($row->arr[0] ?? null);
			#src/model/admin/SyncExternal.hx:161: characters 4-9
			(Log::$trace)("UPDATE users \x0D\x0A" . "SET contact=contacts.id, active=true\x0D\x0A" . "FROM contacts\x0D\x0A" . ("WHERE first_name='" . ($first_name??'null') . "' AND last_name='" . ($last_name??'null') . "'\x0D\x0A") . ("AND \"users\".\"mandator\"=\"contacts\".\"mandator\" and user_name='" . ($user??'null') . "';"), new HxAnon([
				"fileName" => "src/model/admin/SyncExternal.hx",
				"lineNumber" => 161,
				"className" => "model.admin.SyncExternal",
				"methodName" => "syncUserIds",
			]));
			#src/model/admin/SyncExternal.hx:170: lines 170-177
			$updated += $this->updateRows("UPDATE users \x0D\x0A" . "SET contact=contacts.id, active=true\x0D\x0A" . "FROM contacts\x0D\x0A" . ("WHERE first_name='" . ($first_name??'null') . "' AND last_name='" . ($last_name??'null') . "'\x0D\x0A") . ("AND \"users\".\"mandator\"=\"contacts\".\"mandator\" and user_name='" . ($user??'null') . "';"), \S::$dbh, null, new HxAnon([
				"fileName" => "src/model/admin/SyncExternal.hx",
				"lineNumber" => 170,
				"className" => "model.admin.SyncExternal",
				"methodName" => "syncUserIds",
			]));
		}
		#src/model/admin/SyncExternal.hx:179: characters 3-17
		return $updated;
	}
}

Boot::registerClass(SyncExternal::class, 'model.admin.SyncExternal');
