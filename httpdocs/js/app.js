(function ($hx_exports, $global) { "use strict";
$hx_exports["me"] = $hx_exports["me"] || {};
$hx_exports["me"]["cunity"] = $hx_exports["me"]["cunity"] || {};
$hx_exports["me"]["cunity"]["debug"] = $hx_exports["me"]["cunity"]["debug"] || {};
$hx_exports["me"]["cunity"]["debug"]["Out"] = $hx_exports["me"]["cunity"]["debug"]["Out"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var React_Component = require("react").Component;
var React = require("react");
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,isEmpty: function() {
		return this.h == null;
	}
	,iterator: function() {
		return new haxe_ds__$List_ListIterator(this.h);
	}
	,__class__: haxe_ds_List
};
var App = function(props) {
	React_Component.call(this,props);
	App.flatpickr.localize(App.German);
	App._app = this;
	var ti = null;
	App.config.baseUrl = App.config.api.replace("/server.php","");
	haxe_Log.trace(props.load,{ fileName : "src/App.hx", lineNumber : 184, className : "App", methodName : "new"});
	haxe_Log.trace(App.store,{ fileName : "src/App.hx", lineNumber : 185, className : "App", methodName : "new"});
	if(App.store == null) {
		App.store = this.initStore(history_BrowserHistory.createBrowserHistory({ basename : "/", getUserConfirmation : state_CState.confirmTransition}));
	}
	this.state = App.store.getState();
	haxe_Log.trace(this.state.userState.dbUser.id,{ fileName : "src/App.hx", lineNumber : 193, className : "App", methodName : "new"});
	this.tul = App.historyListener(App.store,this.state.locationStore.history);
	window.onresize = function() {
		if(ti != null) {
			ti.stop();
		}
		ti = haxe_Timer.delay(function() {
			if(App.onResizeComponents.isEmpty()) {
				return;
			}
			var cpi_head = App.onResizeComponents.h;
			while(cpi_head != null) {
				var val = cpi_head.item;
				cpi_head = cpi_head.next;
				val.layOut();
			}
		},250);
	};
	if(!(this.state.userState.dbUser.id == null || this.state.userState.dbUser.jwt == "")) {
		var jVal = jwt_JWT.verify(this.state.userState.dbUser.jwt,App.ConfigData.secret);
		haxe_Log.trace(jVal,{ fileName : "src/App.hx", lineNumber : 223, className : "App", methodName : "new"});
		switch(jVal._hx_index) {
		case 0:
			var jwt = jVal.payload;
			haxe_Log.trace(jwt.validUntil - new Date().getTime(),{ fileName : "src/App.hx", lineNumber : 227, className : "App", methodName : "new"});
			if(jwt.validUntil - new Date().getTime() > 600000) {
				this.state.userState.dbUser.online = true;
				this.state.userState.waiting = false;
				App.store.dispatch(redux_Action.map(action_UserAction.LoginComplete({ waiting : false})));
			} else {
				haxe_Log.trace("dispatch LoginExpired",{ fileName : "src/App.hx", lineNumber : 234, className : "App", methodName : "new"});
				this.state.userState.dbUser.jwt = "";
				App.store.dispatch(redux_Action.map(action_UserAction.LoginExpired({ waiting : false, loginTask : "Login", dbUser : this.state.userState.dbUser})));
			}
			break;
		case 1:
			var jwt = jVal.payload;
			haxe_Log.trace(jwt,{ fileName : "src/App.hx", lineNumber : 241, className : "App", methodName : "new"});
			break;
		default:
			haxe_Log.trace(jVal,{ fileName : "src/App.hx", lineNumber : 243, className : "App", methodName : "new"});
		}
	} else {
		haxe_Log.trace("LOGIN required",{ fileName : "src/App.hx", lineNumber : 249, className : "App", methodName : "new"});
		App.store.dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginRequired(react_ReactUtil.copy(this.state.userState,{ waiting : false})))));
	}
};
$hxClasses["App"] = App;
App.__name__ = "App";
App.historyListener = function(store,history) {
	store.dispatch(redux_Action.map(action_AppAction.Location(action_LocationAction.InitHistory(history))));
	return history.listen(function(location,action) {
		haxe_Log.trace(location.pathname,{ fileName : "src/App.hx", lineNumber : 162, className : "App", methodName : "historyListener"});
		store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ path : location.pathname, text : ""}))));
	});
};
App.mapDispatchToProps = function(dispatch) {
	haxe_Log.trace("here we should be ready to load",{ fileName : "src/App.hx", lineNumber : 169, className : "App", methodName : "mapDispatchToProps"});
	return { load : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.read(param)));
	}};
};
App.edump = function(el) {
	me_cunity_debug_Out.dumpObject(el,{ fileName : "src/App.hx", lineNumber : 328, className : "App", methodName : "edump"});
	return "OK";
};
App.await = function(delay,check,cb) {
	var ti = null;
	ti = haxe_Timer.delay(function() {
		switch(check()) {
		case -1:
			break;
		case true:
			cb();
			break;
		default:
			App.await(delay,check,cb);
		}
	},delay);
	return ti;
};
App.initEState = function(init,comp) {
	var fS = new view_shared_io_FormApi(comp,init.sideMenu);
	var fS1 = init == null ? { } : init.sideMenu;
	var fS2 = { clean : true, formApi : fS, formBuilder : new view_shared_FormBuilder(comp), hasError : false, mounted : false, sideMenu : fS1};
	if(init != null) {
		var _g = 0;
		var _g1 = Reflect.fields(init);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			fS2[f] = Reflect.field(init,f);
		}
	}
	if(init.sideMenu != null && init.sideMenu.items != null) {
		haxe_Log.trace(init.sideMenu.items[0],{ fileName : "src/App.hx", lineNumber : 381, className : "App", methodName : "initEState"});
	}
	if(comp.props.sideMenu != null && comp.props.sideMenu.items != null) {
		haxe_Log.trace(comp.props.sideMenu.items[0],{ fileName : "src/App.hx", lineNumber : 383, className : "App", methodName : "initEState"});
	}
	if(fS2.formApi.sM != null && fS2.formApi.sM.items != null) {
		haxe_Log.trace(fS2.formApi.sM.items[0],{ fileName : "src/App.hx", lineNumber : 385, className : "App", methodName : "initEState"});
	}
	if(comp.props.match != null && comp.props.match.params.section != null && fS2.formApi.sM != null && fS2.formApi.sM.menuBlocks != null && Object.prototype.hasOwnProperty.call(fS2.formApi.sM.menuBlocks.h,comp.props.match.params.section)) {
		haxe_Log.trace(fS2.formApi.sM.menuBlocks.h[comp.props.match.params.section].items[0],{ fileName : "src/App.hx", lineNumber : 388, className : "App", methodName : "initEState"});
	}
	if(comp != null) {
		fS2.uid = uuid_Uuid.nanoId();
		var _g = new haxe_ds_StringMap();
		_g.h[fS2.uid] = comp;
		fS2.relDataComps = _g;
	}
	return fS2;
};
App.initSectionState = function(init,comp) {
	var fS = { clean : true, formApi : new view_shared_io_FormApi(comp,comp.props.parentComponent.state.sideMenu), formBuilder : new view_shared_FormBuilder(comp), hasError : false, mounted : false, sideMenu : comp.props.parentComponent.state.sideMenu};
	if(init != null) {
		var _g = 0;
		var _g1 = Reflect.fields(init);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			fS[f] = Reflect.field(init,f);
		}
	}
	return fS;
};
App.jsxDump = function(el) {
	me_cunity_debug_Out.dumpObject(el,{ fileName : "src/App.hx", lineNumber : 421, className : "App", methodName : "jsxDump"});
	return "OK";
};
App.queryString2 = function(params) {
	var _this = Reflect.fields(params);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var k = [_this[i]];
		var query;
		if(((Reflect.field(params,k[0])) instanceof Array)) {
			query = Reflect.field(params,k[0]).map((function(k) {
				return function(val) {
					encodeURIComponent(k[0]);
					val.urlEncode();
				};
			})(k)).join("&");
		} else {
			var query1 = encodeURIComponent(k[0]) + "=";
			var s = Reflect.field(params,k[0]);
			query = query1 + encodeURIComponent(s);
		}
		result[i] = query;
	}
	var query = result.join("&");
	haxe_Log.trace(query,{ fileName : "src/App.hx", lineNumber : 440, className : "App", methodName : "queryString2"});
	return query;
};
App.__super__ = React_Component;
App.prototype = $extend(React_Component.prototype,{
	globalState: null
	,tul: null
	,initStore: function(history) {
		var userStore = new store_UserStore();
		haxe_Log.trace(Reflect.fields(userStore),{ fileName : "src/App.hx", lineNumber : 106, className : "App", methodName : "initStore"});
		var appWare = new store_AppStore();
		var locationStore = new store_LocationStore(history);
		var rootReducer = redux_Redux.combineReducers({ config : redux_StoreBuilder.mapReducer(action_ConfigAction,new store_ConfigStore(App.config)), dataStore : redux_StoreBuilder.mapReducer(action_DataAction,new store_DataStore()), locationStore : redux_StoreBuilder.mapReducer(action_LocationAction,locationStore), status : redux_StoreBuilder.mapReducer(action_StatusAction,new store_StatusStore()), userState : redux_StoreBuilder.mapReducer(action_UserAction,userStore)});
		return redux_StoreBuilder.createStore(rootReducer,null,redux_Redux.applyMiddleware(redux_StoreBuilder.mapMiddleware(redux_thunk_Thunk,new redux_thunk_ThunkMiddleware()),redux_StoreBuilder.mapMiddleware(action_AppAction,appWare),redux_StoreBuilder.mapMiddleware(action_LocationAction,locationStore)));
	}
	,loadFromLocalStorage: function() {
		try {
			var sState = js_Browser.getLocalStorage().getItem("state");
			if(sState == null) {
				return { };
			}
			return haxe_Unserializer.run(sState);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			haxe_Log.trace(e,{ fileName : "src/App.hx", lineNumber : 140, className : "App", methodName : "loadFromLocalStorage"});
			return { };
		}
	}
	,saveToLocalStorage: function() {
		try {
			js_Browser.getLocalStorage().setItem("state",haxe_Serializer.run(App.store.getState().dataStore));
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			haxe_Log.trace(e,{ fileName : "src/App.hx", lineNumber : 152, className : "App", methodName : "saveToLocalStorage"});
		}
	}
	,gGet: function(key) {
		haxe_Log.trace(key,{ fileName : "src/App.hx", lineNumber : 278, className : "App", methodName : "gGet"});
		return this.globalState.h[key];
	}
	,gSet: function(key,val) {
		this.globalState.h[key] = val;
	}
	,componentDidMount: function() {
		haxe_Log.trace("yeah",{ fileName : "src/App.hx", lineNumber : 291, className : "App", methodName : "componentDidMount"});
		var p = App.store.dispatch(redux_Action.map(action_async_CRUD.read({ classPath : "auth.User", action : "getPbxUserData", dbUser : this.state.userState.dbUser, extDB : true, viciBoxDB : true, devIP : App.devIP})));
		p.then(function(dbData) {
			var tmp = dbData.dataRows[0];
			haxe_Log.trace(tmp == null ? "null" : haxe_ds_StringMap.stringify(tmp.h),{ fileName : "src/App.hx", lineNumber : 301, className : "App", methodName : "componentDidMount"});
			var _g = new haxe_ds_StringMap();
			var _g1 = 0;
			var _g2 = dbData.dataRows;
			while(_g1 < _g2.length) {
				var row = _g2[_g1];
				++_g1;
				_g.h[row.h["user"]] = row;
			}
			App.pbxUserData = _g;
		},function(dbData) {
			haxe_Log.trace(dbData,{ fileName : "src/App.hx", lineNumber : 307, className : "App", methodName : "componentDidMount"});
		});
	}
	,componentDidCatch: function(error,info) {
		haxe_Log.trace(error,{ fileName : "src/App.hx", lineNumber : 314, className : "App", methodName : "componentDidCatch"});
	}
	,componentDidUpdate: function(prevProps,prevState) {
		haxe_Log.trace("...",{ fileName : "src/App.hx", lineNumber : 319, className : "App", methodName : "componentDidUpdate"});
	}
	,componentWillUnmount: function() {
		this.tul();
	}
	,render: function() {
		var tmp = react_ReactType.fromComp(redux_react_Provider);
		var tmp1 = { store : App.store};
		var tmp2 = react_ReactType.fromComp(react_intl_comp_IntlProvider);
		var tmp3 = React.createElement(view_UiView._renderWrapper,{ });
		return React.createElement(tmp,tmp1,React.createElement(tmp2,{ locale : "de"},tmp3));
	}
	,__class__: App
});
var DateTools = function() { };
$hxClasses["DateTools"] = DateTools;
DateTools.__name__ = "DateTools";
DateTools.__format_get = function(d,e) {
	switch(e) {
	case "%":
		return "%";
	case "A":
		return DateTools.DAY_NAMES[d.getDay()];
	case "B":
		return DateTools.MONTH_NAMES[d.getMonth()];
	case "C":
		return StringTools.lpad(Std.string(d.getFullYear() / 100 | 0),"0",2);
	case "D":
		return DateTools.__format(d,"%m/%d/%y");
	case "F":
		return DateTools.__format(d,"%Y-%m-%d");
	case "I":case "l":
		var hour = d.getHours() % 12;
		return StringTools.lpad(Std.string(hour == 0 ? 12 : hour),e == "I" ? "0" : " ",2);
	case "M":
		return StringTools.lpad(Std.string(d.getMinutes()),"0",2);
	case "R":
		return DateTools.__format(d,"%H:%M");
	case "S":
		return StringTools.lpad(Std.string(d.getSeconds()),"0",2);
	case "T":
		return DateTools.__format(d,"%H:%M:%S");
	case "Y":
		return Std.string(d.getFullYear());
	case "a":
		return DateTools.DAY_SHORT_NAMES[d.getDay()];
	case "b":case "h":
		return DateTools.MONTH_SHORT_NAMES[d.getMonth()];
	case "d":
		return StringTools.lpad(Std.string(d.getDate()),"0",2);
	case "e":
		return Std.string(d.getDate());
	case "H":case "k":
		return StringTools.lpad(Std.string(d.getHours()),e == "H" ? "0" : " ",2);
	case "m":
		return StringTools.lpad(Std.string(d.getMonth() + 1),"0",2);
	case "n":
		return "\n";
	case "p":
		if(d.getHours() > 11) {
			return "PM";
		} else {
			return "AM";
		}
		break;
	case "r":
		return DateTools.__format(d,"%I:%M:%S %p");
	case "s":
		return Std.string(d.getTime() / 1000 | 0);
	case "t":
		return "\t";
	case "u":
		var t = d.getDay();
		if(t == 0) {
			return "7";
		} else if(t == null) {
			return "null";
		} else {
			return "" + t;
		}
		break;
	case "w":
		return Std.string(d.getDay());
	case "y":
		return StringTools.lpad(Std.string(d.getFullYear() % 100),"0",2);
	default:
		throw new haxe_exceptions_NotImplementedException("Date.format %" + e + "- not implemented yet.",null,{ fileName : "DateTools.hx", lineNumber : 101, className : "DateTools", methodName : "__format_get"});
	}
};
DateTools.__format = function(d,f) {
	var r_b = "";
	var p = 0;
	while(true) {
		var np = f.indexOf("%",p);
		if(np < 0) {
			break;
		}
		var len = np - p;
		r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
		r_b += Std.string(DateTools.__format_get(d,HxOverrides.substr(f,np + 1,1)));
		p = np + 2;
	}
	var len = f.length - p;
	r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
	return r_b;
};
DateTools.format = function(d,f) {
	return DateTools.__format(d,f);
};
DateTools.getMonthDays = function(d) {
	var month = d.getMonth();
	var year = d.getFullYear();
	if(month != 1) {
		return DateTools.DAYS_OF_MONTH[month];
	}
	var isB = year % 4 == 0 && year % 100 != 0 || year % 400 == 0;
	if(isB) {
		return 29;
	} else {
		return 28;
	}
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var Go = function() { };
$hxClasses["Go"] = Go;
Go.__name__ = "Go";
Go.main = function() {
	haxe_Log.trace = me_cunity_debug_Out._trace;
	haxe_Log.trace("hi :) " + Std.string(!me_cunity_debug_Out.suspended),{ fileName : "src/Go.hx", lineNumber : 16, className : "Go", methodName : "main"});
	Go.render(Go.createRoot());
};
Go.createRoot = function() {
	var root = window.document.createElement("div");
	root.className = "rootBox";
	window.document.body.appendChild(root);
	return root;
};
Go.render = function(root) {
	var app = ReactDOM.render(React.createElement(react_ReactType.fromComp(App),{ }),root);
	haxe_Log.trace("GO",{ fileName : "src/Go.hx", lineNumber : 35, className : "Go", methodName : "render"});
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k = s.split("-");
		return new Date(k[0],k[1] - 1,k[2],0,0,0);
	case 19:
		var k = s.split(" ");
		var y = k[0].split("-");
		var t = k[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw haxe_Exception.thrown("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var JsxStaticInit_$_$ = function() { };
$hxClasses["JsxStaticInit__"] = JsxStaticInit_$_$;
JsxStaticInit_$_$.__name__ = "JsxStaticInit__";
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = "Lambda";
Lambda.array = function(it) {
	var a = [];
	var i = $getIterator(it);
	while(i.hasNext()) {
		var i1 = i.next();
		a.push(i1);
	}
	return a;
};
Lambda.list = function(it) {
	var l = new haxe_ds_List();
	var i = $getIterator(it);
	while(i.hasNext()) {
		var i1 = i.next();
		l.add(i1);
	}
	return l;
};
Lambda.map = function(it,f) {
	var l = new haxe_ds_List();
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		l.add(f(x1));
	}
	return l;
};
Lambda.mapi = function(it,f) {
	var l = new haxe_ds_List();
	var i = 0;
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		l.add(f(i++,x1));
	}
	return l;
};
Lambda.flatten = function(it) {
	var l = new haxe_ds_List();
	var e = $getIterator(it);
	while(e.hasNext()) {
		var e1 = e.next();
		var x = $getIterator(e1);
		while(x.hasNext()) {
			var x1 = x.next();
			l.add(x1);
		}
	}
	return l;
};
Lambda.flatMap = function(it,f) {
	return Lambda.flatten(Lambda.map(it,f));
};
Lambda.has = function(it,elt) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Lambda.exists = function(it,f) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			return true;
		}
	}
	return false;
};
Lambda.foreach = function(it,f) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(!f(x1)) {
			return false;
		}
	}
	return true;
};
Lambda.iter = function(it,f) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		f(x1);
	}
};
Lambda.filter = function(it,f) {
	var l = new haxe_ds_List();
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			l.add(x1);
		}
	}
	return l;
};
Lambda.fold = function(it,f,first) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		first = f(x1,first);
	}
	return first;
};
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var _ = $getIterator(it);
		while(_.hasNext()) {
			var _1 = _.next();
			++n;
		}
	} else {
		var x = $getIterator(it);
		while(x.hasNext()) {
			var x1 = x.next();
			if(pred(x1)) {
				++n;
			}
		}
	}
	return n;
};
Lambda.empty = function(it) {
	return !$getIterator(it).hasNext();
};
Lambda.indexOf = function(it,v) {
	var i = 0;
	var v2 = $getIterator(it);
	while(v2.hasNext()) {
		var v21 = v2.next();
		if(v == v21) {
			return i;
		}
		++i;
	}
	return -1;
};
Lambda.find = function(it,f) {
	var v = $getIterator(it);
	while(v.hasNext()) {
		var v1 = v.next();
		if(f(v1)) {
			return v1;
		}
	}
	return null;
};
Lambda.concat = function(a,b) {
	var l = new haxe_ds_List();
	var x = $getIterator(a);
	while(x.hasNext()) {
		var x1 = x.next();
		l.add(x1);
	}
	var x = $getIterator(b);
	while(x.hasNext()) {
		var x1 = x.next();
		l.add(x1);
	}
	return l;
};
Math.__name__ = "Math";
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var nc = x.charCodeAt(i + 1);
				var v = parseInt(x,nc == 120 || nc == 88 ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.htmlEscape = function(s,quotes) {
	var buf_b = "";
	var _g_offset = 0;
	var _g_s = s;
	while(_g_offset < _g_s.length) {
		var s = _g_s;
		var index = _g_offset++;
		var c = s.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g_offset;
		}
		var code = c1;
		switch(code) {
		case 34:
			if(quotes) {
				buf_b += "&quot;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 38:
			buf_b += "&amp;";
			break;
		case 39:
			if(quotes) {
				buf_b += "&#039;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 60:
			buf_b += "&lt;";
			break;
		case 62:
			buf_b += "&gt;";
			break;
		default:
			buf_b += String.fromCodePoint(code);
		}
	}
	return buf_b;
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	l -= s.length;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	buf_b += s == null ? "null" : "" + s;
	return buf_b;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var ValueType = $hxEnums["ValueType"] = { __ename__:"ValueType",__constructs__:null
	,TNull: {_hx_name:"TNull",_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_name:"TInt",_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_name:"TFloat",_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_name:"TBool",_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_name:"TObject",_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_name:"TFunction",_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TClass",$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TEnum",$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_name:"TUnknown",_hx_index:8,__enum__:"ValueType",toString:$estr}
};
ValueType.__constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TClass,ValueType.TEnum,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return $hxEnums[o.__enum__];
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw haxe_Exception.thrown("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw haxe_Exception.thrown("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw haxe_Exception.thrown("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.typeof = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		var e = a.__enum__;
		if(e == null || e != b.__enum__) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var enm = $hxEnums[e];
		var params = enm.__constructs__[a._hx_index].__params__;
		var _g = 0;
		while(_g < params.length) {
			var f = params[_g];
			++_g;
			if(!Type.enumEq(a[f],b[f])) {
				return false;
			}
		}
	} catch( _g ) {
		return false;
	}
	return true;
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var params = enm.__constructs__[e._hx_index].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var Webpack = function() { };
$hxClasses["Webpack"] = Webpack;
Webpack.__name__ = "Webpack";
var XmlType = {};
XmlType.toString = function(this1) {
	switch(this1) {
	case 0:
		return "Element";
	case 1:
		return "PCData";
	case 2:
		return "CData";
	case 3:
		return "Comment";
	case 4:
		return "DocType";
	case 5:
		return "ProcessingInstruction";
	case 6:
		return "Document";
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = "Xml";
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	nodeType: null
	,nodeName: null
	,nodeValue: null
	,parent: null
	,children: null
	,attributeMap: null
	,get: function(att) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return this.attributeMap.h[att];
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		this.attributeMap.h[att] = value;
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return Object.prototype.hasOwnProperty.call(this.attributeMap.h,att);
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return new haxe_ds__$StringMap_StringMapKeyIterator(this.attributeMap.h);
	}
	,elements: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element) {
				_g.push(child);
			}
		}
		var ret = _g;
		return new haxe_iterators_ArrayIterator(ret);
	}
	,elementsNamed: function(name) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			var tmp;
			if(child.nodeType == Xml.Element) {
				if(child.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (child.nodeType == null ? "null" : XmlType.toString(child.nodeType)));
				}
				tmp = child.nodeName == name;
			} else {
				tmp = false;
			}
			if(tmp) {
				_g.push(child);
			}
		}
		var ret = _g;
		return new haxe_iterators_ArrayIterator(ret);
	}
	,firstElement: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.nodeType == Xml.Element) {
				return child;
			}
		}
		return null;
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,toString: function() {
		return haxe_xml_Printer.print(this);
	}
	,__class__: Xml
};
var action_AppAction = $hxEnums["action.AppAction"] = { __ename__:"action.AppAction",__constructs__:null
	,ApplySubState: ($_=function(state) { return {_hx_index:0,state:state,__enum__:"action.AppAction",toString:$estr}; },$_._hx_name="ApplySubState",$_.__params__ = ["state"],$_)
	,AppWait: {_hx_name:"AppWait",_hx_index:1,__enum__:"action.AppAction",toString:$estr}
	,Config: ($_=function(action) { return {_hx_index:2,action:action,__enum__:"action.AppAction",toString:$estr}; },$_._hx_name="Config",$_.__params__ = ["action"],$_)
	,Data: ($_=function(action) { return {_hx_index:3,action:action,__enum__:"action.AppAction",toString:$estr}; },$_._hx_name="Data",$_.__params__ = ["action"],$_)
	,GlobalState: ($_=function(key,value) { return {_hx_index:4,key:key,value:value,__enum__:"action.AppAction",toString:$estr}; },$_._hx_name="GlobalState",$_.__params__ = ["key","value"],$_)
	,Location: ($_=function(action) { return {_hx_index:5,action:action,__enum__:"action.AppAction",toString:$estr}; },$_._hx_name="Location",$_.__params__ = ["action"],$_)
	,Status: ($_=function(action) { return {_hx_index:6,action:action,__enum__:"action.AppAction",toString:$estr}; },$_._hx_name="Status",$_.__params__ = ["action"],$_)
	,User: ($_=function(action) { return {_hx_index:7,action:action,__enum__:"action.AppAction",toString:$estr}; },$_._hx_name="User",$_.__params__ = ["action"],$_)
};
action_AppAction.__constructs__ = [action_AppAction.ApplySubState,action_AppAction.AppWait,action_AppAction.Config,action_AppAction.Data,action_AppAction.GlobalState,action_AppAction.Location,action_AppAction.Status,action_AppAction.User];
var action_ConfigAction = $hxEnums["action.ConfigAction"] = { __ename__:"action.ConfigAction",__constructs__:null
	,Loaded: ($_=function(p) { return {_hx_index:0,p:p,__enum__:"action.ConfigAction",toString:$estr}; },$_._hx_name="Loaded",$_.__params__ = ["p"],$_)
	,SetLocale: ($_=function(locale) { return {_hx_index:1,locale:locale,__enum__:"action.ConfigAction",toString:$estr}; },$_._hx_name="SetLocale",$_.__params__ = ["locale"],$_)
	,SetTheme: ($_=function(color) { return {_hx_index:2,color:color,__enum__:"action.ConfigAction",toString:$estr}; },$_._hx_name="SetTheme",$_.__params__ = ["color"],$_)
};
action_ConfigAction.__constructs__ = [action_ConfigAction.Loaded,action_ConfigAction.SetLocale,action_ConfigAction.SetTheme];
var action_DataAction = $hxEnums["action.DataAction"] = { __ename__:"action.DataAction",__constructs__:null
	,Execute: ($_=function(dataAccess) { return {_hx_index:0,dataAccess:dataAccess,__enum__:"action.DataAction",toString:$estr}; },$_._hx_name="Execute",$_.__params__ = ["dataAccess"],$_)
	,Update: ($_=function(uData) { return {_hx_index:1,uData:uData,__enum__:"action.DataAction",toString:$estr}; },$_._hx_name="Update",$_.__params__ = ["uData"],$_)
	,Error: ($_=function(data) { return {_hx_index:2,data:data,__enum__:"action.DataAction",toString:$estr}; },$_._hx_name="Error",$_.__params__ = ["data"],$_)
	,ContactsLoaded: ($_=function(data) { return {_hx_index:3,data:data,__enum__:"action.DataAction",toString:$estr}; },$_._hx_name="ContactsLoaded",$_.__params__ = ["data"],$_)
	,QCsLoaded: ($_=function(data) { return {_hx_index:4,data:data,__enum__:"action.DataAction",toString:$estr}; },$_._hx_name="QCsLoaded",$_.__params__ = ["data"],$_)
	,Restore: {_hx_name:"Restore",_hx_index:5,__enum__:"action.DataAction",toString:$estr}
	,SelectAccounts: ($_=function(sData) { return {_hx_index:6,sData:sData,__enum__:"action.DataAction",toString:$estr}; },$_._hx_name="SelectAccounts",$_.__params__ = ["sData"],$_)
	,SelectActContacts: ($_=function(sData) { return {_hx_index:7,sData:sData,__enum__:"action.DataAction",toString:$estr}; },$_._hx_name="SelectActContacts",$_.__params__ = ["sData"],$_)
	,SelectContacts: ($_=function(sData) { return {_hx_index:8,sData:sData,__enum__:"action.DataAction",toString:$estr}; },$_._hx_name="SelectContacts",$_.__params__ = ["sData"],$_)
	,SelectBookings: ($_=function(sData) { return {_hx_index:9,sData:sData,__enum__:"action.DataAction",toString:$estr}; },$_._hx_name="SelectBookings",$_.__params__ = ["sData"],$_)
	,SelectReturnDebits: ($_=function(sData) { return {_hx_index:10,sData:sData,__enum__:"action.DataAction",toString:$estr}; },$_._hx_name="SelectReturnDebits",$_.__params__ = ["sData"],$_)
	,SelectDeals: ($_=function(sData) { return {_hx_index:11,sData:sData,__enum__:"action.DataAction",toString:$estr}; },$_._hx_name="SelectDeals",$_.__params__ = ["sData"],$_)
	,SelectQCs: ($_=function(sData) { return {_hx_index:12,sData:sData,__enum__:"action.DataAction",toString:$estr}; },$_._hx_name="SelectQCs",$_.__params__ = ["sData"],$_)
	,Sync: ($_=function(dataAccess) { return {_hx_index:13,dataAccess:dataAccess,__enum__:"action.DataAction",toString:$estr}; },$_._hx_name="Sync",$_.__params__ = ["dataAccess"],$_)
	,UpStore: ($_=function(sData) { return {_hx_index:14,sData:sData,__enum__:"action.DataAction",toString:$estr}; },$_._hx_name="UpStore",$_.__params__ = ["sData"],$_)
	,Unselect: ($_=function(id) { return {_hx_index:15,id:id,__enum__:"action.DataAction",toString:$estr}; },$_._hx_name="Unselect",$_.__params__ = ["id"],$_)
};
action_DataAction.__constructs__ = [action_DataAction.Execute,action_DataAction.Update,action_DataAction.Error,action_DataAction.ContactsLoaded,action_DataAction.QCsLoaded,action_DataAction.Restore,action_DataAction.SelectAccounts,action_DataAction.SelectActContacts,action_DataAction.SelectContacts,action_DataAction.SelectBookings,action_DataAction.SelectReturnDebits,action_DataAction.SelectDeals,action_DataAction.SelectQCs,action_DataAction.Sync,action_DataAction.UpStore,action_DataAction.Unselect];
var action_LocationAction = $hxEnums["action.LocationAction"] = { __ename__:"action.LocationAction",__constructs__:null
	,Pop: ($_=function(url,state) { return {_hx_index:0,url:url,state:state,__enum__:"action.LocationAction",toString:$estr}; },$_._hx_name="Pop",$_.__params__ = ["url","state"],$_)
	,Push: ($_=function(url,state) { return {_hx_index:1,url:url,state:state,__enum__:"action.LocationAction",toString:$estr}; },$_._hx_name="Push",$_.__params__ = ["url","state"],$_)
	,Replace: ($_=function(url,state) { return {_hx_index:2,url:url,state:state,__enum__:"action.LocationAction",toString:$estr}; },$_._hx_name="Replace",$_.__params__ = ["url","state"],$_)
	,Go: ($_=function(to) { return {_hx_index:3,to:to,__enum__:"action.LocationAction",toString:$estr}; },$_._hx_name="Go",$_.__params__ = ["to"],$_)
	,Back: {_hx_name:"Back",_hx_index:4,__enum__:"action.LocationAction",toString:$estr}
	,Forward: {_hx_name:"Forward",_hx_index:5,__enum__:"action.LocationAction",toString:$estr}
	,InitHistory: ($_=function(history) { return {_hx_index:6,history:history,__enum__:"action.LocationAction",toString:$estr}; },$_._hx_name="InitHistory",$_.__params__ = ["history"],$_)
	,LocationChange: ($_=function(location) { return {_hx_index:7,location:location,__enum__:"action.LocationAction",toString:$estr}; },$_._hx_name="LocationChange",$_.__params__ = ["location"],$_)
};
action_LocationAction.__constructs__ = [action_LocationAction.Pop,action_LocationAction.Push,action_LocationAction.Replace,action_LocationAction.Go,action_LocationAction.Back,action_LocationAction.Forward,action_LocationAction.InitHistory,action_LocationAction.LocationChange];
var action_StatusAction = $hxEnums["action.StatusAction"] = { __ename__:"action.StatusAction",__constructs__:null
	,Update: ($_=function(status) { return {_hx_index:0,status:status,__enum__:"action.StatusAction",toString:$estr}; },$_._hx_name="Update",$_.__params__ = ["status"],$_)
};
action_StatusAction.__constructs__ = [action_StatusAction.Update];
var action_UserAction = $hxEnums["action.UserAction"] = { __ename__:"action.UserAction",__constructs__:null
	,LoginChange: ($_=function(state) { return {_hx_index:0,state:state,__enum__:"action.UserAction",toString:$estr}; },$_._hx_name="LoginChange",$_.__params__ = ["state"],$_)
	,LoginComplete: ($_=function(state) { return {_hx_index:1,state:state,__enum__:"action.UserAction",toString:$estr}; },$_._hx_name="LoginComplete",$_.__params__ = ["state"],$_)
	,LoginError: ($_=function(state) { return {_hx_index:2,state:state,__enum__:"action.UserAction",toString:$estr}; },$_._hx_name="LoginError",$_.__params__ = ["state"],$_)
	,LoginExpired: ($_=function(state) { return {_hx_index:3,state:state,__enum__:"action.UserAction",toString:$estr}; },$_._hx_name="LoginExpired",$_.__params__ = ["state"],$_)
	,LogOut: ($_=function(state) { return {_hx_index:4,state:state,__enum__:"action.UserAction",toString:$estr}; },$_._hx_name="LogOut",$_.__params__ = ["state"],$_)
	,LogOutComplete: ($_=function(state) { return {_hx_index:5,state:state,__enum__:"action.UserAction",toString:$estr}; },$_._hx_name="LogOutComplete",$_.__params__ = ["state"],$_)
	,LoginRequired: ($_=function(state) { return {_hx_index:6,state:state,__enum__:"action.UserAction",toString:$estr}; },$_._hx_name="LoginRequired",$_.__params__ = ["state"],$_)
};
action_UserAction.__constructs__ = [action_UserAction.LoginChange,action_UserAction.LoginComplete,action_UserAction.LoginError,action_UserAction.LoginExpired,action_UserAction.LogOut,action_UserAction.LogOutComplete,action_UserAction.LoginRequired];
var action_async_CRUD = function() { };
$hxClasses["action.async.CRUD"] = action_async_CRUD;
action_async_CRUD.__name__ = "action.async.CRUD";
action_async_CRUD.create = function() {
};
action_async_CRUD.delete = function() {
};
action_async_CRUD.read = function(param) {
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		haxe_Log.trace(param.offset,{ fileName : "src/action/async/CRUD.hx", lineNumber : 47, className : "action.async.CRUD", methodName : "read"});
		haxe_Log.trace(param.page,{ fileName : "src/action/async/CRUD.hx", lineNumber : 48, className : "action.async.CRUD", methodName : "read"});
		haxe_Log.trace(param.classPath,{ fileName : "src/action/async/CRUD.hx", lineNumber : 50, className : "action.async.CRUD", methodName : "read"});
		haxe_Log.trace(param.filter,{ fileName : "src/action/async/CRUD.hx", lineNumber : 51, className : "action.async.CRUD", methodName : "read"});
		haxe_Log.trace(Reflect.fields(param).join("|"),{ fileName : "src/action/async/CRUD.hx", lineNumber : 52, className : "action.async.CRUD", methodName : "read"});
		return new Promise(function(resolve,reject) {
			if(!param.dbUser.online) {
				haxe_Log.trace("LoginError",{ fileName : "src/action/async/CRUD.hx", lineNumber : 56, className : "action.async.CRUD", methodName : "read"});
				param.dbUser.last_error = "Du musst dich neu anmelden!";
				dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : param.dbUser, lastError : "Du musst dich neu anmelden!"}))));
				var _g = new haxe_ds_StringMap();
				_g.h["LoginError"] = "Du musst dich neu anmelden!";
				var dbData = shared_DbDataTools.create(_g);
				reject(dbData);
			}
			var bl = loader_BinaryLoader.dbQuery("" + Std.string(App.config.api),param,function(data) {
				haxe_Log.trace(data.dataRows.length,{ fileName : "src/action/async/CRUD.hx", lineNumber : 72, className : "action.async.CRUD", methodName : "read"});
				if(data.dataRows.length > 0) {
					var h = data.dataErrors.h;
					var inlStringMapKeyIterator_h = h;
					var inlStringMapKeyIterator_keys = Object.keys(h);
					var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
					var inlStringMapKeyIterator_current = 0;
					if(inlStringMapKeyIterator_current >= inlStringMapKeyIterator_length) {
						dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : param.resolveMessage == null ? "" : param.resolveMessage.success}))));
						resolve(data);
					} else {
						dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : JSON.stringify(data.dataErrors)}))));
						reject(data);
					}
				} else {
					haxe_Log.trace(data,{ fileName : "src/action/async/CRUD.hx", lineNumber : 98, className : "action.async.CRUD", methodName : "read"});
					dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : param.resolveMessage != null && param.resolveMessage.failureClass != null ? param.resolveMessage.failureClass : "warn", text : param.resolveMessage == null ? "Keine Daten für " + JSON.stringify(param.filter) + " gefunden" : param.resolveMessage.failure}))));
					resolve(data);
				}
			});
		});
	});
};
action_async_CRUD.update = function(param) {
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		var dbData = shared_DbDataTools.create();
		return new Promise(function(resolve,reject) {
			try {
				if(!param.dbUser.online) {
					dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : param.dbUser, lastError : "Du musst dich neu anmelden!"}))));
					haxe_Log.trace("LoginError",{ fileName : "src/action/async/CRUD.hx", lineNumber : 131, className : "action.async.CRUD", methodName : "update"});
					reject("Du musst dich neu anmelden!");
				}
				var bL = loader_BinaryLoader.dbQuery("" + Std.string(App.config.api),param,function(data) {
					haxe_Log.trace(data,{ fileName : "src/action/async/CRUD.hx", lineNumber : 141, className : "action.async.CRUD", methodName : "update"});
					var bL;
					if(data.dataErrors != null) {
						var h = data.dataErrors.h;
						var inlStringMapKeyIterator_h = h;
						var inlStringMapKeyIterator_keys = Object.keys(h);
						var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
						var inlStringMapKeyIterator_current = 0;
						bL = inlStringMapKeyIterator_current < inlStringMapKeyIterator_length;
					} else {
						bL = false;
					}
					if(bL) {
						haxe_Log.trace(data.dataErrors == null ? "null" : haxe_ds_StringMap.stringify(data.dataErrors.h),{ fileName : "src/action/async/CRUD.hx", lineNumber : 143, className : "action.async.CRUD", methodName : "update"});
					}
					if(data.dataInfo != null && Object.prototype.hasOwnProperty.call(data.dataInfo.h,"dataSource")) {
						haxe_Log.trace(data.dataInfo.h["dataSource"],{ fileName : "src/action/async/CRUD.hx", lineNumber : 145, className : "action.async.CRUD", methodName : "update"});
					}
					if(Object.prototype.hasOwnProperty.call(data.dataErrors.h,"lastError")) {
						dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ lastError : data.dataErrors.h["lastError"]}))));
						reject(data.dataErrors.h["lastError"]);
					}
					if(haxe_ds_StringMap.stringify(data.dataErrors.h) != "{}") {
						dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : param.resolveMessage == null ? haxe_ds_StringMap.stringify(data.dataErrors.h) : param.resolveMessage.failure}))));
						reject(param.resolveMessage == null ? param.resolveMessage.failure : haxe_ds_StringMap.stringify(data.dataErrors.h));
					} else {
						dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : param.resolveMessage == null ? "" : param.resolveMessage.success}))));
						resolve(data);
					}
				});
				haxe_Log.trace(bL,{ fileName : "src/action/async/CRUD.hx", lineNumber : 173, className : "action.async.CRUD", methodName : "update"});
			} catch( _g ) {
				var ex = haxe_Exception.caught(_g);
				var tmp = ex.get_stack();
				haxe_Log.trace(tmp == null ? "null" : haxe_CallStack.toString(tmp),{ fileName : "src/action/async/CRUD.hx", lineNumber : 176, className : "action.async.CRUD", methodName : "update"});
			}
		});
	});
};
var action_async_DBAccess = function() { };
$hxClasses["action.async.DBAccess"] = action_async_DBAccess;
action_async_DBAccess.__name__ = "action.async.DBAccess";
action_async_DBAccess.create = function() {
};
action_async_DBAccess.delete = function() {
};
action_async_DBAccess.get = function(props) {
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		haxe_Log.trace(props,{ fileName : "src/action/async/DBAccess.hx", lineNumber : 48, className : "action.async.DBAccess", methodName : "get"});
		if(!props.userState.dbUser.online) {
			return dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : props.userState.dbUser, lastError : "Du musst dich neu anmelden!"}))));
		}
		haxe_Log.trace("creating BinaryLoader " + Std.string(App.config.api),{ fileName : "src/action/async/DBAccess.hx", lineNumber : 57, className : "action.async.DBAccess", methodName : "get"});
		var bl = loader_BinaryLoader.create("" + Std.string(App.config.api),{ id : props.userState.dbUser.id, jwt : props.userState.dbUser.jwt, classPath : props.classPath, action : props.action, filter : props.filter, table : props.table, devIP : App.devIP},function(data) {
			haxe_Log.trace(data.dataInfo == null ? "null" : haxe_ds_StringMap.stringify(data.dataInfo.h),{ fileName : "src/action/async/DBAccess.hx", lineNumber : 73, className : "action.async.DBAccess", methodName : "get"});
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/action/async/DBAccess.hx", lineNumber : 74, className : "action.async.DBAccess", methodName : "get"});
			if(data.dataRows.length > 0) {
				var h = data.dataErrors.h;
				var inlStringMapKeyIterator_h = h;
				var inlStringMapKeyIterator_keys = Object.keys(h);
				var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
				var inlStringMapKeyIterator_current = 0;
				if(inlStringMapKeyIterator_current >= inlStringMapKeyIterator_length) {
					haxe_Log.trace(data.dataRows,{ fileName : "src/action/async/DBAccess.hx", lineNumber : 79, className : "action.async.DBAccess", methodName : "get"});
					var dispatch1 = dispatch;
					var _g = new haxe_ds_IntMap();
					var _g1 = 0;
					var _g2 = data.dataRows;
					while(_g1 < _g2.length) {
						var row = _g2[_g1];
						++_g1;
						_g.h[Std.parseInt(row.h["id"])] = row;
					}
					dispatch1(redux_Action.map(action_AppAction.Data(action_DataAction.SelectContacts(_g))));
					var dispatch1 = dispatch;
					var bl;
					switch("" + props.classPath + "." + props.action) {
					case "data.Contacts.get":
						bl = "Kontakt " + Std.string(props.filter.substr(3)) + " geladen";
						break;
					case "data.Contacts.update":
						bl = "Kontakt " + Std.string(props.filter.substr(3)) + " wurde gespeichert";
						break;
					default:
						bl = "Unbekannter Vorgang";
					}
					dispatch1(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : bl}))));
					return;
				} else {
					dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : "" + data.dataErrors.h[props.action]}))));
					return;
				}
			} else {
				dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "warn", text : "Keine Daten für " + Std.string(props.filter.substr(3)) + " gefunden"}))));
				return;
			}
		});
		return null;
	});
};
action_async_DBAccess.execute = function(props) {
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		haxe_Log.trace(props,{ fileName : "src/action/async/DBAccess.hx", lineNumber : 120, className : "action.async.DBAccess", methodName : "execute"});
		if(!props.userState.dbUser.online) {
			return dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : props.userState.dbUser, lastError : "Du musst dich neu anmelden!"}))));
		}
		var params = { id : props.userState.dbUser.id, jwt : props.userState.dbUser.jwt, classPath : props.classPath, action : props.action, dataSource : haxe_Serializer.run(props.dataSource), devIP : App.devIP};
		if(props.table != null) {
			params.table = props.table;
		}
		var bL = loader_BinaryLoader.dbQuery("" + Std.string(App.config.api),params,function(data) {
			if(data.dataErrors != null) {
				haxe_Log.trace(data.dataErrors == null ? "null" : haxe_ds_StringMap.stringify(data.dataErrors.h),{ fileName : "src/action/async/DBAccess.hx", lineNumber : 150, className : "action.async.DBAccess", methodName : "execute"});
			}
			if(data.dataInfo != null && Object.prototype.hasOwnProperty.call(data.dataInfo.h,"dataSource")) {
				haxe_Log.trace(data.dataInfo.h["dataSource"],{ fileName : "src/action/async/DBAccess.hx", lineNumber : 152, className : "action.async.DBAccess", methodName : "execute"});
			}
			if(Object.prototype.hasOwnProperty.call(data.dataErrors.h,"lastError")) {
				dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ lastError : data.dataErrors.h["lastError"]}))));
				return;
			}
			var dispatch1 = dispatch;
			var bL;
			switch("" + props.classPath + "." + props.action) {
			case "data.Contacts.edit":
				bL = "Kontakt " + Std.string(props.dataSource.h["contacts"].h["filter"].substr(3)) + " geladen";
				break;
			case "data.Contacts.update":
				bL = "Kontakt " + Std.string(props.dataSource.h["contacts"].h["filter"].substr(3)) + " wurde gespeichert";
				break;
			default:
				bL = "Unbekannter Vorgang";
			}
			dispatch1(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : bL}))));
		});
		return null;
	});
};
action_async_DBAccess.upload = function(param) {
	haxe_Log.trace(param.action,{ fileName : "src/action/async/DBAccess.hx", lineNumber : 178, className : "action.async.DBAccess", methodName : "upload"});
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		haxe_Log.trace(param,{ fileName : "src/action/async/DBAccess.hx", lineNumber : 180, className : "action.async.DBAccess", methodName : "upload"});
		return new Promise(function(resolve,reject) {
			if(!param.dbUser.online) {
				dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : param.dbUser, lastError : "Du musst dich neu anmelden!"}))));
				haxe_Log.trace("LoginError",{ fileName : "src/action/async/DBAccess.hx", lineNumber : 194, className : "action.async.DBAccess", methodName : "upload"});
				resolve(null);
			}
			var bL = loader_BinaryLoader.dbQuery("" + Std.string(App.config.api),param,function(data) {
				haxe_Log.trace(data,{ fileName : "src/action/async/DBAccess.hx", lineNumber : 203, className : "action.async.DBAccess", methodName : "upload"});
				if(data.dataErrors != null) {
					haxe_Log.trace(data.dataErrors == null ? "null" : haxe_ds_StringMap.stringify(data.dataErrors.h),{ fileName : "src/action/async/DBAccess.hx", lineNumber : 205, className : "action.async.DBAccess", methodName : "upload"});
				}
				if(data.dataInfo != null && Object.prototype.hasOwnProperty.call(data.dataInfo.h,"dataSource")) {
					haxe_Log.trace(new haxe_Unserializer(data.dataInfo.h["dataSource"]).unserialize(),{ fileName : "src/action/async/DBAccess.hx", lineNumber : 207, className : "action.async.DBAccess", methodName : "upload"});
				}
				if(Object.prototype.hasOwnProperty.call(data.dataErrors.h,"lastError")) {
					dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ lastError : data.dataErrors.h["lastError"]}))));
					resolve(null);
				} else {
					dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : param.resolveMessage == null ? "" : param.resolveMessage.success}))));
					resolve(data);
				}
			});
			haxe_Log.trace(bL,{ fileName : "src/action/async/DBAccess.hx", lineNumber : 225, className : "action.async.DBAccess", methodName : "upload"});
		});
	});
};
var action_async_LiveDataAccess = function() { };
$hxClasses["action.async.LiveDataAccess"] = action_async_LiveDataAccess;
action_async_LiveDataAccess.__name__ = "action.async.LiveDataAccess";
action_async_LiveDataAccess.create = function() {
};
action_async_LiveDataAccess.delete = function() {
};
action_async_LiveDataAccess.storeData = function(id,action) {
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		if(id == null) {
			return null;
		}
		var aState = getState();
		haxe_Log.trace(aState.dataStore.contactsData,{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 51, className : "action.async.LiveDataAccess", methodName : "storeData"});
		if(id == "Contacts") {
			if(action._hx_index == 5) {
				return dispatch(redux_Action.map(action_DataAction.Restore));
			} else {
				return null;
			}
		} else {
			return null;
		}
	});
};
action_async_LiveDataAccess.select = function(props) {
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		if(props.id == null) {
			haxe_Log.trace(Reflect.fields(props).join("|"),{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 72, className : "action.async.LiveDataAccess", methodName : "select"});
			return null;
		}
		var aState = getState();
		var tableRoot = view_shared_io_FormApi.getTableRoot();
		haxe_Log.trace(tableRoot,{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 80, className : "action.async.LiveDataAccess", methodName : "select"});
		haxe_Log.trace(Reflect.fields(aState),{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 81, className : "action.async.LiveDataAccess", methodName : "select"});
		haxe_Log.trace(props.data,{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 83, className : "action.async.LiveDataAccess", methodName : "select"});
		var sData = null;
		switch(tableRoot[1]) {
		case "Accounts":
			sData = aState.dataStore.accountData;
			sData = action_async_LiveDataAccess.selectType(props.id,props.data,sData,props.selectType);
			var aState1 = aState.locationStore.history;
			var tmp = "" + tableRoot[2] + "/" + view_shared_io_FormApi.params(shared_Utils.keysList(sData.keys()));
			aState1.push(tmp);
			return dispatch(redux_Action.map(action_DataAction.SelectAccounts(props.data)));
		case "Contacts":
			sData = aState.dataStore.contactsData;
			sData = action_async_LiveDataAccess.selectType(props.id,props.data,sData,props.selectType);
			haxe_Log.trace("" + tableRoot[2] + "/" + view_shared_io_FormApi.params(shared_Utils.keysList(sData.keys())),{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 97, className : "action.async.LiveDataAccess", methodName : "select"});
			if(props.component.state.sideMenuInstance != null) {
				props.component.state.sideMenuInstance.enableItems("List",["edit","delete","selectionClear"]);
			}
			return dispatch(redux_Action.map(action_DataAction.SelectContacts(sData)));
		case "Deals":
			sData = aState.dataStore.dealData;
			sData = action_async_LiveDataAccess.selectType(props.id,props.data,sData,props.selectType);
			haxe_Log.trace(sData,{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 112, className : "action.async.LiveDataAccess", methodName : "select"});
			haxe_Log.trace("" + tableRoot[2] + "/" + view_shared_io_FormApi.params(shared_Utils.keysList(sData.keys())),{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 113, className : "action.async.LiveDataAccess", methodName : "select"});
			var aState1 = aState.locationStore.history;
			var tmp = "" + tableRoot[2] + "#" + view_shared_io_FormApi.params(shared_Utils.keysList(sData.keys()));
			var tmp1 = "" + tableRoot[2] + "#" + view_shared_io_FormApi.params(shared_Utils.keysList(sData.keys()));
			aState1.push(tmp,{ activeContactUrl : tmp1});
			return dispatch(redux_Action.map(action_DataAction.SelectDeals(props.data)));
		case "QC":
			sData = action_async_LiveDataAccess.selectType(props.id,props.data,aState.dataStore.qcData,props.selectType);
			haxe_Log.trace("" + tableRoot[2] + "/" + view_shared_io_FormApi.params(shared_Utils.keysList(sData.keys())),{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 122, className : "action.async.LiveDataAccess", methodName : "select"});
			haxe_Log.trace(sData,{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 123, className : "action.async.LiveDataAccess", methodName : "select"});
			return dispatch(redux_Action.map(action_DataAction.SelectQCs(sData)));
		default:
			return null;
		}
	});
};
action_async_LiveDataAccess.selectType = function(id,data,sData,sT) {
	switch(sT) {
	case "All":
		sData = new haxe_ds_IntMap();
		var map = data;
		var _g_map = map;
		var _g_keys = map.keys();
		while(_g_keys.hasNext()) {
			var key = _g_keys.next();
			var _g1_value = _g_map.get(key);
			var _g1_key = key;
			var k = _g1_key;
			var v = _g1_value;
			sData.h[k] = v;
		}
		return sData;
	case "One":
		var _g = new haxe_ds_IntMap();
		_g.h[id] = data.h[id];
		return _g;
	case "Unselect":
		sData.remove(id);
		return sData;
	case "UnselectAll":
		sData = new haxe_ds_IntMap();
		return sData;
	default:
		haxe_Log.trace(data,{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 152, className : "action.async.LiveDataAccess", methodName : "selectType"});
		sData = new haxe_ds_IntMap();
		sData.h[id] = data.h[id];
		return sData;
	}
};
action_async_LiveDataAccess.sSelect = function(props) {
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		if(props.id == null) {
			return null;
		}
		haxe_Log.trace(props.data,{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 164, className : "action.async.LiveDataAccess", methodName : "sSelect"});
		var aState = getState();
		var tableRoot = view_shared_io_FormApi.getTableRoot();
		haxe_Log.trace(tableRoot,{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 167, className : "action.async.LiveDataAccess", methodName : "sSelect"});
		var sData = null;
		return new Promise(function(resolve,reject) {
			if(tableRoot[1] == "ReturnDebits") {
				sData = action_async_LiveDataAccess.sSelectType(props.id,props.data,sData,props.selectType);
				var aState1 = aState.locationStore.history;
				var tmp = "" + tableRoot[2] + "/" + view_shared_io_FormApi.params(shared_Utils.keysList(sData.keys()));
				var tmp1 = "" + tableRoot[2] + "/" + view_shared_io_FormApi.params(shared_Utils.keysList(sData.keys()));
				aState1.push(tmp,{ activeUrl : tmp1});
				dispatch(redux_Action.map(action_DataAction.SelectReturnDebits(sData)));
				resolve(sData);
			}
		});
	});
};
action_async_LiveDataAccess.sSelectType = function(id,data,sData,sT) {
	haxe_Log.trace(sT,{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 222, className : "action.async.LiveDataAccess", methodName : "sSelectType"});
	haxe_Log.trace(data,{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 223, className : "action.async.LiveDataAccess", methodName : "sSelectType"});
	switch(sT) {
	case "All":
		sData = new haxe_ds_IntMap();
		var map = data;
		var _g_map = map;
		var _g_keys = map.keys();
		while(_g_keys.hasNext()) {
			var key = _g_keys.next();
			var _g1_value = _g_map.get(key);
			var _g1_key = key;
			var k = _g1_key;
			var v = _g1_value;
			sData.h[k] = v;
		}
		return sData;
	case "One":
		var _g = new haxe_ds_IntMap();
		_g.h[id] = data.h[id];
		return _g;
	case "Unselect":
		sData.remove(id);
		return sData;
	case "UnselectAll":
		sData = new haxe_ds_IntMap();
		return sData;
	default:
		haxe_Log.trace(data,{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 243, className : "action.async.LiveDataAccess", methodName : "sSelectType"});
		sData = new haxe_ds_IntMap();
		sData.h[id] = data.h[id];
		return sData;
	}
};
action_async_LiveDataAccess.sSelectType1 = function(id,data,sData,sT) {
	switch(sT) {
	case "All":
		sData = new haxe_ds_StringMap();
		var h = data.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g1_key = key;
			var _g1_value = _g_h[key];
			var k = _g1_key;
			var v = _g1_value;
			sData.h[k] = v;
		}
		return sData;
	case "One":
		if(sData == null) {
			sData = new haxe_ds_StringMap();
		}
		sData.h[id] = data.h[id];
		return sData;
	case "Unselect":
		var key = id;
		if(Object.prototype.hasOwnProperty.call(sData.h,key)) {
			delete(sData.h[key]);
		}
		return sData;
	case "UnselectAll":
		sData = new haxe_ds_StringMap();
		return sData;
	default:
		haxe_Log.trace(data,{ fileName : "src/action/async/LiveDataAccess.hx", lineNumber : 270, className : "action.async.LiveDataAccess", methodName : "sSelectType1"});
		sData = new haxe_ds_StringMap();
		sData.h[id] = data.h[id];
		return sData;
	}
};
var action_async_LivePBXSync = function() { };
$hxClasses["action.async.LivePBXSync"] = action_async_LivePBXSync;
action_async_LivePBXSync.__name__ = "action.async.LivePBXSync";
action_async_LivePBXSync.create = function() {
};
action_async_LivePBXSync.delete = function() {
};
action_async_LivePBXSync.importContacts = function(props) {
	haxe_Log.trace("" + props.table + " " + props.maxImport + " " + props.limit + " " + props.offset,{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 51, className : "action.async.LivePBXSync", methodName : "importContacts"});
	return redux_Action.map(redux_thunk_Thunk.Action(function(dispatch,getState) {
		var aState = getState();
		haxe_Log.trace(props.offset,{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 54, className : "action.async.LivePBXSync", methodName : "importContacts"});
		if(!props.userState.dbUser.online) {
			return dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : props.userState.dbUser, lastError : "Du musst dich neu anmelden!"}))));
		}
		haxe_Log.trace("creating BinaryLoader " + Std.string(App.config.api),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 63, className : "action.async.LivePBXSync", methodName : "importContacts"});
		var bl = loader_BinaryLoader.dbQuery("" + Std.string(App.config.api),{ dbUser : props.userState.dbUser, classPath : props.classPath, action : props.action, extDB : true, id : props.id == null ? 0 : props.id, limit : props.limit, offset : props.offset, table : props.table, filter : props.filter, maxImport : props.maxImport == null ? 1000 : props.maxImport, devIP : App.devIP},function(data) {
			haxe_Log.trace(data.dataInfo == null ? "null" : haxe_ds_StringMap.stringify(data.dataInfo.h),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 81, className : "action.async.LivePBXSync", methodName : "importContacts"});
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 82, className : "action.async.LivePBXSync", methodName : "importContacts"});
			var h = data.dataErrors.h;
			var inlStringMapKeyIterator_h = h;
			var inlStringMapKeyIterator_keys = Object.keys(h);
			var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
			var inlStringMapKeyIterator_current = 0;
			if(inlStringMapKeyIterator_current < inlStringMapKeyIterator_length) {
				haxe_Log.trace(haxe_ds_StringMap.stringify(data.dataErrors.h),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 85, className : "action.async.LivePBXSync", methodName : "importContacts"});
				var h = data.dataErrors.h;
				var inlStringMapValueIterator_h = h;
				var inlStringMapValueIterator_keys = Object.keys(h);
				var inlStringMapValueIterator_length = inlStringMapValueIterator_keys.length;
				var inlStringMapValueIterator_current = 0;
				dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : inlStringMapValueIterator_h[inlStringMapValueIterator_keys[inlStringMapValueIterator_current++]]}))));
				return;
			}
			if(data.dataInfo.h["offset"] == null || Std.parseInt(data.dataInfo.h["offset"]) == 0) {
				dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : "Fehler 0 " + props.classPath + " Aktualisiert"}))));
				return;
			} else {
				props.offset = Std.parseInt(data.dataInfo.h["offset"]);
				dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : " ", text : "" + props.offset + " Contacts von " + props.maxImport + " aktualisiert"}))));
				return;
			}
		});
		return null;
	}));
};
action_async_LivePBXSync.importBookingRequests = function(props) {
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		var aState = getState();
		haxe_Log.trace(props.offset,{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 129, className : "action.async.LivePBXSync", methodName : "importBookingRequests"});
		if(!props.userState.dbUser.online) {
			return dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : props.userState.dbUser, lastError : "Du musst dich neu anmelden!"}))));
		}
		haxe_Log.trace("creating BinaryLoader " + Std.string(App.config.api),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 138, className : "action.async.LivePBXSync", methodName : "importBookingRequests"});
		var bl = loader_BinaryLoader.create("" + Std.string(App.config.api),{ id : props.userState.dbUser.id, jwt : props.userState.dbUser.jwt, classPath : props.classPath, action : props.action, extDB : true, limit : props.limit, offset : props.offset, filter : props.filter, maxImport : props.maxImport == null ? 1000 : props.maxImport, devIP : App.devIP},function(data) {
			haxe_Log.trace(data,{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 156, className : "action.async.LivePBXSync", methodName : "importBookingRequests"});
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 157, className : "action.async.LivePBXSync", methodName : "importBookingRequests"});
			var h = data.dataErrors.h;
			var inlStringMapKeyIterator_h = h;
			var inlStringMapKeyIterator_keys = Object.keys(h);
			var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
			var inlStringMapKeyIterator_current = 0;
			if(inlStringMapKeyIterator_current < inlStringMapKeyIterator_length) {
				var h = data.dataErrors.h;
				var inlStringMapValueIterator_h = h;
				var inlStringMapValueIterator_keys = Object.keys(h);
				var inlStringMapValueIterator_length = inlStringMapValueIterator_keys.length;
				var inlStringMapValueIterator_current = 0;
				dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : inlStringMapValueIterator_h[inlStringMapValueIterator_keys[inlStringMapValueIterator_current++]]}))));
				return;
			}
			haxe_Log.trace(data.dataInfo == null ? "null" : haxe_ds_StringMap.stringify(data.dataInfo.h),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 167, className : "action.async.LivePBXSync", methodName : "importBookingRequests"});
			if(data.dataInfo.h["offset"] == null) {
				dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : "Fehler 0 Buchungsanforderungen Aktualisiert"}))));
				return;
			}
			if(data.dataInfo.h["offset"] != null) {
				props.offset = Std.parseInt(data.dataInfo.h["offset"]);
				dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : " ", text : "" + props.offset + " Kontakte von " + props.maxImport + " aktualisiert"}))));
			}
			haxe_Log.trace("" + props.offset + " < " + props.maxImport,{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 184, className : "action.async.LivePBXSync", methodName : "importBookingRequests"});
			if(props.offset < props.maxImport) {
				haxe_Log.trace("next loop:" + Std.string(props),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 187, className : "action.async.LivePBXSync", methodName : "importBookingRequests"});
				dispatch(action_async_LivePBXSync.importContacts(props));
				return;
			}
		});
		return null;
	});
};
action_async_LivePBXSync.mergeContacts = function(props) {
	haxe_Log.trace("" + props.maxImport + " " + props.limit + " " + props.offset,{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 201, className : "action.async.LivePBXSync", methodName : "mergeContacts"});
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		var aState = getState();
		haxe_Log.trace(props,{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 204, className : "action.async.LivePBXSync", methodName : "mergeContacts"});
		if(!props.userState.dbUser.online) {
			return dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : props.userState.dbUser, lastError : "Du musst dich neu anmelden!"}))));
		}
		haxe_Log.trace("creating BinaryLoader " + Std.string(App.config.api),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 213, className : "action.async.LivePBXSync", methodName : "mergeContacts"});
		var bl = loader_BinaryLoader.create("" + Std.string(App.config.api),{ dbUser : props.userState.dbUser, id : props.userState.dbUser.id, jwt : props.userState.dbUser.jwt, classPath : props.classPath, action : props.action, extDB : true, limit : props.limit, offset : props.offset, filter : props.filter, maxImport : props.maxImport == null ? 1000 : props.maxImport, devIP : App.devIP},function(data) {
			haxe_Log.trace(data,{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 232, className : "action.async.LivePBXSync", methodName : "mergeContacts"});
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 233, className : "action.async.LivePBXSync", methodName : "mergeContacts"});
			var h = data.dataErrors.h;
			var inlStringMapKeyIterator_h = h;
			var inlStringMapKeyIterator_keys = Object.keys(h);
			var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
			var inlStringMapKeyIterator_current = 0;
			if(inlStringMapKeyIterator_current < inlStringMapKeyIterator_length) {
				var h = data.dataErrors.h;
				var inlStringMapValueIterator_h = h;
				var inlStringMapValueIterator_keys = Object.keys(h);
				var inlStringMapValueIterator_length = inlStringMapValueIterator_keys.length;
				var inlStringMapValueIterator_current = 0;
				dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : inlStringMapValueIterator_h[inlStringMapValueIterator_keys[inlStringMapValueIterator_current++]]}))));
				return;
			}
			haxe_Log.trace(data.dataInfo == null ? "null" : haxe_ds_StringMap.stringify(data.dataInfo.h),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 243, className : "action.async.LivePBXSync", methodName : "mergeContacts"});
			if(data.dataInfo.h["offset"] == null) {
				dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : "Fehler 0 Kontakte Aktualisiert"}))));
				return;
			}
			if(data.dataInfo.h["offset"] != null) {
				props.offset = Std.parseInt(data.dataInfo.h["offset"]);
				dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : "" + props.offset + " Kontakte von " + props.maxImport + " aktualisiert"}))));
			}
			haxe_Log.trace("" + props.offset + " < " + props.maxImport,{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 260, className : "action.async.LivePBXSync", methodName : "mergeContacts"});
			if(props.offset < props.maxImport) {
				haxe_Log.trace("next loop:" + Std.string(props),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 263, className : "action.async.LivePBXSync", methodName : "mergeContacts"});
				dispatch(action_async_LivePBXSync.importContacts(props));
				return;
			}
		});
		return null;
	});
};
action_async_LivePBXSync.checkAll = function(props) {
	haxe_Log.trace("" + props.table + " " + props.maxImport + " " + props.limit + " " + props.offset,{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 278, className : "action.async.LivePBXSync", methodName : "checkAll"});
	return redux_Action.map(redux_thunk_Thunk.Action(function(dispatch,getState) {
		var aState = getState();
		haxe_Log.trace(props.offset,{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 282, className : "action.async.LivePBXSync", methodName : "checkAll"});
		return new Promise(function(resolve,reject) {
			if(!props.userState.dbUser.online) {
				var reject1 = reject;
				var _g = new haxe_ds_StringMap();
				_g.h["LoginError"] = "Du musst dich neu anmelden!";
				reject1(shared_DbDataTools.create(_g));
				dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : props.userState.dbUser, lastError : "Du musst dich neu anmelden!"}))));
				return;
			}
			haxe_Log.trace("creating BinaryLoader " + Std.string(App.config.api),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 293, className : "action.async.LivePBXSync", methodName : "checkAll"});
			var bl = loader_BinaryLoader.dbQuery(App.config.api,{ dbUser : props.userState.dbUser, classPath : props.classPath, action : props.action, extDB : true, limit : props.limit, offset : props.offset, onlyNew : props.onlyNew, table : props.table, filter : props.filter, maxImport : props.maxImport == null ? 1000 : props.maxImport, devIP : App.devIP},function(data) {
				haxe_Log.trace(data.dataInfo == null ? "null" : haxe_ds_StringMap.stringify(data.dataInfo.h),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 311, className : "action.async.LivePBXSync", methodName : "checkAll"});
				var h = data.dataErrors.h;
				var inlStringMapKeyIterator_h = h;
				var inlStringMapKeyIterator_keys = Object.keys(h);
				var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
				var inlStringMapKeyIterator_current = 0;
				if(inlStringMapKeyIterator_current < inlStringMapKeyIterator_length) {
					var h = data.dataErrors.h;
					var inlStringMapValueIterator_h = h;
					var inlStringMapValueIterator_keys = Object.keys(h);
					var inlStringMapValueIterator_length = inlStringMapValueIterator_keys.length;
					var inlStringMapValueIterator_current = 0;
					var err = inlStringMapValueIterator_h[inlStringMapValueIterator_keys[inlStringMapValueIterator_current++]];
					var reject1 = reject;
					var _g = new haxe_ds_StringMap();
					_g.h[props.classPath] = err;
					reject1(shared_DbDataTools.create(_g));
					dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : err}))));
					return;
				}
				haxe_Log.trace(data.dataInfo == null ? "null" : haxe_ds_StringMap.stringify(data.dataInfo.h),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 324, className : "action.async.LivePBXSync", methodName : "checkAll"});
				if(Std.parseInt(data.dataInfo.h["missing"]) > 0 && data.dataInfo.h["got"] != data.dataInfo.h["missing"]) {
					resolve(data);
					haxe_Log.trace("...",{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 328, className : "action.async.LivePBXSync", methodName : "checkAll"});
					dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : "Fehler " + Std.string(data.dataInfo.h["got"]) + " von " + Std.string(data.dataInfo.h["missing"]) + " Aktualisiert"}))));
					return;
				}
				haxe_Log.trace("got:" + Std.parseInt(666),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 335, className : "action.async.LivePBXSync", methodName : "checkAll"});
				if(Std.parseInt(data.dataInfo.h["got"]) > 0 && data.dataInfo.h["last_import_cid"] == data.dataInfo.h["max_client_id"]) {
					resolve(data);
					haxe_Log.trace("...",{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 339, className : "action.async.LivePBXSync", methodName : "checkAll"});
					dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : " ", text : "" + Std.string(data.dataInfo.h["got"]) + " von " + Std.string(data.dataInfo.h["missing"]) + " aktualisiert"}))));
					return;
				}
				if(Std.parseInt(data.dataInfo.h["got"]) > 0) {
					dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : " ", text : "" + Std.string(data.dataInfo.h["got"]) + " von " + Std.string(data.dataInfo.h["missing"]) + " aktualisiert - lade weitere"}))));
					if(!props.onlyNew) {
						props.offset += Std.parseInt(data.dataInfo.h["got"]);
					}
					haxe_Log.trace("next loop:" + Std.string(props),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 357, className : "action.async.LivePBXSync", methodName : "checkAll"});
					dispatch(action_async_LivePBXSync.checkAll(props));
					return;
				}
				haxe_Log.trace(Std.parseInt(data.dataInfo.h["got"]) > 0 && data.dataInfo.h["last_import_cid"] != data.dataInfo.h["max_client_id"] ? "loop" : "no",{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 360, className : "action.async.LivePBXSync", methodName : "checkAll"});
				resolve(data);
			});
		});
	}));
};
action_async_LivePBXSync.query = function(props) {
	return new Promise(function(resolve,reject) {
		haxe_Log.trace("creating BinaryLoader " + Std.string(App.config.api),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 372, className : "action.async.LivePBXSync", methodName : "query"});
		var bl = loader_BinaryLoader.dbQuery(App.config.api,props,function(data) {
			if(data.dataErrors != new haxe_ds_StringMap()) {
				haxe_Log.trace(data.dataErrors == null ? "null" : haxe_ds_StringMap.stringify(data.dataErrors.h),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 380, className : "action.async.LivePBXSync", methodName : "query"});
			}
			haxe_Log.trace(data.dataInfo == null ? "null" : haxe_ds_StringMap.stringify(data.dataInfo.h),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 383, className : "action.async.LivePBXSync", methodName : "query"});
			resolve(data);
		});
	});
};
action_async_LivePBXSync.check = function(props) {
	return new Promise(function(resolve,reject) {
		if(!props.userState.dbUser.online) {
			var reject1 = reject;
			var _g = new haxe_ds_StringMap();
			_g.h["LoginError"] = "Du musst dich neu anmelden!";
			reject1(shared_DbDataTools.create(_g));
		}
		haxe_Log.trace("creating BinaryLoader " + Std.string(App.config.api),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 398, className : "action.async.LivePBXSync", methodName : "check"});
		var bl = loader_BinaryLoader.dbQuery(App.config.api,{ dbUser : props.userState.dbUser, classPath : props.classPath, action : props.action, extDB : true, limit : props.limit, offset : props.offset, onlyNew : props.onlyNew, table : props.table, filter : props.filter, maxImport : props.maxImport == null ? 1000 : props.maxImport, devIP : App.devIP},function(data) {
			haxe_Log.trace(data.dataInfo == null ? "null" : haxe_ds_StringMap.stringify(data.dataInfo.h),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 416, className : "action.async.LivePBXSync", methodName : "check"});
			if(Object.prototype.hasOwnProperty.call(data.dataInfo.h,"loginTask") && data.dataInfo.h["loginTask"] == "Login") {
				reject(App.store.dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : props.userState.dbUser, lastError : "Du musst dich neu anmelden!"})))));
			}
			var h = data.dataErrors.h;
			var inlStringMapKeyIterator_h = h;
			var inlStringMapKeyIterator_keys = Object.keys(h);
			var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
			var inlStringMapKeyIterator_current = 0;
			if(inlStringMapKeyIterator_current < inlStringMapKeyIterator_length) {
				var h = data.dataErrors.h;
				var inlStringMapValueIterator_h = h;
				var inlStringMapValueIterator_keys = Object.keys(h);
				var inlStringMapValueIterator_length = inlStringMapValueIterator_keys.length;
				var inlStringMapValueIterator_current = 0;
				var err = inlStringMapValueIterator_h[inlStringMapValueIterator_keys[inlStringMapValueIterator_current++]];
				var reject1 = reject;
				var _g = new haxe_ds_StringMap();
				_g.h[props.classPath] = err;
				reject1(shared_DbDataTools.create(_g));
			}
			haxe_Log.trace(data.dataInfo == null ? "null" : haxe_ds_StringMap.stringify(data.dataInfo.h),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 431, className : "action.async.LivePBXSync", methodName : "check"});
			resolve(data);
		});
	});
};
action_async_LivePBXSync.importDeals = function(props) {
	haxe_Log.trace("" + props.maxImport + " " + props.limit + " " + props.offset,{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 441, className : "action.async.LivePBXSync", methodName : "importDeals"});
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		var aState = getState();
		haxe_Log.trace(props,{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 444, className : "action.async.LivePBXSync", methodName : "importDeals"});
		if(!props.userState.dbUser.online) {
			return dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : props.userState.dbUser, lastError : "Du musst dich neu anmelden!"}))));
		}
		haxe_Log.trace("creating BinaryLoader " + Std.string(App.config.api),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 453, className : "action.async.LivePBXSync", methodName : "importDeals"});
		var bl = loader_BinaryLoader.create("" + Std.string(App.config.api),{ dbUser : props.userState.dbUser, id : props.userState.dbUser.id, jwt : props.userState.dbUser.jwt, classPath : props.classPath, action : props.action, extDB : true, limit : props.limit, offset : props.offset, onlyNew : props.onlyNew, filter : props.filter, min_age : 70, maxImport : props.maxImport == null ? 1000 : props.maxImport, devIP : App.devIP},function(data) {
			var h = data.dataErrors.h;
			var inlStringMapKeyIterator_h = h;
			var inlStringMapKeyIterator_keys = Object.keys(h);
			var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
			var inlStringMapKeyIterator_current = 0;
			if(inlStringMapKeyIterator_current < inlStringMapKeyIterator_length) {
				var h = data.dataErrors.h;
				var inlStringMapValueIterator_h = h;
				var inlStringMapValueIterator_keys = Object.keys(h);
				var inlStringMapValueIterator_length = inlStringMapValueIterator_keys.length;
				var inlStringMapValueIterator_current = 0;
				dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : inlStringMapValueIterator_h[inlStringMapValueIterator_keys[inlStringMapValueIterator_current++]]}))));
				return;
			}
			haxe_Log.trace(data.dataInfo == null ? "null" : haxe_ds_StringMap.stringify(data.dataInfo.h),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 485, className : "action.async.LivePBXSync", methodName : "importDeals"});
			if(Std.parseInt(data.dataInfo.h["missing"]) > 0 && data.dataInfo.h["got"] != data.dataInfo.h["missing"]) {
				dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : "Fehler " + Std.string(data.dataInfo.h["got"]) + " von " + Std.string(data.dataInfo.h["missing"]) + " Aktualisiert"}))));
				return;
			}
			if(Std.parseInt(data.dataInfo.h["got"]) > 0 && data.dataInfo.h["last_import_cid"] == data.dataInfo.h["max_client_id"]) {
				dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : " ", text : "" + Std.string(data.dataInfo.h["got"]) + " von " + Std.string(data.dataInfo.h["missing"]) + " aktualisiert"}))));
				return;
			}
			if(Std.parseInt(data.dataInfo.h["got"]) > 0) {
				dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : " ", text : "" + Std.string(data.dataInfo.h["got"]) + " von " + Std.string(data.dataInfo.h["missing"]) + " aktualisiert - lade weitere"}))));
				if(!props.onlyNew) {
					props.offset += Std.parseInt(data.dataInfo.h["got"]);
				}
				haxe_Log.trace("next loop:" + Std.string(props),{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 513, className : "action.async.LivePBXSync", methodName : "importDeals"});
				dispatch(action_async_LivePBXSync.importContacts(props));
				return;
			}
			haxe_Log.trace(Std.parseInt(data.dataInfo.h["got"]) > 0 && data.dataInfo.h["last_import_cid"] != data.dataInfo.h["max_client_id"] ? "loop" : "no",{ fileName : "src/action/async/LivePBXSync.hx", lineNumber : 516, className : "action.async.LivePBXSync", methodName : "importDeals"});
		});
		return null;
	});
};
var action_async_LoadAction = $hxEnums["action.async.LoadAction"] = { __ename__:"action.async.LoadAction",__constructs__:null
	,LoadData: ($_=function(component,sData) { return {_hx_index:0,component:component,sData:sData,__enum__:"action.async.LoadAction",toString:$estr}; },$_._hx_name="LoadData",$_.__params__ = ["component","sData"],$_)
	,LoadList: ($_=function(param) { return {_hx_index:1,param:param,__enum__:"action.async.LoadAction",toString:$estr}; },$_._hx_name="LoadList",$_.__params__ = ["param"],$_)
};
action_async_LoadAction.__constructs__ = [action_async_LoadAction.LoadData,action_async_LoadAction.LoadList];
var action_async_LocationAccess = function() { };
$hxClasses["action.async.LocationAccess"] = action_async_LocationAccess;
action_async_LocationAccess.__name__ = "action.async.LocationAccess";
action_async_LocationAccess.redirect = function(routes,to,props) {
	if(props == null) {
		return redux_thunk_Thunk.Action(function(dispatch,getState) {
			haxe_Log.trace("Redirecting to " + to,{ fileName : "src/action/async/LocationAccess.hx", lineNumber : 19, className : "action.async.LocationAccess", methodName : "redirect"});
			return dispatch(redux_Action.map(action_LocationAction.LocationChange({ pathname : to, search : "", hash : "", key : null, state : null})));
		});
	}
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		haxe_Log.trace(props.location.pathname,{ fileName : "src/action/async/LocationAccess.hx", lineNumber : 30, className : "action.async.LocationAccess", methodName : "redirect"});
		haxe_Log.trace(to,{ fileName : "src/action/async/LocationAccess.hx", lineNumber : 31, className : "action.async.LocationAccess", methodName : "redirect"});
		var match = null;
		var _g = 0;
		while(_g < routes.length) {
			var route = routes[_g];
			++_g;
			match = react_router_ReactRouter.matchPath(props.location.pathname,{ path : route, exact : true, strict : false});
			haxe_Log.trace("" + route + " => " + Std.string(match),{ fileName : "src/action/async/LocationAccess.hx", lineNumber : 41, className : "action.async.LocationAccess", methodName : "redirect"});
			if(match != null) {
				return null;
			}
		}
		haxe_Log.trace("history.push(" + to + ")",{ fileName : "src/action/async/LocationAccess.hx", lineNumber : 47, className : "action.async.LocationAccess", methodName : "redirect"});
		props.history.push(to);
		return null;
	});
};
var action_async_UserAccess = function() { };
$hxClasses["action.async.UserAccess"] = action_async_UserAccess;
action_async_UserAccess.__name__ = "action.async.UserAccess";
action_async_UserAccess.changePassword = function(userState) {
	haxe_Log.trace(userState,{ fileName : "src/action/async/UserAccess.hx", lineNumber : 33, className : "action.async.UserAccess", methodName : "changePassword"});
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		if(userState.dbUser.jwt == "" || userState.new_pass == "" || userState.dbUser.user_name == "") {
			return dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : userState.dbUser, lastError : "Neues Passwort eingeben!"}))));
		}
		var aState = getState();
		haxe_Log.trace("aState.locationStore.redirectAfterLogin:" + aState.locationStore.redirectAfterLogin,{ fileName : "src/action/async/UserAccess.hx", lineNumber : 41, className : "action.async.UserAccess", methodName : "changePassword"});
		loader_BinaryLoader.create("" + Std.string(App.config.api),{ id : userState.dbUser.id, jwt : userState.dbUser.jwt, classPath : "auth.User", action : "changePassword", new_pass : userState.dbUser.new_pass, original_path : aState.locationStore.redirectAfterLogin, password : userState.dbUser.password, user_name : userState.dbUser.user_name, devIP : App.devIP},function(data) {
			haxe_Log.trace(Reflect.fields(data),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 58, className : "action.async.UserAccess", methodName : "changePassword"});
			var h = data.dataErrors.h;
			var inlStringMapKeyIterator_h = h;
			var inlStringMapKeyIterator_keys = Object.keys(h);
			var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
			var inlStringMapKeyIterator_current = 0;
			if(inlStringMapKeyIterator_current < inlStringMapKeyIterator_length) {
				haxe_Log.trace(haxe_ds_StringMap.stringify(data.dataErrors.h),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 62, className : "action.async.UserAccess", methodName : "changePassword"});
				var h = data.dataErrors.h;
				var inlStringMapValueIterator_h = h;
				var inlStringMapValueIterator_keys = Object.keys(h);
				var inlStringMapValueIterator_length = inlStringMapValueIterator_keys.length;
				var inlStringMapValueIterator_current = 0;
				userState.lastError = inlStringMapValueIterator_h[inlStringMapValueIterator_keys[inlStringMapValueIterator_current++]];
				dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError(userState))));
				return;
			}
			if(data.dataInfo.h["jwtExpired"] != "") {
				userState.lastError = data.dataInfo.h["jwtExpired"];
				dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginExpired(userState))));
				return;
			}
			if(data.dataInfo.h["online"] != "") {
				aState.userState.new_pass = "";
				aState.userState.dbUser.first_name = data.dataInfo.h["first_name"];
				aState.userState.dbUser.last_name = data.dataInfo.h["last_name"];
				aState.userState.dbUser.last_login = data.dataInfo.h["last_login"];
				aState.userState.dbUser.id = Std.parseInt(data.dataInfo.h["id"]);
				aState.userState.dbUser.jwt = data.dataInfo.h["jwt"];
				aState.userState.dbUser.password = "";
				aState.userState.dbUser.change_pass_required = false;
				dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginComplete(aState.userState))));
				return;
			} else {
				haxe_Log.trace(data.dataErrors == null ? "null" : haxe_ds_StringMap.stringify(data.dataErrors.h),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 89, className : "action.async.UserAccess", methodName : "changePassword"});
			}
		});
		return null;
	});
};
action_async_UserAccess.resetPassword = function(userState) {
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		if(userState.dbUser.user_name == "" || userState.dbUser.mandator == null) {
			return dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : userState.dbUser, lastError : "Benutzername eingeben!"}))));
		}
		var appState = getState();
		haxe_Log.trace(Reflect.fields(appState),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 105, className : "action.async.UserAccess", methodName : "resetPassword"});
		haxe_Log.trace("" + appState.locationStore.redirectAfterLogin,{ fileName : "src/action/async/UserAccess.hx", lineNumber : 106, className : "action.async.UserAccess", methodName : "resetPassword"});
		loader_BinaryLoader.create("" + Std.string(App.config.api),{ user_name : userState.dbUser.user_name, mandator : userState.dbUser.mandator, classPath : "auth.User", action : "resetPassword", original_path : appState.locationStore.redirectAfterLogin, devIP : App.devIP},function(data) {
			haxe_Log.trace(Reflect.fields(data),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 120, className : "action.async.UserAccess", methodName : "resetPassword"});
			haxe_Log.trace(data,{ fileName : "src/action/async/UserAccess.hx", lineNumber : 121, className : "action.async.UserAccess", methodName : "resetPassword"});
			var h = data.dataErrors.h;
			var inlStringMapKeyIterator_h = h;
			var inlStringMapKeyIterator_keys = Object.keys(h);
			var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
			var inlStringMapKeyIterator_current = 0;
			if(inlStringMapKeyIterator_current < inlStringMapKeyIterator_length) {
				haxe_Log.trace(haxe_ds_StringMap.stringify(data.dataErrors.h),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 124, className : "action.async.UserAccess", methodName : "resetPassword"});
				var h = data.dataErrors.h;
				var inlStringMapValueIterator_h = h;
				var inlStringMapValueIterator_keys = Object.keys(h);
				var inlStringMapValueIterator_length = inlStringMapValueIterator_keys.length;
				var inlStringMapValueIterator_current = 0;
				dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ lastError : inlStringMapValueIterator_h[inlStringMapValueIterator_keys[inlStringMapValueIterator_current++]]}))));
				return;
			}
			if(data.dataInfo.h["resetPassword"] == "OK") {
				haxe_Log.trace(appState.userState.dbUser,{ fileName : "src/action/async/UserAccess.hx", lineNumber : 129, className : "action.async.UserAccess", methodName : "resetPassword"});
				appState.userState.dbUser.email = data.dataInfo.h["email"];
				appState.userState.loginTask = "CheckEmail";
				dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginRequired(appState.userState))));
				return;
			} else {
				haxe_Log.trace(data.dataErrors == null ? "null" : haxe_ds_StringMap.stringify(data.dataErrors.h),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 135, className : "action.async.UserAccess", methodName : "resetPassword"});
			}
		});
		return null;
	});
};
action_async_UserAccess.jwtCheck = function(data) {
	var h = data.dataErrors.h;
	var inlStringMapKeyIterator_h = h;
	var inlStringMapKeyIterator_keys = Object.keys(h);
	var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
	var inlStringMapKeyIterator_current = 0;
	if(inlStringMapKeyIterator_current < inlStringMapKeyIterator_length) {
		return redux_thunk_Thunk.Action(function(dispatch,getState) {
			haxe_Log.trace(data.dataErrors == null ? "null" : haxe_ds_StringMap.stringify(data.dataErrors.h),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 148, className : "action.async.UserAccess", methodName : "jwtCheck"});
			var tmp = getState().userState.dbUser;
			var h = data.dataErrors.h;
			var inlStringMapValueIterator_h = h;
			var inlStringMapValueIterator_keys = Object.keys(h);
			var inlStringMapValueIterator_length = inlStringMapValueIterator_keys.length;
			var inlStringMapValueIterator_current = 0;
			return dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : tmp, lastError : inlStringMapValueIterator_h[inlStringMapValueIterator_keys[inlStringMapValueIterator_current++]]}))));
		});
	}
	return null;
};
action_async_UserAccess.doLogin = function(userState,requests) {
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		if(userState.dbUser.mandator == null) {
			userState.dbUser.mandator = 1;
		}
		haxe_Log.trace(userState.dbUser,{ fileName : "src/action/async/UserAccess.hx", lineNumber : 161, className : "action.async.UserAccess", methodName : "doLogin"});
		if(userState.dbUser.password == "" && userState.dbUser.new_pass == "" || userState.dbUser.user_name == "") {
			return dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : userState.dbUser, lastError : "Passwort und user_name eintragen!"}))));
		}
		haxe_Log.trace("App.maxLoginAttempts:" + App.maxLoginAttempts,{ fileName : "src/action/async/UserAccess.hx", lineNumber : 166, className : "action.async.UserAccess", methodName : "doLogin"});
		var bL = null;
		userState.dbUser.jwt = "";
		if(App.maxLoginAttempts-- > 0) {
			var bL1 = "" + Std.string(App.config.api);
			var userState1 = userState.dbUser;
			var bL2 = userState.dbUser.new_pass != null ? "changePassword" : "login";
			var _g = new haxe_ds_StringMap();
			var value = new db_DbRelation({ alias : "us", fields : ["id","last_login","mandator"], filter : { mandator : 1}});
			_g.h["users"] = value;
			var value = new db_DbRelation({ alias : "co", fields : ["first_name","last_name","email"], jCond : "contact=co.id"});
			_g.h["contacts"] = value;
			bL = loader_BinaryLoader.dbQuery(bL1,{ dbUser : userState1, classPath : "auth.User", action : bL2, relations : _g, devIP : App.devIP},function(data) {
				if(Object.prototype.hasOwnProperty.call(data.dataInfo.h,"loggedIn")) {
					haxe_Log.trace("loggedIn:" + Std.string(data.dataInfo.h["loggedIn"]),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 195, className : "action.async.UserAccess", methodName : "doLogin"});
				}
				var h = data.dataErrors.h;
				var inlStringMapKeyIterator_h = h;
				var inlStringMapKeyIterator_keys = Object.keys(h);
				var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
				var inlStringMapKeyIterator_current = 0;
				if(inlStringMapKeyIterator_current < inlStringMapKeyIterator_length) {
					haxe_Log.trace("App.maxLoginAttempts:" + App.maxLoginAttempts,{ fileName : "src/action/async/UserAccess.hx", lineNumber : 199, className : "action.async.UserAccess", methodName : "doLogin"});
					if(App.maxLoginAttempts > 0) {
						var h = data.dataErrors.h;
						var inlStringMapValueIterator_h = h;
						var inlStringMapValueIterator_keys = Object.keys(h);
						var inlStringMapValueIterator_length = inlStringMapValueIterator_keys.length;
						var inlStringMapValueIterator_current = 0;
						dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : userState.dbUser, lastError : inlStringMapValueIterator_h[inlStringMapValueIterator_keys[inlStringMapValueIterator_current++]]}))));
						return;
					}
				}
				var userFields = Reflect.fields(userState.dbUser);
				haxe_Log.trace(userFields.join("|"),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 206, className : "action.async.UserAccess", methodName : "doLogin"});
				var h = data.dataInfo.h;
				var _g1_h = h;
				var _g1_keys = Object.keys(h);
				var _g1_length = _g1_keys.length;
				var _g1_current = 0;
				while(_g1_current < _g1_length) {
					var key = _g1_keys[_g1_current++];
					var _g2_key = key;
					var _g2_value = _g1_h[key];
					var k = _g2_key;
					var v = _g2_value;
					switch(k) {
					case "change_pass_required":case "online":
						userState.dbUser[k] = v == "true";
						break;
					default:
						if(Lambda.has(userFields,k)) {
							userState.dbUser[k] = v;
						} else {
							userState[k] = v;
						}
					}
				}
				userState.loginTask = null;
				js_Cookie.set("SameSite","Strict",null,"/");
				js_Cookie.set("userState.dbUser.id",Std.string(userState.dbUser.id),null,"/");
				js_Cookie.set("userState.dbUser.first_name",userState.dbUser.first_name,null,"/");
				js_Cookie.set("userState.dbUser.last_name",userState.dbUser.last_name,null,"/");
				js_Cookie.set("userState.dbUser.jwt",userState.dbUser.jwt,null,"/");
				haxe_Log.trace(js_Cookie.get("userState.dbUserState.dbUser.jwt"),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 230, className : "action.async.UserAccess", methodName : "doLogin"});
				userState.dbUser.online = true;
				dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginComplete(userState))));
			});
		}
		if(requests != null) {
			requests.push(haxe_ds_Either.Right(bL));
		}
		return null;
	});
};
action_async_UserAccess.loginReq = function(userState,requests) {
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		haxe_Log.trace(Reflect.fields(userState),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 250, className : "action.async.UserAccess", methodName : "loginReq"});
		if(userState.lastError != null) {
			return dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginRequired(userState))));
		}
		return null;
	});
};
action_async_UserAccess.logOut = function() {
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		haxe_Log.trace("...",{ fileName : "src/action/async/UserAccess.hx", lineNumber : 266, className : "action.async.UserAccess", methodName : "logOut"});
		var userState = getState().userState;
		if(userState.dbUser.id == null) {
			return dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : userState.dbUser, lastError : "UserId fehlt!"}))));
		}
		haxe_Log.trace(userState.dbUser.id + ":" + userState.dbUser.first_name,{ fileName : "src/action/async/UserAccess.hx", lineNumber : 270, className : "action.async.UserAccess", methodName : "logOut"});
		var bL = null;
		bL = loader_BinaryLoader.dbQuery("" + Std.string(App.config.api),{ classPath : "auth.User", action : "logout", dbUser : userState.dbUser, devIP : App.devIP},function(data) {
			var h = data.dataErrors.h;
			var inlStringMapKeyIterator_h = h;
			var inlStringMapKeyIterator_keys = Object.keys(h);
			var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
			var inlStringMapKeyIterator_current = 0;
			if(inlStringMapKeyIterator_current < inlStringMapKeyIterator_length) {
				haxe_Log.trace(data.dataErrors == null ? "null" : haxe_ds_StringMap.stringify(data.dataErrors.h),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 288, className : "action.async.UserAccess", methodName : "logOut"});
				return;
			} else {
				userState.dbUser.online = false;
				haxe_Log.trace(js_Cookie.get("userState.dbUserState.dbUser.jwt"),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 296, className : "action.async.UserAccess", methodName : "logOut"});
				dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LogOutComplete({ dbUser : userState.dbUser, waiting : false}))));
				return;
			}
		});
		return null;
	});
};
action_async_UserAccess.verify = function() {
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		return new Promise(function(resolve,reject) {
			var state = getState();
			var bL = "" + Std.string(App.config.api);
			var state1 = state.userState.dbUser;
			var _g = new haxe_ds_StringMap();
			var value = new db_DbRelation({ alias : "us", fields : ["last_login","mandator"], filter : { id : state.userState.dbUser.id}});
			_g.h["users"] = value;
			var value = new db_DbRelation({ alias : "co", fields : ["first_name","last_name","email"], jCond : "contact=co.id"});
			_g.h["contacts"] = value;
			var bL1 = loader_BinaryLoader.dbQuery(bL,{ dbUser : state1, classPath : "auth.User", action : "verify", relations : _g, devIP : App.devIP},function(data) {
				if(Object.prototype.hasOwnProperty.call(data.dataInfo.h,"verify") && data.dataInfo.h["verify"] == "OK") {
					haxe_Log.trace(data.dataInfo.h["verify"],{ fileName : "src/action/async/UserAccess.hx", lineNumber : 336, className : "action.async.UserAccess", methodName : "verify"});
					resolve(data);
					return;
				}
				if(!Lambda.empty(data.dataErrors)) {
					haxe_Log.trace(data.dataErrors == null ? "null" : haxe_ds_StringMap.stringify(data.dataErrors.h),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 342, className : "action.async.UserAccess", methodName : "verify"});
					resolve(data);
					return;
				}
				var uData = data.dataRows[0];
				haxe_Log.trace(data.dataInfo == null ? "null" : haxe_ds_StringMap.stringify(data.dataInfo.h),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 358, className : "action.async.UserAccess", methodName : "verify"});
				var h = uData.h;
				var _g1_h = h;
				var _g1_keys = Object.keys(h);
				var _g1_length = _g1_keys.length;
				var _g1_current = 0;
				while(_g1_current < _g1_length) {
					var key = _g1_keys[_g1_current++];
					var _g2_key = key;
					var _g2_value = _g1_h[key];
					var k = _g2_key;
					var v = _g2_value;
					if(Object.prototype.hasOwnProperty.call(state.userState.dbUser,k)) {
						switch(k) {
						case "change_pass_required":case "online":
							state.userState.dbUser[k] = v == "true";
							break;
						default:
							state.userState.dbUser[k] = v;
						}
					}
				}
				state.userState.waiting = false;
				haxe_Log.trace(state.userState.dbUser.jwt,{ fileName : "src/action/async/UserAccess.hx", lineNumber : 373, className : "action.async.UserAccess", methodName : "verify"});
				dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginComplete(state.userState))));
				resolve(data);
			});
		});
	});
};
action_async_UserAccess.userList = function() {
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		var userState = getState().userState;
		return new Promise(function(resolve,reject) {
			var state = getState();
			var bL = loader_BinaryLoader.dbQuery("" + Std.string(App.config.api),{ classPath : "auth.User", action : "getPbxUserData", dbUser : state.userState.dbUser, devIP : App.devIP},function(data) {
				var h = data.dataErrors.h;
				var inlStringMapKeyIterator_h = h;
				var inlStringMapKeyIterator_keys = Object.keys(h);
				var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
				var inlStringMapKeyIterator_current = 0;
				if(inlStringMapKeyIterator_current < inlStringMapKeyIterator_length) {
					haxe_Log.trace(data.dataErrors == null ? "null" : haxe_ds_StringMap.stringify(data.dataErrors.h),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 401, className : "action.async.UserAccess", methodName : "userList"});
					reject(data);
					return;
				} else {
					var tmp = data.dataRows[0];
					haxe_Log.trace(tmp == null ? "null" : haxe_ds_StringMap.stringify(tmp.h),{ fileName : "src/action/async/UserAccess.hx", lineNumber : 407, className : "action.async.UserAccess", methodName : "userList"});
					resolve(data);
					return;
				}
			});
		});
	});
};
var bulma_$components_Button = require("react-bulma-components").Button;
var bulma_$components_Footer = function(props,context) {
	React_Component.call(this,props,context);
};
$hxClasses["bulma_components.Footer"] = bulma_$components_Footer;
bulma_$components_Footer.__name__ = "bulma_components.Footer";
bulma_$components_Footer.__super__ = React_Component;
bulma_$components_Footer.prototype = $extend(React_Component.prototype,{
	render: function() {
		return React.createElement(react_ReactType.fromString("footer"),{ className : "footer", children : this.props.children});
	}
	,__class__: bulma_$components_Footer
});
var bulma_$components_Tabs = require("react-bulma-components").Tabs;
var comments_CommentString = function() { };
$hxClasses["comments.CommentString"] = comments_CommentString;
comments_CommentString.__name__ = "comments.CommentString";
var comments_StringTransform = function() { };
$hxClasses["comments.StringTransform"] = comments_StringTransform;
comments_StringTransform.__name__ = "comments.StringTransform";
comments_StringTransform.unindent = function(string) {
	var spR = new EReg("^\\s+","");
	var allSpR = new EReg("^\\s*$","");
	var lines = new EReg("(?:\r\n|\n)","g").split(string);
	var _g = [];
	var _g1 = 0;
	while(_g1 < lines.length) {
		var line = lines[_g1];
		++_g1;
		if(spR.match(line)) {
			_g.push(spR.matched(0));
		} else {
			_g.push("");
		}
	}
	var indents = _g;
	indents.sort(function(s1,s2) {
		return s1.length - s2.length;
	});
	while(indents.length > 0) {
		var ind = [indents.pop()];
		if(Lambda.foreach(lines,(function(ind) {
			return function(l) {
				if(!allSpR.match(l)) {
					return StringTools.startsWith(l,ind[0]);
				} else {
					return true;
				}
			};
		})(ind))) {
			var _g = [];
			var _g1 = 0;
			while(_g1 < lines.length) {
				var l = lines[_g1];
				++_g1;
				_g.push(allSpR.match(l) ? "" : HxOverrides.substr(l,ind[0].length,null));
			}
			lines = _g;
			return lines.join(string.indexOf("\r\n") >= 0 ? "\r\n" : "\n");
		}
	}
	return string;
};
var css_FlexFlow = {};
css_FlexFlow.fromMulti = function(arr) {
	return arr.join(" ");
};
var css_GlobalValue = {};
css_GlobalValue.Var = function(v) {
	while(!StringTools.startsWith(v,"--")) v = "-" + v;
	return "var(" + v + ")";
};
var css_OverflowCompo = {};
css_OverflowCompo.fromArray = function(arr) {
	return arr.join(" ");
};
var css_CSSLengthOrArray = {};
css_CSSLengthOrArray.fromArr = function(arr) {
	var result = new Array(arr.length);
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = arr[i];
	}
	return result.join(" ");
};
css_CSSLengthOrArray.fromNumber = function(nb) {
	return nb + "px";
};
var css_CSSNumberOrArray = {};
css_CSSNumberOrArray.fromArr = function(arr) {
	var result = new Array(arr.length);
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = arr[i];
	}
	return result.join(" ");
};
css_CSSNumberOrArray.fromNumber = function(nb) {
	if(nb == null) {
		return "null";
	} else {
		return "" + nb;
	}
};
var css_CSSLength = {};
css_CSSLength.fromNumber = function(nb) {
	return nb + "px";
};
var css_CSSNumber = {};
css_CSSNumber.fromNumber = function(nb) {
	if(nb == null) {
		return "null";
	} else {
		return "" + nb;
	}
};
var css_PropertiesHelper = function() { };
$hxClasses["css.PropertiesHelper"] = css_PropertiesHelper;
css_PropertiesHelper.__name__ = "css.PropertiesHelper";
css_PropertiesHelper.toCSS = function(properties,indent) {
	if(indent == null) {
		indent = "";
	}
	var ret_b = "";
	var _g = 0;
	var _g1 = Reflect.fields(properties);
	while(_g < _g1.length) {
		var k = _g1[_g];
		++_g;
		var key = css_PropertiesHelper.hyphenize(k);
		ret_b += Std.string(indent + key + ": " + Std.string(Reflect.field(properties,k)) + ";\n");
	}
	return ret_b;
};
css_PropertiesHelper.hyphenize = function(key) {
	if(StringTools.startsWith(key,"--")) {
		return key;
	}
	return new EReg("([A-Z])","g").map(key,function(reg) {
		return "-" + reg.matched(1).toLowerCase();
	});
};
var css_TextOverflow = {};
css_TextOverflow.fromArray = function(arr) {
	return arr.join(" ");
};
var css_VerticalAlign = {};
css_VerticalAlign.fromFloat = function(f) {
	return "" + f + "px";
};
var hxbit_Serializable = function() { };
$hxClasses["hxbit.Serializable"] = hxbit_Serializable;
hxbit_Serializable.__name__ = "hxbit.Serializable";
hxbit_Serializable.__isInterface__ = true;
hxbit_Serializable.prototype = {
	__uid: null
	,getCLID: null
	,serialize: null
	,unserializeInit: null
	,unserialize: null
	,getSerializeSchema: null
	,__class__: hxbit_Serializable
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
haxe_IMap.prototype = {
	get: null
	,keys: null
	,toString: null
	,__class__: haxe_IMap
};
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.createCopy = function(h) {
	var copy = new haxe_ds_StringMap();
	for (var key in h) copy.h[key] = h[key];
	return copy;
};
haxe_ds_StringMap.stringify = function(h) {
	var s = "{";
	var first = true;
	for (var key in h) {
		if (first) first = false; else s += ',';
		s += key + ' => ' + Std.string(h[key]);
	}
	return s + "}";
};
haxe_ds_StringMap.prototype = {
	h: null
	,get: function(key) {
		return this.h[key];
	}
	,keys: function() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this.h);
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapValueIterator(this.h);
	}
	,toString: function() {
		return haxe_ds_StringMap.stringify(this.h);
	}
	,__class__: haxe_ds_StringMap
};
var hxbit_Serializer = function() {
	this.usedClasses = [];
	if(hxbit_Serializer.CLIDS == null) {
		hxbit_Serializer.initClassIDS();
	}
};
$hxClasses["hxbit.Serializer"] = hxbit_Serializer;
hxbit_Serializer.__name__ = "hxbit.Serializer";
hxbit_Serializer.resetCounters = function() {
	hxbit_Serializer.UID = 0;
	hxbit_Serializer.SEQ = 0;
};
hxbit_Serializer.allocUID = function() {
	return hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
};
hxbit_Serializer.registerClass = function(c) {
	if(hxbit_Serializer.CLIDS != null) {
		throw haxe_Exception.thrown("Too late to register class");
	}
	var idx = hxbit_Serializer.CLASSES.length;
	hxbit_Serializer.CLASSES.push(c);
	return idx;
};
hxbit_Serializer.hash = function(name) {
	var v = 1;
	var _g = 0;
	var _g1 = name.length;
	while(_g < _g1) {
		var i = _g++;
		v = v * 223 + name.charCodeAt(i) | 0;
	}
	v = 1 + (v & 1073741823) % 65423;
	return v;
};
hxbit_Serializer.initClassIDS = function() {
	var cl = hxbit_Serializer.CLASSES;
	var _g = [];
	var _g1 = 0;
	while(_g1 < cl.length) {
		var c = cl[_g1];
		++_g1;
		_g.push([]);
	}
	var subClasses = _g;
	var isSub = [];
	var _g = 0;
	var _g1 = cl.length;
	while(_g < _g1) {
		var i = _g++;
		var c = cl[i];
		while(true) {
			c = c.__super__;
			if(c == null) {
				break;
			}
			var idx = cl.indexOf(c);
			if(idx < 0) {
				break;
			}
			subClasses[idx].push(i);
			isSub[i] = true;
		}
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = hxbit_Serializer.CLASSES.length;
	while(_g1 < _g2) {
		var i = _g1++;
		if(subClasses[i].length == 0 && !isSub[i]) {
			_g.push(0);
		} else {
			var name = cl[i].__name__;
			var v = 1;
			var _g3 = 0;
			var _g4 = name.length;
			while(_g3 < _g4) {
				var i1 = _g3++;
				v = v * 223 + name.charCodeAt(i1) | 0;
			}
			v = 1 + (v & 1073741823) % 65423;
			_g.push(v);
		}
	}
	hxbit_Serializer.CLIDS = _g;
	hxbit_Serializer.CL_BYID = [];
	var _g = 0;
	var _g1 = hxbit_Serializer.CLIDS.length;
	while(_g < _g1) {
		var i = _g++;
		var cid = hxbit_Serializer.CLIDS[i];
		if(cid == 0) {
			continue;
		}
		if(hxbit_Serializer.CL_BYID[cid] != null) {
			var c = hxbit_Serializer.CL_BYID[cid];
			throw haxe_Exception.thrown("Conflicting CLID between " + c.__name__ + " and " + cl[i].__name__);
		}
		hxbit_Serializer.CL_BYID[cid] = cl[i];
	}
};
hxbit_Serializer.getSignature = function() {
	if(hxbit_Serializer.__SIGN != null) {
		return hxbit_Serializer.__SIGN;
	}
	var s = new hxbit_Serializer();
	s.begin();
	var v = hxbit_Serializer.CLASSES.length;
	if(v >= 0 && v < 128) {
		s.out.addByte(v);
	} else {
		s.out.addByte(128);
		s.out.addInt32(v);
	}
	var _g = 0;
	var _g1 = hxbit_Serializer.CLASSES.length;
	while(_g < _g1) {
		var i = _g++;
		var v = hxbit_Serializer.CLIDS[i];
		if(v >= 0 && v < 128) {
			s.out.addByte(v);
		} else {
			s.out.addByte(128);
			s.out.addInt32(v);
		}
		var v1 = Object.create(hxbit_Serializer.CLASSES[i].prototype).getSerializeSchema().get_checkSum();
		s.out.addInt32(v1);
	}
	return hxbit_Serializer.__SIGN = haxe_crypto_Md5.make(s.end());
};
hxbit_Serializer.isClassFinal = function(index) {
	return hxbit_Serializer.CLIDS[index] == 0;
};
hxbit_Serializer.save = function(value) {
	var s = new hxbit_Serializer();
	s.beginSave();
	s.addKnownRef(value);
	return s.endSave();
};
hxbit_Serializer.load = function(bytes,cl) {
	var s = new hxbit_Serializer();
	s.beginLoad(bytes);
	var value = s.getRef(cl,cl.__clid);
	s.endLoad();
	return value;
};
hxbit_Serializer.prototype = {
	refs: null
	,remapObjs: null
	,newObjects: null
	,out: null
	,input: null
	,inPos: null
	,usedClasses: null
	,convert: null
	,mapIndexes: null
	,knownStructs: null
	,set_remapIds: function(b) {
		this.remapObjs = b ? new haxe_ds_ObjectMap() : null;
		return b;
	}
	,get_remapIds: function() {
		return this.remapObjs != null;
	}
	,remap: function(s) {
		if(this.remapObjs.h.__keys__[s.__id__] != null) {
			return;
		}
		this.remapObjs.set(s,s.__uid);
		s.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	}
	,begin: function() {
		this.out = new haxe_io_BytesBuffer();
		this.refs = new haxe_ds_IntMap();
		this.knownStructs = [];
	}
	,end: function() {
		var bytes = this.out.getBytes();
		this.out = null;
		this.refs = null;
		this.knownStructs = null;
		return bytes;
	}
	,setInput: function(data,pos) {
		this.input = data;
		this.inPos = pos;
		if(this.refs == null) {
			this.refs = new haxe_ds_IntMap();
		}
		if(this.knownStructs == null) {
			this.knownStructs = [];
		}
	}
	,serialize: function(s) {
		this.begin();
		this.addKnownRef(s);
		return this.out.getBytes();
	}
	,unserialize: function(data,c,startPos) {
		if(startPos == null) {
			startPos = 0;
		}
		this.refs = new haxe_ds_IntMap();
		this.knownStructs = [];
		this.setInput(data,startPos);
		return this.getRef(c,c.__clid);
	}
	,getByte: function() {
		return this.input.b[this.inPos++];
	}
	,addByte: function(v) {
		this.out.addByte(v);
	}
	,addInt: function(v) {
		if(v >= 0 && v < 128) {
			this.out.addByte(v);
		} else {
			this.out.addByte(128);
			this.out.addInt32(v);
		}
	}
	,addInt32: function(v) {
		this.out.addInt32(v);
	}
	,addInt64: function(v) {
		this.out.addInt64(v);
	}
	,addFloat: function(v) {
		this.out.addFloat(v);
	}
	,addDouble: function(v) {
		this.out.addDouble(v);
	}
	,addBool: function(v) {
		this.out.addByte(v ? 1 : 0);
	}
	,addArray: function(a,f) {
		if(a == null) {
			this.out.addByte(0);
			return;
		}
		var v = a.length + 1;
		if(v >= 0 && v < 128) {
			this.out.addByte(v);
		} else {
			this.out.addByte(128);
			this.out.addInt32(v);
		}
		var _g = 0;
		while(_g < a.length) {
			var v = a[_g];
			++_g;
			f(v);
		}
	}
	,addVector: function(a,f) {
		if(a == null) {
			this.out.addByte(0);
			return;
		}
		var v = a.length + 1;
		if(v >= 0 && v < 128) {
			this.out.addByte(v);
		} else {
			this.out.addByte(128);
			this.out.addInt32(v);
		}
		var _g = 0;
		while(_g < a.length) {
			var v = a[_g];
			++_g;
			f(v);
		}
	}
	,getArray: function(f) {
		var v = this.input.b[this.inPos++];
		if(v == 128) {
			v = this.input.getInt32(this.inPos);
			this.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			return null;
		}
		--len;
		var a = [];
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			a[i] = f();
		}
		return a;
	}
	,getVector: function(f) {
		var v = this.input.b[this.inPos++];
		if(v == 128) {
			v = this.input.getInt32(this.inPos);
			this.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			return null;
		}
		--len;
		var this1 = new Array(len);
		var a = this1;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			a[i] = f();
		}
		return a;
	}
	,addMap: function(a,fk,ft) {
		if(a == null) {
			this.out.addByte(0);
			return;
		}
		var _g = [];
		var k = a.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			_g.push(k1);
		}
		var keys = _g;
		var v = keys.length + 1;
		if(v >= 0 && v < 128) {
			this.out.addByte(v);
		} else {
			this.out.addByte(128);
			this.out.addInt32(v);
		}
		var _g = 0;
		while(_g < keys.length) {
			var k = keys[_g];
			++_g;
			fk(k);
			ft(a.get(k));
		}
	}
	,getBool: function() {
		return this.input.b[this.inPos++] != 0;
	}
	,getInt: function() {
		var v = this.input.b[this.inPos++];
		if(v == 128) {
			v = this.input.getInt32(this.inPos);
			this.inPos += 4;
		}
		return v;
	}
	,skip: function(size) {
		this.inPos += size;
	}
	,getInt32: function() {
		var v = this.input.getInt32(this.inPos);
		this.inPos += 4;
		return v;
	}
	,getInt64: function() {
		var v = this.input.getInt64(this.inPos);
		this.inPos += 8;
		return v;
	}
	,getDouble: function() {
		var v = this.input.getDouble(this.inPos);
		this.inPos += 8;
		return v;
	}
	,getFloat: function() {
		var v = this.input.getFloat(this.inPos);
		this.inPos += 4;
		return v;
	}
	,addString: function(s) {
		if(s == null) {
			this.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				this.out.addByte(v);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v);
			}
			this.out.add(b);
		}
	}
	,addBytes: function(b) {
		if(b == null) {
			this.out.addByte(0);
		} else {
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				this.out.addByte(v);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v);
			}
			this.out.add(b);
		}
	}
	,addBytesSub: function(b,pos,len) {
		if(b == null) {
			this.out.addByte(0);
		} else {
			var v = len + 1;
			if(v >= 0 && v < 128) {
				this.out.addByte(v);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v);
			}
			this.out.addBytes(b,pos,len);
		}
	}
	,getString: function() {
		var v = this.input.b[this.inPos++];
		if(v == 128) {
			v = this.input.getInt32(this.inPos);
			this.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			return null;
		}
		--len;
		var s = this.input.getString(this.inPos,len);
		this.inPos += len;
		return s;
	}
	,getBytes: function() {
		var v = this.input.b[this.inPos++];
		if(v == 128) {
			v = this.input.getInt32(this.inPos);
			this.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			return null;
		}
		--len;
		var s = this.input.sub(this.inPos,len);
		this.inPos += len;
		return s;
	}
	,getDynamic: function() {
		var _g = this.input.b[this.inPos++];
		switch(_g) {
		case 0:
			return null;
		case 1:
			return false;
		case 2:
			return true;
		case 3:
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			return v;
		case 4:
			var v = this.input.getFloat(this.inPos);
			this.inPos += 4;
			return v;
		case 5:
			var o = { };
			var _g1 = 0;
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var _g2 = v;
			while(_g1 < _g2) {
				var i = _g1++;
				var v = this.input.b[this.inPos++];
				if(v == 128) {
					v = this.input.getInt32(this.inPos);
					this.inPos += 4;
				}
				var len = v;
				var field;
				if(len == 0) {
					field = null;
				} else {
					--len;
					var s = this.input.getString(this.inPos,len);
					this.inPos += len;
					field = s;
				}
				o[field] = this.getDynamic();
			}
			return o;
		case 6:
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var len = v;
			if(len == 0) {
				return null;
			} else {
				--len;
				var s = this.input.getString(this.inPos,len);
				this.inPos += len;
				return s;
			}
			break;
		case 7:
			var _g1 = [];
			var _g2 = 0;
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var _g3 = v;
			while(_g2 < _g3) {
				var i = _g2++;
				_g1.push(this.getDynamic());
			}
			return _g1;
		case 8:
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var len = v;
			if(len == 0) {
				return null;
			} else {
				--len;
				var s = this.input.sub(this.inPos,len);
				this.inPos += len;
				return s;
			}
			break;
		default:
			var x = _g;
			throw haxe_Exception.thrown("Invalid dynamic prefix " + x);
		}
	}
	,addDynamic: function(v) {
		if(v == null) {
			this.out.addByte(0);
			return;
		}
		var _g = Type.typeof(v);
		switch(_g._hx_index) {
		case 1:
			this.out.addByte(3);
			var v1 = v;
			if(v1 >= 0 && v1 < 128) {
				this.out.addByte(v1);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v1);
			}
			break;
		case 2:
			this.out.addByte(4);
			this.out.addFloat(v);
			break;
		case 3:
			this.out.addByte(v ? 2 : 1);
			break;
		case 4:
			var fields = Reflect.fields(v);
			this.out.addByte(5);
			var v1 = fields.length;
			if(v1 >= 0 && v1 < 128) {
				this.out.addByte(v1);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v1);
			}
			var _g1 = 0;
			while(_g1 < fields.length) {
				var f = fields[_g1];
				++_g1;
				if(f == null) {
					this.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(f);
					var v1 = b.length + 1;
					if(v1 >= 0 && v1 < 128) {
						this.out.addByte(v1);
					} else {
						this.out.addByte(128);
						this.out.addInt32(v1);
					}
					this.out.add(b);
				}
				this.addDynamic(Reflect.field(v,f));
			}
			break;
		case 6:
			var c = _g.c;
			switch(c) {
			case Array:
				this.out.addByte(7);
				var a = v;
				var v1 = a.length;
				if(v1 >= 0 && v1 < 128) {
					this.out.addByte(v1);
				} else {
					this.out.addByte(128);
					this.out.addInt32(v1);
				}
				var _g1 = 0;
				while(_g1 < a.length) {
					var v1 = a[_g1];
					++_g1;
					this.addDynamic(v1);
				}
				break;
			case String:
				this.out.addByte(6);
				var s = v;
				if(s == null) {
					this.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(s);
					var v1 = b.length + 1;
					if(v1 >= 0 && v1 < 128) {
						this.out.addByte(v1);
					} else {
						this.out.addByte(128);
						this.out.addInt32(v1);
					}
					this.out.add(b);
				}
				break;
			case haxe_io_Bytes:
				this.out.addByte(8);
				var b = v;
				if(b == null) {
					this.out.addByte(0);
				} else {
					var v = b.length + 1;
					if(v >= 0 && v < 128) {
						this.out.addByte(v);
					} else {
						this.out.addByte(128);
						this.out.addInt32(v);
					}
					this.out.add(b);
				}
				break;
			default:
				throw haxe_Exception.thrown("Unsupported dynamic " + Std.string(c));
			}
			break;
		default:
			var t = _g;
			throw haxe_Exception.thrown("Unsupported dynamic " + Std.string(t));
		}
	}
	,addCLID: function(clid) {
		this.out.addByte(clid >> 8);
		this.out.addByte(clid & 255);
	}
	,getCLID: function() {
		return this.input.b[this.inPos++] << 8 | this.input.b[this.inPos++];
	}
	,addStruct: function(s) {
		if(s == null) {
			this.out.addByte(0);
			return;
		}
		var c = js_Boot.__implements(s,hxbit_Serializable) ? s : null;
		if(c != null) {
			this.out.addByte(1);
			this.addAnyRef(c);
			return;
		}
		var index = this.knownStructs.indexOf(s);
		if(index >= 0) {
			this.out.addByte(2);
			if(index >= 0 && index < 128) {
				this.out.addByte(index);
			} else {
				this.out.addByte(128);
				this.out.addInt32(index);
			}
			return;
		}
		this.knownStructs.push(s);
		this.out.addByte(3);
		var c = js_Boot.getClass(s);
		if(c == null) {
			throw haxe_Exception.thrown(Std.string(s) + " does not have a class ?");
		}
		var s1 = c.__name__;
		if(s1 == null) {
			this.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s1);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				this.out.addByte(v);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v);
			}
			this.out.add(b);
		}
		s.customSerialize(this);
		this.out.addByte(255);
	}
	,getStruct: function() {
		switch(this.input.b[this.inPos++]) {
		case 0:
			return null;
		case 1:
			return this.getAnyRef();
		case 2:
			var tmp = this.knownStructs;
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			return tmp[v];
		case 3:
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var len = v;
			var cname;
			if(len == 0) {
				cname = null;
			} else {
				--len;
				var s = this.input.getString(this.inPos,len);
				this.inPos += len;
				cname = s;
			}
			var cl = $hxClasses[cname];
			if(cl == null) {
				throw haxe_Exception.thrown("Missing struct class " + cname);
			}
			var s = Object.create(cl.prototype);
			this.knownStructs.push(s);
			s.customUnserialize(this);
			if(this.input.b[this.inPos++] != 255) {
				throw haxe_Exception.thrown("Invalid customUnserialize for " + Std.string(s));
			}
			return s;
		default:
			throw haxe_Exception.thrown("assert");
		}
	}
	,addObjRef: function(s) {
		var v = s.__uid;
		if(v >= 0 && v < 128) {
			this.out.addByte(v);
		} else {
			this.out.addByte(128);
			this.out.addInt32(v);
		}
	}
	,getObjRef: function() {
		var v = this.input.b[this.inPos++];
		if(v == 128) {
			v = this.input.getInt32(this.inPos);
			this.inPos += 4;
		}
		return v;
	}
	,addAnyRef: function(s) {
		if(s == null) {
			this.out.addByte(0);
			return;
		}
		if(this.remapObjs != null) {
			this.remap(s);
		}
		this.addObjRef(s);
		if(this.refs.h[s.__uid] != null) {
			return;
		}
		this.refs.h[s.__uid] = s;
		var index = s.getCLID();
		this.usedClasses[index] = true;
		this.out.addByte(index >> 8);
		this.out.addByte(index & 255);
		s.serialize(this);
	}
	,addKnownRef: function(s) {
		if(s == null) {
			this.out.addByte(0);
			return;
		}
		if(this.remapObjs != null) {
			this.remap(s);
		}
		this.addObjRef(s);
		if(this.refs.h[s.__uid] != null) {
			return;
		}
		this.refs.h[s.__uid] = s;
		var index = s.getCLID();
		this.usedClasses[index] = true;
		var clid = hxbit_Serializer.CLIDS[index];
		if(clid != 0) {
			this.out.addByte(clid >> 8);
			this.out.addByte(clid & 255);
		}
		s.serialize(this);
	}
	,getAnyRef: function() {
		var id = this.getObjRef();
		if(id == 0) {
			return null;
		}
		if(this.refs.h[id] != null) {
			return this.refs.h[id];
		}
		var rid = id & 16777215;
		if(hxbit_Serializer.UID < rid) {
			hxbit_Serializer.UID = rid;
		}
		var clidx = this.input.b[this.inPos++] << 8 | this.input.b[this.inPos++];
		if(this.mapIndexes != null) {
			clidx = this.mapIndexes[clidx];
		}
		var i = Object.create(hxbit_Serializer.CLASSES[clidx].prototype);
		if(this.newObjects != null) {
			this.newObjects.push(i);
		}
		i.__uid = id;
		i.unserializeInit();
		this.refs.h[id] = i;
		if(this.convert != null && this.convert[clidx] != null) {
			this.convertRef(i,this.convert[clidx]);
		} else {
			i.unserialize(this);
		}
		return i;
	}
	,getRef: function(c,clidx) {
		var id = this.getObjRef();
		if(id == 0) {
			return null;
		}
		if(this.refs.h[id] != null) {
			return this.refs.h[id];
		}
		var rid = id & 16777215;
		if(hxbit_Serializer.UID < rid) {
			hxbit_Serializer.UID = rid;
		}
		if(this.convert != null && this.convert[clidx] != null) {
			var conv = this.convert[clidx];
			if(conv.hadCID) {
				var realIdx = this.input.b[this.inPos++] << 8 | this.input.b[this.inPos++];
				if(conv.hasCID) {
					c = hxbit_Serializer.CL_BYID[realIdx];
					clidx = c.__clid;
				}
			}
		} else if(hxbit_Serializer.CLIDS[clidx] != 0) {
			var realIdx = this.input.b[this.inPos++] << 8 | this.input.b[this.inPos++];
			c = hxbit_Serializer.CL_BYID[realIdx];
			if(this.convert != null) {
				clidx = c.__clid;
			}
		}
		var i = Object.create(c.prototype);
		if(this.newObjects != null) {
			this.newObjects.push(i);
		}
		i.__uid = id;
		i.unserializeInit();
		this.refs.h[id] = i;
		if(this.convert != null && this.convert[clidx] != null) {
			this.convertRef(i,this.convert[clidx]);
		} else {
			i.unserialize(this);
		}
		return i;
	}
	,getKnownRef: function(c) {
		return this.getRef(c,c.__clid);
	}
	,beginSave: function() {
		this.begin();
		this.usedClasses = [];
	}
	,endSave: function(savePosition) {
		if(savePosition == null) {
			savePosition = 0;
		}
		var content = this.end();
		this.begin();
		var classes = [];
		var schemas = [];
		var sidx = hxbit_Serializer.CLASSES.indexOf(hxbit_Schema);
		var _g = 0;
		var _g1 = this.usedClasses.length;
		while(_g < _g1) {
			var i = _g++;
			if(!this.usedClasses[i] || i == sidx) {
				continue;
			}
			var c = hxbit_Serializer.CLASSES[i];
			var schema = Object.create(c.prototype).getSerializeSchema();
			schemas.push(schema);
			classes.push(i);
			this.addKnownRef(schema);
			this.refs.remove(schema.__uid);
		}
		var schemaData = this.end();
		this.begin();
		this.out.addBytes(content,0,savePosition);
		var b = haxe_io_Bytes.ofString("HXS");
		var v = b.length + 1;
		if(v >= 0 && v < 128) {
			this.out.addByte(v);
		} else {
			this.out.addByte(128);
			this.out.addInt32(v);
		}
		this.out.add(b);
		this.out.addByte(1);
		var _g = 0;
		var _g1 = classes.length;
		while(_g < _g1) {
			var i = _g++;
			var index = classes[i];
			var c = hxbit_Serializer.CLASSES[index];
			var s = c.__name__;
			if(s == null) {
				this.out.addByte(0);
			} else {
				var b = haxe_io_Bytes.ofString(s);
				var v = b.length + 1;
				if(v >= 0 && v < 128) {
					this.out.addByte(v);
				} else {
					this.out.addByte(128);
					this.out.addInt32(v);
				}
				this.out.add(b);
			}
			this.out.addByte(index >> 8);
			this.out.addByte(index & 255);
			var v1 = schemas[i].get_checkSum();
			this.out.addInt32(v1);
		}
		var s = null;
		if(s == null) {
			this.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				this.out.addByte(v);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v);
			}
			this.out.add(b);
		}
		var v = schemaData.length;
		if(v >= 0 && v < 128) {
			this.out.addByte(v);
		} else {
			this.out.addByte(128);
			this.out.addInt32(v);
		}
		this.out.add(schemaData);
		this.out.addBytes(content,savePosition,content.length - savePosition);
		return this.end();
	}
	,beginLoad: function(bytes,position) {
		if(position == null) {
			position = 0;
		}
		this.setInput(bytes,position);
		var classByName_h = Object.create(null);
		var schemas = [];
		var mapIndexes = [];
		var indexes = [];
		var needConvert = false;
		var needReindex = false;
		var _g = 0;
		var _g1 = hxbit_Serializer.CLASSES.length;
		while(_g < _g1) {
			var i = _g++;
			var c = hxbit_Serializer.CLASSES[i];
			classByName_h[c.__name__] = i;
			mapIndexes[i] = i;
		}
		var v = this.input.b[this.inPos++];
		if(v == 128) {
			v = this.input.getInt32(this.inPos);
			this.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = this.input.getString(this.inPos,len);
			this.inPos += len;
			tmp = s;
		}
		if(tmp != "HXS") {
			throw haxe_Exception.thrown("Invalid HXS data");
		}
		var version = this.input.b[this.inPos++];
		if(version != 1) {
			throw haxe_Exception.thrown("Unsupported HXS version " + version);
		}
		while(true) {
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var len = v;
			var clname;
			if(len == 0) {
				clname = null;
			} else {
				--len;
				var s = this.input.getString(this.inPos,len);
				this.inPos += len;
				clname = s;
			}
			if(clname == null) {
				break;
			}
			var index = this.input.b[this.inPos++] << 8 | this.input.b[this.inPos++];
			var v1 = this.input.getInt32(this.inPos);
			this.inPos += 4;
			var crc = v1;
			var ourClassIndex = classByName_h[clname];
			if(ourClassIndex == null) {
				throw haxe_Exception.thrown("Missing class " + clname + " found in HXS data");
			}
			var ourSchema = Object.create(hxbit_Serializer.CLASSES[ourClassIndex].prototype).getSerializeSchema();
			if(ourSchema.get_checkSum() != crc) {
				needConvert = true;
				schemas[index] = ourSchema;
			}
			if(index != ourClassIndex) {
				needReindex = true;
				mapIndexes[index] = ourClassIndex;
			}
			indexes.push(index);
		}
		var v = this.input.b[this.inPos++];
		if(v == 128) {
			v = this.input.getInt32(this.inPos);
			this.inPos += 4;
		}
		var schemaDataSize = v;
		if(needConvert) {
			this.convert = [];
			var _g = 0;
			while(_g < indexes.length) {
				var index = indexes[_g];
				++_g;
				var ourSchema = schemas[index];
				var c = hxbit_Schema;
				var schema = this.getRef(c,c.__clid);
				this.refs.remove(schema.__uid);
				if(ourSchema != null) {
					var c1 = hxbit_Serializer.CLASSES[mapIndexes[index]];
					this.convert[mapIndexes[index]] = new hxbit_Convert(c1.__name__,ourSchema,schema);
				}
			}
		} else {
			this.inPos += schemaDataSize;
		}
		if(needReindex) {
			this.mapIndexes = mapIndexes;
		}
	}
	,endLoad: function() {
		this.convert = null;
		this.mapIndexes = null;
		this.setInput(null,0);
	}
	,convertRef: function(i,c) {
		var this1 = new Array(c.read.length);
		var values = this1;
		var writePos = 0;
		var _g = 0;
		var _g1 = c.read;
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			values[r.index] = this.readValue(r.from);
		}
		var oldOut = this.out;
		this.out = new haxe_io_BytesBuffer();
		var _g = 0;
		var _g1 = c.write;
		while(_g < _g1.length) {
			var w = _g1[_g];
			++_g;
			var v;
			if(w.from == null) {
				v = w.defaultValue;
			} else {
				v = values[w.index];
				if(!w.same) {
					if(v == null) {
						v = w.defaultValue;
					} else if(w.conv != null) {
						v = w.conv(v);
					} else {
						v = this.convertValue(w.path,v,w.from,w.to);
					}
				}
			}
			this.writeValue(v,w.to);
		}
		var bytes = this.out.getBytes();
		this.out = oldOut;
		var oldIn = this.input;
		var oldPos = this.inPos;
		this.setInput(bytes,0);
		i.unserialize(this);
		this.setInput(oldIn,oldPos);
	}
	,isNullable: function(t) {
		switch(t._hx_index) {
		case 0:case 1:case 2:
			return false;
		default:
			return true;
		}
	}
	,convertValue: function(path,v,from,to) {
		if(v == null) {
			return hxbit_Convert.getDefault(to);
		}
		if(hxbit_Convert.sameType(from,to)) {
			return v;
		}
		var conv = hxbit_Convert.convFuns.h[path];
		if(conv != null) {
			return conv(v);
		}
		switch(from._hx_index) {
		case 0:
			switch(to._hx_index) {
			case 1:
				return v * 1.0;
			case 10:
				var to1 = to.k;
				return this.convertValue(path,v,from,to1);
			case 12:
				var to1 = to.t;
				return this.convertValue(path,v,from,to1);
			default:
			}
			break;
		case 1:
			switch(to._hx_index) {
			case 0:
				return v | 0;
			case 10:
				var to1 = to.k;
				return this.convertValue(path,v,from,to1);
			case 12:
				var to1 = to.t;
				return this.convertValue(path,v,from,to1);
			default:
			}
			break;
		case 2:
			switch(to._hx_index) {
			case 0:
				if(v) {
					return 1;
				} else {
					return 0;
				}
				break;
			case 1:
				if(v) {
					return 1.;
				} else {
					return 0.;
				}
				break;
			case 10:
				var to1 = to.k;
				return this.convertValue(path,v,from,to1);
			case 12:
				var to1 = to.t;
				return this.convertValue(path,v,from,to1);
			default:
			}
			break;
		case 5:
			var _g = from.name;
			switch(to._hx_index) {
			case 5:
				var to1 = to.name;
				var value = v;
				var v2 = js_Boot.__downcastCheck(value,$hxClasses[to1]) ? value : null;
				if(v2 != null) {
					return v2;
				}
				break;
			case 10:
				var to1 = to.k;
				return this.convertValue(path,v,from,to1);
			case 12:
				var to1 = to.t;
				return this.convertValue(path,v,from,to1);
			default:
			}
			break;
		case 8:
			var _g = from.k;
			switch(to._hx_index) {
			case 8:
				var to1 = to.k;
				var from1 = _g;
				var arr = v;
				var _g = [];
				var _g1 = 0;
				while(_g1 < arr.length) {
					var v1 = arr[_g1];
					++_g1;
					_g.push(this.convertValue(path + "[]",v1,from1,to1));
				}
				return _g;
			case 10:
				var to1 = to.k;
				return this.convertValue(path,v,from,to1);
			case 12:
				var to1 = to.t;
				return this.convertValue(path,v,from,to1);
			default:
			}
			break;
		case 9:
			var _g = from.fields;
			switch(to._hx_index) {
			case 9:
				var obj2 = to.fields;
				var obj1 = _g;
				var v2 = { };
				var _g = 0;
				while(_g < obj2.length) {
					var f = obj2[_g];
					++_g;
					var found = false;
					var field = null;
					var _g1 = 0;
					while(_g1 < obj1.length) {
						var f2 = obj1[_g1];
						++_g1;
						if(f2.name == f.name) {
							found = true;
							field = this.convertValue(path + "." + f2.name,Reflect.field(v,f2.name),f2.type,f.type);
							break;
						}
					}
					if(!found) {
						if(f.opt) {
							continue;
						}
						field = hxbit_Convert.getDefault(f.type);
					} else if(field == null && f.opt) {
						continue;
					}
					v2[f.name] = field;
				}
				return v2;
			case 10:
				var to1 = to.k;
				return this.convertValue(path,v,from,to1);
			case 12:
				var to1 = to.t;
				return this.convertValue(path,v,from,to1);
			default:
			}
			break;
		case 10:
			var _g = from.k;
			switch(to._hx_index) {
			case 10:
				var _g1 = to.k;
				var from1 = _g;
				return this.convertValue(path,v,from1,to);
			case 12:
				var to1 = to.t;
				return this.convertValue(path,v,from,to1);
			default:
				var from1 = _g;
				return this.convertValue(path,v,from1,to);
			}
			break;
		case 12:
			var from1 = from.t;
			return this.convertValue(path,v,from1,to);
		default:
			switch(to._hx_index) {
			case 10:
				var to1 = to.k;
				return this.convertValue(path,v,from,to1);
			case 12:
				var to1 = to.t;
				return this.convertValue(path,v,from,to1);
			default:
			}
		}
		throw haxe_Exception.thrown("Cannot convert " + path + "(" + Std.string(v) + ") from " + Std.string(from) + " to " + Std.string(to));
	}
	,getEnumClass: function(name) {
		var cl = hxbit_Serializer.ENUM_CLASSES.h[name];
		if(cl != null) {
			return cl;
		}
		var path = name.split(".").join("_");
		path = path.charAt(0).toUpperCase() + HxOverrides.substr(path,1,null);
		cl = $hxClasses["hxbit.enumSer." + path];
		if(cl != null) {
			hxbit_Serializer.ENUM_CLASSES.h[name] = cl;
		}
		return cl;
	}
	,readValue: function(t) {
		var _gthis = this;
		switch(t._hx_index) {
		case 0:
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			return v;
		case 1:
			var v = this.input.getFloat(this.inPos);
			this.inPos += 4;
			return v;
		case 2:
			return this.input.b[this.inPos++] != 0;
		case 3:
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var len = v;
			if(len == 0) {
				return null;
			} else {
				--len;
				var s = this.input.getString(this.inPos,len);
				this.inPos += len;
				return s;
			}
			break;
		case 4:
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var len = v;
			if(len == 0) {
				return null;
			} else {
				--len;
				var s = this.input.sub(this.inPos,len);
				this.inPos += len;
				return s;
			}
			break;
		case 5:
			var name = t.name;
			var c = $hxClasses[name];
			return this.getRef(c,c.__clid);
		case 6:
			var name = t.name;
			var ser = this.getEnumClass(name);
			if(ser == null) {
				var e = $hxEnums[name];
				var tmp;
				if(e != null) {
					var o = haxe_rtti_Meta.getType(e);
					tmp = Object.prototype.hasOwnProperty.call(o,"skipSerialize");
				} else {
					tmp = false;
				}
				if(tmp) {
					var v = this.input.b[this.inPos++];
					if(v == 128) {
						v = this.input.getInt32(this.inPos);
						this.inPos += 4;
					}
					return null;
				}
				throw haxe_Exception.thrown("No enum unserializer found for " + name);
			}
			return ser.doUnserialize(this);
		case 7:
			var k = t.k;
			var v = t.v;
			switch(k._hx_index) {
			case 0:
				var v1 = this.input.b[this.inPos++];
				if(v1 == 128) {
					v1 = this.input.getInt32(this.inPos);
					this.inPos += 4;
				}
				var len = v1;
				var tmp;
				if(len == 0) {
					tmp = null;
				} else {
					var m = new haxe_ds_IntMap();
					while(--len > 0) {
						var k1 = _gthis.readValue(k);
						var v1 = _gthis.readValue(v);
						m.h[k1] = v1;
					}
					tmp = m;
				}
				return tmp;
			case 3:
				var v1 = this.input.b[this.inPos++];
				if(v1 == 128) {
					v1 = this.input.getInt32(this.inPos);
					this.inPos += 4;
				}
				var len = v1;
				var tmp;
				if(len == 0) {
					tmp = null;
				} else {
					var m = new haxe_ds_StringMap();
					while(--len > 0) {
						var k1 = _gthis.readValue(k);
						var v1 = _gthis.readValue(v);
						m.h[k1] = v1;
					}
					tmp = m;
				}
				return tmp;
			case 6:
				var _g = k.name;
				var v1 = this.input.b[this.inPos++];
				if(v1 == 128) {
					v1 = this.input.getInt32(this.inPos);
					this.inPos += 4;
				}
				var len = v1;
				if(len == 0) {
					return null;
				}
				var m = new haxe_ds_EnumValueMap();
				while(--len > 0) {
					var k1 = this.readValue(k);
					var v1 = this.readValue(v);
					m.set(k1,v1);
				}
				return m;
			default:
				var v1 = this.input.b[this.inPos++];
				if(v1 == 128) {
					v1 = this.input.getInt32(this.inPos);
					this.inPos += 4;
				}
				var len = v1;
				var tmp;
				if(len == 0) {
					tmp = null;
				} else {
					var m = new haxe_ds_ObjectMap();
					while(--len > 0) {
						var k1 = _gthis.readValue(k);
						var v1 = _gthis.readValue(v);
						m.set(k1,v1);
					}
					tmp = m;
				}
				return tmp;
			}
			break;
		case 8:
			var t1 = t.k;
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var len = v;
			if(len == 0) {
				return null;
			} else {
				--len;
				var a = [];
				var _g = 0;
				var _g1 = len;
				while(_g < _g1) {
					var i = _g++;
					a[i] = _gthis.readValue(t1);
				}
				return a;
			}
			break;
		case 9:
			var fields = t.fields;
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var bits = v;
			if(bits == 0) {
				return null;
			}
			var o = { };
			--bits;
			var _g = [];
			var _g1 = 0;
			while(_g1 < fields.length) {
				var f = fields[_g1];
				++_g1;
				if(this.isNullable(f.type)) {
					_g.push(f);
				}
			}
			var nullables = _g;
			var _g = 0;
			while(_g < fields.length) {
				var f = fields[_g];
				++_g;
				var nidx = nullables.indexOf(f);
				if(nidx >= 0 && (bits & 1 << nidx) == 0) {
					continue;
				}
				o[f.name] = this.readValue(f.type);
			}
			return o;
		case 10:
			var t1 = t.k;
			return this.readValue(t1);
		case 11:
			var t1 = t.k;
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var len = v;
			if(len == 0) {
				return null;
			} else {
				--len;
				var this1 = new Array(len);
				var a = this1;
				var _g = 0;
				var _g1 = len;
				while(_g < _g1) {
					var i = _g++;
					a[i] = _gthis.readValue(t1);
				}
				return a;
			}
			break;
		case 12:
			var t1 = t.t;
			if(this.input.b[this.inPos++] == 0) {
				return null;
			} else {
				return this.readValue(t1);
			}
			break;
		case 13:
			throw haxe_Exception.thrown("assert");
		case 14:
			return this.getDynamic();
		case 15:
			var v = this.input.getInt64(this.inPos);
			this.inPos += 8;
			return v;
		case 16:
			var _g = t.t;
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			return v;
		case 17:
			return this.getStruct();
		}
	}
	,writeValue: function(v,t) {
		var _gthis = this;
		switch(t._hx_index) {
		case 0:
			var v1 = v;
			if(v1 >= 0 && v1 < 128) {
				this.out.addByte(v1);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v1);
			}
			break;
		case 1:
			this.out.addFloat(v);
			break;
		case 2:
			this.out.addByte(v ? 1 : 0);
			break;
		case 3:
			var s = v;
			if(s == null) {
				this.out.addByte(0);
			} else {
				var b = haxe_io_Bytes.ofString(s);
				var v1 = b.length + 1;
				if(v1 >= 0 && v1 < 128) {
					this.out.addByte(v1);
				} else {
					this.out.addByte(128);
					this.out.addInt32(v1);
				}
				this.out.add(b);
			}
			break;
		case 4:
			var b = v;
			if(b == null) {
				this.out.addByte(0);
			} else {
				var v1 = b.length + 1;
				if(v1 >= 0 && v1 < 128) {
					this.out.addByte(v1);
				} else {
					this.out.addByte(128);
					this.out.addInt32(v1);
				}
				this.out.add(b);
			}
			break;
		case 5:
			var _g = t.name;
			this.addKnownRef(v);
			break;
		case 6:
			var name = t.name;
			var ser = this.getEnumClass(name);
			if(ser == null) {
				throw haxe_Exception.thrown("No enum unserializer found for " + name);
			}
			ser.doSerialize(this,v);
			break;
		case 7:
			var k = t.k;
			var t1 = t.v;
			switch(k._hx_index) {
			case 0:
				var v1 = v;
				if(v1 == null) {
					this.out.addByte(0);
				} else {
					var _g = [];
					var k1 = v1.keys();
					while(k1.hasNext()) {
						var k2 = k1.next();
						_g.push(k2);
					}
					var keys = _g;
					var v2 = keys.length + 1;
					if(v2 >= 0 && v2 < 128) {
						this.out.addByte(v2);
					} else {
						this.out.addByte(128);
						this.out.addInt32(v2);
					}
					var _g = 0;
					while(_g < keys.length) {
						var k1 = keys[_g];
						++_g;
						_gthis.writeValue(k1,k);
						_gthis.writeValue(v1.h[k1],t1);
					}
				}
				break;
			case 3:
				var v1 = v;
				if(v1 == null) {
					this.out.addByte(0);
				} else {
					var _g = [];
					var h = v1.h;
					var k_h = h;
					var k_keys = Object.keys(h);
					var k_length = k_keys.length;
					var k_current = 0;
					while(k_current < k_length) {
						var k1 = k_keys[k_current++];
						_g.push(k1);
					}
					var keys = _g;
					var v2 = keys.length + 1;
					if(v2 >= 0 && v2 < 128) {
						this.out.addByte(v2);
					} else {
						this.out.addByte(128);
						this.out.addInt32(v2);
					}
					var _g = 0;
					while(_g < keys.length) {
						var k1 = keys[_g];
						++_g;
						_gthis.writeValue(k1,k);
						_gthis.writeValue(v1.h[k1],t1);
					}
				}
				break;
			case 6:
				var _g = k.name;
				var v1 = v;
				if(v1 == null) {
					this.out.addByte(0);
					return;
				}
				var _g = [];
				var k1 = v1.keys();
				while(k1.hasNext()) {
					var k2 = k1.next();
					_g.push(k2);
				}
				var keys = _g;
				var v2 = keys.length + 1;
				if(v2 >= 0 && v2 < 128) {
					this.out.addByte(v2);
				} else {
					this.out.addByte(128);
					this.out.addInt32(v2);
				}
				var _g = 0;
				while(_g < keys.length) {
					var vk = keys[_g];
					++_g;
					this.writeValue(vk,k);
					this.writeValue(v1.get(vk),t1);
				}
				break;
			default:
				var v1 = v;
				if(v1 == null) {
					this.out.addByte(0);
				} else {
					var _g = [];
					var k1 = v1.keys();
					while(k1.hasNext()) {
						var k2 = k1.next();
						_g.push(k2);
					}
					var keys = _g;
					var v2 = keys.length + 1;
					if(v2 >= 0 && v2 < 128) {
						this.out.addByte(v2);
					} else {
						this.out.addByte(128);
						this.out.addInt32(v2);
					}
					var _g = 0;
					while(_g < keys.length) {
						var k1 = keys[_g];
						++_g;
						_gthis.writeValue(k1,k);
						_gthis.writeValue(v1.h[k1.__id__],t1);
					}
				}
			}
			break;
		case 8:
			var t1 = t.k;
			var a = v;
			if(a == null) {
				this.out.addByte(0);
			} else {
				var v1 = a.length + 1;
				if(v1 >= 0 && v1 < 128) {
					this.out.addByte(v1);
				} else {
					this.out.addByte(128);
					this.out.addInt32(v1);
				}
				var _g = 0;
				while(_g < a.length) {
					var v1 = a[_g];
					++_g;
					_gthis.writeValue(v1,t1);
				}
			}
			break;
		case 9:
			var fields = t.fields;
			if(v == null) {
				this.out.addByte(0);
			} else {
				var fbits = 0;
				var _g = [];
				var _g1 = 0;
				while(_g1 < fields.length) {
					var f = fields[_g1];
					++_g1;
					if(this.isNullable(f.type)) {
						_g.push(f);
					}
				}
				var nullables = _g;
				var _g = 0;
				var _g1 = nullables.length;
				while(_g < _g1) {
					var i = _g++;
					if(Reflect.field(v,nullables[i].name) != null) {
						fbits |= 1 << i;
					}
				}
				var v1 = fbits + 1;
				if(v1 >= 0 && v1 < 128) {
					this.out.addByte(v1);
				} else {
					this.out.addByte(128);
					this.out.addInt32(v1);
				}
				var _g = 0;
				while(_g < fields.length) {
					var f = fields[_g];
					++_g;
					var nidx = nullables.indexOf(f);
					if(nidx >= 0 && (fbits & 1 << nidx) == 0) {
						continue;
					}
					this.writeValue(Reflect.field(v,f.name),f.type);
				}
			}
			break;
		case 10:
			var t1 = t.k;
			this.writeValue(v,t1);
			break;
		case 11:
			var t1 = t.k;
			var a = v;
			if(a == null) {
				this.out.addByte(0);
			} else {
				var v1 = a.length + 1;
				if(v1 >= 0 && v1 < 128) {
					this.out.addByte(v1);
				} else {
					this.out.addByte(128);
					this.out.addInt32(v1);
				}
				var _g = 0;
				while(_g < a.length) {
					var v1 = a[_g];
					++_g;
					_gthis.writeValue(v1,t1);
				}
			}
			break;
		case 12:
			var t1 = t.t;
			if(v == null) {
				this.out.addByte(0);
			} else {
				this.out.addByte(1);
				this.writeValue(v,t1);
			}
			break;
		case 13:
			throw haxe_Exception.thrown("assert");
		case 14:
			this.addDynamic(v);
			break;
		case 15:
			this.out.addInt64(v);
			break;
		case 16:
			var _g = t.t;
			var v1 = v;
			if(v1 >= 0 && v1 < 128) {
				this.out.addByte(v1);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v1);
			}
			break;
		case 17:
			this.addStruct(v);
			break;
		}
	}
	,__class__: hxbit_Serializer
	,__properties__: {set_remapIds:"set_remapIds",get_remapIds:"get_remapIds"}
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
	this.__skipStack = 0;
	var old = Error.prepareStackTrace;
	Error.prepareStackTrace = function(e) { return e.stack; }
	if(((native) instanceof Error)) {
		this.stack = native.stack;
	} else {
		var e = null;
		if(Error.captureStackTrace) {
			Error.captureStackTrace(this,haxe_Exception);
			e = this;
		} else {
			e = new Error();
			if(typeof(e.stack) == "undefined") {
				try { throw e; } catch(_) {}
				this.__skipStack++;
			}
		}
		this.stack = e.stack;
	}
	Error.prepareStackTrace = old;
};
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		e.__skipStack++;
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	__skipStack: null
	,__nativeException: null
	,__previousException: null
	,unwrap: function() {
		return this.__nativeException;
	}
	,toString: function() {
		return this.get_message();
	}
	,details: function() {
		if(this.get_previous() == null) {
			var tmp = "Exception: " + this.toString();
			var tmp1 = this.get_stack();
			return tmp + (tmp1 == null ? "null" : haxe_CallStack.toString(tmp1));
		} else {
			var result = "";
			var e = this;
			var prev = null;
			while(e != null) {
				if(prev == null) {
					var result1 = "Exception: " + e.get_message();
					var tmp = e.get_stack();
					result = result1 + (tmp == null ? "null" : haxe_CallStack.toString(tmp)) + result;
				} else {
					var prevStack = haxe_CallStack.subtract(e.get_stack(),prev.get_stack());
					result = "Exception: " + e.get_message() + (prevStack == null ? "null" : haxe_CallStack.toString(prevStack)) + "\n\nNext " + result;
				}
				prev = e;
				e = e.get_previous();
			}
			return result;
		}
	}
	,__shiftStack: function() {
		this.__skipStack++;
	}
	,get_message: function() {
		return this.message;
	}
	,get_previous: function() {
		return this.__previousException;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,get_stack: function() {
		var _g = this.__exceptionStack;
		if(_g == null) {
			var value = haxe_NativeStackTrace.toHaxe(haxe_NativeStackTrace.normalize(this.stack),this.__skipStack);
			this.setProperty("__exceptionStack",value);
			return value;
		} else {
			var s = _g;
			return s;
		}
	}
	,setProperty: function(name,value) {
		try {
			Object.defineProperty(this,name,{ value : value});
		} catch( _g ) {
			this[name] = value;
		}
	}
	,__class__: haxe_Exception
	,__properties__: {get_native:"get_native",get_previous:"get_previous",get_stack:"get_stack",get_message:"get_message"}
});
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
	this.__skipStack++;
};
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	value: null
	,unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var db_DbQuery = function(dp) {
	this.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	this.dbParams = new haxe_ds_StringMap();
	if(dp != null) {
		this.dbUser = dp.dbUser;
		this.relations = dp.relations;
		var _g = 0;
		var _g1 = Reflect.fields(dp);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			switch(f) {
			case "__uid":case "dbUser":case "getCLID":case "getSerializeSchema":case "relations":case "serialize":case "unserialize":case "unserializeInit":
				break;
			default:
				var v = Reflect.field(dp,f);
				this.dbParams.h[f] = v;
				haxe_Log.trace(f + ":" + Std.string(this.dbParams.h[f]),{ fileName : "../lib/db/DbQuery.hx", lineNumber : 37, className : "db.DbQuery", methodName : "new"});
			}
		}
	}
};
$hxClasses["db.DbQuery"] = db_DbQuery;
db_DbQuery.__name__ = "db.DbQuery";
db_DbQuery.__interfaces__ = [hxbit_Serializable];
db_DbQuery.prototype = {
	dbUser: null
	,relations: null
	,dbParams: null
	,__uid: null
	,getCLID: function() {
		return db_DbQuery.__clid;
	}
	,serialize: function(__ctx) {
		__ctx.addKnownRef(this.dbUser);
		var a = this.relations;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var _g = [];
			var h = a.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				_g.push(k);
			}
			var keys = _g;
			var v = keys.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < keys.length) {
				var k = keys[_g];
				++_g;
				if(k == null) {
					__ctx.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(k);
					var v = b.length + 1;
					if(v >= 0 && v < 128) {
						__ctx.out.addByte(v);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v);
					}
					__ctx.out.add(b);
				}
				__ctx.addKnownRef(a.h[k]);
			}
		}
		var a = this.dbParams;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var _g = [];
			var h = a.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				_g.push(k);
			}
			var keys = _g;
			var v = keys.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < keys.length) {
				var k = keys[_g];
				++_g;
				if(k == null) {
					__ctx.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(k);
					var v = b.length + 1;
					if(v >= 0 && v < 128) {
						__ctx.out.addByte(v);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v);
					}
					__ctx.out.add(b);
				}
				__ctx.addDynamic(a.h[k]);
			}
		}
	}
	,getSerializeSchema: function() {
		var schema = new hxbit_Schema();
		schema.fieldsNames.push("dbUser");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PSerializable("db.DbUser"));
		schema.fieldsNames.push("relations");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PSerializable("db.DbRelation")));
		schema.fieldsNames.push("dbParams");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PDynamic));
		schema.isFinal = hxbit_Serializer.isClassFinal(db_DbQuery.__clid);
		return schema;
	}
	,unserializeInit: function() {
	}
	,unserialize: function(__ctx) {
		this.dbUser = __ctx.getRef(db_DbUser,db_DbUser.__clid);
		var k0;
		var v0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			var m = new haxe_ds_StringMap();
			while(--len > 0) {
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len1 = v;
				if(len1 == 0) {
					k0 = null;
				} else {
					--len1;
					var s = __ctx.input.getString(__ctx.inPos,len1);
					__ctx.inPos += len1;
					k0 = s;
				}
				var k = k0;
				v0 = __ctx.getRef(db_DbRelation,db_DbRelation.__clid);
				var v1 = v0;
				m.h[k] = v1;
			}
			tmp = m;
		}
		this.relations = tmp;
		var k0;
		var v0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			var m = new haxe_ds_StringMap();
			while(--len > 0) {
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len1 = v;
				if(len1 == 0) {
					k0 = null;
				} else {
					--len1;
					var s = __ctx.input.getString(__ctx.inPos,len1);
					__ctx.inPos += len1;
					k0 = s;
				}
				var k = k0;
				v0 = __ctx.getDynamic();
				var v1 = v0;
				m.h[k] = v1;
			}
			tmp = m;
		}
		this.dbParams = tmp;
	}
	,__class__: db_DbQuery
};
var db_DbRelation = function(p) {
	this.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	var _g = 0;
	var _g1 = Type.getInstanceFields(db_DbRelation);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		switch(f) {
		case "__uid":case "getCLID":case "getSerializeSchema":case "serialize":case "unserialize":
			break;
		default:
			if(Object.prototype.hasOwnProperty.call(p,f)) {
				this[f] = Reflect.field(p,f);
			}
		}
	}
};
$hxClasses["db.DbRelation"] = db_DbRelation;
db_DbRelation.__name__ = "db.DbRelation";
db_DbRelation.__interfaces__ = [hxbit_Serializable];
db_DbRelation.prototype = {
	alias: null
	,fields: null
	,filter: null
	,jCond: null
	,__uid: null
	,getCLID: function() {
		return db_DbRelation.__clid;
	}
	,serialize: function(__ctx) {
		var s = this.alias;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var a = this.fields;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var v = a.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < a.length) {
				var v = a[_g];
				++_g;
				if(v == null) {
					__ctx.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(v);
					var v1 = b.length + 1;
					if(v1 >= 0 && v1 < 128) {
						__ctx.out.addByte(v1);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v1);
					}
					__ctx.out.add(b);
				}
			}
		}
		var a = this.filter;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var v = a.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < a.length) {
				var v = a[_g];
				++_g;
				if(v == null) {
					__ctx.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(v);
					var v1 = b.length + 1;
					if(v1 >= 0 && v1 < 128) {
						__ctx.out.addByte(v1);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v1);
					}
					__ctx.out.add(b);
				}
			}
		}
		var s = this.jCond;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
	}
	,getSerializeSchema: function() {
		var schema = new hxbit_Schema();
		schema.fieldsNames.push("alias");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("fields");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PString));
		schema.fieldsNames.push("filter");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PString));
		schema.fieldsNames.push("jCond");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.isFinal = hxbit_Serializer.isClassFinal(db_DbRelation.__clid);
		return schema;
	}
	,unserializeInit: function() {
	}
	,unserialize: function(__ctx) {
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.alias = tmp;
		var e0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var a = [];
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len = v;
				if(len == 0) {
					e0 = null;
				} else {
					--len;
					var s = __ctx.input.getString(__ctx.inPos,len);
					__ctx.inPos += len;
					e0 = s;
				}
				a[i] = e0;
			}
			tmp = a;
		}
		this.fields = tmp;
		var e0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var a = [];
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len = v;
				if(len == 0) {
					e0 = null;
				} else {
					--len;
					var s = __ctx.input.getString(__ctx.inPos,len);
					__ctx.inPos += len;
					e0 = s;
				}
				a[i] = e0;
			}
			tmp = a;
		}
		this.filter = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.jCond = tmp;
	}
	,__class__: db_DbRelation
};
var db_DbUser = function(p) {
	this.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	var _g = 0;
	var _g1 = Type.getInstanceFields(js_Boot.getClass(this));
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		switch(f) {
		case "__uid":case "getCLID":case "getSerializeSchema":case "serialize":case "unserialize":case "unserializeInit":
			break;
		default:
			this[f] = Reflect.field(p,f);
		}
	}
};
$hxClasses["db.DbUser"] = db_DbUser;
db_DbUser.__name__ = "db.DbUser";
db_DbUser.__interfaces__ = [hxbit_Serializable];
db_DbUser.prototype = {
	active: null
	,change_pass_required: null
	,contact: null
	,edited_by: null
	,actions: null
	,email: null
	,external: null
	,first_name: null
	,id: null
	,jwt: null
	,last_locktime: null
	,last_login: null
	,last_name: null
	,last_request_time: null
	,mandator: null
	,online: null
	,password: null
	,last_error: null
	,settings: null
	,new_pass: null
	,user_group: null
	,user_name: null
	,__uid: null
	,getCLID: function() {
		return db_DbUser.__clid;
	}
	,serialize: function(__ctx) {
		__ctx.out.addByte(this.active ? 1 : 0);
		__ctx.out.addByte(this.change_pass_required ? 1 : 0);
		var v = this.contact;
		if(v >= 0 && v < 128) {
			__ctx.out.addByte(v);
		} else {
			__ctx.out.addByte(128);
			__ctx.out.addInt32(v);
		}
		var v = this.edited_by;
		if(v >= 0 && v < 128) {
			__ctx.out.addByte(v);
		} else {
			__ctx.out.addByte(128);
			__ctx.out.addInt32(v);
		}
		var s = this.actions;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var s = this.email;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var s = this.external;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var s = this.first_name;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var v = this.id;
		if(v >= 0 && v < 128) {
			__ctx.out.addByte(v);
		} else {
			__ctx.out.addByte(128);
			__ctx.out.addInt32(v);
		}
		var s = this.jwt;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var s = this.last_locktime;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var s = this.last_login;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var s = this.last_name;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var s = this.last_request_time;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var v = this.mandator;
		if(v >= 0 && v < 128) {
			__ctx.out.addByte(v);
		} else {
			__ctx.out.addByte(128);
			__ctx.out.addInt32(v);
		}
		__ctx.out.addByte(this.online ? 1 : 0);
		var s = this.password;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var s = this.last_error;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var s = this.settings;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var s = this.new_pass;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var v = this.user_group;
		if(v >= 0 && v < 128) {
			__ctx.out.addByte(v);
		} else {
			__ctx.out.addByte(128);
			__ctx.out.addInt32(v);
		}
		var s = this.user_name;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
	}
	,getSerializeSchema: function() {
		var schema = new hxbit_Schema();
		schema.fieldsNames.push("active");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PBool);
		schema.fieldsNames.push("change_pass_required");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PBool);
		schema.fieldsNames.push("contact");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PInt);
		schema.fieldsNames.push("edited_by");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PInt);
		schema.fieldsNames.push("actions");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("email");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("external");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("first_name");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("id");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PInt);
		schema.fieldsNames.push("jwt");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("last_locktime");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("last_login");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("last_name");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("last_request_time");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("mandator");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PInt);
		schema.fieldsNames.push("online");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PBool);
		schema.fieldsNames.push("password");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("last_error");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("settings");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("new_pass");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("user_group");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PInt);
		schema.fieldsNames.push("user_name");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.isFinal = hxbit_Serializer.isClassFinal(db_DbUser.__clid);
		return schema;
	}
	,unserializeInit: function() {
	}
	,unserialize: function(__ctx) {
		this.active = __ctx.input.b[__ctx.inPos++] != 0;
		this.change_pass_required = __ctx.input.b[__ctx.inPos++] != 0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		this.contact = v;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		this.edited_by = v;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.actions = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.email = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.external = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.first_name = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		this.id = v;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.jwt = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.last_locktime = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.last_login = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.last_name = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.last_request_time = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		this.mandator = v;
		this.online = __ctx.input.b[__ctx.inPos++] != 0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.password = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.last_error = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.settings = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.new_pass = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		this.user_group = v;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.user_name = tmp;
	}
	,__class__: db_DbUser
};
var haxe_StackItem = $hxEnums["haxe.StackItem"] = { __ename__:"haxe.StackItem",__constructs__:null
	,CFunction: {_hx_name:"CFunction",_hx_index:0,__enum__:"haxe.StackItem",toString:$estr}
	,Module: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="Module",$_.__params__ = ["m"],$_)
	,FilePos: ($_=function(s,file,line,column) { return {_hx_index:2,s:s,file:file,line:line,column:column,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="FilePos",$_.__params__ = ["s","file","line","column"],$_)
	,Method: ($_=function(classname,method) { return {_hx_index:3,classname:classname,method:method,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="Method",$_.__params__ = ["classname","method"],$_)
	,LocalFunction: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="LocalFunction",$_.__params__ = ["v"],$_)
};
haxe_StackItem.__constructs__ = [haxe_StackItem.CFunction,haxe_StackItem.Module,haxe_StackItem.FilePos,haxe_StackItem.Method,haxe_StackItem.LocalFunction];
var haxe_CallStack = {};
haxe_CallStack.callStack = function() {
	return haxe_NativeStackTrace.toHaxe(haxe_NativeStackTrace.callStack());
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	var _g1 = stack;
	while(_g < _g1.length) {
		var s = _g1[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.subtract = function(this1,stack) {
	var startIndex = -1;
	var i = -1;
	while(++i < this1.length) {
		var _g = 0;
		var _g1 = stack.length;
		while(_g < _g1) {
			var j = _g++;
			if(haxe_CallStack.equalItems(this1[i],stack[j])) {
				if(startIndex < 0) {
					startIndex = i;
				}
				++i;
				if(i >= this1.length) {
					break;
				}
			} else {
				startIndex = -1;
			}
		}
		if(startIndex >= 0) {
			break;
		}
	}
	if(startIndex >= 0) {
		return this1.slice(0,startIndex);
	} else {
		return this1;
	}
};
haxe_CallStack.equalItems = function(item1,item2) {
	if(item1 == null) {
		if(item2 == null) {
			return true;
		} else {
			return false;
		}
	} else {
		switch(item1._hx_index) {
		case 0:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 0) {
				return true;
			} else {
				return false;
			}
			break;
		case 1:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 1) {
				var m2 = item2.m;
				var m1 = item1.m;
				return m1 == m2;
			} else {
				return false;
			}
			break;
		case 2:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 2) {
				var item21 = item2.s;
				var file2 = item2.file;
				var line2 = item2.line;
				var col2 = item2.column;
				var col1 = item1.column;
				var line1 = item1.line;
				var file1 = item1.file;
				var item11 = item1.s;
				if(file1 == file2 && line1 == line2 && col1 == col2) {
					return haxe_CallStack.equalItems(item11,item21);
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 3:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 3) {
				var class2 = item2.classname;
				var method2 = item2.method;
				var method1 = item1.method;
				var class1 = item1.classname;
				if(class1 == class2) {
					return method1 == method2;
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 4:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 4) {
				var v2 = item2.v;
				var v1 = item1.v;
				return v1 == v2;
			} else {
				return false;
			}
			break;
		}
	}
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s._hx_index) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s.m;
		b.b += "module ";
		b.b += m == null ? "null" : "" + m;
		break;
	case 2:
		var s1 = s.s;
		var file = s.file;
		var line = s.line;
		var col = s.column;
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null ? "null" : "" + file;
		b.b += " line ";
		b.b += line == null ? "null" : "" + line;
		if(col != null) {
			b.b += " column ";
			b.b += col == null ? "null" : "" + col;
		}
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var cname = s.classname;
		var meth = s.method;
		b.b += Std.string(cname == null ? "<unknown>" : cname);
		b.b += ".";
		b.b += meth == null ? "null" : "" + meth;
		break;
	case 4:
		var n = s.v;
		b.b += "local function #";
		b.b += n == null ? "null" : "" + n;
		break;
	}
};
var haxe_Int32 = {};
haxe_Int32.ucompare = function(a,b) {
	if(a < 0) {
		if(b < 0) {
			return ~b - ~a | 0;
		} else {
			return 1;
		}
	}
	if(b < 0) {
		return -1;
	} else {
		return a - b | 0;
	}
};
var haxe_Int64 = {};
haxe_Int64.divMod = function(dividend,divisor) {
	if(divisor.high == 0) {
		switch(divisor.low) {
		case 0:
			throw haxe_Exception.thrown("divide by zero");
		case 1:
			var this1 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
			var this2 = new haxe__$Int64__$_$_$Int64(0,0);
			return { quotient : this1, modulus : this2};
		}
	}
	var divSign = dividend.high < 0 != divisor.high < 0;
	var modulus;
	if(dividend.high < 0) {
		var high = ~dividend.high;
		var low = ~dividend.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		modulus = this1;
	} else {
		var this1 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
		modulus = this1;
	}
	if(divisor.high < 0) {
		var high = ~divisor.high;
		var low = ~divisor.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		divisor = this1;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var quotient = this1;
	var this1 = new haxe__$Int64__$_$_$Int64(0,1);
	var mask = this1;
	while(!(divisor.high < 0)) {
		var v = haxe_Int32.ucompare(divisor.high,modulus.high);
		var cmp = v != 0 ? v : haxe_Int32.ucompare(divisor.low,modulus.low);
		var b = 1;
		b &= 63;
		if(b == 0) {
			var this1 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this1;
		} else if(b < 32) {
			var this2 = new haxe__$Int64__$_$_$Int64(divisor.high << b | divisor.low >>> 32 - b,divisor.low << b);
			divisor = this2;
		} else {
			var this3 = new haxe__$Int64__$_$_$Int64(divisor.low << b - 32,0);
			divisor = this3;
		}
		var b1 = 1;
		b1 &= 63;
		if(b1 == 0) {
			var this4 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this4;
		} else if(b1 < 32) {
			var this5 = new haxe__$Int64__$_$_$Int64(mask.high << b1 | mask.low >>> 32 - b1,mask.low << b1);
			mask = this5;
		} else {
			var this6 = new haxe__$Int64__$_$_$Int64(mask.low << b1 - 32,0);
			mask = this6;
		}
		if(cmp >= 0) {
			break;
		}
	}
	while(true) {
		var b_high = 0;
		var b_low = 0;
		if(!(mask.high != b_high || mask.low != b_low)) {
			break;
		}
		var v = haxe_Int32.ucompare(modulus.high,divisor.high);
		if((v != 0 ? v : haxe_Int32.ucompare(modulus.low,divisor.low)) >= 0) {
			var this1 = new haxe__$Int64__$_$_$Int64(quotient.high | mask.high,quotient.low | mask.low);
			quotient = this1;
			var high = modulus.high - divisor.high | 0;
			var low = modulus.low - divisor.low | 0;
			if(haxe_Int32.ucompare(modulus.low,divisor.low) < 0) {
				var ret = high--;
				high = high | 0;
			}
			var this2 = new haxe__$Int64__$_$_$Int64(high,low);
			modulus = this2;
		}
		var b = 1;
		b &= 63;
		if(b == 0) {
			var this3 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this3;
		} else if(b < 32) {
			var this4 = new haxe__$Int64__$_$_$Int64(mask.high >>> b,mask.high << 32 - b | mask.low >>> b);
			mask = this4;
		} else {
			var this5 = new haxe__$Int64__$_$_$Int64(0,mask.high >>> b - 32);
			mask = this5;
		}
		var b1 = 1;
		b1 &= 63;
		if(b1 == 0) {
			var this6 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this6;
		} else if(b1 < 32) {
			var this7 = new haxe__$Int64__$_$_$Int64(divisor.high >>> b1,divisor.high << 32 - b1 | divisor.low >>> b1);
			divisor = this7;
		} else {
			var this8 = new haxe__$Int64__$_$_$Int64(0,divisor.high >>> b1 - 32);
			divisor = this8;
		}
	}
	if(divSign) {
		var high = ~quotient.high;
		var low = ~quotient.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		quotient = this1;
	}
	if(dividend.high < 0) {
		var high = ~modulus.high;
		var low = ~modulus.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		modulus = this1;
	}
	return { quotient : quotient, modulus : modulus};
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = "haxe._Int64.___Int64";
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Int64Helper = function() { };
$hxClasses["haxe.Int64Helper"] = haxe_Int64Helper;
haxe_Int64Helper.__name__ = "haxe.Int64Helper";
haxe_Int64Helper.fromFloat = function(f) {
	if(isNaN(f) || !isFinite(f)) {
		throw haxe_Exception.thrown("Number is NaN or Infinite");
	}
	var noFractions = f - f % 1;
	if(noFractions > 9007199254740991) {
		throw haxe_Exception.thrown("Conversion overflow");
	}
	if(noFractions < -9007199254740991) {
		throw haxe_Exception.thrown("Conversion underflow");
	}
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var result = this1;
	var neg = noFractions < 0;
	var rest = neg ? -noFractions : noFractions;
	var i = 0;
	while(rest >= 1) {
		var curr = rest % 2;
		rest /= 2;
		if(curr >= 1) {
			var a_high = 0;
			var a_low = 1;
			var b = i;
			b &= 63;
			var b1;
			if(b == 0) {
				var this1 = new haxe__$Int64__$_$_$Int64(a_high,a_low);
				b1 = this1;
			} else if(b < 32) {
				var this2 = new haxe__$Int64__$_$_$Int64(a_high << b | a_low >>> 32 - b,a_low << b);
				b1 = this2;
			} else {
				var this3 = new haxe__$Int64__$_$_$Int64(a_low << b - 32,0);
				b1 = this3;
			}
			var high = result.high + b1.high | 0;
			var low = result.low + b1.low | 0;
			if(haxe_Int32.ucompare(low,result.low) < 0) {
				var ret = high++;
				high = high | 0;
			}
			var this4 = new haxe__$Int64__$_$_$Int64(high,low);
			result = this4;
		}
		++i;
	}
	if(neg) {
		var high = ~result.high;
		var low = ~result.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		result = this1;
	}
	return result;
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_NativeStackTrace = function() { };
$hxClasses["haxe.NativeStackTrace"] = haxe_NativeStackTrace;
haxe_NativeStackTrace.__name__ = "haxe.NativeStackTrace";
haxe_NativeStackTrace.callStack = function() {
	var e = new Error("");
	var stack = haxe_NativeStackTrace.tryHaxeStack(e);
	if(typeof(stack) == "undefined") {
		try {
			throw e;
		} catch( _g ) {
		}
		stack = e.stack;
	}
	return haxe_NativeStackTrace.normalize(stack,2);
};
haxe_NativeStackTrace.toHaxe = function(s,skip) {
	if(skip == null) {
		skip = 0;
	}
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var _g = 0;
		var _g1 = stack.length;
		while(_g < _g1) {
			var i = _g++;
			if(skip > i) {
				continue;
			}
			var line = stack[i];
			var matched = line.match(/^    at ([A-Za-z0-9_. ]+) \(([^)]+):([0-9]+):([0-9]+)\)$/);
			if(matched != null) {
				var path = matched[1].split(".");
				if(path[0] == "$hxClasses") {
					path.shift();
				}
				var meth = path.pop();
				var file = matched[2];
				var line1 = Std.parseInt(matched[3]);
				var column = Std.parseInt(matched[4]);
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1,column));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else if(skip > 0 && Array.isArray(s)) {
		return s.slice(skip);
	} else {
		return s;
	}
};
haxe_NativeStackTrace.tryHaxeStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = haxe_NativeStackTrace.prepareHxStackTrace;
	var stack = e.stack;
	Error.prepareStackTrace = oldValue;
	return stack;
};
haxe_NativeStackTrace.prepareHxStackTrace = function(e,callsites) {
	var stack = [];
	var _g = 0;
	while(_g < callsites.length) {
		var site = callsites[_g];
		++_g;
		if(haxe_NativeStackTrace.wrapCallSite != null) {
			site = haxe_NativeStackTrace.wrapCallSite(site);
		}
		var method = null;
		var fullName = site.getFunctionName();
		if(fullName != null) {
			var idx = fullName.lastIndexOf(".");
			if(idx >= 0) {
				var className = fullName.substring(0,idx);
				var methodName = fullName.substring(idx + 1);
				method = haxe_StackItem.Method(className,methodName);
			} else {
				method = haxe_StackItem.Method(null,fullName);
			}
		}
		var fileName = site.getFileName();
		var fileAddr = fileName == null ? -1 : fileName.indexOf("file:");
		if(haxe_NativeStackTrace.wrapCallSite != null && fileAddr > 0) {
			fileName = fileName.substring(fileAddr + 6);
		}
		stack.push(haxe_StackItem.FilePos(method,fileName,site.getLineNumber(),site.getColumnNumber()));
	}
	return stack;
};
haxe_NativeStackTrace.normalize = function(stack,skipItems) {
	if(skipItems == null) {
		skipItems = 0;
	}
	if(Array.isArray(stack) && skipItems > 0) {
		return stack.slice(skipItems);
	} else if(typeof(stack) == "string") {
		switch(stack.substring(0,6)) {
		case "Error\n":case "Error:":
			++skipItems;
			break;
		default:
		}
		return haxe_NativeStackTrace.skipLines(stack,skipItems);
	} else {
		return stack;
	}
};
haxe_NativeStackTrace.skipLines = function(stack,skip,pos) {
	if(pos == null) {
		pos = 0;
	}
	if(skip > 0) {
		pos = stack.indexOf("\n",pos);
		if(pos < 0) {
			return "";
		} else {
			return haxe_NativeStackTrace.skipLines(stack,--skip,pos + 1);
		}
	} else {
		return stack.substring(pos);
	}
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = "haxe.Serializer";
haxe_Serializer.run = function(v) {
	var s = new haxe_Serializer();
	s.serialize(v);
	return s.toString();
};
haxe_Serializer.prototype = {
	buf: null
	,cache: null
	,shash: null
	,scount: null
	,useCache: null
	,useEnumIndex: null
	,toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var x = this.shash.h[s];
		if(x != null) {
			this.buf.b += "R";
			this.buf.b += x == null ? "null" : "" + x;
			return;
		}
		this.shash.h[s] = this.scount++;
		this.buf.b += "y";
		s = encodeURIComponent(s);
		this.buf.b += Std.string(s.length);
		this.buf.b += ":";
		this.buf.b += s == null ? "null" : "" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g = 0;
		var _g1 = this.cache.length;
		while(_g < _g1) {
			var i = _g++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				this.buf.b += i == null ? "null" : "" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		var _g = Type.typeof(v);
		switch(_g._hx_index) {
		case 0:
			this.buf.b += "n";
			break;
		case 1:
			var v1 = v;
			if(v1 == 0) {
				this.buf.b += "z";
				return;
			}
			this.buf.b += "i";
			this.buf.b += v1 == null ? "null" : "" + v1;
			break;
		case 2:
			var v1 = v;
			if(isNaN(v1)) {
				this.buf.b += "k";
			} else if(!isFinite(v1)) {
				this.buf.b += v1 < 0 ? "m" : "p";
			} else {
				this.buf.b += "d";
				this.buf.b += v1 == null ? "null" : "" + v1;
			}
			break;
		case 3:
			this.buf.b += v ? "t" : "f";
			break;
		case 4:
			if(js_Boot.__instanceof(v,Class)) {
				var className = v.__name__;
				this.buf.b += "A";
				this.serializeString(className);
			} else if(js_Boot.__instanceof(v,Enum)) {
				this.buf.b += "B";
				this.serializeString(v.__ename__);
			} else {
				if(this.useCache && this.serializeRef(v)) {
					return;
				}
				this.buf.b += "o";
				this.serializeFields(v);
			}
			break;
		case 5:
			throw haxe_Exception.thrown("Cannot serialize function");
		case 6:
			var c = _g.c;
			if(c == String) {
				this.serializeString(v);
				return;
			}
			if(this.useCache && this.serializeRef(v)) {
				return;
			}
			switch(c) {
			case Array:
				var ucount = 0;
				this.buf.b += "a";
				var l = v["length"];
				var _g1 = 0;
				var _g2 = l;
				while(_g1 < _g2) {
					var i = _g1++;
					if(v[i] == null) {
						++ucount;
					} else {
						if(ucount > 0) {
							if(ucount == 1) {
								this.buf.b += "n";
							} else {
								this.buf.b += "u";
								this.buf.b += ucount == null ? "null" : "" + ucount;
							}
							ucount = 0;
						}
						this.serialize(v[i]);
					}
				}
				if(ucount > 0) {
					if(ucount == 1) {
						this.buf.b += "n";
					} else {
						this.buf.b += "u";
						this.buf.b += ucount == null ? "null" : "" + ucount;
					}
				}
				this.buf.b += "h";
				break;
			case Date:
				var d = v;
				this.buf.b += "v";
				this.buf.b += Std.string(d.getTime());
				break;
			case haxe_ds_IntMap:
				this.buf.b += "q";
				var v1 = v;
				var k = v1.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					this.buf.b += ":";
					this.buf.b += k1 == null ? "null" : "" + k1;
					this.serialize(v1.h[k1]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_List:
				this.buf.b += "l";
				var v1 = v;
				var _g_head = v1.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					var i = val;
					this.serialize(i);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_ObjectMap:
				this.buf.b += "M";
				var v1 = v;
				var k = v1.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					var id = Reflect.field(k1,"__id__");
					Reflect.deleteField(k1,"__id__");
					this.serialize(k1);
					k1["__id__"] = id;
					this.serialize(v1.h[k1.__id__]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_StringMap:
				this.buf.b += "b";
				var v1 = v;
				var h = v1.h;
				var _g_h = h;
				var _g_keys = Object.keys(h);
				var _g_length = _g_keys.length;
				var _g_current = 0;
				while(_g_current < _g_length) {
					var k = _g_keys[_g_current++];
					this.serializeString(k);
					this.serialize(v1.h[k]);
				}
				this.buf.b += "h";
				break;
			case haxe_io_Bytes:
				var v1 = v;
				this.buf.b += "s";
				this.buf.b += Std.string(Math.ceil(v1.length * 8 / 6));
				this.buf.b += ":";
				var i = 0;
				var max = v1.length - 2;
				var b64 = haxe_Serializer.BASE64_CODES;
				if(b64 == null) {
					var this1 = new Array(haxe_Serializer.BASE64.length);
					b64 = this1;
					var _g1 = 0;
					var _g2 = haxe_Serializer.BASE64.length;
					while(_g1 < _g2) {
						var i1 = _g1++;
						b64[i1] = HxOverrides.cca(haxe_Serializer.BASE64,i1);
					}
					haxe_Serializer.BASE64_CODES = b64;
				}
				while(i < max) {
					var b1 = v1.b[i++];
					var b2 = v1.b[i++];
					var b3 = v1.b[i++];
					this.buf.b += String.fromCodePoint(b64[b1 >> 2]);
					this.buf.b += String.fromCodePoint(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCodePoint(b64[(b2 << 2 | b3 >> 6) & 63]);
					this.buf.b += String.fromCodePoint(b64[b3 & 63]);
				}
				if(i == max) {
					var b1 = v1.b[i++];
					var b2 = v1.b[i++];
					this.buf.b += String.fromCodePoint(b64[b1 >> 2]);
					this.buf.b += String.fromCodePoint(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCodePoint(b64[b2 << 2 & 63]);
				} else if(i == max + 1) {
					var b1 = v1.b[i++];
					this.buf.b += String.fromCodePoint(b64[b1 >> 2]);
					this.buf.b += String.fromCodePoint(b64[b1 << 4 & 63]);
				}
				break;
			default:
				if(this.useCache) {
					this.cache.pop();
				}
				if(v.hxSerialize != null) {
					this.buf.b += "C";
					this.serializeString(c.__name__);
					if(this.useCache) {
						this.cache.push(v);
					}
					v.hxSerialize(this);
					this.buf.b += "g";
				} else {
					this.buf.b += "c";
					this.serializeString(c.__name__);
					if(this.useCache) {
						this.cache.push(v);
					}
					this.serializeFields(v);
				}
			}
			break;
		case 7:
			var e = _g.e;
			if(this.useCache) {
				if(this.serializeRef(v)) {
					return;
				}
				this.cache.pop();
			}
			this.buf.b += Std.string(this.useEnumIndex ? "j" : "w");
			this.serializeString(e.__ename__);
			if(this.useEnumIndex) {
				this.buf.b += ":";
				this.buf.b += Std.string(v._hx_index);
			} else {
				var e = v;
				this.serializeString($hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name);
			}
			this.buf.b += ":";
			var params = Type.enumParameters(v);
			this.buf.b += Std.string(params.length);
			var _g = 0;
			while(_g < params.length) {
				var p = params[_g];
				++_g;
				this.serialize(p);
			}
			if(this.useCache) {
				this.cache.push(v);
			}
			break;
		default:
			throw haxe_Exception.thrown("Cannot serialize " + Std.string(v));
		}
	}
	,__class__: haxe_Serializer
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	id: null
	,stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = "haxe._Unserializer.DefaultResolver";
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return $hxClasses[name];
	}
	,resolveEnum: function(name) {
		return $hxEnums[name];
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = this.buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = "haxe.Unserializer";
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g = 0;
	var _g1 = haxe_Unserializer.BASE64.length;
	while(_g < _g1) {
		var i = _g++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	buf: null
	,pos: null
	,length: null
	,cache: null
	,scache: null
	,resolver: null
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw haxe_Exception.thrown("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw haxe_Exception.thrown("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw haxe_Exception.thrown("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			return cl;
		case 66:
			var name = this.unserialize();
			var e = this.resolver.resolveEnum(name);
			if(e == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			return e;
		case 67:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw haxe_Exception.thrown("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw haxe_Exception.thrown("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h = new haxe_ds_StringMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				var value = this.unserialize();
				h.h[s] = value;
			}
			this.pos++;
			return h;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			this.pos++;
			var index = this.readDigits();
			var _this = edecl.__constructs__;
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = _this[i]._hx_name;
			}
			var tag = result[index];
			if(tag == null) {
				throw haxe_Exception.thrown("Unknown enum index " + name + "@" + index);
			}
			var e = this.unserializeEnum(edecl,tag);
			this.cache.push(e);
			return e;
		case 107:
			return NaN;
		case 108:
			var l = new haxe_ds_List();
			this.cache.push(l);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 112:
			return Infinity;
		case 113:
			var h = new haxe_ds_IntMap();
			this.cache.push(h);
			var buf = this.buf;
			var c = this.buf.charCodeAt(this.pos++);
			while(c == 58) {
				var i = this.readDigits();
				var value = this.unserialize();
				h.h[i] = value;
				c = this.buf.charCodeAt(this.pos++);
			}
			if(c != 104) {
				throw haxe_Exception.thrown("Invalid IntMap format");
			}
			return h;
		case 114:
			var n = this.readDigits();
			if(n < 0 || n >= this.cache.length) {
				throw haxe_Exception.thrown("Invalid reference");
			}
			return this.cache[n];
		case 115:
			var len = this.readDigits();
			var buf = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i < max) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				var c3 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				var c4 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c3 << 6 | c4;
			}
			if(rest >= 2) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				if(rest == 3) {
					var c3 = codes[buf.charCodeAt(i++)];
					bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				d = new Date(this.readFloat());
			}
			this.cache.push(d);
			return d;
		case 119:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 120:
			throw haxe_Exception.thrown(this.unserialize());
		case 121:
			var len = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid string length");
			}
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw haxe_Exception.thrown("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_io_Bytes = function(data) {
	if(haxe_io_Bytes.bi++ == 1) {
		me_cunity_debug_Out.dumpStack(haxe_CallStack.callStack(),{ fileName : "haxe/io/Bytes.hx", lineNumber : 38, className : "haxe.io.Bytes", methodName : "new"});
	}
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.ofHex = function(s) {
	if((s.length & 1) != 0) {
		throw haxe_Exception.thrown("Not a hex string (odd number of digits)");
	}
	var a = [];
	var i = 0;
	var len = s.length >> 1;
	while(i < len) {
		var high = s.charCodeAt(i * 2);
		var low = s.charCodeAt(i * 2 + 1);
		high = (high & 15) + ((high & 64) >> 6) * 9;
		low = (low & 15) + ((low & 64) >> 6) * 9;
		a.push((high << 4 | low) & 255);
		++i;
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,data: null
	,sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	,compare: function(other) {
		var b1 = this.b;
		var b2 = other.b;
		var len = this.length < other.length ? this.length : other.length;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			if(b1[i] != b2[i]) {
				return b1[i] - b2[i];
			}
		}
		return this.length - other.length;
	}
	,getDouble: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat64(pos,true);
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,getInt64: function(pos) {
		var this1 = new haxe__$Int64__$_$_$Int64(this.getInt32(pos + 4),this.getInt32(pos));
		return this1;
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,toHex: function() {
		var s_b = "";
		var chars = [];
		var str = "0123456789abcdef";
		var _g = 0;
		var _g1 = str.length;
		while(_g < _g1) {
			var i = _g++;
			chars.push(HxOverrides.cca(str,i));
		}
		var _g = 0;
		var _g1 = this.length;
		while(_g < _g1) {
			var i = _g++;
			var c = this.b[i];
			s_b += String.fromCodePoint(chars[c >> 4]);
			s_b += String.fromCodePoint(chars[c & 15]);
		}
		return s_b;
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__:"haxe.io.Encoding",__constructs__:null
	,UTF8: {_hx_name:"UTF8",_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_name:"RawNative",_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
haxe_io_Encoding.__constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
var me_cunity_debug_DebugOutput = $hxEnums["me.cunity.debug.DebugOutput"] = { __ename__:"me.cunity.debug.DebugOutput",__constructs__:null
	,CONSOLE: {_hx_name:"CONSOLE",_hx_index:0,__enum__:"me.cunity.debug.DebugOutput",toString:$estr}
	,HAXE: {_hx_name:"HAXE",_hx_index:1,__enum__:"me.cunity.debug.DebugOutput",toString:$estr}
	,NATIVE: {_hx_name:"NATIVE",_hx_index:2,__enum__:"me.cunity.debug.DebugOutput",toString:$estr}
};
me_cunity_debug_DebugOutput.__constructs__ = [me_cunity_debug_DebugOutput.CONSOLE,me_cunity_debug_DebugOutput.HAXE,me_cunity_debug_DebugOutput.NATIVE];
var me_cunity_debug_Out = $hx_exports["Out"] = function() { };
$hxClasses["me.cunity.debug.Out"] = me_cunity_debug_Out;
me_cunity_debug_Out.__name__ = "me.cunity.debug.Out";
me_cunity_debug_Out._trace = function(v,i) {
	if(me_cunity_debug_Out.suspended) {
		return;
	}
	var warned = false;
	if(i != null && Object.prototype.hasOwnProperty.call(i,"customParams")) {
		i = i.customParams[0];
	}
	var msg = i != null ? i.fileName + ":" + i.methodName + ":" + i.lineNumber + ":" : "";
	msg += Std.string(v);
	switch(me_cunity_debug_Out.traceTarget._hx_index) {
	case 0:
		debug(msg);
		break;
	case 1:
		var msg1 = i != null ? i.fileName + ":" + i.lineNumber + ":" + i.methodName + ":" : "";
		msg1 += Std.string(v) + "<br/>";
		var d = window.document.getElementById("haxe:trace");
		if(d == null && !warned) {
			warned = true;
			alert("No haxe:trace element defined\n" + msg1);
		} else {
			d.innerHTML += msg1;
		}
		break;
	case 2:
		console.log(msg);
		break;
	}
};
me_cunity_debug_Out.log2 = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.lineNumber + ":" + i.methodName + ":" : "";
	msg += Std.string(v);
	var http = new haxe_http_HttpJs("http://localhost/devel/php/jsLog.php");
	http.setParameter("log",msg);
	http.async = true;
	http.onData = function(data) {
		if(data != "OK") {
			haxe_Log.trace(data,{ fileName : "../lib/me/cunity/debug/Out.hx", lineNumber : 207, className : "me.cunity.debug.Out", methodName : "log2"});
		}
	};
	http.request(true);
};
me_cunity_debug_Out.dumpObjectRSafe = function(root,recursive,i) {
	if(recursive == null) {
		recursive = false;
	}
	var oCopy = { };
	var _g = 0;
	var _g1 = Reflect.fields(root);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		if(f == "parentView") {
			oCopy.parentView = root.parentView.instancePath;
			continue;
		}
		oCopy[f] = Reflect.field(root,f);
	}
	me_cunity_debug_Out.dumpObject(oCopy,i);
};
me_cunity_debug_Out.dumpObjectTree = $hx_exports["me"]["cunity"]["debug"]["Out"]["dumpObjectTree"] = function(root,recursive,i) {
	if(recursive == null) {
		recursive = false;
	}
	me_cunity_debug_Out.dumpedObjects = [];
	me_cunity_debug_Out._dumpObjectTree(root,Type.typeof(root),recursive,i);
};
me_cunity_debug_Out._dumpObjectTree = function(root,parent,recursive,i) {
	var m;
	if(js_Boot.getClass(root) != null) {
		var c = js_Boot.getClass(root);
		m = c.__name__;
	} else {
		var e = Type.typeof(root);
		m = $hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name;
	}
	var fields = js_Boot.getClass(root) != null ? Type.getInstanceFields(js_Boot.getClass(root)) : Reflect.fields(root);
	if(m == "String") {
		me_cunity_debug_Out._trace(Std.string(root) + " len:" + Std.string(root.length),i);
	} else {
		me_cunity_debug_Out.dumpedObjects.push(root);
		me_cunity_debug_Out._trace(m + " fields:" + fields.length + ":" + fields.slice(0,5).toString(),i);
	}
	try {
		var _g = 0;
		while(_g < fields.length) {
			var f = fields[_g];
			++_g;
			haxe_Log.trace(f,{ fileName : "../lib/me/cunity/debug/Out.hx", lineNumber : 313, className : "me.cunity.debug.Out", methodName : "_dumpObjectTree", customParams : [i]});
			if(recursive) {
				if(me_cunity_debug_Out.dumpedObjects.length > 1000) {
					me_cunity_debug_Out._trace(me_cunity_debug_Out.dumpedObjects.toString(),i);
					throw haxe_Exception.thrown("oops");
				} else {
					var _o = root[f];
					if(!Lambda.has(me_cunity_debug_Out.dumpedObjects,_o)) {
						me_cunity_debug_Out._dumpObjectTree(_o,Type.typeof(_o),true,i);
					}
				}
			}
		}
	} catch( _g ) {
		var ex = haxe_Exception.caught(_g).unwrap();
		haxe_Log.trace(ex,{ fileName : "../lib/me/cunity/debug/Out.hx", lineNumber : 337, className : "me.cunity.debug.Out", methodName : "_dumpObjectTree"});
	}
};
me_cunity_debug_Out.dumpKeys = function(it) {
	var kN = [];
	while(it.hasNext()) kN.push(it.next());
	return kN.join("|");
};
me_cunity_debug_Out.dumpObject = function(ob,i) {
	var tClass = js_Boot.getClass(ob);
	var m = "dumpObject:" + Std.string(ob != null ? js_Boot.getClass(ob) : ob) + "\n";
	var names = [];
	names = js_Boot.getClass(ob) != null ? Type.getInstanceFields(js_Boot.getClass(ob)) : Reflect.fields(ob);
	if(js_Boot.getClass(ob) != null) {
		var c = js_Boot.getClass(ob);
		m = c.__name__ + ":\n";
	}
	var _g = 0;
	while(_g < names.length) {
		var name = names[_g];
		++_g;
		if(Lambda.has(me_cunity_debug_Out.skipFields,name)) {
			m += "" + name + ":skipped\n";
			continue;
		}
		try {
			var t = Std.string(Type.typeof(Reflect.field(ob,name)));
			var tmp = me_cunity_debug_Out.skipFunctions && t == "TFunction";
			m += name + ":" + Std.string(Reflect.field(ob,name)) + ":" + t + "\n";
		} catch( _g1 ) {
			var ex = haxe_Exception.caught(_g1).unwrap();
			m += name + ":" + Std.string(ex);
		}
	}
	me_cunity_debug_Out._trace(m,i);
};
me_cunity_debug_Out.dumpStack = function(sA,i) {
	var b = new StringBuf();
	b.b += Std.string("StackDump:" + "\n");
	var _g = 0;
	while(_g < sA.length) {
		var item = sA[_g];
		++_g;
		me_cunity_debug_Out.itemToString(item,b);
		b.b += "\n";
	}
	haxe_Log.trace(b.b,{ fileName : "../lib/me/cunity/debug/Out.hx", lineNumber : 409, className : "me.cunity.debug.Out", methodName : "dumpStack", customParams : [i]});
};
me_cunity_debug_Out.itemToString = function(s,b) {
	switch(s._hx_index) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s.m;
		b.b += "module ";
		b.b += m == null ? "null" : "" + m;
		break;
	case 2:
		var _g = s.column;
		var s1 = s.s;
		var file = s.file;
		var line = s.line;
		if(s1 != null) {
			me_cunity_debug_Out.itemToString(s1,b);
			b.b += " (";
		}
		b.b += file == null ? "null" : "" + file;
		b.b += " line ";
		b.b += line == null ? "null" : "" + line;
		if(s1 != null) {
			b.b += ")\n";
		}
		break;
	case 3:
		var cname = s.classname;
		var meth = s.method;
		b.b += cname == null ? "null" : "" + cname;
		b.b += ".";
		b.b += meth == null ? "null" : "" + meth;
		b.b += "\n";
		break;
	case 4:
		var v = s.v;
		b.b += Std.string("LocalFunction:" + v);
		break;
	}
};
me_cunity_debug_Out.fTrace = function(str,arr,i) {
	var str_arr = str.split(" @");
	var str_buf_b = "";
	var _g = 0;
	var _g1 = str_arr.length;
	while(_g < _g1) {
		var i1 = _g++;
		str_buf_b += Std.string(str_arr[i1]);
		if(arr[i1] != null) {
			str_buf_b += Std.string(arr[i1]);
		}
	}
	me_cunity_debug_Out._trace(str_buf_b,i);
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = "haxe.crypto.Base64";
haxe_crypto_Base64.encode = function(bytes,complement) {
	if(complement == null) {
		complement = true;
	}
	var str = new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).encodeBytes(bytes).toString();
	if(complement) {
		switch(bytes.length % 3) {
		case 1:
			str += "==";
			break;
		case 2:
			str += "=";
			break;
		default:
		}
	}
	return str;
};
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw haxe_Exception.thrown("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = "haxe.crypto.BaseCode";
haxe_crypto_BaseCode.prototype = {
	base: null
	,nbits: null
	,tbl: null
	,encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(size + (b.length * 8 % nbits == 0 ? 0 : 1)));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.b[pin++];
			}
			curbits -= nbits;
			out.b[pout++] = base.b[buf >> curbits & mask];
		}
		if(curbits > 0) {
			out.b[pout++] = base.b[buf << nbits - curbits & mask];
		}
		return out;
	}
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g = 0;
		var _g1 = this.base.length;
		while(_g < _g1) {
			var i = _g++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw haxe_Exception.thrown("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_crypto_Crc32 = function() { };
$hxClasses["haxe.crypto.Crc32"] = haxe_crypto_Crc32;
haxe_crypto_Crc32.__name__ = "haxe.crypto.Crc32";
haxe_crypto_Crc32.make = function(data) {
	var c_crc = -1;
	var b = data.b.bufferValue;
	var _g = 0;
	var _g1 = data.length;
	while(_g < _g1) {
		var i = _g++;
		var tmp = (c_crc ^ b.bytes[i]) & 255;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		c_crc = c_crc >>> 8 ^ tmp;
	}
	return c_crc ^ -1;
};
var haxe_crypto_HashMethod = $hxEnums["haxe.crypto.HashMethod"] = { __ename__:"haxe.crypto.HashMethod",__constructs__:null
	,MD5: {_hx_name:"MD5",_hx_index:0,__enum__:"haxe.crypto.HashMethod",toString:$estr}
	,SHA1: {_hx_name:"SHA1",_hx_index:1,__enum__:"haxe.crypto.HashMethod",toString:$estr}
	,SHA256: {_hx_name:"SHA256",_hx_index:2,__enum__:"haxe.crypto.HashMethod",toString:$estr}
};
haxe_crypto_HashMethod.__constructs__ = [haxe_crypto_HashMethod.MD5,haxe_crypto_HashMethod.SHA1,haxe_crypto_HashMethod.SHA256];
var haxe_crypto_Hmac = function(hashMethod) {
	this.method = hashMethod;
	this.blockSize = 64;
	var tmp;
	switch(hashMethod._hx_index) {
	case 0:
		tmp = 16;
		break;
	case 1:
		tmp = 20;
		break;
	case 2:
		tmp = 32;
		break;
	}
	this.length = tmp;
};
$hxClasses["haxe.crypto.Hmac"] = haxe_crypto_Hmac;
haxe_crypto_Hmac.__name__ = "haxe.crypto.Hmac";
haxe_crypto_Hmac.prototype = {
	method: null
	,blockSize: null
	,length: null
	,nullPad: function(s,chunkLen) {
		var r = chunkLen - s.length % chunkLen;
		if(r == chunkLen && s.length != 0) {
			return s;
		}
		var sb = new haxe_io_BytesBuffer();
		sb.add(s);
		var _g = 0;
		var _g1 = r;
		while(_g < _g1) {
			var x = _g++;
			sb.addByte(0);
		}
		return sb.getBytes();
	}
	,make: function(key,msg) {
		if(key.length > this.blockSize) {
			switch(this.method._hx_index) {
			case 0:
				key = haxe_crypto_Md5.make(key);
				break;
			case 1:
				key = haxe_crypto_Sha1.make(key);
				break;
			case 2:
				key = haxe_crypto_Sha256.make(key);
				break;
			}
		}
		key = this.nullPad(key,this.blockSize);
		var Ki = new haxe_io_BytesBuffer();
		var Ko = new haxe_io_BytesBuffer();
		var _g = 0;
		var _g1 = key.length;
		while(_g < _g1) {
			var i = _g++;
			Ko.addByte(key.b[i] ^ 92);
			Ki.addByte(key.b[i] ^ 54);
		}
		Ki.add(msg);
		var b = Ki.getBytes();
		var tmp;
		switch(this.method._hx_index) {
		case 0:
			tmp = haxe_crypto_Md5.make(b);
			break;
		case 1:
			tmp = haxe_crypto_Sha1.make(b);
			break;
		case 2:
			tmp = haxe_crypto_Sha256.make(b);
			break;
		}
		Ko.add(tmp);
		var b = Ko.getBytes();
		switch(this.method._hx_index) {
		case 0:
			return haxe_crypto_Md5.make(b);
		case 1:
			return haxe_crypto_Sha1.make(b);
		case 2:
			return haxe_crypto_Sha256.make(b);
		}
	}
	,__class__: haxe_crypto_Hmac
};
var haxe_crypto_Md5 = function() {
};
$hxClasses["haxe.crypto.Md5"] = haxe_crypto_Md5;
haxe_crypto_Md5.__name__ = "haxe.crypto.Md5";
haxe_crypto_Md5.make = function(b) {
	var h = new haxe_crypto_Md5().doEncode(haxe_crypto_Md5.bytes2blks(b));
	var out = new haxe_io_Bytes(new ArrayBuffer(16));
	var p = 0;
	out.b[p++] = h[0] & 255;
	out.b[p++] = h[0] >> 8 & 255;
	out.b[p++] = h[0] >> 16 & 255;
	out.b[p++] = h[0] >>> 24;
	out.b[p++] = h[1] & 255;
	out.b[p++] = h[1] >> 8 & 255;
	out.b[p++] = h[1] >> 16 & 255;
	out.b[p++] = h[1] >>> 24;
	out.b[p++] = h[2] & 255;
	out.b[p++] = h[2] >> 8 & 255;
	out.b[p++] = h[2] >> 16 & 255;
	out.b[p++] = h[2] >>> 24;
	out.b[p++] = h[3] & 255;
	out.b[p++] = h[3] >> 8 & 255;
	out.b[p++] = h[3] >> 16 & 255;
	out.b[p++] = h[3] >>> 24;
	return out;
};
haxe_crypto_Md5.bytes2blks = function(b) {
	var nblk = (b.length + 8 >> 6) + 1;
	var blks = [];
	var blksSize = nblk * 16;
	var _g = 0;
	var _g1 = blksSize;
	while(_g < _g1) {
		var i = _g++;
		blks[i] = 0;
	}
	var i = 0;
	while(i < b.length) {
		blks[i >> 2] |= b.b[i] << (((b.length << 3) + i & 3) << 3);
		++i;
	}
	blks[i >> 2] |= 128 << (b.length * 8 + i) % 4 * 8;
	var l = b.length * 8;
	var k = nblk * 16 - 2;
	blks[k] = l & 255;
	blks[k] |= (l >>> 8 & 255) << 8;
	blks[k] |= (l >>> 16 & 255) << 16;
	blks[k] |= (l >>> 24 & 255) << 24;
	return blks;
};
haxe_crypto_Md5.prototype = {
	bitOR: function(a,b) {
		var lsb = a & 1 | b & 1;
		var msb31 = a >>> 1 | b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitXOR: function(a,b) {
		var lsb = a & 1 ^ b & 1;
		var msb31 = a >>> 1 ^ b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitAND: function(a,b) {
		var lsb = a & 1 & (b & 1);
		var msb31 = a >>> 1 & b >>> 1;
		return msb31 << 1 | lsb;
	}
	,addme: function(x,y) {
		var lsw = (x & 65535) + (y & 65535);
		var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
		return msw << 16 | lsw & 65535;
	}
	,rol: function(num,cnt) {
		return num << cnt | num >>> 32 - cnt;
	}
	,cmn: function(q,a,b,x,s,t) {
		return this.addme(this.rol(this.addme(this.addme(a,q),this.addme(x,t)),s),b);
	}
	,ff: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,c),this.bitAND(~b,d)),a,b,x,s,t);
	}
	,gg: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,d),this.bitAND(c,~d)),a,b,x,s,t);
	}
	,hh: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(this.bitXOR(b,c),d),a,b,x,s,t);
	}
	,ii: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(c,this.bitOR(b,~d)),a,b,x,s,t);
	}
	,doEncode: function(x) {
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var step;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			step = 0;
			a = this.ff(a,b,c,d,x[i],7,-680876936);
			d = this.ff(d,a,b,c,x[i + 1],12,-389564586);
			c = this.ff(c,d,a,b,x[i + 2],17,606105819);
			b = this.ff(b,c,d,a,x[i + 3],22,-1044525330);
			a = this.ff(a,b,c,d,x[i + 4],7,-176418897);
			d = this.ff(d,a,b,c,x[i + 5],12,1200080426);
			c = this.ff(c,d,a,b,x[i + 6],17,-1473231341);
			b = this.ff(b,c,d,a,x[i + 7],22,-45705983);
			a = this.ff(a,b,c,d,x[i + 8],7,1770035416);
			d = this.ff(d,a,b,c,x[i + 9],12,-1958414417);
			c = this.ff(c,d,a,b,x[i + 10],17,-42063);
			b = this.ff(b,c,d,a,x[i + 11],22,-1990404162);
			a = this.ff(a,b,c,d,x[i + 12],7,1804603682);
			d = this.ff(d,a,b,c,x[i + 13],12,-40341101);
			c = this.ff(c,d,a,b,x[i + 14],17,-1502002290);
			b = this.ff(b,c,d,a,x[i + 15],22,1236535329);
			a = this.gg(a,b,c,d,x[i + 1],5,-165796510);
			d = this.gg(d,a,b,c,x[i + 6],9,-1069501632);
			c = this.gg(c,d,a,b,x[i + 11],14,643717713);
			b = this.gg(b,c,d,a,x[i],20,-373897302);
			a = this.gg(a,b,c,d,x[i + 5],5,-701558691);
			d = this.gg(d,a,b,c,x[i + 10],9,38016083);
			c = this.gg(c,d,a,b,x[i + 15],14,-660478335);
			b = this.gg(b,c,d,a,x[i + 4],20,-405537848);
			a = this.gg(a,b,c,d,x[i + 9],5,568446438);
			d = this.gg(d,a,b,c,x[i + 14],9,-1019803690);
			c = this.gg(c,d,a,b,x[i + 3],14,-187363961);
			b = this.gg(b,c,d,a,x[i + 8],20,1163531501);
			a = this.gg(a,b,c,d,x[i + 13],5,-1444681467);
			d = this.gg(d,a,b,c,x[i + 2],9,-51403784);
			c = this.gg(c,d,a,b,x[i + 7],14,1735328473);
			b = this.gg(b,c,d,a,x[i + 12],20,-1926607734);
			a = this.hh(a,b,c,d,x[i + 5],4,-378558);
			d = this.hh(d,a,b,c,x[i + 8],11,-2022574463);
			c = this.hh(c,d,a,b,x[i + 11],16,1839030562);
			b = this.hh(b,c,d,a,x[i + 14],23,-35309556);
			a = this.hh(a,b,c,d,x[i + 1],4,-1530992060);
			d = this.hh(d,a,b,c,x[i + 4],11,1272893353);
			c = this.hh(c,d,a,b,x[i + 7],16,-155497632);
			b = this.hh(b,c,d,a,x[i + 10],23,-1094730640);
			a = this.hh(a,b,c,d,x[i + 13],4,681279174);
			d = this.hh(d,a,b,c,x[i],11,-358537222);
			c = this.hh(c,d,a,b,x[i + 3],16,-722521979);
			b = this.hh(b,c,d,a,x[i + 6],23,76029189);
			a = this.hh(a,b,c,d,x[i + 9],4,-640364487);
			d = this.hh(d,a,b,c,x[i + 12],11,-421815835);
			c = this.hh(c,d,a,b,x[i + 15],16,530742520);
			b = this.hh(b,c,d,a,x[i + 2],23,-995338651);
			a = this.ii(a,b,c,d,x[i],6,-198630844);
			d = this.ii(d,a,b,c,x[i + 7],10,1126891415);
			c = this.ii(c,d,a,b,x[i + 14],15,-1416354905);
			b = this.ii(b,c,d,a,x[i + 5],21,-57434055);
			a = this.ii(a,b,c,d,x[i + 12],6,1700485571);
			d = this.ii(d,a,b,c,x[i + 3],10,-1894986606);
			c = this.ii(c,d,a,b,x[i + 10],15,-1051523);
			b = this.ii(b,c,d,a,x[i + 1],21,-2054922799);
			a = this.ii(a,b,c,d,x[i + 8],6,1873313359);
			d = this.ii(d,a,b,c,x[i + 15],10,-30611744);
			c = this.ii(c,d,a,b,x[i + 6],15,-1560198380);
			b = this.ii(b,c,d,a,x[i + 13],21,1309151649);
			a = this.ii(a,b,c,d,x[i + 4],6,-145523070);
			d = this.ii(d,a,b,c,x[i + 11],10,-1120210379);
			c = this.ii(c,d,a,b,x[i + 2],15,718787259);
			b = this.ii(b,c,d,a,x[i + 9],21,-343485551);
			a = this.addme(a,olda);
			b = this.addme(b,oldb);
			c = this.addme(c,oldc);
			d = this.addme(d,oldd);
			i += 16;
		}
		return [a,b,c,d];
	}
	,__class__: haxe_crypto_Md5
};
var haxe_crypto_Sha1 = function() {
};
$hxClasses["haxe.crypto.Sha1"] = haxe_crypto_Sha1;
haxe_crypto_Sha1.__name__ = "haxe.crypto.Sha1";
haxe_crypto_Sha1.make = function(b) {
	var h = new haxe_crypto_Sha1().doEncode(haxe_crypto_Sha1.bytes2blks(b));
	var out = new haxe_io_Bytes(new ArrayBuffer(20));
	var p = 0;
	out.b[p++] = h[0] >>> 24;
	out.b[p++] = h[0] >> 16 & 255;
	out.b[p++] = h[0] >> 8 & 255;
	out.b[p++] = h[0] & 255;
	out.b[p++] = h[1] >>> 24;
	out.b[p++] = h[1] >> 16 & 255;
	out.b[p++] = h[1] >> 8 & 255;
	out.b[p++] = h[1] & 255;
	out.b[p++] = h[2] >>> 24;
	out.b[p++] = h[2] >> 16 & 255;
	out.b[p++] = h[2] >> 8 & 255;
	out.b[p++] = h[2] & 255;
	out.b[p++] = h[3] >>> 24;
	out.b[p++] = h[3] >> 16 & 255;
	out.b[p++] = h[3] >> 8 & 255;
	out.b[p++] = h[3] & 255;
	out.b[p++] = h[4] >>> 24;
	out.b[p++] = h[4] >> 16 & 255;
	out.b[p++] = h[4] >> 8 & 255;
	out.b[p++] = h[4] & 255;
	return out;
};
haxe_crypto_Sha1.bytes2blks = function(b) {
	var nblk = (b.length + 8 >> 6) + 1;
	var blks = [];
	var _g = 0;
	var _g1 = nblk * 16;
	while(_g < _g1) {
		var i = _g++;
		blks[i] = 0;
	}
	var _g = 0;
	var _g1 = b.length;
	while(_g < _g1) {
		var i = _g++;
		var p = i >> 2;
		blks[p] |= b.b[i] << 24 - ((i & 3) << 3);
	}
	var i = b.length;
	var p = i >> 2;
	blks[p] |= 128 << 24 - ((i & 3) << 3);
	blks[nblk * 16 - 1] = b.length * 8;
	return blks;
};
haxe_crypto_Sha1.prototype = {
	doEncode: function(x) {
		var w = [];
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var e = -1009589776;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			var olde = e;
			var j = 0;
			while(j < 80) {
				if(j < 16) {
					w[j] = x[i + j];
				} else {
					var num = w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16];
					w[j] = num << 1 | num >>> 31;
				}
				var t = (a << 5 | a >>> 27) + this.ft(j,b,c,d) + e + w[j] + this.kt(j);
				e = d;
				d = c;
				c = b << 30 | b >>> 2;
				b = a;
				a = t;
				++j;
			}
			a += olda;
			b += oldb;
			c += oldc;
			d += oldd;
			e += olde;
			i += 16;
		}
		return [a,b,c,d,e];
	}
	,ft: function(t,b,c,d) {
		if(t < 20) {
			return b & c | ~b & d;
		}
		if(t < 40) {
			return b ^ c ^ d;
		}
		if(t < 60) {
			return b & c | b & d | c & d;
		}
		return b ^ c ^ d;
	}
	,kt: function(t) {
		if(t < 20) {
			return 1518500249;
		}
		if(t < 40) {
			return 1859775393;
		}
		if(t < 60) {
			return -1894007588;
		}
		return -899497514;
	}
	,__class__: haxe_crypto_Sha1
};
var haxe_crypto_Sha256 = function() {
};
$hxClasses["haxe.crypto.Sha256"] = haxe_crypto_Sha256;
haxe_crypto_Sha256.__name__ = "haxe.crypto.Sha256";
haxe_crypto_Sha256.make = function(b) {
	var h = new haxe_crypto_Sha256().doEncode(haxe_crypto_Sha256.bytes2blks(b),b.length * 8);
	var out = new haxe_io_Bytes(new ArrayBuffer(32));
	var p = 0;
	var _g = 0;
	while(_g < 8) {
		var i = _g++;
		out.b[p++] = h[i] >>> 24;
		out.b[p++] = h[i] >> 16 & 255;
		out.b[p++] = h[i] >> 8 & 255;
		out.b[p++] = h[i] & 255;
	}
	return out;
};
haxe_crypto_Sha256.bytes2blks = function(b) {
	var nblk = (b.length + 8 >> 6) + 1;
	var blks = [];
	var _g = 0;
	var _g1 = nblk * 16;
	while(_g < _g1) {
		var i = _g++;
		blks[i] = 0;
	}
	var _g = 0;
	var _g1 = b.length;
	while(_g < _g1) {
		var i = _g++;
		var p = i >> 2;
		blks[p] |= b.b[i] << 24 - ((i & 3) << 3);
	}
	var i = b.length;
	var p = i >> 2;
	blks[p] |= 128 << 24 - ((i & 3) << 3);
	blks[nblk * 16 - 1] = b.length * 8;
	return blks;
};
haxe_crypto_Sha256.prototype = {
	doEncode: function(m,l) {
		var K = [1116352408,1899447441,-1245643825,-373957723,961987163,1508970993,-1841331548,-1424204075,-670586216,310598401,607225278,1426881987,1925078388,-2132889090,-1680079193,-1046744716,-459576895,-272742522,264347078,604807628,770255983,1249150122,1555081692,1996064986,-1740746414,-1473132947,-1341970488,-1084653625,-958395405,-710438585,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,-2117940946,-1838011259,-1564481375,-1474664885,-1035236496,-949202525,-778901479,-694614492,-200395387,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,-2067236844,-1933114872,-1866530822,-1538233109,-1090935817,-965641998];
		var HASH = [1779033703,-1150833019,1013904242,-1521486534,1359893119,-1694144372,528734635,1541459225];
		var W = [];
		W[64] = 0;
		var a;
		var b;
		var c;
		var d;
		var e;
		var f;
		var g;
		var h;
		var T1;
		var T2;
		m[l >> 5] |= 128 << 24 - l % 32;
		m[(l + 64 >> 9 << 4) + 15] = l;
		var i = 0;
		while(i < m.length) {
			a = HASH[0];
			b = HASH[1];
			c = HASH[2];
			d = HASH[3];
			e = HASH[4];
			f = HASH[5];
			g = HASH[6];
			h = HASH[7];
			var _g = 0;
			while(_g < 64) {
				var j = _g++;
				if(j < 16) {
					W[j] = m[j + i];
				} else {
					var x = W[j - 2];
					var x1 = (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ x >>> 10;
					var y = W[j - 7];
					var lsw = (x1 & 65535) + (y & 65535);
					var msw = (x1 >> 16) + (y >> 16) + (lsw >> 16);
					var x2 = msw << 16 | lsw & 65535;
					var x3 = W[j - 15];
					var y1 = (x3 >>> 7 | x3 << 25) ^ (x3 >>> 18 | x3 << 14) ^ x3 >>> 3;
					var lsw1 = (x2 & 65535) + (y1 & 65535);
					var msw1 = (x2 >> 16) + (y1 >> 16) + (lsw1 >> 16);
					var x4 = msw1 << 16 | lsw1 & 65535;
					var y2 = W[j - 16];
					var lsw2 = (x4 & 65535) + (y2 & 65535);
					var msw2 = (x4 >> 16) + (y2 >> 16) + (lsw2 >> 16);
					W[j] = msw2 << 16 | lsw2 & 65535;
				}
				var y3 = (e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7);
				var lsw3 = (h & 65535) + (y3 & 65535);
				var msw3 = (h >> 16) + (y3 >> 16) + (lsw3 >> 16);
				var x5 = msw3 << 16 | lsw3 & 65535;
				var y4 = e & f ^ ~e & g;
				var lsw4 = (x5 & 65535) + (y4 & 65535);
				var msw4 = (x5 >> 16) + (y4 >> 16) + (lsw4 >> 16);
				var x6 = msw4 << 16 | lsw4 & 65535;
				var y5 = K[j];
				var lsw5 = (x6 & 65535) + (y5 & 65535);
				var msw5 = (x6 >> 16) + (y5 >> 16) + (lsw5 >> 16);
				var x7 = msw5 << 16 | lsw5 & 65535;
				var y6 = W[j];
				var lsw6 = (x7 & 65535) + (y6 & 65535);
				var msw6 = (x7 >> 16) + (y6 >> 16) + (lsw6 >> 16);
				T1 = msw6 << 16 | lsw6 & 65535;
				var x8 = (a >>> 2 | a << 30) ^ (a >>> 13 | a << 19) ^ (a >>> 22 | a << 10);
				var y7 = a & b ^ a & c ^ b & c;
				var lsw7 = (x8 & 65535) + (y7 & 65535);
				var msw7 = (x8 >> 16) + (y7 >> 16) + (lsw7 >> 16);
				T2 = msw7 << 16 | lsw7 & 65535;
				h = g;
				g = f;
				f = e;
				var lsw8 = (d & 65535) + (T1 & 65535);
				var msw8 = (d >> 16) + (T1 >> 16) + (lsw8 >> 16);
				e = msw8 << 16 | lsw8 & 65535;
				d = c;
				c = b;
				b = a;
				var lsw9 = (T1 & 65535) + (T2 & 65535);
				var msw9 = (T1 >> 16) + (T2 >> 16) + (lsw9 >> 16);
				a = msw9 << 16 | lsw9 & 65535;
			}
			var y8 = HASH[0];
			var lsw10 = (a & 65535) + (y8 & 65535);
			var msw10 = (a >> 16) + (y8 >> 16) + (lsw10 >> 16);
			HASH[0] = msw10 << 16 | lsw10 & 65535;
			var y9 = HASH[1];
			var lsw11 = (b & 65535) + (y9 & 65535);
			var msw11 = (b >> 16) + (y9 >> 16) + (lsw11 >> 16);
			HASH[1] = msw11 << 16 | lsw11 & 65535;
			var y10 = HASH[2];
			var lsw12 = (c & 65535) + (y10 & 65535);
			var msw12 = (c >> 16) + (y10 >> 16) + (lsw12 >> 16);
			HASH[2] = msw12 << 16 | lsw12 & 65535;
			var y11 = HASH[3];
			var lsw13 = (d & 65535) + (y11 & 65535);
			var msw13 = (d >> 16) + (y11 >> 16) + (lsw13 >> 16);
			HASH[3] = msw13 << 16 | lsw13 & 65535;
			var y12 = HASH[4];
			var lsw14 = (e & 65535) + (y12 & 65535);
			var msw14 = (e >> 16) + (y12 >> 16) + (lsw14 >> 16);
			HASH[4] = msw14 << 16 | lsw14 & 65535;
			var y13 = HASH[5];
			var lsw15 = (f & 65535) + (y13 & 65535);
			var msw15 = (f >> 16) + (y13 >> 16) + (lsw15 >> 16);
			HASH[5] = msw15 << 16 | lsw15 & 65535;
			var y14 = HASH[6];
			var lsw16 = (g & 65535) + (y14 & 65535);
			var msw16 = (g >> 16) + (y14 >> 16) + (lsw16 >> 16);
			HASH[6] = msw16 << 16 | lsw16 & 65535;
			var y15 = HASH[7];
			var lsw17 = (h & 65535) + (y15 & 65535);
			var msw17 = (h >> 16) + (y15 >> 16) + (lsw17 >> 16);
			HASH[7] = msw17 << 16 | lsw17 & 65535;
			i += 16;
		}
		return HASH;
	}
	,__class__: haxe_crypto_Sha256
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = "haxe.ds.BalancedTree";
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return new haxe_iterators_ArrayIterator(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this = r.right;
			var _this1 = r.left;
			if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,toString: function() {
		if(this.root == null) {
			return "{}";
		} else {
			return "{" + this.root.toString() + "}";
		}
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this = this.left;
			tmp = _this == null ? 0 : _this._height;
		} else {
			var _this = this.right;
			tmp = _this == null ? 0 : _this._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = "haxe.ds.TreeNode";
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,toString: function() {
		return (this.left == null ? "" : this.left.toString() + ", ") + ("" + Std.string(this.key) + "=" + Std.string(this.value)) + (this.right == null ? "" : ", " + this.right.toString());
	}
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_Either = $hxEnums["haxe.ds.Either"] = { __ename__:"haxe.ds.Either",__constructs__:null
	,Left: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Either",toString:$estr}; },$_._hx_name="Left",$_.__params__ = ["v"],$_)
	,Right: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"haxe.ds.Either",toString:$estr}; },$_._hx_name="Right",$_.__params__ = ["v"],$_)
};
haxe_ds_Either.__constructs__ = [haxe_ds_Either.Left,haxe_ds_Either.Right];
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = "haxe.ds.EnumValueMap";
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g = 0;
		var _g1 = a1.length;
		while(_g < _g1) {
			var i = _g++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && ((v2) instanceof Array)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,get: function(key) {
		return this.h[key];
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(key | 0);
		return new haxe_iterators_ArrayIterator(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,copy: function() {
		var copied = new haxe_ds_IntMap();
		var key = this.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			copied.h[key1] = this.h[key1];
		}
		return copied;
	}
	,toString: function() {
		var s_b = "";
		s_b += "{";
		var it = this.keys();
		var i = it;
		while(i.hasNext()) {
			var i1 = i.next();
			s_b += i1 == null ? "null" : "" + i1;
			s_b += " => ";
			s_b += Std.string(Std.string(this.h[i1]));
			if(it.hasNext()) {
				s_b += ", ";
			}
		}
		s_b += "}";
		return s_b;
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: haxe_ds__$List_ListNode
};
var haxe_ds__$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["haxe.ds._List.ListIterator"] = haxe_ds__$List_ListIterator;
haxe_ds__$List_ListIterator.__name__ = "haxe.ds._List.ListIterator";
haxe_ds__$List_ListIterator.prototype = {
	head: null
	,hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: haxe_ds__$List_ListIterator
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new haxe_iterators_ArrayIterator(a);
	}
	,toString: function() {
		var s_b = "";
		s_b += "{";
		var it = this.keys();
		var i = it;
		while(i.hasNext()) {
			var i1 = i.next();
			s_b += Std.string(Std.string(i1));
			s_b += " => ";
			s_b += Std.string(Std.string(this.h[i1.__id__]));
			if(it.hasNext()) {
				s_b += ", ";
			}
		}
		s_b += "}";
		return s_b;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = $hxEnums["haxe.ds.Option"] = { __ename__:"haxe.ds.Option",__constructs__:null
	,Some: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Option",toString:$estr}; },$_._hx_name="Some",$_.__params__ = ["v"],$_)
	,None: {_hx_name:"None",_hx_index:1,__enum__:"haxe.ds.Option",toString:$estr}
};
haxe_ds_Option.__constructs__ = [haxe_ds_Option.Some,haxe_ds_Option.None];
var haxe_ds__$StringMap_StringMapKeyIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapKeyIterator"] = haxe_ds__$StringMap_StringMapKeyIterator;
haxe_ds__$StringMap_StringMapKeyIterator.__name__ = "haxe.ds._StringMap.StringMapKeyIterator";
haxe_ds__$StringMap_StringMapKeyIterator.prototype = {
	h: null
	,keys: null
	,length: null
	,current: null
	,hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		return this.keys[this.current++];
	}
	,__class__: haxe_ds__$StringMap_StringMapKeyIterator
};
var haxe_ds__$StringMap_StringMapValueIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapValueIterator"] = haxe_ds__$StringMap_StringMapValueIterator;
haxe_ds__$StringMap_StringMapValueIterator.__name__ = "haxe.ds._StringMap.StringMapValueIterator";
haxe_ds__$StringMap_StringMapValueIterator.prototype = {
	h: null
	,keys: null
	,length: null
	,current: null
	,hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		return this.h[this.keys[this.current++]];
	}
	,__class__: haxe_ds__$StringMap_StringMapValueIterator
};
var haxe_exceptions_PosException = function(message,previous,pos) {
	haxe_Exception.call(this,message,previous);
	if(pos == null) {
		this.posInfos = { fileName : "(unknown)", lineNumber : 0, className : "(unknown)", methodName : "(unknown)"};
	} else {
		this.posInfos = pos;
	}
	this.__skipStack++;
};
$hxClasses["haxe.exceptions.PosException"] = haxe_exceptions_PosException;
haxe_exceptions_PosException.__name__ = "haxe.exceptions.PosException";
haxe_exceptions_PosException.__super__ = haxe_Exception;
haxe_exceptions_PosException.prototype = $extend(haxe_Exception.prototype,{
	posInfos: null
	,toString: function() {
		return "" + haxe_Exception.prototype.toString.call(this) + " in " + this.posInfos.className + "." + this.posInfos.methodName + " at " + this.posInfos.fileName + ":" + this.posInfos.lineNumber;
	}
	,__class__: haxe_exceptions_PosException
});
var haxe_exceptions_NotImplementedException = function(message,previous,pos) {
	if(message == null) {
		message = "Not implemented";
	}
	haxe_exceptions_PosException.call(this,message,previous,pos);
	this.__skipStack++;
};
$hxClasses["haxe.exceptions.NotImplementedException"] = haxe_exceptions_NotImplementedException;
haxe_exceptions_NotImplementedException.__name__ = "haxe.exceptions.NotImplementedException";
haxe_exceptions_NotImplementedException.__super__ = haxe_exceptions_PosException;
haxe_exceptions_NotImplementedException.prototype = $extend(haxe_exceptions_PosException.prototype,{
	__class__: haxe_exceptions_NotImplementedException
});
var haxe_http_HttpBase = function(url) {
	this.url = url;
	this.headers = [];
	this.params = [];
	this.emptyOnData = $bind(this,this.onData);
};
$hxClasses["haxe.http.HttpBase"] = haxe_http_HttpBase;
haxe_http_HttpBase.__name__ = "haxe.http.HttpBase";
haxe_http_HttpBase.prototype = {
	url: null
	,responseBytes: null
	,responseAsString: null
	,postData: null
	,postBytes: null
	,headers: null
	,params: null
	,emptyOnData: null
	,addHeader: function(header,value) {
		this.headers.push({ name : header, value : value});
		return this;
	}
	,setParameter: function(name,value) {
		var _g = 0;
		var _g1 = this.params.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.params[i].name == name) {
				this.params[i] = { name : name, value : value};
				return this;
			}
		}
		this.params.push({ name : name, value : value});
		return this;
	}
	,addParameter: function(name,value) {
		this.params.push({ name : name, value : value});
		return this;
	}
	,onData: function(data) {
	}
	,onBytes: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
	,hasOnData: function() {
		return !Reflect.compareMethods($bind(this,this.onData),this.emptyOnData);
	}
	,success: function(data) {
		this.responseBytes = data;
		this.responseAsString = null;
		if(this.hasOnData()) {
			this.onData(this.get_responseData());
		}
		this.onBytes(this.responseBytes);
	}
	,get_responseData: function() {
		if(this.responseAsString == null && this.responseBytes != null) {
			this.responseAsString = this.responseBytes.getString(0,this.responseBytes.length,haxe_io_Encoding.UTF8);
		}
		return this.responseAsString;
	}
	,__class__: haxe_http_HttpBase
	,__properties__: {get_responseData:"get_responseData"}
};
var haxe_http_HttpJs = function(url) {
	this.async = true;
	this.withCredentials = false;
	haxe_http_HttpBase.call(this,url);
};
$hxClasses["haxe.http.HttpJs"] = haxe_http_HttpJs;
haxe_http_HttpJs.__name__ = "haxe.http.HttpJs";
haxe_http_HttpJs.__super__ = haxe_http_HttpBase;
haxe_http_HttpJs.prototype = $extend(haxe_http_HttpBase.prototype,{
	async: null
	,withCredentials: null
	,req: null
	,request: function(post) {
		var _gthis = this;
		this.responseAsString = null;
		this.responseBytes = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) {
				return;
			}
			var s;
			try {
				s = r.status;
			} catch( _g ) {
				s = null;
			}
			if(s == 0 && js_Browser.get_supported() && $global.location != null) {
				var protocol = $global.location.protocol.toLowerCase();
				var rlocalProtocol = new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","");
				var isLocal = rlocalProtocol.match(protocol);
				if(isLocal) {
					s = r.response != null ? 200 : 404;
				}
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null) {
				_gthis.onStatus(s);
			}
			if(s != null && s >= 200 && s < 400) {
				_gthis.req = null;
				_gthis.success(haxe_io_Bytes.ofData(r.response));
			} else if(s == null || s == 0 && r.response == null) {
				_gthis.req = null;
				_gthis.onError("Failed to connect or resolve host");
			} else if(s == null) {
				_gthis.req = null;
				var onreadystatechange = r.response != null ? haxe_io_Bytes.ofData(r.response) : null;
				_gthis.responseBytes = onreadystatechange;
				_gthis.onError("Http Error #" + r.status);
			} else {
				switch(s) {
				case 12007:
					_gthis.req = null;
					_gthis.onError("Unknown host");
					break;
				case 12029:
					_gthis.req = null;
					_gthis.onError("Failed to connect to host");
					break;
				default:
					_gthis.req = null;
					var onreadystatechange = r.response != null ? haxe_io_Bytes.ofData(r.response) : null;
					_gthis.responseBytes = onreadystatechange;
					_gthis.onError("Http Error #" + r.status);
				}
			}
		};
		if(this.async) {
			r.onreadystatechange = onreadystatechange;
		}
		var uri;
		var _g = this.postData;
		var _g1 = this.postBytes;
		if(_g == null) {
			if(_g1 == null) {
				uri = null;
			} else {
				var bytes = _g1;
				uri = new Blob([bytes.b.bufferValue]);
			}
		} else if(_g1 == null) {
			var str = _g;
			uri = str;
		} else {
			uri = null;
		}
		if(uri != null) {
			post = true;
		} else {
			var _g = 0;
			var _g1 = this.params;
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				if(uri == null) {
					uri = "";
				} else {
					uri = (uri == null ? "null" : Std.string(uri)) + "&";
				}
				var s = p.name;
				var uri1 = (uri == null ? "null" : Std.string(uri)) + encodeURIComponent(s) + "=";
				var s1 = p.value;
				uri = uri1 + encodeURIComponent(s1);
			}
		}
		try {
			if(post) {
				r.open("POST",this.url,this.async);
			} else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question ? "?" : "&") + (uri == null ? "null" : Std.string(uri)),this.async);
				uri = null;
			} else {
				r.open("GET",this.url,this.async);
			}
			r.responseType = "arraybuffer";
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			this.req = null;
			this.onError(e.toString());
			return;
		}
		r.withCredentials = this.withCredentials;
		if(!Lambda.exists(this.headers,function(h) {
			return h.name == "Content-Type";
		}) && post && this.postData == null) {
			r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		}
		var _g = 0;
		var _g1 = this.headers;
		while(_g < _g1.length) {
			var h = _g1[_g];
			++_g;
			r.setRequestHeader(h.name,h.value);
		}
		r.send(uri);
		if(!this.async) {
			onreadystatechange(null);
		}
	}
	,__class__: haxe_http_HttpJs
});
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = "haxe.io.BytesBuffer";
haxe_io_BytesBuffer.prototype = {
	buffer: null
	,view: null
	,u8: null
	,pos: null
	,size: null
	,addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,add: function(src) {
		if(this.pos + src.length > this.size) {
			this.grow(src.length);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset,src.length);
		this.u8.set(sub,this.pos);
		this.pos += src.length;
	}
	,addInt32: function(v) {
		if(this.pos + 4 > this.size) {
			this.grow(4);
		}
		this.view.setInt32(this.pos,v,true);
		this.pos += 4;
	}
	,addInt64: function(v) {
		if(this.pos + 8 > this.size) {
			this.grow(8);
		}
		this.view.setInt32(this.pos,v.low,true);
		this.view.setInt32(this.pos + 4,v.high,true);
		this.pos += 8;
	}
	,addFloat: function(v) {
		if(this.pos + 4 > this.size) {
			this.grow(4);
		}
		this.view.setFloat32(this.pos,v,true);
		this.pos += 4;
	}
	,addDouble: function(v) {
		if(this.pos + 8 > this.size) {
			this.grow(8);
		}
		this.view.setFloat64(this.pos,v,true);
		this.pos += 8;
	}
	,addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len);
		this.u8.set(sub,this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__:"haxe.io.Error",__constructs__:null
	,Blocked: {_hx_name:"Blocked",_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_name:"Overflow",_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_name:"OutsideBounds",_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["e"],$_)
};
haxe_io_Error.__constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds,haxe_io_Error.Custom];
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
haxe_iterators_ArrayIterator.prototype = {
	array: null
	,current: null
	,hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var haxe_rtti_CType = $hxEnums["haxe.rtti.CType"] = { __ename__:"haxe.rtti.CType",__constructs__:null
	,CUnknown: {_hx_name:"CUnknown",_hx_index:0,__enum__:"haxe.rtti.CType",toString:$estr}
	,CEnum: ($_=function(name,params) { return {_hx_index:1,name:name,params:params,__enum__:"haxe.rtti.CType",toString:$estr}; },$_._hx_name="CEnum",$_.__params__ = ["name","params"],$_)
	,CClass: ($_=function(name,params) { return {_hx_index:2,name:name,params:params,__enum__:"haxe.rtti.CType",toString:$estr}; },$_._hx_name="CClass",$_.__params__ = ["name","params"],$_)
	,CTypedef: ($_=function(name,params) { return {_hx_index:3,name:name,params:params,__enum__:"haxe.rtti.CType",toString:$estr}; },$_._hx_name="CTypedef",$_.__params__ = ["name","params"],$_)
	,CFunction: ($_=function(args,ret) { return {_hx_index:4,args:args,ret:ret,__enum__:"haxe.rtti.CType",toString:$estr}; },$_._hx_name="CFunction",$_.__params__ = ["args","ret"],$_)
	,CAnonymous: ($_=function(fields) { return {_hx_index:5,fields:fields,__enum__:"haxe.rtti.CType",toString:$estr}; },$_._hx_name="CAnonymous",$_.__params__ = ["fields"],$_)
	,CDynamic: ($_=function(t) { return {_hx_index:6,t:t,__enum__:"haxe.rtti.CType",toString:$estr}; },$_._hx_name="CDynamic",$_.__params__ = ["t"],$_)
	,CAbstract: ($_=function(name,params) { return {_hx_index:7,name:name,params:params,__enum__:"haxe.rtti.CType",toString:$estr}; },$_._hx_name="CAbstract",$_.__params__ = ["name","params"],$_)
};
haxe_rtti_CType.__constructs__ = [haxe_rtti_CType.CUnknown,haxe_rtti_CType.CEnum,haxe_rtti_CType.CClass,haxe_rtti_CType.CTypedef,haxe_rtti_CType.CFunction,haxe_rtti_CType.CAnonymous,haxe_rtti_CType.CDynamic,haxe_rtti_CType.CAbstract];
var haxe_rtti_Rights = $hxEnums["haxe.rtti.Rights"] = { __ename__:"haxe.rtti.Rights",__constructs__:null
	,RNormal: {_hx_name:"RNormal",_hx_index:0,__enum__:"haxe.rtti.Rights",toString:$estr}
	,RNo: {_hx_name:"RNo",_hx_index:1,__enum__:"haxe.rtti.Rights",toString:$estr}
	,RCall: ($_=function(m) { return {_hx_index:2,m:m,__enum__:"haxe.rtti.Rights",toString:$estr}; },$_._hx_name="RCall",$_.__params__ = ["m"],$_)
	,RMethod: {_hx_name:"RMethod",_hx_index:3,__enum__:"haxe.rtti.Rights",toString:$estr}
	,RDynamic: {_hx_name:"RDynamic",_hx_index:4,__enum__:"haxe.rtti.Rights",toString:$estr}
	,RInline: {_hx_name:"RInline",_hx_index:5,__enum__:"haxe.rtti.Rights",toString:$estr}
};
haxe_rtti_Rights.__constructs__ = [haxe_rtti_Rights.RNormal,haxe_rtti_Rights.RNo,haxe_rtti_Rights.RCall,haxe_rtti_Rights.RMethod,haxe_rtti_Rights.RDynamic,haxe_rtti_Rights.RInline];
var haxe_rtti_TypeTree = $hxEnums["haxe.rtti.TypeTree"] = { __ename__:"haxe.rtti.TypeTree",__constructs__:null
	,TPackage: ($_=function(name,full,subs) { return {_hx_index:0,name:name,full:full,subs:subs,__enum__:"haxe.rtti.TypeTree",toString:$estr}; },$_._hx_name="TPackage",$_.__params__ = ["name","full","subs"],$_)
	,TClassdecl: ($_=function(c) { return {_hx_index:1,c:c,__enum__:"haxe.rtti.TypeTree",toString:$estr}; },$_._hx_name="TClassdecl",$_.__params__ = ["c"],$_)
	,TEnumdecl: ($_=function(e) { return {_hx_index:2,e:e,__enum__:"haxe.rtti.TypeTree",toString:$estr}; },$_._hx_name="TEnumdecl",$_.__params__ = ["e"],$_)
	,TTypedecl: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"haxe.rtti.TypeTree",toString:$estr}; },$_._hx_name="TTypedecl",$_.__params__ = ["t"],$_)
	,TAbstractdecl: ($_=function(a) { return {_hx_index:4,a:a,__enum__:"haxe.rtti.TypeTree",toString:$estr}; },$_._hx_name="TAbstractdecl",$_.__params__ = ["a"],$_)
};
haxe_rtti_TypeTree.__constructs__ = [haxe_rtti_TypeTree.TPackage,haxe_rtti_TypeTree.TClassdecl,haxe_rtti_TypeTree.TEnumdecl,haxe_rtti_TypeTree.TTypedecl,haxe_rtti_TypeTree.TAbstractdecl];
var haxe_rtti_Meta = function() { };
$hxClasses["haxe.rtti.Meta"] = haxe_rtti_Meta;
haxe_rtti_Meta.__name__ = "haxe.rtti.Meta";
haxe_rtti_Meta.getType = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.obj == null) {
		return { };
	} else {
		return meta.obj;
	}
};
haxe_rtti_Meta.getMeta = function(t) {
	return t.__meta__;
};
haxe_rtti_Meta.getFields = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.fields == null) {
		return { };
	} else {
		return meta.fields;
	}
};
var haxe_rtti_Rtti = function() { };
$hxClasses["haxe.rtti.Rtti"] = haxe_rtti_Rtti;
haxe_rtti_Rtti.__name__ = "haxe.rtti.Rtti";
haxe_rtti_Rtti.getRtti = function(c) {
	var rtti = Reflect.field(c,"__rtti");
	if(rtti == null) {
		throw haxe_Exception.thrown("Class " + c.__name__ + " has no RTTI information, consider adding @:rtti");
	}
	var x = Xml.parse(rtti).firstElement();
	var infos = new haxe_rtti_XmlParser().processElement(x);
	if(infos._hx_index == 1) {
		var c = infos.c;
		return c;
	} else {
		var t = infos;
		throw haxe_Exception.thrown("Enum mismatch: expected TClassDecl but found " + Std.string(t));
	}
};
var haxe_rtti_XmlParser = function() {
	this.root = [];
};
$hxClasses["haxe.rtti.XmlParser"] = haxe_rtti_XmlParser;
haxe_rtti_XmlParser.__name__ = "haxe.rtti.XmlParser";
haxe_rtti_XmlParser.prototype = {
	root: null
	,curplatform: null
	,mkPath: function(p) {
		return p;
	}
	,mkTypeParams: function(p) {
		var pl = p.split(":");
		if(pl[0] == "") {
			return [];
		}
		return pl;
	}
	,mkRights: function(r) {
		switch(r) {
		case "dynamic":
			return haxe_rtti_Rights.RDynamic;
		case "inline":
			return haxe_rtti_Rights.RInline;
		case "method":
			return haxe_rtti_Rights.RMethod;
		case "null":
			return haxe_rtti_Rights.RNo;
		default:
			return haxe_rtti_Rights.RCall(r);
		}
	}
	,xerror: function(c) {
		var tmp;
		if(c.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(c.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c.nodeType == null ? "null" : XmlType.toString(c.nodeType)));
			}
			tmp = c.nodeName;
		}
		throw haxe_Exception.thrown("Invalid " + tmp);
	}
	,processElement: function(x) {
		if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Invalid nodeType " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
		}
		var this1 = x;
		var c = this1;
		var _g;
		if(c.nodeType == Xml.Document) {
			_g = "Document";
		} else {
			if(c.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c.nodeType == null ? "null" : XmlType.toString(c.nodeType)));
			}
			_g = c.nodeName;
		}
		switch(_g) {
		case "abstract":
			return haxe_rtti_TypeTree.TAbstractdecl(this.xabstract(c));
		case "class":
			return haxe_rtti_TypeTree.TClassdecl(this.xclass(c));
		case "enum":
			return haxe_rtti_TypeTree.TEnumdecl(this.xenum(c));
		case "typedef":
			return haxe_rtti_TypeTree.TTypedecl(this.xtypedef(c));
		default:
			return this.xerror(c);
		}
	}
	,xmeta: function(x) {
		var ml = [];
		var _g = 0;
		var _g1 = haxe_xml__$Access_NodeListAccess.resolve(x,"m");
		while(_g < _g1.length) {
			var m = _g1[_g];
			++_g;
			var pl = [];
			var _g2 = 0;
			var _g3 = haxe_xml__$Access_NodeListAccess.resolve(m,"e");
			while(_g2 < _g3.length) {
				var p = _g3[_g2];
				++_g2;
				pl.push(haxe_xml_Access.get_innerHTML(p));
			}
			ml.push({ name : haxe_xml__$Access_AttribAccess.resolve(m,"n"), params : pl});
		}
		return ml;
	}
	,xoverloads: function(x) {
		var l = [];
		var m = x.elements();
		while(m.hasNext()) {
			var m1 = m.next();
			l.push(this.xclassfield(m1));
		}
		return l;
	}
	,xpath: function(x) {
		var path = this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path"));
		var params = [];
		var c = x.elements();
		while(c.hasNext()) {
			var c1 = c.next();
			params.push(this.xtype(c1));
		}
		return { path : path, params : params};
	}
	,xclass: function(x) {
		var csuper = null;
		var doc = null;
		var tdynamic = null;
		var interfaces = [];
		var fields = [];
		var statics = [];
		var meta = [];
		var isInterface = x.exists("interface");
		var c = x.elements();
		while(c.hasNext()) {
			var c1 = c.next();
			var _g;
			if(c1.nodeType == Xml.Document) {
				_g = "Document";
			} else {
				if(c1.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c1.nodeType == null ? "null" : XmlType.toString(c1.nodeType)));
				}
				_g = c1.nodeName;
			}
			switch(_g) {
			case "extends":
				if(isInterface) {
					interfaces.push(this.xpath(c1));
				} else {
					csuper = this.xpath(c1);
				}
				break;
			case "haxe_doc":
				doc = haxe_xml_Access.get_innerData(c1);
				break;
			case "haxe_dynamic":
				var x1 = c1.firstElement();
				if(x1.nodeType != Xml.Document && x1.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Invalid nodeType " + (x1.nodeType == null ? "null" : XmlType.toString(x1.nodeType)));
				}
				var this1 = x1;
				tdynamic = this.xtype(this1);
				break;
			case "implements":
				interfaces.push(this.xpath(c1));
				break;
			case "meta":
				meta = this.xmeta(c1);
				break;
			default:
				if(c1.exists("static")) {
					statics.push(this.xclassfield(c1));
				} else {
					fields.push(this.xclassfield(c1));
				}
			}
		}
		return { file : haxe_xml__$Access_HasAttribAccess.resolve(x,"file") ? haxe_xml__$Access_AttribAccess.resolve(x,"file") : null, path : this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path")), module : haxe_xml__$Access_HasAttribAccess.resolve(x,"module") ? this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"module")) : null, doc : doc, isPrivate : x.exists("private"), isExtern : x.exists("extern"), isFinal : x.exists("final"), isInterface : isInterface, params : this.mkTypeParams(haxe_xml__$Access_AttribAccess.resolve(x,"params")), superClass : csuper, interfaces : interfaces, fields : fields, statics : statics, tdynamic : tdynamic, platforms : this.defplat(), meta : meta};
	}
	,xclassfield: function(x,defPublic) {
		if(defPublic == null) {
			defPublic = false;
		}
		var e = x.elements();
		var t = this.xtype(e.next());
		var doc = null;
		var meta = [];
		var overloads = null;
		var c = e;
		while(c.hasNext()) {
			var c1 = c.next();
			var _g;
			if(c1.nodeType == Xml.Document) {
				_g = "Document";
			} else {
				if(c1.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c1.nodeType == null ? "null" : XmlType.toString(c1.nodeType)));
				}
				_g = c1.nodeName;
			}
			switch(_g) {
			case "haxe_doc":
				doc = haxe_xml_Access.get_innerData(c1);
				break;
			case "meta":
				meta = this.xmeta(c1);
				break;
			case "overloads":
				overloads = this.xoverloads(c1);
				break;
			default:
				this.xerror(c1);
			}
		}
		var tmp;
		if(x.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(x.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
			}
			tmp = x.nodeName;
		}
		return { name : tmp, type : t, isPublic : x.exists("public") || defPublic, isFinal : x.exists("final"), isOverride : x.exists("override"), line : haxe_xml__$Access_HasAttribAccess.resolve(x,"line") ? Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(x,"line")) : null, doc : doc, get : haxe_xml__$Access_HasAttribAccess.resolve(x,"get") ? this.mkRights(haxe_xml__$Access_AttribAccess.resolve(x,"get")) : haxe_rtti_Rights.RNormal, set : haxe_xml__$Access_HasAttribAccess.resolve(x,"set") ? this.mkRights(haxe_xml__$Access_AttribAccess.resolve(x,"set")) : haxe_rtti_Rights.RNormal, params : haxe_xml__$Access_HasAttribAccess.resolve(x,"params") ? this.mkTypeParams(haxe_xml__$Access_AttribAccess.resolve(x,"params")) : [], platforms : this.defplat(), meta : meta, overloads : overloads, expr : haxe_xml__$Access_HasAttribAccess.resolve(x,"expr") ? haxe_xml__$Access_AttribAccess.resolve(x,"expr") : null};
	}
	,xenum: function(x) {
		var cl = [];
		var doc = null;
		var meta = [];
		var c = x.elements();
		while(c.hasNext()) {
			var c1 = c.next();
			var tmp;
			if(c1.nodeType == Xml.Document) {
				tmp = "Document";
			} else {
				if(c1.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c1.nodeType == null ? "null" : XmlType.toString(c1.nodeType)));
				}
				tmp = c1.nodeName;
			}
			if(tmp == "haxe_doc") {
				doc = haxe_xml_Access.get_innerData(c1);
			} else {
				var tmp1;
				if(c1.nodeType == Xml.Document) {
					tmp1 = "Document";
				} else {
					if(c1.nodeType != Xml.Element) {
						throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c1.nodeType == null ? "null" : XmlType.toString(c1.nodeType)));
					}
					tmp1 = c1.nodeName;
				}
				if(tmp1 == "meta") {
					meta = this.xmeta(c1);
				} else {
					cl.push(this.xenumfield(c1));
				}
			}
		}
		return { file : haxe_xml__$Access_HasAttribAccess.resolve(x,"file") ? haxe_xml__$Access_AttribAccess.resolve(x,"file") : null, path : this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path")), module : haxe_xml__$Access_HasAttribAccess.resolve(x,"module") ? this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"module")) : null, doc : doc, isPrivate : x.exists("private"), isExtern : x.exists("extern"), params : this.mkTypeParams(haxe_xml__$Access_AttribAccess.resolve(x,"params")), constructors : cl, platforms : this.defplat(), meta : meta};
	}
	,xenumfield: function(x) {
		var args = null;
		var docElements = x.elementsNamed("haxe_doc");
		var xdoc = docElements.hasNext() ? docElements.next() : null;
		var meta = haxe_xml__$Access_HasNodeAccess.resolve(x,"meta") ? this.xmeta(haxe_xml__$Access_NodeAccess.resolve(x,"meta")) : [];
		if(haxe_xml__$Access_HasAttribAccess.resolve(x,"a")) {
			var names = haxe_xml__$Access_AttribAccess.resolve(x,"a").split(":");
			var elts = x.elements();
			args = [];
			var _g = 0;
			while(_g < names.length) {
				var c = names[_g];
				++_g;
				var opt = false;
				if(c.charAt(0) == "?") {
					opt = true;
					c = HxOverrides.substr(c,1,null);
				}
				args.push({ name : c, opt : opt, t : this.xtype(elts.next())});
			}
		}
		var tmp;
		if(x.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(x.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
			}
			tmp = x.nodeName;
		}
		var tmp1;
		if(xdoc == null) {
			tmp1 = null;
		} else {
			if(xdoc.nodeType != Xml.Document && xdoc.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Invalid nodeType " + (xdoc.nodeType == null ? "null" : XmlType.toString(xdoc.nodeType)));
			}
			var this1 = xdoc;
			tmp1 = haxe_xml_Access.get_innerData(this1);
		}
		return { name : tmp, args : args, doc : tmp1, meta : meta, platforms : this.defplat()};
	}
	,xabstract: function(x) {
		var doc = null;
		var impl = null;
		var athis = null;
		var meta = [];
		var to = [];
		var from = [];
		var c = x.elements();
		while(c.hasNext()) {
			var c1 = c.next();
			var _g;
			if(c1.nodeType == Xml.Document) {
				_g = "Document";
			} else {
				if(c1.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c1.nodeType == null ? "null" : XmlType.toString(c1.nodeType)));
				}
				_g = c1.nodeName;
			}
			switch(_g) {
			case "from":
				var t = c1.elements();
				while(t.hasNext()) {
					var t1 = t.next();
					var x1 = t1.firstElement();
					if(x1.nodeType != Xml.Document && x1.nodeType != Xml.Element) {
						throw haxe_Exception.thrown("Invalid nodeType " + (x1.nodeType == null ? "null" : XmlType.toString(x1.nodeType)));
					}
					var this1 = x1;
					from.push({ t : this.xtype(this1), field : haxe_xml__$Access_HasAttribAccess.resolve(t1,"field") ? haxe_xml__$Access_AttribAccess.resolve(t1,"field") : null});
				}
				break;
			case "haxe_doc":
				doc = haxe_xml_Access.get_innerData(c1);
				break;
			case "impl":
				impl = this.xclass(haxe_xml__$Access_NodeAccess.resolve(c1,"class"));
				break;
			case "meta":
				meta = this.xmeta(c1);
				break;
			case "this":
				var x2 = c1.firstElement();
				if(x2.nodeType != Xml.Document && x2.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Invalid nodeType " + (x2.nodeType == null ? "null" : XmlType.toString(x2.nodeType)));
				}
				var this2 = x2;
				athis = this.xtype(this2);
				break;
			case "to":
				var t2 = c1.elements();
				while(t2.hasNext()) {
					var t3 = t2.next();
					var x3 = t3.firstElement();
					if(x3.nodeType != Xml.Document && x3.nodeType != Xml.Element) {
						throw haxe_Exception.thrown("Invalid nodeType " + (x3.nodeType == null ? "null" : XmlType.toString(x3.nodeType)));
					}
					var this3 = x3;
					to.push({ t : this.xtype(this3), field : haxe_xml__$Access_HasAttribAccess.resolve(t3,"field") ? haxe_xml__$Access_AttribAccess.resolve(t3,"field") : null});
				}
				break;
			default:
				this.xerror(c1);
			}
		}
		return { file : haxe_xml__$Access_HasAttribAccess.resolve(x,"file") ? haxe_xml__$Access_AttribAccess.resolve(x,"file") : null, path : this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path")), module : haxe_xml__$Access_HasAttribAccess.resolve(x,"module") ? this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"module")) : null, doc : doc, isPrivate : x.exists("private"), params : this.mkTypeParams(haxe_xml__$Access_AttribAccess.resolve(x,"params")), platforms : this.defplat(), meta : meta, athis : athis, to : to, from : from, impl : impl};
	}
	,xtypedef: function(x) {
		var doc = null;
		var t = null;
		var meta = [];
		var c = x.elements();
		while(c.hasNext()) {
			var c1 = c.next();
			var tmp;
			if(c1.nodeType == Xml.Document) {
				tmp = "Document";
			} else {
				if(c1.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c1.nodeType == null ? "null" : XmlType.toString(c1.nodeType)));
				}
				tmp = c1.nodeName;
			}
			if(tmp == "haxe_doc") {
				doc = haxe_xml_Access.get_innerData(c1);
			} else {
				var tmp1;
				if(c1.nodeType == Xml.Document) {
					tmp1 = "Document";
				} else {
					if(c1.nodeType != Xml.Element) {
						throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c1.nodeType == null ? "null" : XmlType.toString(c1.nodeType)));
					}
					tmp1 = c1.nodeName;
				}
				if(tmp1 == "meta") {
					meta = this.xmeta(c1);
				} else {
					t = this.xtype(c1);
				}
			}
		}
		var types = new haxe_ds_StringMap();
		if(this.curplatform != null) {
			types.h[this.curplatform] = t;
		}
		return { file : haxe_xml__$Access_HasAttribAccess.resolve(x,"file") ? haxe_xml__$Access_AttribAccess.resolve(x,"file") : null, path : this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path")), module : haxe_xml__$Access_HasAttribAccess.resolve(x,"module") ? this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"module")) : null, doc : doc, isPrivate : x.exists("private"), params : this.mkTypeParams(haxe_xml__$Access_AttribAccess.resolve(x,"params")), type : t, types : types, platforms : this.defplat(), meta : meta};
	}
	,xtype: function(x) {
		var _g;
		if(x.nodeType == Xml.Document) {
			_g = "Document";
		} else {
			if(x.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
			}
			_g = x.nodeName;
		}
		switch(_g) {
		case "a":
			var fields = [];
			var f = x.elements();
			while(f.hasNext()) {
				var f1 = f.next();
				var f2 = this.xclassfield(f1,true);
				f2.platforms = [];
				fields.push(f2);
			}
			return haxe_rtti_CType.CAnonymous(fields);
		case "c":
			return haxe_rtti_CType.CClass(this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path")),this.xtypeparams(x));
		case "d":
			var t = null;
			var tx = x.firstElement();
			if(tx != null) {
				if(tx.nodeType != Xml.Document && tx.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Invalid nodeType " + (tx.nodeType == null ? "null" : XmlType.toString(tx.nodeType)));
				}
				var this1 = tx;
				t = this.xtype(this1);
			}
			return haxe_rtti_CType.CDynamic(t);
		case "e":
			return haxe_rtti_CType.CEnum(this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path")),this.xtypeparams(x));
		case "f":
			var args = [];
			var aname = haxe_xml__$Access_AttribAccess.resolve(x,"a").split(":");
			var eargs_current = 0;
			var eargs_array = aname;
			var evalues = haxe_xml__$Access_HasAttribAccess.resolve(x,"v") ? new haxe_iterators_ArrayIterator(haxe_xml__$Access_AttribAccess.resolve(x,"v").split(":")) : null;
			var e = x.elements();
			while(e.hasNext()) {
				var e1 = e.next();
				var opt = false;
				var a = eargs_current < eargs_array.length ? eargs_array[eargs_current++] : null;
				if(a == null) {
					a = "";
				}
				if(a.charAt(0) == "?") {
					opt = true;
					a = HxOverrides.substr(a,1,null);
				}
				var v = evalues == null || evalues.current >= evalues.array.length ? null : evalues.array[evalues.current++];
				args.push({ name : a, opt : opt, t : this.xtype(e1), value : v == "" ? null : v});
			}
			var ret = args[args.length - 1];
			HxOverrides.remove(args,ret);
			return haxe_rtti_CType.CFunction(args,ret.t);
		case "t":
			return haxe_rtti_CType.CTypedef(this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path")),this.xtypeparams(x));
		case "unknown":
			return haxe_rtti_CType.CUnknown;
		case "x":
			return haxe_rtti_CType.CAbstract(this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path")),this.xtypeparams(x));
		default:
			return this.xerror(x);
		}
	}
	,xtypeparams: function(x) {
		var p = [];
		var c = x.elements();
		while(c.hasNext()) {
			var c1 = c.next();
			p.push(this.xtype(c1));
		}
		return p;
	}
	,defplat: function() {
		var l = [];
		if(this.curplatform != null) {
			l.push(this.curplatform);
		}
		return l;
	}
	,__class__: haxe_rtti_XmlParser
};
var haxe_xml__$Access_NodeAccess = {};
haxe_xml__$Access_NodeAccess.resolve = function(this1,name) {
	var x = this1.elementsNamed(name).next();
	if(x == null) {
		var xname;
		if(this1.nodeType == Xml.Document) {
			xname = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
			}
			xname = this1.nodeName;
		}
		throw haxe_Exception.thrown(xname + " is missing element " + name);
	}
	if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Invalid nodeType " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
	}
	var this1 = x;
	return this1;
};
var haxe_xml__$Access_AttribAccess = {};
haxe_xml__$Access_AttribAccess.resolve = function(this1,name) {
	if(this1.nodeType == Xml.Document) {
		throw haxe_Exception.thrown("Cannot access document attribute " + name);
	}
	var v = this1.get(name);
	if(v == null) {
		if(this1.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
		}
		throw haxe_Exception.thrown(this1.nodeName + " is missing attribute " + name);
	}
	return v;
};
var haxe_xml__$Access_HasAttribAccess = {};
haxe_xml__$Access_HasAttribAccess.resolve = function(this1,name) {
	if(this1.nodeType == Xml.Document) {
		throw haxe_Exception.thrown("Cannot access document attribute " + name);
	}
	return this1.exists(name);
};
var haxe_xml__$Access_HasNodeAccess = {};
haxe_xml__$Access_HasNodeAccess.resolve = function(this1,name) {
	return this1.elementsNamed(name).hasNext();
};
var haxe_xml__$Access_NodeListAccess = {};
haxe_xml__$Access_NodeListAccess.resolve = function(this1,name) {
	var l = [];
	var x = this1.elementsNamed(name);
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1.nodeType != Xml.Document && x1.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Invalid nodeType " + (x1.nodeType == null ? "null" : XmlType.toString(x1.nodeType)));
		}
		var this1 = x1;
		l.push(this1);
	}
	return l;
};
var haxe_xml_Access = {};
haxe_xml_Access.__properties__ = {get_innerHTML:"get_innerHTML",get_innerData:"get_innerData"};
haxe_xml_Access.get_innerData = function(this1) {
	if(this1.nodeType != Xml.Document && this1.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
	}
	var it_current = 0;
	var it_array = this1.children;
	if(it_current >= it_array.length) {
		var tmp;
		if(this1.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
			}
			tmp = this1.nodeName;
		}
		throw haxe_Exception.thrown(tmp + " does not have data");
	}
	var v = it_array[it_current++];
	if(it_current < it_array.length) {
		var n = it_array[it_current++];
		var tmp;
		if(v.nodeType == Xml.PCData && n.nodeType == Xml.CData) {
			if(v.nodeType == Xml.Document || v.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (v.nodeType == null ? "null" : XmlType.toString(v.nodeType)));
			}
			tmp = StringTools.trim(v.nodeValue) == "";
		} else {
			tmp = false;
		}
		if(tmp) {
			if(it_current >= it_array.length) {
				if(n.nodeType == Xml.Document || n.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (n.nodeType == null ? "null" : XmlType.toString(n.nodeType)));
				}
				return n.nodeValue;
			}
			var n2 = it_array[it_current++];
			var tmp;
			if(n2.nodeType == Xml.PCData) {
				if(n2.nodeType == Xml.Document || n2.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (n2.nodeType == null ? "null" : XmlType.toString(n2.nodeType)));
				}
				tmp = StringTools.trim(n2.nodeValue) == "";
			} else {
				tmp = false;
			}
			if(tmp && it_current >= it_array.length) {
				if(n.nodeType == Xml.Document || n.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (n.nodeType == null ? "null" : XmlType.toString(n.nodeType)));
				}
				return n.nodeValue;
			}
		}
		var tmp;
		if(this1.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
			}
			tmp = this1.nodeName;
		}
		throw haxe_Exception.thrown(tmp + " does not only have data");
	}
	if(v.nodeType != Xml.PCData && v.nodeType != Xml.CData) {
		var tmp;
		if(this1.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
			}
			tmp = this1.nodeName;
		}
		throw haxe_Exception.thrown(tmp + " does not have data");
	}
	if(v.nodeType == Xml.Document || v.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (v.nodeType == null ? "null" : XmlType.toString(v.nodeType)));
	}
	return v.nodeValue;
};
haxe_xml_Access.get_innerHTML = function(this1) {
	var s_b = "";
	if(this1.nodeType != Xml.Document && this1.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
	}
	var _g_current = 0;
	var _g_array = this1.children;
	while(_g_current < _g_array.length) {
		var x = _g_array[_g_current++];
		s_b += Std.string(haxe_xml_Printer.print(x));
	}
	return s_b;
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g = 0;
	var _g1 = position;
	while(_g < _g1) {
		var i = _g++;
		var c = xml.charCodeAt(i);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
$hxClasses["haxe.xml.XmlParserException"] = haxe_xml_XmlParserException;
haxe_xml_XmlParserException.__name__ = "haxe.xml.XmlParserException";
haxe_xml_XmlParserException.prototype = {
	message: null
	,lineNumber: null
	,positionAtLine: null
	,position: null
	,xml: null
	,toString: function() {
		var c = js_Boot.getClass(this);
		return c.__name__ + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = "haxe.xml.Parser";
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(p < str.length) {
		var c = str.charCodeAt(p);
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				var tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(aname)) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Duplicate attribute [" + aname + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCodePoint(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent == null || parent.nodeType != 0) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unexpected </" + v + ">, tag is not open",str,p));
				}
				if(parent.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
				}
				if(v != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
					}
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				parent.addChild(Xml.createProcessingInstruction(str1));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120 ? Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)) : Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCodePoint(c1);
				} else if(!Object.prototype.hasOwnProperty.call(haxe_xml_Parser.escapes.h,s)) {
					if(strict) {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
					}
					buf.b += Std.string("&" + s + ";");
				} else {
					buf.b += Std.string(haxe_xml_Parser.escapes.h[s]);
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCodePoint(c),str,p));
				}
				buf.b += String.fromCodePoint(38);
				var len5 = p - start;
				buf.b += len5 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len5);
				--p;
				start = p + 1;
				state = escapeNext;
			}
			break;
		}
		++p;
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(parent.nodeType == 0) {
			if(parent.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
			}
			throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unclosed node <" + parent.nodeName + ">",str,p));
		}
		if(p != start || nsubs == 0) {
			var len = p - start;
			buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
			parent.addChild(Xml.createPCData(buf.b));
			++nsubs;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += String.fromCodePoint(38);
		var len = p - start;
		buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
		parent.addChild(Xml.createPCData(buf.b));
		++nsubs;
		return p;
	}
	throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var haxe_xml_Printer = function(pretty) {
	this.output = new StringBuf();
	this.pretty = pretty;
};
$hxClasses["haxe.xml.Printer"] = haxe_xml_Printer;
haxe_xml_Printer.__name__ = "haxe.xml.Printer";
haxe_xml_Printer.print = function(xml,pretty) {
	if(pretty == null) {
		pretty = false;
	}
	var printer = new haxe_xml_Printer(pretty);
	printer.writeNode(xml,"");
	return printer.output.b;
};
haxe_xml_Printer.prototype = {
	output: null
	,pretty: null
	,writeNode: function(value,tabs) {
		switch(value.nodeType) {
		case 0:
			this.output.b += Std.string(tabs + "<");
			if(value.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string(value.nodeName);
			var attribute = value.attributes();
			while(attribute.hasNext()) {
				var attribute1 = attribute.next();
				this.output.b += Std.string(" " + attribute1 + "=\"");
				var input = StringTools.htmlEscape(value.get(attribute1),true);
				this.output.b += Std.string(input);
				this.output.b += "\"";
			}
			if(this.hasChildren(value)) {
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
				if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
				}
				var _g_current = 0;
				var _g_array = value.children;
				while(_g_current < _g_array.length) {
					var child = _g_array[_g_current++];
					this.writeNode(child,this.pretty ? tabs + "\t" : tabs);
				}
				this.output.b += Std.string(tabs + "</");
				if(value.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
				}
				this.output.b += Std.string(value.nodeName);
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
			} else {
				this.output.b += "/>";
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 1:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var nodeValue = value.nodeValue;
			if(nodeValue.length != 0) {
				var input = tabs + StringTools.htmlEscape(nodeValue);
				this.output.b += Std.string(input);
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 2:
			this.output.b += Std.string(tabs + "<![CDATA[");
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string(value.nodeValue);
			this.output.b += "]]>";
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 3:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var commentContent = value.nodeValue;
			var _this_r = new RegExp("[\n\r\t]+","g".split("u").join(""));
			commentContent = commentContent.replace(_this_r,"");
			commentContent = "<!--" + commentContent + "-->";
			this.output.b += tabs == null ? "null" : "" + tabs;
			var input = StringTools.trim(commentContent);
			this.output.b += Std.string(input);
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 4:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string("<!DOCTYPE " + value.nodeValue + ">");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 5:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string("<?" + value.nodeValue + "?>");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 6:
			if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var _g_current = 0;
			var _g_array = value.children;
			while(_g_current < _g_array.length) {
				var child = _g_array[_g_current++];
				this.writeNode(child,tabs);
			}
			break;
		}
	}
	,hasChildren: function(value) {
		if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
		}
		var _g_current = 0;
		var _g_array = value.children;
		while(_g_current < _g_array.length) {
			var child = _g_array[_g_current++];
			switch(child.nodeType) {
			case 0:case 1:
				return true;
			case 2:case 3:
				if(child.nodeType == Xml.Document || child.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (child.nodeType == null ? "null" : XmlType.toString(child.nodeType)));
				}
				if(StringTools.ltrim(child.nodeValue).length != 0) {
					return true;
				}
				break;
			default:
			}
		}
		return false;
	}
	,__class__: haxe_xml_Printer
};
var history_BrowserHistory = require("history");
var hxbit_ConvertField = function(path,from,to) {
	this.path = path;
	this.from = from;
	this.to = to;
};
$hxClasses["hxbit.ConvertField"] = hxbit_ConvertField;
hxbit_ConvertField.__name__ = "hxbit.ConvertField";
hxbit_ConvertField.prototype = {
	path: null
	,index: null
	,same: null
	,defaultValue: null
	,from: null
	,to: null
	,conv: null
	,__class__: hxbit_ConvertField
};
var hxbit_Convert = function(classPath,ourSchema,schema) {
	var ourMap_h = Object.create(null);
	var _g = 0;
	var _g1 = ourSchema.fieldsNames.length;
	while(_g < _g1) {
		var i = _g++;
		ourMap_h[ourSchema.fieldsNames[i]] = ourSchema.fieldsTypes[i];
	}
	this.read = [];
	this.hadCID = !schema.isFinal;
	this.hasCID = !ourSchema.isFinal;
	var map_h = Object.create(null);
	var _g = 0;
	var _g1 = schema.fieldsNames.length;
	while(_g < _g1) {
		var i = _g++;
		var oldT = schema.fieldsTypes[i];
		var newT = ourMap_h[schema.fieldsNames[i]];
		var c = new hxbit_ConvertField(classPath + "." + schema.fieldsNames[i],oldT,newT);
		if(newT != null) {
			if(hxbit_Convert.sameType(oldT,newT)) {
				c.same = true;
			} else {
				c.conv = hxbit_Convert.convFuns.h[c.path];
				c.defaultValue = hxbit_Convert.getDefault(newT);
			}
		}
		c.index = this.read.length;
		this.read.push(c);
		map_h[schema.fieldsNames[i]] = c;
	}
	this.write = [];
	var _g = 0;
	var _g1 = ourSchema.fieldsNames.length;
	while(_g < _g1) {
		var i = _g++;
		var newT = ourSchema.fieldsTypes[i];
		var c = map_h[ourSchema.fieldsNames[i]];
		if(c == null) {
			c = new hxbit_ConvertField(null,null,newT);
			c.defaultValue = hxbit_Convert.getDefault(newT);
		}
		this.write.push(c);
	}
};
$hxClasses["hxbit.Convert"] = hxbit_Convert;
hxbit_Convert.__name__ = "hxbit.Convert";
hxbit_Convert.sameType = function(a,b) {
	switch(a._hx_index) {
	case 0:
		switch(b._hx_index) {
		case 10:
			var b1 = b.k;
			return hxbit_Convert.sameType(a,b1);
		case 16:
			var _g = b.t;
			return true;
		default:
			return Type.enumEq(a,b);
		}
		break;
	case 7:
		var _g = a.k;
		var _g1 = a.v;
		switch(b._hx_index) {
		case 7:
			var bk = b.k;
			var bv = b.v;
			var av = _g1;
			var ak = _g;
			if(hxbit_Convert.sameType(ak,bk)) {
				return hxbit_Convert.sameType(av,bv);
			} else {
				return false;
			}
			break;
		case 10:
			var b1 = b.k;
			return hxbit_Convert.sameType(a,b1);
		default:
			return Type.enumEq(a,b);
		}
		break;
	case 8:
		var _g = a.k;
		switch(b._hx_index) {
		case 8:
			var b1 = b.k;
			var a1 = _g;
			return hxbit_Convert.sameType(a1,b1);
		case 10:
			var b1 = b.k;
			return hxbit_Convert.sameType(a,b1);
		default:
			return Type.enumEq(a,b);
		}
		break;
	case 9:
		var _g = a.fields;
		switch(b._hx_index) {
		case 9:
			var fb = b.fields;
			var fa = _g;
			if(fa.length != fb.length) {
				return false;
			}
			var _g = 0;
			var _g1 = fa.length;
			while(_g < _g1) {
				var i = _g++;
				var a1 = fa[i];
				var b1 = fb[i];
				if(a1.name != b1.name || a1.opt != b1.opt || !hxbit_Convert.sameType(a1.type,b1.type)) {
					return false;
				}
			}
			return true;
		case 10:
			var b1 = b.k;
			return hxbit_Convert.sameType(a,b1);
		default:
			return Type.enumEq(a,b);
		}
		break;
	case 10:
		var _g = a.k;
		if(b._hx_index == 10) {
			var b1 = b.k;
			var a1 = _g;
			return hxbit_Convert.sameType(a1,b1);
		} else {
			var a1 = _g;
			return hxbit_Convert.sameType(a1,b);
		}
		break;
	case 11:
		var _g = a.k;
		switch(b._hx_index) {
		case 10:
			var b1 = b.k;
			return hxbit_Convert.sameType(a,b1);
		case 11:
			var b1 = b.k;
			var a1 = _g;
			return hxbit_Convert.sameType(a1,b1);
		default:
			return Type.enumEq(a,b);
		}
		break;
	case 12:
		var _g = a.t;
		switch(b._hx_index) {
		case 10:
			var b1 = b.k;
			return hxbit_Convert.sameType(a,b1);
		case 12:
			var b1 = b.t;
			var a1 = _g;
			return hxbit_Convert.sameType(a1,b1);
		default:
			return Type.enumEq(a,b);
		}
		break;
	case 16:
		var _g = a.t;
		switch(b._hx_index) {
		case 0:
			return true;
		case 10:
			var b1 = b.k;
			return hxbit_Convert.sameType(a,b1);
		default:
			return Type.enumEq(a,b);
		}
		break;
	default:
		if(b._hx_index == 10) {
			var b1 = b.k;
			return hxbit_Convert.sameType(a,b1);
		} else {
			return Type.enumEq(a,b);
		}
	}
};
hxbit_Convert.getDefault = function(t) {
	switch(t._hx_index) {
	case 0:
		return 0;
	case 1:
		return 0.;
	case 2:
		return false;
	case 5:
		var _g = t.name;
		return null;
	case 6:
		var _g = t.name;
		return null;
	case 7:
		var _g = t.v;
		var k = t.k;
		switch(k._hx_index) {
		case 0:
			return new haxe_ds_IntMap();
		case 3:
			return new haxe_ds_StringMap();
		default:
			return new haxe_ds_ObjectMap();
		}
		break;
	case 8:
		var _g = t.k;
		return [];
	case 9:
		var _g = t.fields;
		return null;
	case 10:
		var t1 = t.k;
		return hxbit_Convert.getDefault(t1);
	case 11:
		var _g = t.k;
		var this1 = new Array(0);
		return this1;
	case 12:
		var _g = t.t;
		return null;
	case 3:case 4:case 13:case 14:case 17:
		return null;
	case 15:
		var this1 = new haxe__$Int64__$_$_$Int64(0,0);
		return this1;
	case 16:
		var _g = t.t;
		return 0;
	}
};
hxbit_Convert.registerConverter = function(path,f) {
	hxbit_Convert.convFuns.h[path] = f;
};
hxbit_Convert.prototype = {
	read: null
	,write: null
	,hasCID: null
	,hadCID: null
	,toString: function() {
		var _g = [];
		var _g1 = 0;
		var _g2 = this.write.length;
		while(_g1 < _g2) {
			var i = _g1++;
			var w = this.write[i];
			if(w.from == null) {
				_g.push("insert:" + Std.string(w.defaultValue));
			} else if(w.same) {
				_g.push(i == w.index ? "s" : "@" + w.index);
			} else {
				_g.push("@" + w.index + ":" + Std.string(w.to));
			}
		}
		return _g.toString();
	}
	,__class__: hxbit_Convert
};
var hxbit_RpcMode = $hxEnums["hxbit.RpcMode"] = { __ename__:"hxbit.RpcMode",__constructs__:null
	,All: {_hx_name:"All",_hx_index:0,__enum__:"hxbit.RpcMode",toString:$estr}
	,Clients: {_hx_name:"Clients",_hx_index:1,__enum__:"hxbit.RpcMode",toString:$estr}
	,Server: {_hx_name:"Server",_hx_index:2,__enum__:"hxbit.RpcMode",toString:$estr}
	,Owner: {_hx_name:"Owner",_hx_index:3,__enum__:"hxbit.RpcMode",toString:$estr}
	,Immediate: {_hx_name:"Immediate",_hx_index:4,__enum__:"hxbit.RpcMode",toString:$estr}
};
hxbit_RpcMode.__constructs__ = [hxbit_RpcMode.All,hxbit_RpcMode.Clients,hxbit_RpcMode.Server,hxbit_RpcMode.Owner,hxbit_RpcMode.Immediate];
var hxbit_PropTypeDesc = $hxEnums["hxbit.PropTypeDesc"] = { __ename__:"hxbit.PropTypeDesc",__constructs__:null
	,PInt: {_hx_name:"PInt",_hx_index:0,__enum__:"hxbit.PropTypeDesc",toString:$estr}
	,PFloat: {_hx_name:"PFloat",_hx_index:1,__enum__:"hxbit.PropTypeDesc",toString:$estr}
	,PBool: {_hx_name:"PBool",_hx_index:2,__enum__:"hxbit.PropTypeDesc",toString:$estr}
	,PString: {_hx_name:"PString",_hx_index:3,__enum__:"hxbit.PropTypeDesc",toString:$estr}
	,PBytes: {_hx_name:"PBytes",_hx_index:4,__enum__:"hxbit.PropTypeDesc",toString:$estr}
	,PSerializable: ($_=function(name) { return {_hx_index:5,name:name,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PSerializable",$_.__params__ = ["name"],$_)
	,PEnum: ($_=function(name) { return {_hx_index:6,name:name,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PEnum",$_.__params__ = ["name"],$_)
	,PMap: ($_=function(k,v) { return {_hx_index:7,k:k,v:v,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PMap",$_.__params__ = ["k","v"],$_)
	,PArray: ($_=function(k) { return {_hx_index:8,k:k,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PArray",$_.__params__ = ["k"],$_)
	,PObj: ($_=function(fields) { return {_hx_index:9,fields:fields,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PObj",$_.__params__ = ["fields"],$_)
	,PAlias: ($_=function(k) { return {_hx_index:10,k:k,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PAlias",$_.__params__ = ["k"],$_)
	,PVector: ($_=function(k) { return {_hx_index:11,k:k,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PVector",$_.__params__ = ["k"],$_)
	,PNull: ($_=function(t) { return {_hx_index:12,t:t,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PNull",$_.__params__ = ["t"],$_)
	,PUnknown: {_hx_name:"PUnknown",_hx_index:13,__enum__:"hxbit.PropTypeDesc",toString:$estr}
	,PDynamic: {_hx_name:"PDynamic",_hx_index:14,__enum__:"hxbit.PropTypeDesc",toString:$estr}
	,PInt64: {_hx_name:"PInt64",_hx_index:15,__enum__:"hxbit.PropTypeDesc",toString:$estr}
	,PFlags: ($_=function(t) { return {_hx_index:16,t:t,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PFlags",$_.__params__ = ["t"],$_)
	,PStruct: {_hx_name:"PStruct",_hx_index:17,__enum__:"hxbit.PropTypeDesc",toString:$estr}
};
hxbit_PropTypeDesc.__constructs__ = [hxbit_PropTypeDesc.PInt,hxbit_PropTypeDesc.PFloat,hxbit_PropTypeDesc.PBool,hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PBytes,hxbit_PropTypeDesc.PSerializable,hxbit_PropTypeDesc.PEnum,hxbit_PropTypeDesc.PMap,hxbit_PropTypeDesc.PArray,hxbit_PropTypeDesc.PObj,hxbit_PropTypeDesc.PAlias,hxbit_PropTypeDesc.PVector,hxbit_PropTypeDesc.PNull,hxbit_PropTypeDesc.PUnknown,hxbit_PropTypeDesc.PDynamic,hxbit_PropTypeDesc.PInt64,hxbit_PropTypeDesc.PFlags,hxbit_PropTypeDesc.PStruct];
var hxbit_Macros = function() { };
$hxClasses["hxbit.Macros"] = hxbit_Macros;
hxbit_Macros.__name__ = "hxbit.Macros";
var hxbit_Schema = function() {
	this.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	this.fieldsNames = [];
	this.fieldsTypes = [];
};
$hxClasses["hxbit.Schema"] = hxbit_Schema;
hxbit_Schema.__name__ = "hxbit.Schema";
hxbit_Schema.__interfaces__ = [hxbit_Serializable];
hxbit_Schema.prototype = {
	isFinal: null
	,fieldsNames: null
	,fieldsTypes: null
	,get_checkSum: function() {
		var s = new hxbit_Serializer();
		s.begin();
		var old = this.__uid;
		this.__uid = 0;
		s.addKnownRef(this);
		this.__uid = old;
		var bytes = s.end();
		return haxe_crypto_Crc32.make(bytes);
	}
	,__uid: null
	,getCLID: function() {
		return hxbit_Schema.__clid;
	}
	,serialize: function(__ctx) {
		__ctx.out.addByte(this.isFinal ? 1 : 0);
		var a = this.fieldsNames;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var v = a.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < a.length) {
				var v = a[_g];
				++_g;
				if(v == null) {
					__ctx.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(v);
					var v1 = b.length + 1;
					if(v1 >= 0 && v1 < 128) {
						__ctx.out.addByte(v1);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v1);
					}
					__ctx.out.add(b);
				}
			}
		}
		var a = this.fieldsTypes;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var v = a.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < a.length) {
				var v = a[_g];
				++_g;
				hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(__ctx,v);
			}
		}
	}
	,getSerializeSchema: function() {
		var schema = new hxbit_Schema();
		schema.fieldsNames.push("isFinal");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PBool);
		schema.fieldsNames.push("fieldsNames");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PString));
		schema.fieldsNames.push("fieldsTypes");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc")));
		schema.isFinal = hxbit_Serializer.isClassFinal(hxbit_Schema.__clid);
		return schema;
	}
	,unserializeInit: function() {
	}
	,unserialize: function(__ctx) {
		this.isFinal = __ctx.input.b[__ctx.inPos++] != 0;
		var e0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var a = [];
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len = v;
				if(len == 0) {
					e0 = null;
				} else {
					--len;
					var s = __ctx.input.getString(__ctx.inPos,len);
					__ctx.inPos += len;
					e0 = s;
				}
				a[i] = e0;
			}
			tmp = a;
		}
		this.fieldsNames = tmp;
		var e0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var a = [];
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(__ctx);
				e0 = __e;
				a[i] = e0;
			}
			tmp = a;
		}
		this.fieldsTypes = tmp;
	}
	,__class__: hxbit_Schema
	,__properties__: {get_checkSum:"get_checkSum"}
};
var hxbit_SerializableEnum = function() { };
$hxClasses["hxbit.SerializableEnum"] = hxbit_SerializableEnum;
hxbit_SerializableEnum.__name__ = "hxbit.SerializableEnum";
var hxbit_StructSerializable = function() { };
$hxClasses["hxbit.StructSerializable"] = hxbit_StructSerializable;
hxbit_StructSerializable.__name__ = "hxbit.StructSerializable";
hxbit_StructSerializable.__isInterface__ = true;
hxbit_StructSerializable.prototype = {
	customSerialize: null
	,customUnserialize: null
	,__class__: hxbit_StructSerializable
};
var hxbit_enumSer_Hxbit_$PropTypeDesc = function() { };
$hxClasses["hxbit.enumSer.Hxbit_PropTypeDesc"] = hxbit_enumSer_Hxbit_$PropTypeDesc;
hxbit_enumSer_Hxbit_$PropTypeDesc.__name__ = "hxbit.enumSer.Hxbit_PropTypeDesc";
hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize = function(ctx,v) {
	if(v == null) {
		ctx.out.addByte(0);
	} else {
		switch(v._hx_index) {
		case 0:
			ctx.out.addByte(1);
			break;
		case 1:
			ctx.out.addByte(2);
			break;
		case 2:
			ctx.out.addByte(3);
			break;
		case 3:
			ctx.out.addByte(4);
			break;
		case 4:
			ctx.out.addByte(5);
			break;
		case 5:
			var name = v.name;
			ctx.out.addByte(6);
			if(name == null) {
				ctx.out.addByte(0);
			} else {
				var b = haxe_io_Bytes.ofString(name);
				var v1 = b.length + 1;
				if(v1 >= 0 && v1 < 128) {
					ctx.out.addByte(v1);
				} else {
					ctx.out.addByte(128);
					ctx.out.addInt32(v1);
				}
				ctx.out.add(b);
			}
			break;
		case 6:
			var name = v.name;
			ctx.out.addByte(7);
			if(name == null) {
				ctx.out.addByte(0);
			} else {
				var b = haxe_io_Bytes.ofString(name);
				var v1 = b.length + 1;
				if(v1 >= 0 && v1 < 128) {
					ctx.out.addByte(v1);
				} else {
					ctx.out.addByte(128);
					ctx.out.addInt32(v1);
				}
				ctx.out.add(b);
			}
			break;
		case 7:
			var k = v.k;
			var v1 = v.v;
			ctx.out.addByte(8);
			hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(ctx,k);
			hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(ctx,v1);
			break;
		case 8:
			var k = v.k;
			ctx.out.addByte(9);
			hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(ctx,k);
			break;
		case 9:
			var fields = v.fields;
			ctx.out.addByte(10);
			if(fields == null) {
				ctx.out.addByte(0);
			} else {
				var v1 = fields.length + 1;
				if(v1 >= 0 && v1 < 128) {
					ctx.out.addByte(v1);
				} else {
					ctx.out.addByte(128);
					ctx.out.addInt32(v1);
				}
				var _g = 0;
				while(_g < fields.length) {
					var v1 = fields[_g];
					++_g;
					var v2 = v1;
					if(v2 == null) {
						ctx.out.addByte(0);
					} else {
						var fbits = 0;
						if(v2.name != null) {
							fbits |= 1;
						}
						if(v2.type != null) {
							fbits |= 2;
						}
						var v3 = fbits + 1;
						if(v3 >= 0 && v3 < 128) {
							ctx.out.addByte(v3);
						} else {
							ctx.out.addByte(128);
							ctx.out.addInt32(v3);
						}
						if((fbits & 1) != 0) {
							var s = v2.name;
							if(s == null) {
								ctx.out.addByte(0);
							} else {
								var b = haxe_io_Bytes.ofString(s);
								var v4 = b.length + 1;
								if(v4 >= 0 && v4 < 128) {
									ctx.out.addByte(v4);
								} else {
									ctx.out.addByte(128);
									ctx.out.addInt32(v4);
								}
								ctx.out.add(b);
							}
						}
						ctx.out.addByte(v2.opt ? 1 : 0);
						if((fbits & 2) != 0) {
							hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(ctx,v2.type);
						}
					}
				}
			}
			break;
		case 10:
			var k = v.k;
			ctx.out.addByte(11);
			hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(ctx,k);
			break;
		case 11:
			var k = v.k;
			ctx.out.addByte(12);
			hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(ctx,k);
			break;
		case 12:
			var t = v.t;
			ctx.out.addByte(13);
			hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(ctx,t);
			break;
		case 13:
			ctx.out.addByte(14);
			break;
		case 14:
			ctx.out.addByte(15);
			break;
		case 15:
			ctx.out.addByte(16);
			break;
		case 16:
			var t = v.t;
			ctx.out.addByte(17);
			hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(ctx,t);
			break;
		case 17:
			ctx.out.addByte(18);
			break;
		}
	}
};
hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize = function(ctx) {
	var b = ctx.input.b[ctx.inPos++];
	if(b == 0) {
		return null;
	}
	switch(b) {
	case 1:
		return hxbit_PropTypeDesc.PInt;
	case 2:
		return hxbit_PropTypeDesc.PFloat;
	case 3:
		return hxbit_PropTypeDesc.PBool;
	case 4:
		return hxbit_PropTypeDesc.PString;
	case 5:
		return hxbit_PropTypeDesc.PBytes;
	case 6:
		var _name;
		var v = ctx.input.b[ctx.inPos++];
		if(v == 128) {
			v = ctx.input.getInt32(ctx.inPos);
			ctx.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			_name = null;
		} else {
			--len;
			var s = ctx.input.getString(ctx.inPos,len);
			ctx.inPos += len;
			_name = s;
		}
		return hxbit_PropTypeDesc.PSerializable(_name);
	case 7:
		var _name;
		var v = ctx.input.b[ctx.inPos++];
		if(v == 128) {
			v = ctx.input.getInt32(ctx.inPos);
			ctx.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			_name = null;
		} else {
			--len;
			var s = ctx.input.getString(ctx.inPos,len);
			ctx.inPos += len;
			_name = s;
		}
		return hxbit_PropTypeDesc.PEnum(_name);
	case 8:
		var _k;
		var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(ctx);
		_k = __e;
		var _v;
		var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(ctx);
		_v = __e;
		return hxbit_PropTypeDesc.PMap(_k,_v);
	case 9:
		var _k;
		var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(ctx);
		_k = __e;
		return hxbit_PropTypeDesc.PArray(_k);
	case 10:
		var _fields;
		var e0;
		var v = ctx.input.b[ctx.inPos++];
		if(v == 128) {
			v = ctx.input.getInt32(ctx.inPos);
			ctx.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			_fields = null;
		} else {
			--len;
			var a = [];
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var v = ctx.input.b[ctx.inPos++];
				if(v == 128) {
					v = ctx.input.getInt32(ctx.inPos);
					ctx.inPos += 4;
				}
				var fbits = v;
				if(fbits == 0) {
					e0 = null;
				} else {
					--fbits;
					var type = null;
					var name = null;
					if((fbits & 1) != 0) {
						var v1 = ctx.input.b[ctx.inPos++];
						if(v1 == 128) {
							v1 = ctx.input.getInt32(ctx.inPos);
							ctx.inPos += 4;
						}
						var len = v1;
						if(len == 0) {
							name = null;
						} else {
							--len;
							var s = ctx.input.getString(ctx.inPos,len);
							ctx.inPos += len;
							name = s;
						}
					}
					var opt = ctx.input.b[ctx.inPos++] != 0;
					if((fbits & 2) != 0) {
						var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(ctx);
						type = __e;
					}
					e0 = { name : name, opt : opt, type : type};
				}
				a[i] = e0;
			}
			_fields = a;
		}
		return hxbit_PropTypeDesc.PObj(_fields);
	case 11:
		var _k;
		var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(ctx);
		_k = __e;
		return hxbit_PropTypeDesc.PAlias(_k);
	case 12:
		var _k;
		var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(ctx);
		_k = __e;
		return hxbit_PropTypeDesc.PVector(_k);
	case 13:
		var _t;
		var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(ctx);
		_t = __e;
		return hxbit_PropTypeDesc.PNull(_t);
	case 14:
		return hxbit_PropTypeDesc.PUnknown;
	case 15:
		return hxbit_PropTypeDesc.PDynamic;
	case 16:
		return hxbit_PropTypeDesc.PInt64;
	case 17:
		var _t;
		var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(ctx);
		_t = __e;
		return hxbit_PropTypeDesc.PFlags(_t);
	case 18:
		return hxbit_PropTypeDesc.PStruct;
	default:
		throw haxe_Exception.thrown("Invalid enum index " + b);
	}
};
hxbit_enumSer_Hxbit_$PropTypeDesc.getSchema = function() {
	var s = new hxbit_Schema();
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PInt");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PFloat");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PBool");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PString");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PBytes");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PString;
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PSerializable");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PString;
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PEnum");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var v;
	var t = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PMap");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PArray");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PObj([{ name : "name", opt : false, type : hxbit_PropTypeDesc.PString},{ name : "opt", opt : false, type : hxbit_PropTypeDesc.PBool},{ name : "type", opt : false, type : hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc")}]));
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PObj");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PAlias");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PVector");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PNull");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PUnknown");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PDynamic");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PInt64");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PFlags");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PStruct");
	return s;
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = "js.Browser";
js_Browser.__properties__ = {get_supported:"get_supported"};
js_Browser.get_supported = function() {
	if(typeof(window) != "undefined" && typeof(window.location) != "undefined") {
		return typeof(window.location.protocol) == "string";
	} else {
		return false;
	}
};
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		if(s.length == 0) {
			var key = "_hx_" + Math.random();
			s.setItem(key,key);
			s.removeItem(key);
		}
		return s;
	} catch( _g ) {
		return null;
	}
};
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw haxe_Exception.thrown("Unable to create XMLHttpRequest object.");
};
var js_Cookie = function() { };
$hxClasses["js.Cookie"] = js_Cookie;
js_Cookie.__name__ = "js.Cookie";
js_Cookie.set = function(name,value,expireDelay,path,domain) {
	var s = name + "=" + encodeURIComponent(value);
	if(expireDelay != null) {
		var d = new Date(new Date().getTime() + expireDelay * 1000);
		s += ";expires=" + d.toGMTString();
	}
	s += ";SameSite=None; Secure";
	if(path != null) {
		s += ";path=" + path;
	}
	if(domain != null) {
		s += ";domain=" + domain;
	}
	haxe_Log.trace(s,{ fileName : "js/Cookie.hx", lineNumber : 45, className : "js.Cookie", methodName : "set"});
	window.document.cookie = s;
};
js_Cookie.all = function() {
	var h = new haxe_ds_StringMap();
	var a = window.document.cookie.split(";");
	var _g = 0;
	while(_g < a.length) {
		var e = a[_g];
		++_g;
		e = StringTools.ltrim(e);
		var t = e.split("=");
		if(t.length < 2) {
			continue;
		}
		var value = decodeURIComponent(t[1].split("+").join(" "));
		h.h[t[0]] = value;
	}
	return h;
};
js_Cookie.get = function(name) {
	return js_Cookie.all().h[name];
};
js_Cookie.exists = function(name) {
	var _this = js_Cookie.all();
	return Object.prototype.hasOwnProperty.call(_this.h,name);
};
js_Cookie.remove = function(name,path,domain) {
	js_Cookie.set(name,"",-10,path,domain);
};
var js_d3__$D3_InitPriority = function() { };
$hxClasses["js.d3._D3.InitPriority"] = js_d3__$D3_InitPriority;
js_d3__$D3_InitPriority.__name__ = "js.d3._D3.InitPriority";
var js_jquery_JqEltsIterator = function(j) {
	this.i = 0;
	this.j = j;
};
$hxClasses["js.jquery.JqEltsIterator"] = js_jquery_JqEltsIterator;
js_jquery_JqEltsIterator.__name__ = "js.jquery.JqEltsIterator";
js_jquery_JqEltsIterator.prototype = {
	j: null
	,i: null
	,hasNext: function() {
		return this.i < this.j.length;
	}
	,next: function() {
		return $(this.j[this.i++]);
	}
	,__class__: js_jquery_JqEltsIterator
};
var js_jquery_JqIterator = function(j) {
	this.i = 0;
	this.j = j;
};
$hxClasses["js.jquery.JqIterator"] = js_jquery_JqIterator;
js_jquery_JqIterator.__name__ = "js.jquery.JqIterator";
js_jquery_JqIterator.prototype = {
	j: null
	,i: null
	,hasNext: function() {
		return this.i < this.j.length;
	}
	,next: function() {
		return this.j[this.i++];
	}
	,__class__: js_jquery_JqIterator
};
var js_lib__$ArrayBuffer_ArrayBufferCompat = function() { };
$hxClasses["js.lib._ArrayBuffer.ArrayBufferCompat"] = js_lib__$ArrayBuffer_ArrayBufferCompat;
js_lib__$ArrayBuffer_ArrayBufferCompat.__name__ = "js.lib._ArrayBuffer.ArrayBufferCompat";
js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var resultArray = new Uint8Array(u.byteLength);
	resultArray.set(u);
	return resultArray.buffer;
};
var jwt_JWTResult = $hxEnums["jwt.JWTResult"] = { __ename__:"jwt.JWTResult",__constructs__:null
	,Valid: ($_=function(payload) { return {_hx_index:0,payload:payload,__enum__:"jwt.JWTResult",toString:$estr}; },$_._hx_name="Valid",$_.__params__ = ["payload"],$_)
	,Invalid: ($_=function(payload) { return {_hx_index:1,payload:payload,__enum__:"jwt.JWTResult",toString:$estr}; },$_._hx_name="Invalid",$_.__params__ = ["payload"],$_)
	,Malformed: {_hx_name:"Malformed",_hx_index:2,__enum__:"jwt.JWTResult",toString:$estr}
};
jwt_JWTResult.__constructs__ = [jwt_JWTResult.Valid,jwt_JWTResult.Invalid,jwt_JWTResult.Malformed];
var jwt_JWT = function() {
};
$hxClasses["jwt.JWT"] = jwt_JWT;
jwt_JWT.__name__ = "jwt.JWT";
jwt_JWT.base64url_encode = function(b) {
	var b64 = haxe_crypto_Base64.encode(b);
	return StringTools.replace(StringTools.replace(StringTools.replace(b64,"+","-"),"/","_"),"=","");
};
jwt_JWT.base64url_decode = function(s) {
	var s64 = StringTools.replace(StringTools.replace(s,"-","+"),"_","/");
	var s641;
	switch(s64.length % 4) {
	case 0:
		s641 = "";
		break;
	case 1:
		s641 = "===";
		break;
	case 2:
		s641 = "==";
		break;
	case 3:
		s641 = "=";
		break;
	default:
		throw haxe_Exception.thrown("Illegal base64url string!");
	}
	s64 += s641;
	return haxe_crypto_Base64.decode(s64);
};
jwt_JWT.signature = function(alg,body,secret) {
	if(alg != "HS256") {
		throw haxe_Exception.thrown("HS256 is the only supported algorithm for now!");
	}
	var hmac = new haxe_crypto_Hmac(haxe_crypto_HashMethod.SHA256);
	var sb = hmac.make(haxe_io_Bytes.ofString(secret),haxe_io_Bytes.ofString(body));
	return sb;
};
jwt_JWT.sign = function(payload,secret,replacer,header) {
	if(header == null) {
		header = { alg : "HS256", typ : "JWT"};
	}
	header.alg = "HS256";
	var h = JSON.stringify(header);
	var p = JSON.stringify(payload,replacer);
	var hb64 = jwt_JWT.base64url_encode(haxe_io_Bytes.ofString(h));
	var pb64 = jwt_JWT.base64url_encode(haxe_io_Bytes.ofString(p));
	var sb;
	if(header.alg == "HS256") {
		sb = jwt_JWT.signature(header.alg,hb64 + "." + pb64,secret);
	} else {
		throw haxe_Exception.thrown("The " + header.alg + " algorithm isn't supported yet!");
	}
	var s = jwt_JWT.base64url_encode(sb);
	return hb64 + "." + pb64 + "." + s;
};
jwt_JWT.verify = function(jwt,secret) {
	var parts = jwt.split(".");
	if(parts.length != 3) {
		return jwt_JWTResult.Malformed;
	}
	var h = jwt_JWT.base64url_decode(parts[0]).toString();
	var header = JSON.parse(h);
	if(header.alg != "HS256") {
		throw haxe_Exception.thrown("The " + header.alg + " algorithm isn't supported yet!");
	}
	var p = jwt_JWT.base64url_decode(parts[1]).toString();
	var sb = jwt_JWT.base64url_decode(parts[2]);
	var testSig = jwt_JWT.signature(header.alg,parts[0] + "." + parts[1],secret);
	if(sb.compare(testSig) != 0) {
		return jwt_JWTResult.Invalid(JSON.parse(p));
	}
	return jwt_JWTResult.Valid(JSON.parse(p));
};
jwt_JWT.extract = function(jwt) {
	var parts = jwt.split(".");
	if(parts.length != 3) {
		throw haxe_Exception.thrown("Malformed JWT!");
	}
	return JSON.parse(jwt_JWT.base64url_decode(parts[1]).toString());
};
jwt_JWT.prototype = {
	__class__: jwt_JWT
};
var loader_AjaxLoader = function(cb,p,r) {
	this.cB = cb;
	this.params = p;
	this.post = p != null;
	this.req = r;
};
$hxClasses["loader.AjaxLoader"] = loader_AjaxLoader;
loader_AjaxLoader.__name__ = "loader.AjaxLoader";
loader_AjaxLoader.load = function(url,params,cB) {
	var req = new haxe_http_HttpJs(url);
	if(params != null) {
		var _g = 0;
		var _g1 = Reflect.fields(params);
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			req.addParameter(k,Reflect.field(params,k));
		}
	}
	var loader = new loader_AjaxLoader(cB);
	req.onData = $bind(loader,loader._onData);
	req.onError = function(err) {
		haxe_Log.trace(err,{ fileName : "src/loader/AjaxLoader.hx", lineNumber : 34, className : "loader.AjaxLoader", methodName : "load"});
	};
	haxe_Log.trace("POST? " + Std.string(params) != null,{ fileName : "src/loader/AjaxLoader.hx", lineNumber : 35, className : "loader.AjaxLoader", methodName : "load"});
	req.withCredentials = true;
	req.request(params != null);
	return req;
};
loader_AjaxLoader.loadJson = function(url,params,cB) {
	var req = new haxe_http_HttpJs(url);
	if(params != null) {
		var _g = 0;
		var _g1 = Reflect.fields(params);
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			req.addParameter(k,Reflect.field(params,k));
		}
	}
	var loader = new loader_AjaxLoader(cB);
	req.onData = $bind(loader,loader._onData);
	req.onError = function(err) {
		haxe_Log.trace(err,{ fileName : "src/loader/AjaxLoader.hx", lineNumber : 52, className : "loader.AjaxLoader", methodName : "loadJson"});
	};
	haxe_Log.trace("POST? " + Std.string(params) != null,{ fileName : "src/loader/AjaxLoader.hx", lineNumber : 53, className : "loader.AjaxLoader", methodName : "loadJson"});
	req.withCredentials = true;
	req.request(params != null);
	return loader.dataObj;
};
loader_AjaxLoader.loadData = function(url,params,cB) {
	var loader = loader_AjaxLoader.queue(url,params,cB);
	loader_AjaxLoader.rqs.push(loader.req);
	if(loader_AjaxLoader.rqs.length == 1) {
		loader_AjaxLoader.rqs.shift().request(loader.post);
	}
	return loader.req;
};
loader_AjaxLoader.queue = function(url,params,cB) {
	var req = new haxe_http_HttpJs(url);
	if(params != null) {
		var _g = 0;
		var _g1 = Reflect.fields(params);
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			req.addParameter(k,Reflect.field(params,k));
		}
	}
	var loader = new loader_AjaxLoader(cB,params,req);
	loader.url = url;
	req.onData = $bind(loader,loader._onQueueData);
	req.onError = function(err) {
		haxe_Log.trace(err,{ fileName : "src/loader/AjaxLoader.hx", lineNumber : 138, className : "loader.AjaxLoader", methodName : "queue"});
		me_cunity_debug_Out.dumpObject(req,{ fileName : "src/loader/AjaxLoader.hx", lineNumber : 138, className : "loader.AjaxLoader", methodName : "queue"});
	};
	haxe_Log.trace("POST? " + Std.string(params) != null,{ fileName : "src/loader/AjaxLoader.hx", lineNumber : 139, className : "loader.AjaxLoader", methodName : "queue"});
	req.withCredentials = true;
	return loader;
};
loader_AjaxLoader.prototype = {
	cB: null
	,params: null
	,post: null
	,req: null
	,url: null
	,dataObj: null
	,_onData: function(response) {
		if(response.length > 0) {
			this.dataObj = JSON.parse(response);
			if(this.dataObj.error != "") {
				haxe_Log.trace(this.dataObj.error,{ fileName : "src/loader/AjaxLoader.hx", lineNumber : 81, className : "loader.AjaxLoader", methodName : "_onData"});
				this.dataObj.data = { error : this.dataObj.error, rows : []};
			}
			if(this.cB != null) {
				this.cB(this.dataObj.data);
			}
		}
	}
	,_onError: function(err) {
	}
	,_onQueueData: function(response) {
		if(response.length > 0) {
			var dataObj = JSON.parse(response);
			if(dataObj.error != "") {
				haxe_Log.trace(dataObj.error,{ fileName : "src/loader/AjaxLoader.hx", lineNumber : 103, className : "loader.AjaxLoader", methodName : "_onQueueData"});
				dataObj.data = { error : dataObj.error, rows : []};
			}
			if(this.cB != null) {
				this.cB(dataObj.data);
			}
			if(loader_AjaxLoader.rqs.length > 0) {
				loader_AjaxLoader.rqs.shift().request(this.post);
			}
		}
	}
	,__class__: loader_AjaxLoader
};
var loader_BinaryLoader = function(url) {
	this.url = url;
	this.xhr = new XMLHttpRequest();
};
$hxClasses["loader.BinaryLoader"] = loader_BinaryLoader;
loader_BinaryLoader.__name__ = "loader.BinaryLoader";
loader_BinaryLoader.create = function(url,p,onLoaded) {
	return loader_BinaryLoader.dbQuery(url,p,onLoaded);
};
loader_BinaryLoader.dbQuery = function(url,dbAP,onLoaded) {
	if(loader_BinaryLoader.s == null) {
		loader_BinaryLoader.s = new hxbit_Serializer();
	}
	var bl = new loader_BinaryLoader(url);
	var dbQuery = new db_DbQuery(dbAP);
	haxe_Log.trace(dbQuery.dbParams == null ? "null" : haxe_ds_StringMap.stringify(dbQuery.dbParams.h),{ fileName : "src/loader/BinaryLoader.hx", lineNumber : 40, className : "loader.BinaryLoader", methodName : "dbQuery"});
	var b = loader_BinaryLoader.s.serialize(dbQuery);
	haxe_Log.trace(b.length,{ fileName : "src/loader/BinaryLoader.hx", lineNumber : 43, className : "loader.BinaryLoader", methodName : "dbQuery"});
	haxe_Log.trace(b.toHex(),{ fileName : "src/loader/BinaryLoader.hx", lineNumber : 44, className : "loader.BinaryLoader", methodName : "dbQuery"});
	bl.param = b.b.bufferValue;
	bl.cB = onLoaded;
	bl.load();
	return bl.xhr;
};
loader_BinaryLoader.prototype = {
	cB: null
	,dBa: null
	,param: null
	,xhr: null
	,url: null
	,onLoaded: function(bytes) {
		if(bytes != null && bytes.length > 0) {
			loader_BinaryLoader.u = new hxbit_Serializer();
			var data = loader_BinaryLoader.u.unserialize(bytes,shared_DbData);
			haxe_Log.trace(data,{ fileName : "src/loader/BinaryLoader.hx", lineNumber : 79, className : "loader.BinaryLoader", methodName : "onLoaded"});
			this.cB(data);
		} else {
			haxe_Log.trace("got nothing",{ fileName : "src/loader/BinaryLoader.hx", lineNumber : 83, className : "loader.BinaryLoader", methodName : "onLoaded"});
		}
	}
	,onProgress: function(cur,max) {
		haxe_Log.trace("" + cur + " of " + max,{ fileName : "src/loader/BinaryLoader.hx", lineNumber : 93, className : "loader.BinaryLoader", methodName : "onProgress"});
	}
	,onError: function(msg) {
		me_cunity_debug_Out.dumpStack(haxe_CallStack.callStack(),{ fileName : "src/loader/BinaryLoader.hx", lineNumber : 97, className : "loader.BinaryLoader", methodName : "onError"});
		haxe_Log.trace(msg,{ fileName : "src/loader/BinaryLoader.hx", lineNumber : 98, className : "loader.BinaryLoader", methodName : "onError"});
		throw haxe_Exception.thrown(msg);
	}
	,load: function() {
		var _gthis = this;
		this.xhr.open("POST",this.url,true);
		this.xhr.onerror = function(e) {
			haxe_Log.trace(e,{ fileName : "src/loader/BinaryLoader.hx", lineNumber : 113, className : "loader.BinaryLoader", methodName : "load"});
			haxe_Log.trace(e.type,{ fileName : "src/loader/BinaryLoader.hx", lineNumber : 114, className : "loader.BinaryLoader", methodName : "load"});
		};
		this.xhr.withCredentials = true;
		this.xhr.onload = function(e) {
			haxe_Log.trace(_gthis.xhr.status,{ fileName : "src/loader/BinaryLoader.hx", lineNumber : 119, className : "loader.BinaryLoader", methodName : "load"});
			if(_gthis.xhr.status != 200) {
				_gthis.onError(_gthis.xhr.statusText);
				return;
			}
			try {
				haxe_Log.trace(Type.typeof(_gthis.xhr.response),{ fileName : "src/loader/BinaryLoader.hx", lineNumber : 126, className : "loader.BinaryLoader", methodName : "load"});
				haxe_Log.trace(typeof(_gthis.xhr.response) == "string",{ fileName : "src/loader/BinaryLoader.hx", lineNumber : 127, className : "loader.BinaryLoader", methodName : "load"});
				if(typeof(_gthis.xhr.response) == "string") {
					_gthis.onLoaded(haxe_io_Bytes.ofString(_gthis.xhr.response));
				} else {
					_gthis.onLoaded(_gthis.xhr.response);
				}
			} catch( _g ) {
				var ex = haxe_Exception.caught(_g);
				haxe_Log.trace(ex.details(),{ fileName : "src/loader/BinaryLoader.hx", lineNumber : 136, className : "loader.BinaryLoader", methodName : "load"});
			}
		};
		this.xhr.send(this.param);
	}
	,loadJson: function() {
		var _gthis = this;
		this.xhr.open("POST",this.url,true);
		this.xhr.setRequestHeader("Access-Control-Allow-Origin","*");
		this.xhr.responseType = "arraybuffer";
		this.xhr.onerror = function(e) {
			haxe_Log.trace(e,{ fileName : "src/loader/BinaryLoader.hx", lineNumber : 159, className : "loader.BinaryLoader", methodName : "loadJson"});
			haxe_Log.trace(e.type,{ fileName : "src/loader/BinaryLoader.hx", lineNumber : 160, className : "loader.BinaryLoader", methodName : "loadJson"});
		};
		this.xhr.withCredentials = false;
		this.xhr.onload = function(e) {
			if(_gthis.xhr.status != 200) {
				_gthis.onError(_gthis.xhr.statusText);
				return;
			}
		};
		this.xhr.send(this.param);
	}
	,__class__: loader_BinaryLoader
};
var loader_ListLoader = function() { };
$hxClasses["loader.ListLoader"] = loader_ListLoader;
loader_ListLoader.__name__ = "loader.ListLoader";
loader_ListLoader.load = function(param) {
	return redux_thunk_Thunk.Action(function(dispatch,getState) {
		if(param.page == null) {
			param.page = 0;
		}
		haxe_Log.trace("Loading " + Std.string(param.page + 1),{ fileName : "src/loader/ListLoader.hx", lineNumber : 29, className : "loader.ListLoader", methodName : "load"});
		haxe_Log.trace(param.dataSource,{ fileName : "src/loader/ListLoader.hx", lineNumber : 30, className : "loader.ListLoader", methodName : "load"});
		return new Promise(function(resolve,reject) {
			if(!param.dbUser.online) {
				haxe_Log.trace("LoginError",{ fileName : "src/loader/ListLoader.hx", lineNumber : 34, className : "loader.ListLoader", methodName : "load"});
				param.dbUser.last_error = "Du musst dich neu anmelden!";
				dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : param.dbUser, lastError : "Du musst dich neu anmelden!"}))));
				var _g = new haxe_ds_StringMap();
				_g.h["LoginError"] = "Du musst dich neu anmelden!";
				var dbData = shared_DbDataTools.create(_g);
				reject(dbData);
			}
			var bl = loader_BinaryLoader.dbQuery("" + Std.string(App.config.api),param,function(data) {
				haxe_Log.trace(data.dataRows.length,{ fileName : "src/loader/ListLoader.hx", lineNumber : 50, className : "loader.ListLoader", methodName : "load"});
				if(data.dataRows.length > 0) {
					var h = data.dataErrors.h;
					var inlStringMapKeyIterator_h = h;
					var inlStringMapKeyIterator_keys = Object.keys(h);
					var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
					var inlStringMapKeyIterator_current = 0;
					if(inlStringMapKeyIterator_current >= inlStringMapKeyIterator_length) {
						dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : param.resolveMessage == null ? "" : param.resolveMessage.success}))));
						resolve(data);
					} else {
						dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : JSON.stringify(data.dataErrors)}))));
						reject(data);
					}
				} else {
					dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "warn", text : "Keine Daten für " + JSON.stringify(param.filter) + " gefunden"}))));
				}
			});
		});
	});
};
var macrotools_AbstractEnumTools = function() { };
$hxClasses["macrotools.AbstractEnumTools"] = macrotools_AbstractEnumTools;
macrotools_AbstractEnumTools.__name__ = "macrotools.AbstractEnumTools";
var me_cunity_tools_StringTool = function() { };
$hxClasses["me.cunity.tools.StringTool"] = me_cunity_tools_StringTool;
me_cunity_tools_StringTool.__name__ = "me.cunity.tools.StringTool";
me_cunity_tools_StringTool.dirname = function(url) {
	var sep = new EReg("/","").match(url) ? "/" : "\\";
	var _this_r = new RegExp(sep + "$",null.split("u").join(""));
	url = url.replace(_this_r,"");
	var arr = url.split(sep);
	arr.pop();
	return arr.join(sep);
};
me_cunity_tools_StringTool.lcFirst = function(s) {
	var eR = new EReg("^(.)","");
	eR.match(s);
	var by = eR.matched(0).toLowerCase();
	var r = s.replace(eR.r,by);
	if(r == null) {
		return "";
	} else {
		return r;
	}
};
me_cunity_tools_StringTool.ucFirst = function(s) {
	var eR = new EReg("^(.)","");
	eR.match(s);
	var by = eR.matched(0).toUpperCase();
	var r = s.replace(eR.r,by);
	if(r == null) {
		return "";
	} else {
		return r;
	}
};
var model_ORM = function(data) {
	this.fields = haxe_rtti_Meta.getFields(js_Boot.getClass(this));
	var tmp = Std.string(Type.typeof(this.fields)) + ":";
	var c = js_Boot.getClass(this);
	haxe_Log.trace(tmp + c.__name__,{ fileName : "src/model/ORM.hx", lineNumber : 45, className : "model.ORM", methodName : "new"});
	this.fields.id = { dataType : ["bigint"]};
	this.fieldsInitalized = [];
	this.fieldsModified = [];
	this.formBuilder = new view_shared_FormBuilder(this);
	this.propertyNames = Reflect.fields(this.fields);
	this.state = { };
	var _g = 0;
	var _g1 = this.propertyNames;
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		var nv = Object.prototype.hasOwnProperty.call(data.h,f) ? data.h[f] : "";
		var _g2 = Reflect.field(this.fields,f).dataType[0];
		var _hx_tmp;
		var tmp;
		switch(_g2) {
		case "bigint[]":
			tmp = nv == null ? [] : nv;
			break;
		case "date":
			_hx_tmp = _g2.indexOf("timestamp");
			tmp = _hx_tmp == 0 ? nv == null ? "" : nv : nv == null ? "" : nv;
			break;
		default:
			_hx_tmp = _g2.indexOf("timestamp");
			tmp = _hx_tmp == 0 ? nv == null ? "" : nv : nv;
		}
		Reflect.setProperty(this,f,tmp);
	}
};
$hxClasses["model.ORM"] = model_ORM;
model_ORM.__name__ = "model.ORM";
model_ORM.prototype = {
	id: null
	,set_id: function(id) {
		if(this.initialized("id")) {
			this.modified("id");
		}
		this.id = id;
		return id;
	}
	,fieldsInitalized: null
	,fieldsModified: null
	,fieldFormat: null
	,formBuilder: null
	,propertyNames: null
	,state: null
	,fields: null
	,allModified: function() {
		var data = { };
		var _g = 0;
		var _g1 = this.fieldsModified;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var nv = Reflect.field(this,f);
			var dType = Reflect.field(this.fields,f).dataType[0];
			haxe_Log.trace(nv + (" => " + model_ORM.dsep + " : " + dType + "::") + dType.indexOf("numeric"),{ fileName : "src/model/ORM.hx", lineNumber : 84, className : "model.ORM", methodName : "allModified"});
			var value;
			var _hx_tmp;
			var _hx_tmp1;
			switch(dType) {
			case "bigint[]":
				value = nv == null ? [] : nv;
				break;
			case "date":
				_hx_tmp1 = dType.indexOf("timestamp");
				if(_hx_tmp1 == 0) {
					value = nv == null ? "" : nv;
				} else {
					haxe_Log.trace(nv == "" ? "null" : "notnull",{ fileName : "src/model/ORM.hx", lineNumber : 92, className : "model.ORM", methodName : "allModified"});
					value = nv == "" ? "date_null" : nv;
				}
				break;
			default:
				_hx_tmp1 = dType.indexOf("timestamp");
				if(_hx_tmp1 == 0) {
					value = nv == null ? "" : nv;
				} else {
					_hx_tmp = dType.indexOf("numeric");
					if(_hx_tmp == 0) {
						nv = nv.split(" ")[0];
						var dvals = nv.split(model_ORM.dsep);
						haxe_Log.trace(dvals,{ fileName : "src/model/ORM.hx", lineNumber : 97, className : "model.ORM", methodName : "allModified"});
						value = "" + dvals[0] + "." + dvals[1];
					} else {
						value = nv;
					}
				}
			}
			data[f] = value;
		}
		return data;
	}
	,initFields: function() {
		var me = js_Boot.getClass(this);
		var rtti = haxe_rtti_Rtti.getRtti(me);
		var rttiFields = rtti.fields;
		var dTypes = [];
		var _g = 0;
		while(_g < rttiFields.length) {
			var fld = rttiFields[_g];
			++_g;
			if(Lambda.has(this.propertyNames,fld.name)) {
				if(!Lambda.has(dTypes,fld.meta[0].params[0])) {
					dTypes.push(fld.meta[0].params[0]);
				}
			}
		}
	}
	,initialized: function(attName) {
		if(attName == null) {
			return this.fieldsInitalized.length > 0;
		}
		if(!Lambda.has(this.fieldsInitalized,attName)) {
			this.fieldsInitalized.push(attName);
			return false;
		}
		return true;
	}
	,modified: function(attName) {
		if(attName == null) {
			return this.fieldsModified.length > 0;
		}
		if(!Lambda.has(this.fieldsModified,attName)) {
			this.fieldsModified.push(attName);
			return false;
		}
		return true;
	}
	,reset: function(attName) {
		var r = this.fieldsModified.length;
		if(this.fieldsModified.length == 0) {
			return 0;
		}
		if(attName != null) {
			if(HxOverrides.remove(this.fieldsModified,attName)) {
				return 1;
			} else {
				return 0;
			}
		}
		this.fieldsModified = [];
		return r;
	}
	,save: function() {
		haxe_Log.trace("?",{ fileName : "src/model/ORM.hx", lineNumber : 166, className : "model.ORM", methodName : "save"});
	}
	,__class__: model_ORM
};
var model_Account = function(data) {
	model_ORM.call(this,data);
};
$hxClasses["model.Account"] = model_Account;
model_Account.__name__ = "model.Account";
model_Account.__super__ = model_ORM;
model_Account.prototype = $extend(model_ORM.prototype,{
	contact: null
	,set_contact: function(contact) {
		if(this.initialized("contact")) {
			this.modified("contact");
		}
		this.contact = contact;
		return contact;
	}
	,bank_name: null
	,set_bank_name: function(bank_name) {
		if(this.initialized("bank_name")) {
			this.modified("bank_name");
		}
		this.bank_name = bank_name;
		return bank_name;
	}
	,bic: null
	,set_bic: function(bic) {
		if(this.initialized("bic")) {
			this.modified("bic");
		}
		this.bic = bic;
		return bic;
	}
	,account: null
	,set_account: function(account) {
		if(this.initialized("account")) {
			this.modified("account");
		}
		this.account = account;
		return account;
	}
	,iban: null
	,set_iban: function(iban) {
		if(this.initialized("iban")) {
			this.modified("iban");
		}
		this.iban = iban;
		return iban;
	}
	,account_holder: null
	,set_account_holder: function(account_holder) {
		if(this.initialized("account_holder")) {
			this.modified("account_holder");
		}
		this.account_holder = account_holder;
		return account_holder;
	}
	,sign_date: null
	,set_sign_date: function(sign_date) {
		if(this.initialized("sign_date")) {
			this.modified("sign_date");
		}
		this.sign_date = sign_date;
		return sign_date;
	}
	,status: null
	,set_status: function(status) {
		if(this.initialized("status")) {
			this.modified("status");
		}
		this.status = status;
		return status;
	}
	,creation_date: null
	,set_creation_date: function(creation_date) {
		if(this.initialized("creation_date")) {
			this.modified("creation_date");
		}
		this.creation_date = creation_date;
		return creation_date;
	}
	,edited_by: null
	,set_edited_by: function(edited_by) {
		if(this.initialized("edited_by")) {
			this.modified("edited_by");
		}
		this.edited_by = edited_by;
		return edited_by;
	}
	,last_updated: null
	,set_last_updated: function(last_updated) {
		if(this.initialized("last_updated")) {
			this.modified("last_updated");
		}
		this.last_updated = last_updated;
		return last_updated;
	}
	,mandator: null
	,set_mandator: function(mandator) {
		if(this.initialized("mandator")) {
			this.modified("mandator");
		}
		this.mandator = mandator;
		return mandator;
	}
	,__class__: model_Account
	,__properties__: {set_mandator:"set_mandator",set_last_updated:"set_last_updated",set_edited_by:"set_edited_by",set_creation_date:"set_creation_date",set_status:"set_status",set_sign_date:"set_sign_date",set_account_holder:"set_account_holder",set_iban:"set_iban",set_account:"set_account",set_bic:"set_bic",set_bank_name:"set_bank_name",set_contact:"set_contact"}
});
var model_Contact = function(data) {
	model_ORM.call(this,data);
};
$hxClasses["model.Contact"] = model_Contact;
model_Contact.__name__ = "model.Contact";
model_Contact.__super__ = model_ORM;
model_Contact.prototype = $extend(model_ORM.prototype,{
	mandator: null
	,set_mandator: function(mandator) {
		if(this.initialized("mandator")) {
			this.modified("mandator");
		}
		this.mandator = mandator;
		return mandator;
	}
	,creation_date: null
	,set_creation_date: function(creation_date) {
		if(this.initialized("creation_date")) {
			this.modified("creation_date");
		}
		this.creation_date = creation_date;
		return creation_date;
	}
	,status: null
	,set_status: function(status) {
		if(this.initialized("status")) {
			this.modified("status");
		}
		this.status = status;
		return status;
	}
	,use_email: null
	,set_use_email: function(use_email) {
		if(this.initialized("use_email")) {
			this.modified("use_email");
		}
		this.use_email = use_email;
		return use_email;
	}
	,company_name: null
	,set_company_name: function(company_name) {
		if(this.initialized("company_name")) {
			this.modified("company_name");
		}
		this.company_name = company_name;
		return company_name;
	}
	,care_of: null
	,set_care_of: function(care_of) {
		if(this.initialized("care_of")) {
			this.modified("care_of");
		}
		this.care_of = care_of;
		return care_of;
	}
	,phone_code: null
	,set_phone_code: function(phone_code) {
		if(this.initialized("phone_code")) {
			this.modified("phone_code");
		}
		this.phone_code = phone_code;
		return phone_code;
	}
	,phone_number: null
	,set_phone_number: function(phone_number) {
		if(this.initialized("phone_number")) {
			this.modified("phone_number");
		}
		this.phone_number = phone_number;
		return phone_number;
	}
	,fax: null
	,set_fax: function(fax) {
		if(this.initialized("fax")) {
			this.modified("fax");
		}
		this.fax = fax;
		return fax;
	}
	,title: null
	,set_title: function(title) {
		if(this.initialized("title")) {
			this.modified("title");
		}
		this.title = title;
		return title;
	}
	,first_name: null
	,set_first_name: function(first_name) {
		if(this.initialized("first_name")) {
			this.modified("first_name");
		}
		this.first_name = first_name;
		return first_name;
	}
	,last_name: null
	,set_last_name: function(last_name) {
		if(this.initialized("last_name")) {
			this.modified("last_name");
		}
		this.last_name = last_name;
		return last_name;
	}
	,address1: null
	,set_address1: function(address1) {
		if(this.initialized("address1")) {
			this.modified("address1");
		}
		this.address1 = address1;
		return address1;
	}
	,address2: null
	,set_address2: function(address2) {
		if(this.initialized("address2")) {
			this.modified("address2");
		}
		this.address2 = address2;
		return address2;
	}
	,city: null
	,set_city: function(city) {
		if(this.initialized("city")) {
			this.modified("city");
		}
		this.city = city;
		return city;
	}
	,postal_code: null
	,set_postal_code: function(postal_code) {
		if(this.initialized("postal_code")) {
			this.modified("postal_code");
		}
		this.postal_code = postal_code;
		return postal_code;
	}
	,country_code: null
	,set_country_code: function(country_code) {
		if(this.initialized("country_code")) {
			this.modified("country_code");
		}
		this.country_code = country_code;
		return country_code;
	}
	,gender: null
	,set_gender: function(gender) {
		if(this.initialized("gender")) {
			this.modified("gender");
		}
		this.gender = gender;
		return gender;
	}
	,date_of_birth: null
	,set_date_of_birth: function(date_of_birth) {
		if(this.initialized("date_of_birth")) {
			this.modified("date_of_birth");
		}
		this.date_of_birth = date_of_birth;
		return date_of_birth;
	}
	,mobile: null
	,set_mobile: function(mobile) {
		if(this.initialized("mobile")) {
			this.modified("mobile");
		}
		this.mobile = mobile;
		return mobile;
	}
	,email: null
	,set_email: function(email) {
		if(this.initialized("email")) {
			this.modified("email");
		}
		this.email = email;
		return email;
	}
	,comments: null
	,set_comments: function(comments) {
		if(this.initialized("comments")) {
			this.modified("comments");
		}
		this.comments = comments;
		return comments;
	}
	,edited_by: null
	,set_edited_by: function(edited_by) {
		if(this.initialized("edited_by")) {
			this.modified("edited_by");
		}
		this.edited_by = edited_by;
		return edited_by;
	}
	,merged: null
	,set_merged: function(merged) {
		if(this.initialized("merged")) {
			this.modified("merged");
		}
		this.merged = merged;
		return merged;
	}
	,last_updated: null
	,set_last_updated: function(last_updated) {
		if(this.initialized("last_updated")) {
			this.modified("last_updated");
		}
		this.last_updated = last_updated;
		return last_updated;
	}
	,owner: null
	,set_owner: function(owner) {
		if(this.initialized("owner")) {
			this.modified("owner");
		}
		this.owner = owner;
		return owner;
	}
	,title_pro: null
	,set_title_pro: function(title_pro) {
		if(this.initialized("title_pro")) {
			this.modified("title_pro");
		}
		this.title_pro = title_pro;
		return title_pro;
	}
	,__class__: model_Contact
	,__properties__: {set_title_pro:"set_title_pro",set_owner:"set_owner",set_last_updated:"set_last_updated",set_merged:"set_merged",set_edited_by:"set_edited_by",set_comments:"set_comments",set_email:"set_email",set_mobile:"set_mobile",set_date_of_birth:"set_date_of_birth",set_gender:"set_gender",set_country_code:"set_country_code",set_postal_code:"set_postal_code",set_city:"set_city",set_address2:"set_address2",set_address1:"set_address1",set_last_name:"set_last_name",set_first_name:"set_first_name",set_title:"set_title",set_fax:"set_fax",set_phone_number:"set_phone_number",set_phone_code:"set_phone_code",set_care_of:"set_care_of",set_company_name:"set_company_name",set_use_email:"set_use_email",set_status:"set_status",set_creation_date:"set_creation_date",set_mandator:"set_mandator"}
});
var model_Deal = function(data) {
	model_ORM.call(this,data);
};
$hxClasses["model.Deal"] = model_Deal;
model_Deal.__name__ = "model.Deal";
model_Deal.__super__ = model_ORM;
model_Deal.prototype = $extend(model_ORM.prototype,{
	contact: null
	,set_contact: function(contact) {
		if(this.initialized("contact")) {
			this.modified("contact");
		}
		this.contact = contact;
		return contact;
	}
	,creation_date: null
	,set_creation_date: function(creation_date) {
		if(this.initialized("creation_date")) {
			this.modified("creation_date");
		}
		this.creation_date = creation_date;
		return creation_date;
	}
	,account: null
	,set_account: function(account) {
		if(this.initialized("account")) {
			this.modified("account");
		}
		this.account = account;
		return account;
	}
	,target_account: null
	,set_target_account: function(target_account) {
		if(this.initialized("target_account")) {
			this.modified("target_account");
		}
		this.target_account = target_account;
		return target_account;
	}
	,booking_run: null
	,set_booking_run: function(booking_run) {
		if(this.initialized("booking_run")) {
			this.modified("booking_run");
		}
		this.booking_run = booking_run;
		return booking_run;
	}
	,start_date: null
	,set_start_date: function(start_date) {
		if(this.initialized("start_date")) {
			this.modified("start_date");
		}
		this.start_date = start_date;
		return start_date;
	}
	,cycle: null
	,set_cycle: function(cycle) {
		if(this.initialized("cycle")) {
			this.modified("cycle");
		}
		this.cycle = cycle;
		return cycle;
	}
	,amount: null
	,set_amount: function(amount) {
		if(this.initialized("amount")) {
			this.modified("amount");
		}
		this.amount = amount;
		return amount;
	}
	,product: null
	,set_product: function(product) {
		if(this.initialized("product")) {
			this.modified("product");
		}
		this.product = product;
		return product;
	}
	,agent: null
	,set_agent: function(agent) {
		if(this.initialized("agent")) {
			this.modified("agent");
		}
		this.agent = agent;
		return agent;
	}
	,project: null
	,set_project: function(project) {
		if(this.initialized("project")) {
			this.modified("project");
		}
		this.project = project;
		return project;
	}
	,active: null
	,set_active: function(active) {
		if(this.initialized("active")) {
			this.modified("active");
		}
		this.active = active;
		return active;
	}
	,pay_method: null
	,set_pay_method: function(pay_method) {
		if(this.initialized("pay_method")) {
			this.modified("pay_method");
		}
		this.pay_method = pay_method;
		return pay_method;
	}
	,end_date: null
	,set_end_date: function(end_date) {
		if(this.initialized("end_date")) {
			this.modified("end_date");
		}
		this.end_date = end_date;
		return end_date;
	}
	,end_reason: null
	,set_end_reason: function(end_reason) {
		if(this.initialized("end_reason")) {
			this.modified("end_reason");
		}
		this.end_reason = end_reason;
		return end_reason;
	}
	,repeat_date: null
	,set_repeat_date: function(repeat_date) {
		if(this.initialized("repeat_date")) {
			this.modified("repeat_date");
		}
		this.repeat_date = repeat_date;
		return repeat_date;
	}
	,edited_by: null
	,set_edited_by: function(edited_by) {
		if(this.initialized("edited_by")) {
			this.modified("edited_by");
		}
		this.edited_by = edited_by;
		return edited_by;
	}
	,mandator: null
	,set_mandator: function(mandator) {
		if(this.initialized("mandator")) {
			this.modified("mandator");
		}
		this.mandator = mandator;
		return mandator;
	}
	,old_active: null
	,set_old_active: function(old_active) {
		if(this.initialized("old_active")) {
			this.modified("old_active");
		}
		this.old_active = old_active;
		return old_active;
	}
	,cycle_start_date: null
	,set_cycle_start_date: function(cycle_start_date) {
		if(this.initialized("cycle_start_date")) {
			this.modified("cycle_start_date");
		}
		this.cycle_start_date = cycle_start_date;
		return cycle_start_date;
	}
	,last_updated: null
	,set_last_updated: function(last_updated) {
		if(this.initialized("last_updated")) {
			this.modified("last_updated");
		}
		this.last_updated = last_updated;
		return last_updated;
	}
	,booking_day: null
	,set_booking_day: function(booking_day) {
		if(this.initialized("booking_day")) {
			this.modified("booking_day");
		}
		this.booking_day = booking_day;
		return booking_day;
	}
	,lead_id: null
	,set_lead_id: function(lead_id) {
		if(this.initialized("lead_id")) {
			this.modified("lead_id");
		}
		this.lead_id = lead_id;
		return lead_id;
	}
	,__class__: model_Deal
	,__properties__: {set_lead_id:"set_lead_id",set_booking_day:"set_booking_day",set_last_updated:"set_last_updated",set_cycle_start_date:"set_cycle_start_date",set_old_active:"set_old_active",set_mandator:"set_mandator",set_edited_by:"set_edited_by",set_repeat_date:"set_repeat_date",set_end_reason:"set_end_reason",set_end_date:"set_end_date",set_pay_method:"set_pay_method",set_active:"set_active",set_project:"set_project",set_agent:"set_agent",set_product:"set_product",set_amount:"set_amount",set_cycle:"set_cycle",set_start_date:"set_start_date",set_booking_run:"set_booking_run",set_target_account:"set_target_account",set_account:"set_account",set_creation_date:"set_creation_date",set_contact:"set_contact"}
});
var model_QC = function(data) {
	model_ORM.call(this,data);
};
$hxClasses["model.QC"] = model_QC;
model_QC.__name__ = "model.QC";
model_QC.__super__ = model_ORM;
model_QC.prototype = $extend(model_ORM.prototype,{
	mandator: null
	,set_mandator: function(mandator) {
		if(this.initialized("mandator")) {
			this.modified("mandator");
		}
		this.mandator = mandator;
		return mandator;
	}
	,creation_date: null
	,set_creation_date: function(creation_date) {
		if(this.initialized("creation_date")) {
			this.modified("creation_date");
		}
		this.creation_date = creation_date;
		return creation_date;
	}
	,status: null
	,set_status: function(status) {
		if(this.initialized("status")) {
			this.modified("status");
		}
		this.status = status;
		return status;
	}
	,use_email: null
	,set_use_email: function(use_email) {
		if(this.initialized("use_email")) {
			this.modified("use_email");
		}
		this.use_email = use_email;
		return use_email;
	}
	,company_name: null
	,set_company_name: function(company_name) {
		if(this.initialized("company_name")) {
			this.modified("company_name");
		}
		this.company_name = company_name;
		return company_name;
	}
	,co_field: null
	,set_co_field: function(co_field) {
		if(this.initialized("co_field")) {
			this.modified("co_field");
		}
		this.co_field = co_field;
		return co_field;
	}
	,phone_code: null
	,set_phone_code: function(phone_code) {
		if(this.initialized("phone_code")) {
			this.modified("phone_code");
		}
		this.phone_code = phone_code;
		return phone_code;
	}
	,phone_number: null
	,set_phone_number: function(phone_number) {
		if(this.initialized("phone_number")) {
			this.modified("phone_number");
		}
		this.phone_number = phone_number;
		return phone_number;
	}
	,fax: null
	,set_fax: function(fax) {
		if(this.initialized("fax")) {
			this.modified("fax");
		}
		this.fax = fax;
		return fax;
	}
	,title: null
	,set_title: function(title) {
		if(this.initialized("title")) {
			this.modified("title");
		}
		this.title = title;
		return title;
	}
	,first_name: null
	,set_first_name: function(first_name) {
		if(this.initialized("first_name")) {
			this.modified("first_name");
		}
		this.first_name = first_name;
		return first_name;
	}
	,last_name: null
	,set_last_name: function(last_name) {
		if(this.initialized("last_name")) {
			this.modified("last_name");
		}
		this.last_name = last_name;
		return last_name;
	}
	,address1: null
	,set_address1: function(address1) {
		if(this.initialized("address1")) {
			this.modified("address1");
		}
		this.address1 = address1;
		return address1;
	}
	,address2: null
	,set_address2: function(address2) {
		if(this.initialized("address2")) {
			this.modified("address2");
		}
		this.address2 = address2;
		return address2;
	}
	,city: null
	,set_city: function(city) {
		if(this.initialized("city")) {
			this.modified("city");
		}
		this.city = city;
		return city;
	}
	,postal_code: null
	,set_postal_code: function(postal_code) {
		if(this.initialized("postal_code")) {
			this.modified("postal_code");
		}
		this.postal_code = postal_code;
		return postal_code;
	}
	,country_code: null
	,set_country_code: function(country_code) {
		if(this.initialized("country_code")) {
			this.modified("country_code");
		}
		this.country_code = country_code;
		return country_code;
	}
	,gender: null
	,set_gender: function(gender) {
		if(this.initialized("gender")) {
			this.modified("gender");
		}
		this.gender = gender;
		return gender;
	}
	,date_of_birth: null
	,set_date_of_birth: function(date_of_birth) {
		if(this.initialized("date_of_birth")) {
			this.modified("date_of_birth");
		}
		this.date_of_birth = date_of_birth;
		return date_of_birth;
	}
	,mobile: null
	,set_mobile: function(mobile) {
		if(this.initialized("mobile")) {
			this.modified("mobile");
		}
		this.mobile = mobile;
		return mobile;
	}
	,email: null
	,set_email: function(email) {
		if(this.initialized("email")) {
			this.modified("email");
		}
		this.email = email;
		return email;
	}
	,comments: null
	,set_comments: function(comments) {
		if(this.initialized("comments")) {
			this.modified("comments");
		}
		this.comments = comments;
		return comments;
	}
	,edited_by: null
	,set_edited_by: function(edited_by) {
		if(this.initialized("edited_by")) {
			this.modified("edited_by");
		}
		this.edited_by = edited_by;
		return edited_by;
	}
	,merged: null
	,set_merged: function(merged) {
		if(this.initialized("merged")) {
			this.modified("merged");
		}
		this.merged = merged;
		return merged;
	}
	,last_updated: null
	,set_last_updated: function(last_updated) {
		if(this.initialized("last_updated")) {
			this.modified("last_updated");
		}
		this.last_updated = last_updated;
		return last_updated;
	}
	,owner: null
	,set_owner: function(owner) {
		if(this.initialized("owner")) {
			this.modified("owner");
		}
		this.owner = owner;
		return owner;
	}
	,title_pro: null
	,set_title_pro: function(title_pro) {
		if(this.initialized("title_pro")) {
			this.modified("title_pro");
		}
		this.title_pro = title_pro;
		return title_pro;
	}
	,lead_id: null
	,set_lead_id: function(lead_id) {
		if(this.initialized("lead_id")) {
			this.modified("lead_id");
		}
		this.lead_id = lead_id;
		return lead_id;
	}
	,period: null
	,set_period: function(period) {
		if(this.initialized("period")) {
			this.modified("period");
		}
		this.period = period;
		return period;
	}
	,anrede: null
	,set_anrede: function(anrede) {
		if(this.initialized("anrede")) {
			this.modified("anrede");
		}
		this.anrede = anrede;
		return anrede;
	}
	,account: null
	,set_account: function(account) {
		if(this.initialized("account")) {
			this.modified("account");
		}
		this.account = account;
		return account;
	}
	,blz: null
	,set_blz: function(blz) {
		if(this.initialized("blz")) {
			this.modified("blz");
		}
		this.blz = blz;
		return blz;
	}
	,iban: null
	,set_iban: function(iban) {
		if(this.initialized("iban")) {
			this.modified("iban");
		}
		this.iban = iban;
		return iban;
	}
	,bank_name: null
	,set_bank_name: function(bank_name) {
		if(this.initialized("bank_name")) {
			this.modified("bank_name");
		}
		this.bank_name = bank_name;
		return bank_name;
	}
	,spenden_hoehe: null
	,set_spenden_hoehe: function(spenden_hoehe) {
		if(this.initialized("spenden_hoehe")) {
			this.modified("spenden_hoehe");
		}
		this.spenden_hoehe = spenden_hoehe;
		return spenden_hoehe;
	}
	,start_monat: null
	,set_start_monat: function(start_monat) {
		if(this.initialized("start_monat")) {
			this.modified("start_monat");
		}
		this.start_monat = start_monat;
		return start_monat;
	}
	,buchungs_tag: null
	,set_buchungs_tag: function(buchungs_tag) {
		if(this.initialized("buchungs_tag")) {
			this.modified("buchungs_tag");
		}
		this.buchungs_tag = buchungs_tag;
		return buchungs_tag;
	}
	,buchungs_zeitpunkt: null
	,set_buchungs_zeitpunkt: function(buchungs_zeitpunkt) {
		if(this.initialized("buchungs_zeitpunkt")) {
			this.modified("buchungs_zeitpunkt");
		}
		this.buchungs_zeitpunkt = buchungs_zeitpunkt;
		return buchungs_zeitpunkt;
	}
	,mailing: null
	,set_mailing: function(mailing) {
		if(this.initialized("mailing")) {
			this.modified("mailing");
		}
		this.mailing = mailing;
		return mailing;
	}
	,client_status: null
	,set_client_status: function(client_status) {
		if(this.initialized("client_status")) {
			this.modified("client_status");
		}
		this.client_status = client_status;
		return client_status;
	}
	,entry_list_id: null
	,set_entry_list_id: function(entry_list_id) {
		if(this.initialized("entry_list_id")) {
			this.modified("entry_list_id");
		}
		this.entry_list_id = entry_list_id;
		return entry_list_id;
	}
	,entry_date: null
	,set_entry_date: function(entry_date) {
		if(this.initialized("entry_date")) {
			this.modified("entry_date");
		}
		this.entry_date = entry_date;
		return entry_date;
	}
	,__class__: model_QC
	,__properties__: {set_entry_date:"set_entry_date",set_entry_list_id:"set_entry_list_id",set_client_status:"set_client_status",set_mailing:"set_mailing",set_buchungs_zeitpunkt:"set_buchungs_zeitpunkt",set_buchungs_tag:"set_buchungs_tag",set_start_monat:"set_start_monat",set_spenden_hoehe:"set_spenden_hoehe",set_bank_name:"set_bank_name",set_iban:"set_iban",set_blz:"set_blz",set_account:"set_account",set_anrede:"set_anrede",set_period:"set_period",set_lead_id:"set_lead_id",set_title_pro:"set_title_pro",set_owner:"set_owner",set_last_updated:"set_last_updated",set_merged:"set_merged",set_edited_by:"set_edited_by",set_comments:"set_comments",set_email:"set_email",set_mobile:"set_mobile",set_date_of_birth:"set_date_of_birth",set_gender:"set_gender",set_country_code:"set_country_code",set_postal_code:"set_postal_code",set_city:"set_city",set_address2:"set_address2",set_address1:"set_address1",set_last_name:"set_last_name",set_first_name:"set_first_name",set_title:"set_title",set_fax:"set_fax",set_phone_number:"set_phone_number",set_phone_code:"set_phone_code",set_co_field:"set_co_field",set_company_name:"set_company_name",set_use_email:"set_use_email",set_status:"set_status",set_creation_date:"set_creation_date",set_mandator:"set_mandator"}
});
var react_ReactType = {};
react_ReactType.fromString = function(s) {
	if(s == null) {
		return react_ReactType.isNull();
	}
	return s;
};
react_ReactType.fromFunction = function(f) {
	if(f == null) {
		return react_ReactType.isNull();
	}
	return f;
};
react_ReactType.fromFunctionWithProps = function(f) {
	if(f == null) {
		return react_ReactType.isNull();
	}
	return f;
};
react_ReactType.fromComp = function(cls) {
	if(cls == null) {
		return react_ReactType.isNull();
	}
	if(cls.__jsxStatic != null) {
		return cls.__jsxStatic;
	}
	return cls;
};
react_ReactType.isNull = function() {
	$global.console.error("Runtime value for ReactType is null." + " Something may be wrong with your externs.");
	return "div";
};
var model_accounting_AccountsModel = function() { };
$hxClasses["model.accounting.AccountsModel"] = model_accounting_AccountsModel;
model_accounting_AccountsModel.__name__ = "model.accounting.AccountsModel";
var model_accounting_DebitModel = function() { };
$hxClasses["model.accounting.DebitModel"] = model_accounting_DebitModel;
model_accounting_DebitModel.__name__ = "model.accounting.DebitModel";
var model_accounting_ReturnDebitModel = function() { };
$hxClasses["model.accounting.ReturnDebitModel"] = model_accounting_ReturnDebitModel;
model_accounting_ReturnDebitModel.__name__ = "model.accounting.ReturnDebitModel";
var model_contacts_ContactsModel = function() { };
$hxClasses["model.contacts.ContactsModel"] = model_contacts_ContactsModel;
model_contacts_ContactsModel.__name__ = "model.contacts.ContactsModel";
var model_deals_DealsModel = function() { };
$hxClasses["model.deals.DealsModel"] = model_deals_DealsModel;
model_deals_DealsModel.__name__ = "model.deals.DealsModel";
model_deals_DealsModel.getDataAccess = function() {
	var tmp = !model_deals_DealsModel._initialized;
};
var model_qc_QCModel = function() { };
$hxClasses["model.qc.QCModel"] = model_qc_QCModel;
model_qc_QCModel.__name__ = "model.qc.QCModel";
var model_stats_HistoryModel = function() { };
$hxClasses["model.stats.HistoryModel"] = model_stats_HistoryModel;
model_stats_HistoryModel.__name__ = "model.stats.HistoryModel";
var React_PureComponent = require("react").PureComponent;
var react_DateControl = function(props) {
	React_PureComponent.call(this,props);
	this.fpRef = React.createRef();
};
$hxClasses["react.DateControl"] = react_DateControl;
react_DateControl.__name__ = "react.DateControl";
react_DateControl.__super__ = React_PureComponent;
react_DateControl.prototype = $extend(React_PureComponent.prototype,{
	fpRef: null
	,fpInstance: null
	,tip: null
	,componentDidMount: function() {
		var fP = App.flatpickr;
		var val = this.props.value == null ? "" : "00.00.0000";
		this.fpInstance = fP(react_ReactRef.get_current(this.fpRef),{ allowInput : !this.props.disabled, altFormat : this.props.options.dateFormat, clickOpens : !this.props.disabled, dateFormat : "Y-m-d", altInput : true, defaultValue : this.props.value, locale : "de", onChange : $bind(this,this.onChange), onClose : $bind(this,this.onClose), onOpen : $bind(this,this.onOpen), onReady : $bind(this,this.onReady)});
	}
	,onOpen: function(e) {
	}
	,onChange: function(_) {
		if(this.props.comp != null) {
			view_shared_io_BaseForm.doChange(this.props.comp,this.props.name,this.fpInstance.input.value);
		}
	}
	,onClose: function(sDates,val,me) {
		if(this.tip != null) {
			this.tip.clear();
		}
	}
	,onReady: function(sDates,val,me) {
	}
	,render: function() {
		if(this.props == null) {
			haxe_Log.trace(null,{ fileName : "lib/react/DateControl.hx", lineNumber : 92, className : "react.DateControl", methodName : "render"});
			return null;
		}
		return React.createElement(react_ReactType.fromString("input"),{ ref : this.fpRef, className : "h100", name : this.props.name, id : this.props.name, defaultValue : this.props.value});
	}
	,__class__: react_DateControl
});
var react_DateTimeControl = function(props) {
	React_PureComponent.call(this,props);
	this.fpRef = React.createRef();
};
$hxClasses["react.DateTimeControl"] = react_DateTimeControl;
react_DateTimeControl.__name__ = "react.DateTimeControl";
react_DateTimeControl.parseTimestampz = function(tz) {
	var _this = new EReg("[^0-9]","g").split(tz);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = Std.parseInt(_this[i]);
	}
	var b = result;
	b[1] -= 1;
	b.pop();
	return new Date(Date.UTC(b[0],b[1],b[2],b[3],b[4],b[5]));
};
react_DateTimeControl.__super__ = React_PureComponent;
react_DateTimeControl.prototype = $extend(React_PureComponent.prototype,{
	fpRef: null
	,fpInstance: null
	,tip: null
	,componentDidMount: function() {
		var _gthis = this;
		var fP = App.flatpickr;
		var val = this.props.value == null ? null : react_DateTimeControl.parseTimestampz(this.props.value);
		this.fpInstance = fP(react_ReactRef.get_current(this.fpRef),{ allowInput : !this.props.disabled, altFormat : this.props.options.dateFormat, dateFormat : "Y-m-d H:i:S", altInput : true, altInputClass : "form-control input", defaultValue : this.props.value, onClose : $bind(this,this.onClose)});
		var altInput = this.fpInstance.altInput;
		if(!this.props.disabled) {
			var tmp = this.props.value == null ? "" : this.fpInstance.formatDate(HxOverrides.strDate(this.props.value),this.fpInstance.config.altFormat);
			altInput.value = tmp;
			haxe_Log.trace(this.fpInstance.input.value,{ fileName : "lib/react/DateTimeControl.hx", lineNumber : 62, className : "react.DateTimeControl", methodName : "componentDidMount"});
			altInput.addEventListener("keyup",function(ev) {
				_gthis.fpInstance.close();
				if(ev.key == "Enter") {
					var dF = shared_DateFormat.parseDE(altInput.value);
					if(dF.result == "OK") {
						if(_gthis.tip != null) {
							_gthis.tip.clear();
						}
					} else {
						ev.preventDefault();
						ev.stopImmediatePropagation();
						_gthis.tip = new view_shared_io_Tooltip(altInput.parentElement,{ data : Std.string(dF.result), classes : ["danger","active"]});
						return;
					}
				}
				var val = altInput.value;
				var pd = _gthis.fpInstance.parseDate(val,_gthis.fpInstance.config.altFormat);
				var fD = _gthis.fpInstance.formatDate(pd,_gthis.fpInstance.config.altFormat);
				if(val == fD) {
					_gthis.fpInstance.setDate(val,true,_gthis.fpInstance.config.altFormat);
				}
			});
			altInput.addEventListener("blur",function(ev) {
				var dF = shared_DateFormat.parseDE(altInput.value);
				if(dF.result == "OK") {
					if(_gthis.tip != null) {
						_gthis.tip.clear();
					}
				} else {
					ev.preventDefault();
					ev.stopImmediatePropagation();
					_gthis.tip = new view_shared_io_Tooltip(altInput.parentElement,{ data : Std.string(dF.result), classes : ["danger","active"]});
				}
				var val = altInput.value;
				var pd = _gthis.fpInstance.parseDate(val,_gthis.fpInstance.config.altFormat);
				var fD = _gthis.fpInstance.formatDate(pd,_gthis.fpInstance.config.altFormat);
				haxe_Log.trace("" + val + "==" + fD,{ fileName : "lib/react/DateTimeControl.hx", lineNumber : 118, className : "react.DateTimeControl", methodName : "componentDidMount"});
				if(val == fD) {
					_gthis.fpInstance.setDate(val,true,_gthis.fpInstance.config.altFormat);
					if(_gthis.tip != null) {
						_gthis.tip.clear();
					}
				}
			});
		}
	}
	,onChange: function(_) {
		if(this.props.comp != null) {
			this.props.comp.doChange(this.props.name,this.fpInstance.input.value);
		}
	}
	,onClose: function(sDates,val,me) {
		if(this.tip != null) {
			this.tip.clear();
		}
		if(this.fpInstance.altInput.value == null) {
			if(val != this.fpInstance.formatDate(this.fpInstance.parseDate(this.fpInstance.altInput.value),this.fpInstance.config.altFormat)) {
				this.fpInstance.altInput.value = this.fpInstance.formatDate(this.fpInstance.input.value,this.fpInstance.config.altFormat);
				this.tip = new view_shared_io_Tooltip(this.fpInstance.altInput.parentElement,{ data : "DateFormat", classes : ["danger","active"]});
			}
		}
	}
	,onReady: function(sDates,val,me) {
	}
	,render: function() {
		if(this.props == null) {
			haxe_Log.trace(null,{ fileName : "lib/react/DateTimeControl.hx", lineNumber : 182, className : "react.DateTimeControl", methodName : "render"});
			return null;
		}
		return React.createElement(react_ReactType.fromString("input"),{ ref : this.fpRef, className : "h100", name : this.props.name, id : this.props.name, disabled : this.props.disabled, defaultValue : this.props.value});
	}
	,__class__: react_DateTimeControl
});
var react_DateTimePicker = require("react-flatpickr").default;
var React_Fragment = require("react").Fragment;
var react_NumberFormat = require("react-number-format").default;
var react_Partial = function() { };
$hxClasses["react.Partial"] = react_Partial;
react_Partial.__name__ = "react.Partial";
var react_ReactComponent = function() { };
$hxClasses["react.ReactComponent"] = react_ReactComponent;
react_ReactComponent.__name__ = "react.ReactComponent";
var react_ReactContext = {};
react_ReactContext.toReactType = function(this1) {
	return this1;
};
var ReactDOM = require("react-dom");
var react_ReactDateTimeClock = function(props) {
	React_Component.call(this,props);
};
$hxClasses["react.ReactDateTimeClock"] = react_ReactDateTimeClock;
react_ReactDateTimeClock.__name__ = "react.ReactDateTimeClock";
react_ReactDateTimeClock.__super__ = React_Component;
react_ReactDateTimeClock.prototype = $extend(React_Component.prototype,{
	render: function() {
		return React.createElement(react_ReactType.fromComp(react_DateTimePicker),{ value : this.props.value, className : this.props.className, locale : "de-DE", disabled : true, clearIcon : null, calendarIcon : null});
	}
	,__class__: react_ReactDateTimeClock
});
var react_ReactPaginate = require("react-paginate").default;
var PropTypes = require("prop-types");
var react_ReactRef = {};
react_ReactRef.__properties__ = {get_current:"get_current"};
react_ReactRef.get_current = function(this1) {
	return this1.current;
};
var react_ReactTypeOf = {};
react_ReactTypeOf._new = function(node) {
	var this1 = node;
	return this1;
};
react_ReactTypeOf.fromFunctionWithProps = function(f) {
	var this1 = react_ReactType.fromFunctionWithProps(f);
	return this1;
};
react_ReactTypeOf.fromComp = function(cls) {
	var this1 = react_ReactType.fromComp(cls);
	return this1;
};
react_ReactTypeOf.fromFunctionWithoutProps = function(f) {
	var this1 = react_ReactType.fromFunction(f);
	return this1;
};
react_ReactTypeOf.fromCompWithoutProps = function(cls) {
	var this1 = react_ReactType.fromComp(cls);
	return this1;
};
var react_ReactUtil = function() { };
$hxClasses["react.ReactUtil"] = react_ReactUtil;
react_ReactUtil.__name__ = "react.ReactUtil";
react_ReactUtil.cx = function(arrayOrObject) {
	var array;
	if(((arrayOrObject) instanceof Array)) {
		array = arrayOrObject;
	} else {
		array = [arrayOrObject];
	}
	var classes = [];
	var _g = 0;
	while(_g < array.length) {
		var value = array[_g];
		++_g;
		if(value == null) {
			continue;
		}
		if(typeof(value) == "string") {
			classes.push(value);
		} else {
			var _g1 = 0;
			var _g2 = Reflect.fields(value);
			while(_g1 < _g2.length) {
				var field = _g2[_g1];
				++_g1;
				if(Reflect.field(value,field) == true) {
					classes.push(field);
				}
			}
		}
	}
	return classes.join(" ");
};
react_ReactUtil.assign = function(target,sources) {
	var _g = 0;
	while(_g < sources.length) {
		var source = sources[_g];
		++_g;
		if(source != null) {
			var _g1 = 0;
			var _g2 = Reflect.fields(source);
			while(_g1 < _g2.length) {
				var field = _g2[_g1];
				++_g1;
				target[field] = Reflect.field(source,field);
			}
		}
	}
	return target;
};
react_ReactUtil.copy = function(source1,source2) {
	var target = { };
	var _g = 0;
	var _g1 = Reflect.fields(source1);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		target[field] = Reflect.field(source1,field);
	}
	if(source2 != null) {
		var _g = 0;
		var _g1 = Reflect.fields(source2);
		while(_g < _g1.length) {
			var field = _g1[_g];
			++_g;
			target[field] = Reflect.field(source2,field);
		}
	}
	return target;
};
react_ReactUtil.copyWithout = function(source1,source2,fields) {
	var target = { };
	var _g = 0;
	var _g1 = Reflect.fields(source1);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		if(!Lambda.has(fields,field)) {
			target[field] = Reflect.field(source1,field);
		}
	}
	if(source2 != null) {
		var _g = 0;
		var _g1 = Reflect.fields(source2);
		while(_g < _g1.length) {
			var field = _g1[_g];
			++_g;
			if(!Lambda.has(fields,field)) {
				target[field] = Reflect.field(source2,field);
			}
		}
	}
	return target;
};
react_ReactUtil.mapi = function(items,map) {
	if(items == null) {
		return null;
	}
	var newItems = [];
	var _g = 0;
	var _g1 = items.length;
	while(_g < _g1) {
		var i = _g++;
		newItems.push(map(i,items[i]));
	}
	return newItems;
};
react_ReactUtil.cloneChildren = function(children,props) {
	if(Reflect.isFunction(props)) {
		return React.Children.map(children,function(child) {
			if(!React.isValidElement(child)) {
				return child;
			}
			return React.cloneElement(child,props(child));
		});
	} else {
		return React.Children.map(children,function(child) {
			if(!React.isValidElement(child)) {
				return child;
			}
			return React.cloneElement(child,props);
		});
	}
};
react_ReactUtil.shouldComponentUpdate = function(component,nextProps,nextState) {
	if(react_ReactUtil.shallowCompare(component.props,nextProps)) {
		return !react_ReactUtil.shallowCompare(component.state,nextState);
	} else {
		return true;
	}
};
react_ReactUtil.shallowCompare = function(a,b) {
	var aFields = Reflect.fields(a);
	var bFields = Reflect.fields(b);
	if(aFields.length != bFields.length) {
		return false;
	}
	var _g = 0;
	while(_g < aFields.length) {
		var field = aFields[_g];
		++_g;
		if(!Object.prototype.hasOwnProperty.call(b,field) || Reflect.field(b,field) != Reflect.field(a,field)) {
			return false;
		}
	}
	return true;
};
react_ReactUtil.shallowChanges = function(obj,obj2,ignoreEqual) {
	var keys1 = react_ReactUtil.getKeys(obj);
	var keys2 = react_ReactUtil.getKeys(obj2);
	var added = [];
	var deleted = [];
	var updated = [];
	var hasRet = false;
	var _g = 0;
	var _g1 = keys1.length;
	while(_g < _g1) {
		var i = _g++;
		var key = keys1[i];
		if(Lambda.has(keys2,key)) {
			if(Reflect.field(obj,key) != Reflect.field(obj2,key)) {
				updated.push(key);
				hasRet = true;
			}
		} else {
			deleted.push(key);
			hasRet = true;
		}
	}
	var _g = 0;
	var _g1 = keys2.length;
	while(_g < _g1) {
		var i = _g++;
		var key = keys2[i];
		if(!Lambda.has(keys1,key)) {
			added.push(key);
			hasRet = true;
		}
	}
	if(!hasRet) {
		return null;
	}
	var ret = { };
	if(added.length > 0) {
		ret.added = added;
	}
	if(deleted.length > 0) {
		ret.deleted = deleted;
	}
	if(updated.length > 0) {
		ret.updated = updated;
	}
	return ret;
};
react_ReactUtil.getKeys = function(obj) {
	var _g = [];
	var _g1 = 0;
	var _g2 = Reflect.fields(obj);
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(Reflect.field(obj,v) != null) {
			_g.push(v);
		}
	}
	return _g;
};
var react_intl_ReactIntl = require("react-intl");
var react_intl_comp_IntlProvider = require("react-intl").IntlProvider;
var react_router_NavLink = require("react-router-dom").NavLink;
var react_router_ReactRouter = require("react-router");
var react_router_Redirect = require("react-router").Redirect;
var react_router_Route = require("react-router").Route;
var react_router_Router = require("react-router").Router;
var react_router_Switch = require("react-router").Switch;
var react_router_bundle_Bundle = function() { };
$hxClasses["react.router.bundle.Bundle"] = react_router_bundle_Bundle;
react_router_bundle_Bundle.__name__ = "react.router.bundle.Bundle";
var redux_IMiddleware = function() { };
$hxClasses["redux.IMiddleware"] = redux_IMiddleware;
redux_IMiddleware.__name__ = "redux.IMiddleware";
redux_IMiddleware.__isInterface__ = true;
redux_IMiddleware.prototype = {
	store: null
	,middleware: null
	,__class__: redux_IMiddleware
};
var redux_IReducer = function() { };
$hxClasses["redux.IReducer"] = redux_IReducer;
redux_IReducer.__name__ = "redux.IReducer";
redux_IReducer.__isInterface__ = true;
redux_IReducer.prototype = {
	initState: null
	,reduce: null
	,__class__: redux_IReducer
};
var redux_Redux = require("redux");
var redux_Action = {};
redux_Action._new = function(a) {
	var this1 = a;
	return this1;
};
redux_Action.map = function(ev) {
	var e = Type.getEnum(ev);
	var this1 = { type : e.__ename__, value : ev};
	return this1;
};
var redux_Store = function() { };
$hxClasses["redux.Store"] = redux_Store;
redux_Store.__name__ = "redux.Store";
redux_Store.__isInterface__ = true;
redux_Store.prototype = {
	getState: null
	,dispatch: null
	,subscribe: null
	,replaceReducer: null
	,__class__: redux_Store
};
var redux_StoreBuilder = function() { };
$hxClasses["redux.StoreBuilder"] = redux_StoreBuilder;
redux_StoreBuilder.__name__ = "redux.StoreBuilder";
redux_StoreBuilder.mapReducer = function(of,service) {
	var type = of.__ename__;
	return function(state,action) {
		if(state == null) {
			state = service.initState;
		}
		if(action.type == type) {
			return service.reduce(state,action.value);
		} else {
			return state;
		}
	};
};
redux_StoreBuilder.mapMiddleware = function(of,service) {
	var type = of.__ename__;
	return function(store) {
		service.store = store;
		return function(next) {
			return function(action) {
				if(action.type == type) {
					var skip = function() {
						return next(action);
					};
					return service.middleware(action.value,skip);
				}
				return next(action);
			};
		};
	};
};
redux_StoreBuilder.createStore = function(rootReducer,initState,enhancer) {
	if(initState == null) {
		initState = { };
	}
	if(window.__REDUX_DEVTOOLS_EXTENSION__) {
		if(enhancer == null) {
			enhancer = window.__REDUX_DEVTOOLS_EXTENSION__();
		} else {
			enhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(enhancer);
		}
	}
	return redux_Redux.createStore(rootReducer,initState,enhancer);
};
var redux_react_IConnectedComponent = function() { };
$hxClasses["redux.react.IConnectedComponent"] = redux_react_IConnectedComponent;
redux_react_IConnectedComponent.__name__ = "redux.react.IConnectedComponent";
redux_react_IConnectedComponent.__isInterface__ = true;
var redux_react_Provider = function(props) {
	React_Component.call(this,props);
};
$hxClasses["redux.react.Provider"] = redux_react_Provider;
redux_react_Provider.__name__ = "redux.react.Provider";
redux_react_Provider.__super__ = React_Component;
redux_react_Provider.prototype = $extend(React_Component.prototype,{
	getChildContext: function() {
		return { store : this.props.store};
	}
	,render: function() {
		return React.Children.only(this.props.children);
	}
	,__class__: redux_react_Provider
});
var redux_react_ReactRedux = require("react-redux");
var redux_thunk_Thunk = $hxEnums["redux.thunk.Thunk"] = { __ename__:"redux.thunk.Thunk",__constructs__:null
	,Action: ($_=function(cb) { return {_hx_index:0,cb:cb,__enum__:"redux.thunk.Thunk",toString:$estr}; },$_._hx_name="Action",$_.__params__ = ["cb"],$_)
	,WithParams: ($_=function(cb) { return {_hx_index:1,cb:cb,__enum__:"redux.thunk.Thunk",toString:$estr}; },$_._hx_name="WithParams",$_.__params__ = ["cb"],$_)
};
redux_thunk_Thunk.__constructs__ = [redux_thunk_Thunk.Action,redux_thunk_Thunk.WithParams];
var redux_thunk_ThunkMiddleware = function(params) {
	this.params = params;
};
$hxClasses["redux.thunk.ThunkMiddleware"] = redux_thunk_ThunkMiddleware;
redux_thunk_ThunkMiddleware.__name__ = "redux.thunk.ThunkMiddleware";
redux_thunk_ThunkMiddleware.__interfaces__ = [redux_IMiddleware];
redux_thunk_ThunkMiddleware.prototype = {
	store: null
	,params: null
	,middleware: function(action,next) {
		switch(action._hx_index) {
		case 0:
			var cb = action.cb;
			return cb(($_=this.store,$bind($_,$_.dispatch)),($_=this.store,$bind($_,$_.getState)));
		case 1:
			var cb = action.cb;
			return cb(($_=this.store,$bind($_,$_.dispatch)),($_=this.store,$bind($_,$_.getState)),this.params);
		}
	}
	,__class__: redux_thunk_ThunkMiddleware
};
var shared_DBMetaData = function(server) {
	if(server == null) {
		server = false;
	}
	if(server) {
		this.dataErrors = new haxe_ds_StringMap();
		this.dataInfo = new haxe_ds_StringMap();
		this.dataRows = [];
	} else {
		this.dataFields = new haxe_ds_IntMap();
	}
};
$hxClasses["shared.DBMetaData"] = shared_DBMetaData;
shared_DBMetaData.__name__ = "shared.DBMetaData";
shared_DBMetaData.prototype = {
	dataErrors: null
	,dataInfo: null
	,dataParams: null
	,dataRows: null
	,dataFields: null
	,stateToDataParams: function(dT) {
		var dM = new haxe_ds_IntMap();
		var _g = 0;
		var _g1 = Reflect.fields(dT);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var key = Std.parseInt(f);
			var value = this.dynToDataField(Reflect.field(dT,f));
			dM.h[key] = value;
		}
		return dM;
	}
	,dynToDataField: function(d) {
		return { id : d.id, mandator : d.mandator, table_name : d.table_name, field_name : d.field_name, field_type : d.field_type, format_display : d.format_display, format_store : d.format_store, admin_only : d.admin_only, required : d.required, readonly : d.readonly, use_as_index : d.use_as_index};
	}
	,__class__: shared_DBMetaData
};
var shared_DateFormat = function() { };
$hxClasses["shared.DateFormat"] = shared_DateFormat;
shared_DateFormat.__name__ = "shared.DateFormat";
shared_DateFormat.parseDE = function(dS,required) {
	dS = StringTools.trim(dS);
	if(dS == "") {
		return { result : required ? "IsEmpty" : "OK"};
	}
	if(dS.length != 10 || new EReg("\\s|[a-zA-Z]","").match(dS)) {
		return { result : "DateFormat"};
	}
	var _this = dS.split(".");
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = Std.parseInt(_this[i]);
	}
	var dP = result;
	if(dP.length != 3) {
		return { result : "DateFormat"};
	}
	if(dP[1] == null || dP[1] == 0 || dP[1] > 12) {
		return { result : "MonthFormatRange"};
	}
	if(dP[2] == null || dP[2] == 0 || dP[2] < 1000 || dP[2] > 2999) {
		return { result : "YearFormatRange"};
	}
	var day = App.sprintf("%02d",dP[0]);
	var month = App.sprintf("%02d",dP[1]);
	var year = App.sprintf("%d",dP[2]);
	var checkDayDate = HxOverrides.strDate("01-" + month + "-" + year);
	var lastDay = DateTools.getMonthDays(checkDayDate);
	if(dP[0] == null || dP[0] == 0 || dP[0] > lastDay) {
		return { result : "DayFormatRange"};
	}
	return { date : HxOverrides.strDate("" + year + "-" + month + "-" + day), result : "OK"};
};
shared_DateFormat.parseTimestampz = function(tz) {
	var _this = new EReg("[^0-9]","g").split(tz);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = Std.parseInt(_this[i]);
	}
	var b = result;
	b[1] -= 1;
	b[6] = 0;
	haxe_Log.trace(b.join("-"),{ fileName : "../lib/shared/DateFormat.hx", lineNumber : 69, className : "shared.DateFormat", methodName : "parseTimestampz"});
	b.pop();
	return new Date(Reflect.field(DateTools,"makeUtc").apply(DateTools,b));
};
var shared_DbData = function() {
	this.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	this.dataErrors = new haxe_ds_StringMap();
	this.dataInfo = new haxe_ds_StringMap();
	this.dataParams = new haxe_ds_StringMap();
	this.dataInfoRows = [];
	this.dataRows = [];
};
$hxClasses["shared.DbData"] = shared_DbData;
shared_DbData.__name__ = "shared.DbData";
shared_DbData.__interfaces__ = [hxbit_Serializable];
shared_DbData.prototype = {
	dataErrors: null
	,dataInfo: null
	,dataParams: null
	,dataInfoRows: null
	,dataRows: null
	,__uid: null
	,getCLID: function() {
		return shared_DbData.__clid;
	}
	,serialize: function(__ctx) {
		var a = this.dataErrors;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var _g = [];
			var h = a.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				_g.push(k);
			}
			var keys = _g;
			var v = keys.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < keys.length) {
				var k = keys[_g];
				++_g;
				if(k == null) {
					__ctx.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(k);
					var v = b.length + 1;
					if(v >= 0 && v < 128) {
						__ctx.out.addByte(v);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v);
					}
					__ctx.out.add(b);
				}
				var v1 = a.h[k];
				if(v1 == null) {
					__ctx.out.addByte(0);
				} else {
					var b1 = haxe_io_Bytes.ofString(v1);
					var v2 = b1.length + 1;
					if(v2 >= 0 && v2 < 128) {
						__ctx.out.addByte(v2);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v2);
					}
					__ctx.out.add(b1);
				}
			}
		}
		var a = this.dataInfo;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var _g = [];
			var h = a.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				_g.push(k);
			}
			var keys = _g;
			var v = keys.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < keys.length) {
				var k = keys[_g];
				++_g;
				if(k == null) {
					__ctx.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(k);
					var v = b.length + 1;
					if(v >= 0 && v < 128) {
						__ctx.out.addByte(v);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v);
					}
					__ctx.out.add(b);
				}
				__ctx.addDynamic(a.h[k]);
			}
		}
		var a = this.dataInfoRows;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var v = a.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < a.length) {
				var v = a[_g];
				++_g;
				if(v == null) {
					__ctx.out.addByte(0);
				} else {
					var _g1 = [];
					var h = v.h;
					var k_h = h;
					var k_keys = Object.keys(h);
					var k_length = k_keys.length;
					var k_current = 0;
					while(k_current < k_length) {
						var k = k_keys[k_current++];
						_g1.push(k);
					}
					var keys = _g1;
					var v1 = keys.length + 1;
					if(v1 >= 0 && v1 < 128) {
						__ctx.out.addByte(v1);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v1);
					}
					var _g2 = 0;
					while(_g2 < keys.length) {
						var k1 = keys[_g2];
						++_g2;
						if(k1 == null) {
							__ctx.out.addByte(0);
						} else {
							var b = haxe_io_Bytes.ofString(k1);
							var v2 = b.length + 1;
							if(v2 >= 0 && v2 < 128) {
								__ctx.out.addByte(v2);
							} else {
								__ctx.out.addByte(128);
								__ctx.out.addInt32(v2);
							}
							__ctx.out.add(b);
						}
						var v3 = v.h[k1];
						if(v3 == null) {
							__ctx.out.addByte(0);
						} else {
							var b1 = haxe_io_Bytes.ofString(v3);
							var v4 = b1.length + 1;
							if(v4 >= 0 && v4 < 128) {
								__ctx.out.addByte(v4);
							} else {
								__ctx.out.addByte(128);
								__ctx.out.addInt32(v4);
							}
							__ctx.out.add(b1);
						}
					}
				}
			}
		}
		var a = this.dataRows;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var v = a.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < a.length) {
				var v = a[_g];
				++_g;
				if(v == null) {
					__ctx.out.addByte(0);
				} else {
					var _g1 = [];
					var h = v.h;
					var k_h = h;
					var k_keys = Object.keys(h);
					var k_length = k_keys.length;
					var k_current = 0;
					while(k_current < k_length) {
						var k = k_keys[k_current++];
						_g1.push(k);
					}
					var keys = _g1;
					var v1 = keys.length + 1;
					if(v1 >= 0 && v1 < 128) {
						__ctx.out.addByte(v1);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v1);
					}
					var _g2 = 0;
					while(_g2 < keys.length) {
						var k1 = keys[_g2];
						++_g2;
						if(k1 == null) {
							__ctx.out.addByte(0);
						} else {
							var b = haxe_io_Bytes.ofString(k1);
							var v2 = b.length + 1;
							if(v2 >= 0 && v2 < 128) {
								__ctx.out.addByte(v2);
							} else {
								__ctx.out.addByte(128);
								__ctx.out.addInt32(v2);
							}
							__ctx.out.add(b);
						}
						var v3 = v.h[k1];
						if(v3 == null) {
							__ctx.out.addByte(0);
						} else {
							var b1 = haxe_io_Bytes.ofString(v3);
							var v4 = b1.length + 1;
							if(v4 >= 0 && v4 < 128) {
								__ctx.out.addByte(v4);
							} else {
								__ctx.out.addByte(128);
								__ctx.out.addInt32(v4);
							}
							__ctx.out.add(b1);
						}
					}
				}
			}
		}
	}
	,getSerializeSchema: function() {
		var schema = new hxbit_Schema();
		schema.fieldsNames.push("dataErrors");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PString));
		schema.fieldsNames.push("dataInfo");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PDynamic));
		schema.fieldsNames.push("dataInfoRows");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PString)));
		schema.fieldsNames.push("dataRows");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PString)));
		schema.isFinal = hxbit_Serializer.isClassFinal(shared_DbData.__clid);
		return schema;
	}
	,unserializeInit: function() {
	}
	,unserialize: function(__ctx) {
		var k0;
		var v0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			var m = new haxe_ds_StringMap();
			while(--len > 0) {
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len1 = v;
				if(len1 == 0) {
					k0 = null;
				} else {
					--len1;
					var s = __ctx.input.getString(__ctx.inPos,len1);
					__ctx.inPos += len1;
					k0 = s;
				}
				var k = k0;
				var v1 = __ctx.input.b[__ctx.inPos++];
				if(v1 == 128) {
					v1 = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len2 = v1;
				if(len2 == 0) {
					v0 = null;
				} else {
					--len2;
					var s1 = __ctx.input.getString(__ctx.inPos,len2);
					__ctx.inPos += len2;
					v0 = s1;
				}
				var v2 = v0;
				m.h[k] = v2;
			}
			tmp = m;
		}
		this.dataErrors = tmp;
		var k0;
		var v0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			var m = new haxe_ds_StringMap();
			while(--len > 0) {
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len1 = v;
				if(len1 == 0) {
					k0 = null;
				} else {
					--len1;
					var s = __ctx.input.getString(__ctx.inPos,len1);
					__ctx.inPos += len1;
					k0 = s;
				}
				var k = k0;
				v0 = __ctx.getDynamic();
				var v1 = v0;
				m.h[k] = v1;
			}
			tmp = m;
		}
		this.dataInfo = tmp;
		var e0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var a = [];
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var k1;
				var v1;
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len = v;
				if(len == 0) {
					e0 = null;
				} else {
					var m = new haxe_ds_StringMap();
					while(--len > 0) {
						var v2 = __ctx.input.b[__ctx.inPos++];
						if(v2 == 128) {
							v2 = __ctx.input.getInt32(__ctx.inPos);
							__ctx.inPos += 4;
						}
						var len1 = v2;
						if(len1 == 0) {
							k1 = null;
						} else {
							--len1;
							var s = __ctx.input.getString(__ctx.inPos,len1);
							__ctx.inPos += len1;
							k1 = s;
						}
						var k = k1;
						var v3 = __ctx.input.b[__ctx.inPos++];
						if(v3 == 128) {
							v3 = __ctx.input.getInt32(__ctx.inPos);
							__ctx.inPos += 4;
						}
						var len2 = v3;
						if(len2 == 0) {
							v1 = null;
						} else {
							--len2;
							var s1 = __ctx.input.getString(__ctx.inPos,len2);
							__ctx.inPos += len2;
							v1 = s1;
						}
						var v4 = v1;
						m.h[k] = v4;
					}
					e0 = m;
				}
				a[i] = e0;
			}
			tmp = a;
		}
		this.dataInfoRows = tmp;
		var e0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var a = [];
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var k1;
				var v1;
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len = v;
				if(len == 0) {
					e0 = null;
				} else {
					var m = new haxe_ds_StringMap();
					while(--len > 0) {
						var v2 = __ctx.input.b[__ctx.inPos++];
						if(v2 == 128) {
							v2 = __ctx.input.getInt32(__ctx.inPos);
							__ctx.inPos += 4;
						}
						var len1 = v2;
						if(len1 == 0) {
							k1 = null;
						} else {
							--len1;
							var s = __ctx.input.getString(__ctx.inPos,len1);
							__ctx.inPos += len1;
							k1 = s;
						}
						var k = k1;
						var v3 = __ctx.input.b[__ctx.inPos++];
						if(v3 == 128) {
							v3 = __ctx.input.getInt32(__ctx.inPos);
							__ctx.inPos += 4;
						}
						var len2 = v3;
						if(len2 == 0) {
							v1 = null;
						} else {
							--len2;
							var s1 = __ctx.input.getString(__ctx.inPos,len2);
							__ctx.inPos += len2;
							v1 = s1;
						}
						var v4 = v1;
						m.h[k] = v4;
					}
					e0 = m;
				}
				a[i] = e0;
			}
			tmp = a;
		}
		this.dataRows = tmp;
	}
	,__class__: shared_DbData
};
var shared_DbDataTools = function() { };
$hxClasses["shared.DbDataTools"] = shared_DbDataTools;
shared_DbDataTools.__name__ = "shared.DbDataTools";
shared_DbDataTools.create = function(dataErrors,dataInfo,dataParams,dataRows) {
	var dbData = new shared_DbData();
	dbData.dataErrors = dataErrors == null ? new haxe_ds_StringMap() : dataErrors;
	var tmp;
	if(dataInfo == null) {
		var _g = new haxe_ds_StringMap();
		var value = DateTools.format(new Date(),"%Y-%m-%d_%H:%M:%S");
		_g.h["datetime"] = value;
		tmp = _g;
	} else {
		tmp = new haxe_ds_StringMap();
	}
	dbData.dataInfo = tmp;
	dbData.dataParams = dataParams;
	dbData.dataRows = dataRows;
	return dbData;
};
var shared_DbParam = function() {
	this.dataParams = new haxe_ds_StringMap();
	this.dbQuery = new haxe_ds_StringMap();
};
$hxClasses["shared.DbParam"] = shared_DbParam;
shared_DbParam.__name__ = "shared.DbParam";
shared_DbParam.create = function(drp) {
	var dbp = new shared_DbParam();
	var _g = 0;
	var _g1 = Reflect.fields(drp);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
	}
};
shared_DbParam.prototype = {
	dataParams: null
	,dbQuery: null
	,userState: null
	,__class__: shared_DbParam
};
var shared_FieldFormat = function() { };
$hxClasses["shared.FieldFormat"] = shared_FieldFormat;
shared_FieldFormat.__name__ = "shared.FieldFormat";
shared_FieldFormat.display = function(v,dv) {
	if(dv.field_type == "Date") {
		return DateTools.format(HxOverrides.strDate(v),dv.format_display);
	} else {
		return null;
	}
};
var shared_FindFields = function() { };
$hxClasses["shared.FindFields"] = shared_FindFields;
shared_FindFields.__name__ = "shared.FindFields";
shared_FindFields.iLike = function(v) {
	return "ILIKE|%" + v + "%";
};
shared_FindFields.enterSubmit = function(e) {
	haxe_Log.trace(e.charCode,{ fileName : "../lib/shared/FindFields.hx", lineNumber : 30, className : "shared.FindFields", methodName : "enterSubmit"});
	if(e.charCode == 13) {
		(js_Boot.__cast(e.target , HTMLInputElement)).form.submit();
	}
};
var shared_Utils = function() { };
$hxClasses["shared.Utils"] = shared_Utils;
shared_Utils.__name__ = "shared.Utils";
shared_Utils.compare = function(ob1,ob2) {
	var keys = Reflect.fields(ob1);
	var _g = 0;
	while(_g < keys.length) {
		var k = keys[_g];
		++_g;
		var tmp = Reflect.field(ob1,k) != Reflect.field(ob2,k);
	}
};
shared_Utils.copyObjectArray = function(oA) {
	var oaCopy = [];
	var _g = 0;
	while(_g < oA.length) {
		var el = oA[_g];
		++_g;
		var elCopy = null;
		var _g1 = 0;
		var _g2 = Reflect.fields(el);
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			elCopy[f] = Reflect.field(el,f);
		}
		oaCopy.push(elCopy);
	}
	return oaCopy;
};
shared_Utils.getByKey = function(am,val,key) {
	if(key == null) {
		key = "id";
	}
	var _g = 0;
	while(_g < am.length) {
		var ma = am[_g];
		++_g;
		if(Reflect.field(ma,key) == val) {
			return ma;
		}
	}
	return null;
};
shared_Utils.getAllByKey = function(am,key) {
	if(key == null) {
		key = "id";
	}
	var _g = [];
	var _g1 = 0;
	while(_g1 < am.length) {
		var ma = am[_g1];
		++_g1;
		_g.push(ma.h[key]);
	}
	return _g;
};
shared_Utils.arrayKeysList = function(arr,key) {
	var l = [];
	if(arr == null) {
		return l;
	}
	var _g = 0;
	while(_g < arr.length) {
		var el = arr[_g];
		++_g;
		if(Object.prototype.hasOwnProperty.call(el,key)) {
			l.push(Reflect.field(el,key));
		}
	}
	return l;
};
shared_Utils.keysList = function(ki) {
	var l = [];
	var k = ki;
	while(k.hasNext()) {
		var k1 = k.next();
		l.push(k1);
	}
	return l;
};
shared_Utils.sKeysList = function(ki) {
	var l = [];
	var k = ki;
	while(k.hasNext()) {
		var k1 = k.next();
		l.push(k1);
	}
	return l;
};
shared_Utils.argList = function(path,keys,del) {
	if(del == null) {
		del = "/";
	}
	var segments = path.split(del);
	segments.shift();
	var key = null;
	var lastKey = keys.pop();
	var aL = new haxe_ds_StringMap();
	var _g = 0;
	while(_g < keys.length) {
		var k = keys[_g];
		++_g;
		var value = segments.shift();
		aL.h[k] = value;
	}
	var value = segments.length > 0 ? del + segments.join(del) : del;
	aL.h[lastKey] = value;
	return aL;
};
shared_Utils.extend = function(obj1,obj2) {
	var keys = Reflect.fields(obj2);
	if(obj1 == null) {
		obj1 = { };
	}
	var _g = 0;
	while(_g < keys.length) {
		var k = keys[_g];
		++_g;
		var value = Reflect.field(obj2,k);
		obj1[k] = value;
	}
	return obj1;
};
shared_Utils.each = function(object,cb) {
	var keys = Reflect.fields(object);
	var _g = 0;
	while(_g < keys.length) {
		var k = keys[_g];
		++_g;
		cb(k,Reflect.field(object,k));
	}
};
shared_Utils.dynaMap = function(object) {
	var _g = new haxe_ds_StringMap();
	var _g1 = 0;
	var _g2 = Reflect.fields(object);
	while(_g1 < _g2.length) {
		var k = _g2[_g1];
		++_g1;
		_g.h[k] = Std.string(Reflect.field(object,k));
	}
	return _g;
};
shared_Utils.dynaDynMap = function(object) {
	var _g = new haxe_ds_StringMap();
	var _g1 = 0;
	var _g2 = Reflect.fields(object);
	while(_g1 < _g2.length) {
		var k = _g2[_g1];
		++_g1;
		var value = shared_Utils.dynaMap(Reflect.field(object,k));
		_g.h[k] = value;
	}
	return _g;
};
shared_Utils.genKey = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.methodName + ":" + i.lineNumber + ":" : "";
	var key = i.methodName + "_" + Std.string(++shared_Utils.kIndex);
	return key;
};
shared_Utils.stateToDataParams = function(dT) {
	var _g = new haxe_ds_StringMap();
	var _g1 = 0;
	var _g2 = Reflect.fields(dT);
	while(_g1 < _g2.length) {
		var f = _g2[_g1];
		++_g1;
		var value = shared_Utils.dynToMap(Reflect.field(dT,f));
		_g.h[f] = value;
	}
	return _g;
};
shared_Utils.diff = function(d1,d2) {
	var rDiff = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = Reflect.fields(d1);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		if(Reflect.field(d1,f) != Reflect.field(d2,f)) {
			var v = "" + Std.string(Reflect.field(d1,f)) + " => " + Std.string(Reflect.field(d2,f));
			rDiff.h[f] = v;
		}
	}
	return rDiff;
};
shared_Utils.dynArray2MapArray = function(dT) {
	var _g = [];
	var _g1 = 0;
	while(_g1 < dT.length) {
		var dR = dT[_g1];
		++_g1;
		_g.push(shared_Utils.dynToMap(dR));
	}
	return _g;
};
shared_Utils.dynToMap = function(d) {
	var _g = new haxe_ds_StringMap();
	var _g1 = 0;
	var _g2 = Reflect.fields(d);
	while(_g1 < _g2.length) {
		var f = _g2[_g1];
		++_g1;
		_g.h[f] = Reflect.field(d,f);
	}
	return _g;
};
shared_Utils.dynArray2IntMap = function(d,findBy) {
	if(findBy == null) {
		findBy = "id";
	}
	var map = new haxe_ds_IntMap();
	var _g = 0;
	while(_g < d.length) {
		var el = d[_g];
		++_g;
		map.h[el.h[findBy]] = el;
	}
	return map;
};
shared_Utils.dyn2map1 = function(d) {
	var map = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = Reflect.fields(d);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		haxe_Log.trace(f,{ fileName : "../lib/shared/Utils.hx", lineNumber : 238, className : "shared.Utils", methodName : "dyn2map1"});
		var v = Reflect.field(d,f);
		map.h[f] = v;
	}
	return map;
};
shared_Utils.serializeNestedMap = function(map) {
	var _g = [];
	var h = map.h;
	var _g1_h = h;
	var _g1_keys = Object.keys(h);
	var _g1_length = _g1_keys.length;
	var _g1_current = 0;
	while(_g1_current < _g1_length) {
		var key = _g1_keys[_g1_current++];
		var _g2_key = key;
		var _g2_value = _g1_h[key];
		var k = _g2_key;
		var v = _g2_value;
		haxe_Log.trace(k,{ fileName : "../lib/shared/Utils.hx", lineNumber : 255, className : "shared.Utils", methodName : "serializeNestedMap"});
		var _g1 = new haxe_ds_StringMap();
		_g1.h[k] = v;
		_g.push(haxe_Serializer.run(_g1));
	}
	return _g.join(",");
};
shared_Utils.map2dyn = function(map) {
	var obj = { };
	var h = map.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var k = _g1_key;
		var v = _g1_value;
		obj[k] = v;
	}
	return obj;
};
shared_Utils.errorStatus = function(status) {
	return "<span className=\"error\">" + status + "</span>";
};
shared_Utils.keyMax = function(d,key) {
	var res = 0;
	if(d.length == 0) {
		return res;
	}
	haxe_Log.trace(Type.typeof(d[0]),{ fileName : "../lib/shared/Utils.hx", lineNumber : 283, className : "shared.Utils", methodName : "keyMax"});
	var _g = 0;
	while(_g < d.length) {
		var el = d[_g];
		++_g;
		var v = parseFloat(el.get(key));
		if(!isNaN(v) && v > res) {
			res = v;
		}
	}
	return res;
};
shared_Utils.updateDyn = function(obj1,obj2) {
	var keys = Reflect.fields(obj1);
	if(obj1 == null) {
		return null;
	}
	var _g = 0;
	while(_g < keys.length) {
		var k = keys[_g];
		++_g;
		var value = Reflect.field(obj2,k);
		if(Object.prototype.hasOwnProperty.call(obj2,k)) {
			obj1[k] = value;
		}
	}
	return obj1;
};
var state_CState = function() { };
$hxClasses["state.CState"] = state_CState;
state_CState.__name__ = "state.CState";
state_CState.confirmTransition = function(message,callback) {
	haxe_Log.trace(message,{ fileName : "src/state/CState.hx", lineNumber : 22, className : "state.CState", methodName : "confirmTransition"});
	if(state_CState.store.getState().locationStore.history.location.pathname == "/") {
		callback(true);
		return;
	}
	callback(true);
};
state_CState.blockTransition = function(location,action) {
	haxe_Log.trace(location.pathname,{ fileName : "src/state/CState.hx", lineNumber : 32, className : "state.CState", methodName : "blockTransition"});
	haxe_Log.trace(action,{ fileName : "src/state/CState.hx", lineNumber : 33, className : "state.CState", methodName : "blockTransition"});
	return location.pathname;
};
state_CState.historyChange = function(location,action) {
	haxe_Log.trace(location,{ fileName : "src/state/CState.hx", lineNumber : 39, className : "state.CState", methodName : "historyChange"});
	haxe_Log.trace(action,{ fileName : "src/state/CState.hx", lineNumber : 40, className : "state.CState", methodName : "historyChange"});
	return false;
};
state_CState.init = function(store) {
	state_CState.store = store;
};
var store_AppStore = function() {
	this.initState = { status : { date : new Date(), path : $global.location.pathname, text : "", userState : null}, userState : null};
	haxe_Log.trace(this.store,{ fileName : "src/store/AppStore.hx", lineNumber : 55, className : "store.AppStore", methodName : "new"});
};
$hxClasses["store.AppStore"] = store_AppStore;
store_AppStore.__name__ = "store.AppStore";
store_AppStore.__interfaces__ = [redux_IMiddleware,redux_IReducer];
store_AppStore.prototype = {
	initState: null
	,store: null
	,reduce: function(state,action) {
		haxe_Log.trace(Reflect.fields(state),{ fileName : "src/store/AppStore.hx", lineNumber : 60, className : "store.AppStore", methodName : "reduce"});
		haxe_Log.trace(action,{ fileName : "src/store/AppStore.hx", lineNumber : 61, className : "store.AppStore", methodName : "reduce"});
		switch(action._hx_index) {
		case 0:
			var subState = action.state;
			return react_ReactUtil.copy(state,subState);
		case 3:
			var dataAction = action.action;
			haxe_Log.trace(dataAction,{ fileName : "src/store/AppStore.hx", lineNumber : 67, className : "store.AppStore", methodName : "reduce"});
			switch(dataAction._hx_index) {
			case 3:
				var data = dataAction.data;
				haxe_Log.trace(data.dataRows,{ fileName : "src/store/AppStore.hx", lineNumber : 71, className : "store.AppStore", methodName : "reduce"});
				return react_ReactUtil.copy(state,{ dataStore : { contactsDbData : data}});
			case 4:
				var data = dataAction.data;
				haxe_Log.trace(data.dataRows.length,{ fileName : "src/store/AppStore.hx", lineNumber : 75, className : "store.AppStore", methodName : "reduce"});
				return react_ReactUtil.copy(state,{ dataStore : { qcData : shared_Utils.dynArray2IntMap(data.dataRows,"lead_id")}});
			default:
				return state;
			}
			break;
		default:
			return state;
		}
	}
	,middleware: function(action,next) {
		switch(action._hx_index) {
		case 6:
			var action1 = action.action;
			haxe_Log.trace(action1,{ fileName : "src/store/AppStore.hx", lineNumber : 115, className : "store.AppStore", methodName : "middleware"});
			return this.store.dispatch(redux_Action.map(action1));
		case 7:
			var action1 = action.action;
			return this.store.dispatch(redux_Action.map(action1));
		default:
			haxe_Log.trace(action,{ fileName : "src/store/AppStore.hx", lineNumber : 138, className : "store.AppStore", methodName : "middleware"});
			return next();
		}
	}
	,__class__: store_AppStore
};
var store_ConfigStore = function(p) {
	this.initState = p;
	haxe_Log.trace("ok",{ fileName : "src/store/ConfigStore.hx", lineNumber : 17, className : "store.ConfigStore", methodName : "new"});
};
$hxClasses["store.ConfigStore"] = store_ConfigStore;
store_ConfigStore.__name__ = "store.ConfigStore";
store_ConfigStore.__interfaces__ = [redux_IReducer];
store_ConfigStore.prototype = {
	initState: null
	,reduce: function(state,action) {
		haxe_Log.trace(state,{ fileName : "src/store/ConfigStore.hx", lineNumber : 22, className : "store.ConfigStore", methodName : "reduce"});
		haxe_Log.trace(action,{ fileName : "src/store/ConfigStore.hx", lineNumber : 23, className : "store.ConfigStore", methodName : "reduce"});
		if(action._hx_index == 0) {
			var p = action.p;
			haxe_Log.trace(p,{ fileName : "src/store/ConfigStore.hx", lineNumber : 27, className : "store.ConfigStore", methodName : "reduce"});
			return react_ReactUtil.copy(state,p);
		} else {
			return state;
		}
	}
	,__class__: store_ConfigStore
};
var store_DataStore = function() {
	this.initState = { contactsData : new haxe_ds_IntMap(), dealData : new haxe_ds_IntMap(), accountData : new haxe_ds_IntMap(), qcData : new haxe_ds_IntMap(), returnDebitsData : new haxe_ds_IntMap(), page : 0};
	haxe_Log.trace("ok",{ fileName : "src/store/DataStore.hx", lineNumber : 39, className : "store.DataStore", methodName : "new"});
};
$hxClasses["store.DataStore"] = store_DataStore;
store_DataStore.__name__ = "store.DataStore";
store_DataStore.__interfaces__ = [redux_IMiddleware,redux_IReducer];
store_DataStore.prototype = {
	initState: null
	,store: null
	,reduce: function(state,action) {
		haxe_Log.trace(Reflect.fields(state),{ fileName : "src/store/DataStore.hx", lineNumber : 45, className : "store.DataStore", methodName : "reduce"});
		switch(action._hx_index) {
		case 1:
			var uData = action.uData;
			haxe_Log.trace(uData,{ fileName : "src/store/DataStore.hx", lineNumber : 109, className : "store.DataStore", methodName : "reduce"});
			var cData = state.contactsData;
			var uDataIt = uData.iterator();
			var row = null;
			var map = uData;
			var _g_map = map;
			var _g_keys = map.keys();
			while(_g_keys.hasNext()) {
				var key = _g_keys.next();
				var _g1_value = _g_map.get(key);
				var _g1_key = key;
				var i = _g1_key;
				var row = _g1_value;
				cData.h[i] = row;
			}
			return react_ReactUtil.copy(state,{ contactsData : cData});
		case 3:
			var data = action.data;
			if(data.dataRows != null) {
				haxe_Log.trace(data.dataRows.length,{ fileName : "src/store/DataStore.hx", lineNumber : 53, className : "store.DataStore", methodName : "reduce"});
				haxe_Log.trace(react_ReactUtil.copy(state,{ contactsDbData : data}).contactsDbData.dataRows.length,{ fileName : "src/store/DataStore.hx", lineNumber : 54, className : "store.DataStore", methodName : "reduce"});
			}
			return react_ReactUtil.copy(state,{ contactsDbData : data});
		case 4:
			var data = action.data;
			haxe_Log.trace(Reflect.fields(data).join("|"),{ fileName : "src/store/DataStore.hx", lineNumber : 66, className : "store.DataStore", methodName : "reduce"});
			return react_ReactUtil.copy(state,{ qcData : shared_Utils.dynArray2IntMap(data.dataRows,"lead_id")});
		case 5:
			return state;
		case 6:
			var sData = action.sData;
			return react_ReactUtil.copy(state,{ contactsData : sData});
		case 7:
			var sData = action.sData;
			haxe_Log.trace(sData,{ fileName : "src/store/DataStore.hx", lineNumber : 86, className : "store.DataStore", methodName : "reduce"});
			return react_ReactUtil.copy(state,{ contactActData : sData});
		case 8:
			var sData = action.sData;
			haxe_Log.trace(sData,{ fileName : "src/store/DataStore.hx", lineNumber : 92, className : "store.DataStore", methodName : "reduce"});
			haxe_Log.trace(shared_Utils.keysList(state.contactsData.keys()),{ fileName : "src/store/DataStore.hx", lineNumber : 94, className : "store.DataStore", methodName : "reduce"});
			return react_ReactUtil.copy(state,{ contactsData : sData});
		case 10:
			var sData = action.sData;
			haxe_Log.trace(shared_Utils.keysList(sData.keys()),{ fileName : "src/store/DataStore.hx", lineNumber : 104, className : "store.DataStore", methodName : "reduce"});
			return react_ReactUtil.copy(state,{ returnDebitsData : sData});
		case 11:
			var sData = action.sData;
			haxe_Log.trace(shared_Utils.keysList(sData.keys()),{ fileName : "src/store/DataStore.hx", lineNumber : 99, className : "store.DataStore", methodName : "reduce"});
			return react_ReactUtil.copy(state,{ dealData : sData});
		case 12:
			var sData = action.sData;
			haxe_Log.trace(shared_Utils.keysList(sData.keys()),{ fileName : "src/store/DataStore.hx", lineNumber : 72, className : "store.DataStore", methodName : "reduce"});
			haxe_Log.trace(sData,{ fileName : "src/store/DataStore.hx", lineNumber : 73, className : "store.DataStore", methodName : "reduce"});
			return react_ReactUtil.copy(state,{ qcActData : sData});
		default:
			return state;
		}
	}
	,middleware: function(action,next) {
		haxe_Log.trace($hxEnums[action.__enum__].__constructs__[action._hx_index]._hx_name,{ fileName : "src/store/DataStore.hx", lineNumber : 127, className : "store.DataStore", methodName : "middleware"});
		switch(action._hx_index) {
		case 0:
			var data = action.dataAccess;
			return this.store.dispatch(redux_Action.map(action_async_DBAccess.execute(data)));
		case 3:
			var data = action.data;
			this.store.dispatch(redux_Action.map(action_AppAction.Data(action)));
			return next();
		case 8:
			var sData = action.sData;
			haxe_Log.trace("SelectContacts",{ fileName : "src/store/DataStore.hx", lineNumber : 141, className : "store.DataStore", methodName : "middleware"});
			return next();
		case 13:
			var data = action.dataAccess;
			return this.store.dispatch(action_async_LivePBXSync.importContacts(data));
		default:
			return next();
		}
	}
	,__class__: store_DataStore
};
var store_LocationStore = function(history) {
	me_cunity_debug_Out.suspended = true;
	var tmp = new Date();
	var tmp1;
	if(StringTools.startsWith($global.location.pathname,"/ChangePassword") == true) {
		var args = shared_Utils.argList($global.location.pathname,["action","jwt","user_name","opath"]);
		haxe_Log.trace(args == null ? "null" : haxe_ds_StringMap.stringify(args.h),{ fileName : "src/store/LocationStore.hx", lineNumber : 38, className : "store.LocationStore", methodName : "new"});
		tmp1 = args.h["opath"];
	} else {
		tmp1 = $global.location.pathname == "/" ? "/DashBoard" : $global.location.pathname;
	}
	this.initState = { history : history, lastModified : tmp, page : 0, redirectAfterLogin : tmp1};
	me_cunity_debug_Out.dumpObject(this.initState,{ fileName : "src/store/LocationStore.hx", lineNumber : 43, className : "store.LocationStore", methodName : "new"});
	me_cunity_debug_Out.suspended = false;
};
$hxClasses["store.LocationStore"] = store_LocationStore;
store_LocationStore.__name__ = "store.LocationStore";
store_LocationStore.__interfaces__ = [redux_IMiddleware,redux_IReducer];
store_LocationStore.prototype = {
	initState: null
	,store: null
	,reduce: function(state,action) {
		haxe_Log.trace(state.history.location.pathname,{ fileName : "src/store/LocationStore.hx", lineNumber : 49, className : "store.LocationStore", methodName : "reduce"});
		switch(action._hx_index) {
		case 6:
			var history = action.history;
			return react_ReactUtil.copy(state,{ history : history});
		case 7:
			var location = action.location;
			haxe_Log.trace(location.pathname,{ fileName : "src/store/LocationStore.hx", lineNumber : 59, className : "store.LocationStore", methodName : "reduce"});
			return react_ReactUtil.copy(state,{ location : location});
		default:
			return state;
		}
	}
	,middleware: function(action,next) {
		var history = this.store.getState().locationStore.history;
		return next();
	}
	,__class__: store_LocationStore
};
var store_StatusStore = function() {
	this.initState = { path : $global.location.pathname, text : "", date : new Date(), userState : null};
};
$hxClasses["store.StatusStore"] = store_StatusStore;
store_StatusStore.__name__ = "store.StatusStore";
store_StatusStore.__interfaces__ = [redux_IReducer];
store_StatusStore.prototype = {
	initState: null
	,reduce: function(state,action) {
		var status = action.status;
		return react_ReactUtil.copy(state,status);
	}
	,__class__: store_StatusStore
};
var store_UserStore = function() {
	this.initState = { loginTask : null, waiting : true, dbUser : new db_DbUser({ first_name : js_Cookie.get("userState.dbUser.first_name") == null ? "" : js_Cookie.get("userState.dbUser.first_name"), id : js_Cookie.get("userState.dbUser.id") == null ? 0 : Std.parseInt(js_Cookie.get("userState.dbUser.id")), last_name : js_Cookie.get("userState.dbUser.last_name") == null ? "" : js_Cookie.get("userState.dbUser.last_name"), mandator : js_Cookie.get("userState.dbUser.mandator") == null ? 1 : Std.parseInt(js_Cookie.get("userState.dbUser.mandator")), user_name : js_Cookie.get("userState.dbUser.user_name") == null ? "" : js_Cookie.get("userState.dbUser.user_name"), email : js_Cookie.get("userState.dbUser.email") == null ? "" : js_Cookie.get("userState.dbUser.email"), password : "", change_pass_required : false, online : false, last_login : null, jwt : js_Cookie.get("userState.dbUser.jwt") == null ? "" : js_Cookie.get("userState.dbUser.jwt")})};
};
$hxClasses["store.UserStore"] = store_UserStore;
store_UserStore.__name__ = "store.UserStore";
store_UserStore.__interfaces__ = [redux_IReducer];
store_UserStore.prototype = {
	initState: null
	,store: null
	,reduce: function(state,action) {
		switch(action._hx_index) {
		case 0:
			var uState = action.state;
			haxe_Log.trace("...",{ fileName : "src/store/UserStore.hx", lineNumber : 58, className : "store.UserStore", methodName : "reduce"});
			return react_ReactUtil.copy(state,uState);
		case 1:
			var uState = action.state;
			if(uState.dbUser != null) {
				haxe_Log.trace(uState.dbUser.id + ":" + Std.string(uState.dbUser.online),{ fileName : "src/store/UserStore.hx", lineNumber : 72, className : "store.UserStore", methodName : "reduce"});
			}
			return react_ReactUtil.copy(state,uState);
		case 2:
			var err = action.state;
			haxe_Log.trace("err",{ fileName : "src/store/UserStore.hx", lineNumber : 63, className : "store.UserStore", methodName : "reduce"});
			return react_ReactUtil.copy(state,err);
		case 3:
			var uState = action.state;
			me_cunity_debug_Out.dumpObject(uState,{ fileName : "src/store/UserStore.hx", lineNumber : 67, className : "store.UserStore", methodName : "reduce"});
			return react_ReactUtil.copy(state,uState);
		case 4:
			var uState = action.state;
			return react_ReactUtil.copy(state,uState);
		case 5:
			var uState = action.state;
			uState.dbUser = new db_DbUser({ });
			haxe_Log.trace(uState.dbUser,{ fileName : "src/store/UserStore.hx", lineNumber : 78, className : "store.UserStore", methodName : "reduce"});
			return react_ReactUtil.copy(state,uState);
		case 6:
			var uState = action.state;
			haxe_Log.trace("...",{ fileName : "src/store/UserStore.hx", lineNumber : 58, className : "store.UserStore", methodName : "reduce"});
			return react_ReactUtil.copy(state,uState);
		}
	}
	,__class__: store_UserStore
};
var tink_core_Callback = {};
tink_core_Callback._new = function(f) {
	var this1 = f;
	return this1;
};
tink_core_Callback.toFunction = function(this1) {
	return this1;
};
tink_core_Callback.invoke = function(this1,data) {
	if(tink_core_Callback.depth < 500) {
		tink_core_Callback.depth++;
		this1(data);
		tink_core_Callback.depth--;
	} else {
		tink_core_Callback.defer(function() {
			this1(data);
		});
	}
};
tink_core_Callback.fromNiladic = function(f) {
	return f;
};
tink_core_Callback.fromMany = function(callbacks) {
	return function(v) {
		var _g = 0;
		while(_g < callbacks.length) {
			var callback = callbacks[_g];
			++_g;
			tink_core_Callback.invoke(callback,v);
		}
	};
};
tink_core_Callback.defer = function(f) {
	haxe_Timer.delay(f,0);
};
var tink_core_LinkObject = function() { };
$hxClasses["tink.core.LinkObject"] = tink_core_LinkObject;
tink_core_LinkObject.__name__ = "tink.core.LinkObject";
tink_core_LinkObject.__isInterface__ = true;
tink_core_LinkObject.prototype = {
	cancel: null
	,__class__: tink_core_LinkObject
};
var tink_core_CallbackLinkRef = function() {
};
$hxClasses["tink.core.CallbackLinkRef"] = tink_core_CallbackLinkRef;
tink_core_CallbackLinkRef.__name__ = "tink.core.CallbackLinkRef";
tink_core_CallbackLinkRef.__interfaces__ = [tink_core_LinkObject];
tink_core_CallbackLinkRef.prototype = {
	link: null
	,cancel: function() {
		var this1 = this.link;
		if(this1 != null) {
			this1.cancel();
		}
	}
	,__class__: tink_core_CallbackLinkRef
};
var tink_core_CallbackLink = {};
tink_core_CallbackLink._new = function(link) {
	var this1 = new tink_core_SimpleLink(link);
	return this1;
};
tink_core_CallbackLink.cancel = function(this1) {
	if(this1 != null) {
		this1.cancel();
	}
};
tink_core_CallbackLink.dissolve = function(this1) {
	if(this1 != null) {
		this1.cancel();
	}
};
tink_core_CallbackLink.noop = function() {
};
tink_core_CallbackLink.toFunction = function(this1) {
	if(this1 == null) {
		return tink_core_CallbackLink.noop;
	} else {
		return $bind(this1,this1.cancel);
	}
};
tink_core_CallbackLink.toCallback = function(this1) {
	if(this1 == null) {
		return tink_core_CallbackLink.noop;
	} else {
		return $bind(this1,this1.cancel);
	}
};
tink_core_CallbackLink.fromFunction = function(f) {
	var this1 = new tink_core_SimpleLink(f);
	return this1;
};
tink_core_CallbackLink.join = function(this1,b) {
	return new tink_core__$Callback_LinkPair(this1,b);
};
tink_core_CallbackLink.fromMany = function(callbacks) {
	var this1 = new tink_core_SimpleLink(function() {
		if(callbacks != null) {
			var _g = 0;
			while(_g < callbacks.length) {
				var cb = callbacks[_g];
				++_g;
				if(cb != null) {
					cb.cancel();
				}
			}
		} else {
			callbacks = null;
		}
	});
	return this1;
};
var tink_core_SimpleLink = function(f) {
	this.f = f;
};
$hxClasses["tink.core.SimpleLink"] = tink_core_SimpleLink;
tink_core_SimpleLink.__name__ = "tink.core.SimpleLink";
tink_core_SimpleLink.__interfaces__ = [tink_core_LinkObject];
tink_core_SimpleLink.prototype = {
	f: null
	,cancel: function() {
		if(this.f != null) {
			this.f();
			this.f = null;
		}
	}
	,__class__: tink_core_SimpleLink
};
var tink_core__$Callback_LinkPair = function(a,b) {
	this.dissolved = false;
	this.a = a;
	this.b = b;
};
$hxClasses["tink.core._Callback.LinkPair"] = tink_core__$Callback_LinkPair;
tink_core__$Callback_LinkPair.__name__ = "tink.core._Callback.LinkPair";
tink_core__$Callback_LinkPair.__interfaces__ = [tink_core_LinkObject];
tink_core__$Callback_LinkPair.prototype = {
	a: null
	,b: null
	,dissolved: null
	,cancel: function() {
		if(!this.dissolved) {
			this.dissolved = true;
			var this1 = this.a;
			if(this1 != null) {
				this1.cancel();
			}
			var this1 = this.b;
			if(this1 != null) {
				this1.cancel();
			}
			this.a = null;
			this.b = null;
		}
	}
	,__class__: tink_core__$Callback_LinkPair
};
var tink_core__$Callback_ListCell = function(cb,list) {
	if(cb == null) {
		throw haxe_Exception.thrown("callback expected but null received");
	}
	this.cb = cb;
	this.list = list;
};
$hxClasses["tink.core._Callback.ListCell"] = tink_core__$Callback_ListCell;
tink_core__$Callback_ListCell.__name__ = "tink.core._Callback.ListCell";
tink_core__$Callback_ListCell.__interfaces__ = [tink_core_LinkObject];
tink_core__$Callback_ListCell.prototype = {
	cb: null
	,list: null
	,invoke: function(data) {
		if(this.list != null) {
			this.cb(data);
		}
	}
	,clear: function() {
		this.cb = null;
		this.list = null;
	}
	,cancel: function() {
		if(this.list != null) {
			var list = this.list;
			this.cb = null;
			this.list = null;
			if(--list.used <= list.cells.length >> 1) {
				list.compact();
			}
		}
	}
	,__class__: tink_core__$Callback_ListCell
};
var tink_core_Disposable = function() { };
$hxClasses["tink.core.Disposable"] = tink_core_Disposable;
tink_core_Disposable.__name__ = "tink.core.Disposable";
tink_core_Disposable.__isInterface__ = true;
tink_core_Disposable.prototype = {
	get_disposed: null
	,ondispose: null
	,__class__: tink_core_Disposable
	,__properties__: {get_disposed:"get_disposed"}
};
var tink_core_OwnedDisposable = function() { };
$hxClasses["tink.core.OwnedDisposable"] = tink_core_OwnedDisposable;
tink_core_OwnedDisposable.__name__ = "tink.core.OwnedDisposable";
tink_core_OwnedDisposable.__isInterface__ = true;
tink_core_OwnedDisposable.__interfaces__ = [tink_core_Disposable];
tink_core_OwnedDisposable.prototype = {
	dispose: null
	,__class__: tink_core_OwnedDisposable
};
var tink_core_SimpleDisposable = function(dispose) {
	this.disposeHandlers = [];
	this.f = dispose;
};
$hxClasses["tink.core.SimpleDisposable"] = tink_core_SimpleDisposable;
tink_core_SimpleDisposable.__name__ = "tink.core.SimpleDisposable";
tink_core_SimpleDisposable.__interfaces__ = [tink_core_OwnedDisposable];
tink_core_SimpleDisposable.noop = function() {
};
tink_core_SimpleDisposable.prototype = {
	f: null
	,disposeHandlers: null
	,get_disposed: function() {
		return this.disposeHandlers == null;
	}
	,ondispose: function(d) {
		var _g = this.disposeHandlers;
		if(_g == null) {
			d();
		} else {
			var v = _g;
			v.push(d);
		}
	}
	,dispose: function() {
		var _g = this.disposeHandlers;
		if(_g != null) {
			var v = _g;
			this.disposeHandlers = null;
			var f = this.f;
			this.f = tink_core_SimpleDisposable.noop;
			f();
			var _g = 0;
			while(_g < v.length) {
				var h = v[_g];
				++_g;
				h();
			}
		}
	}
	,__class__: tink_core_SimpleDisposable
	,__properties__: {get_disposed:"get_disposed"}
};
var tink_core_CallbackList = function(destructive) {
	if(destructive == null) {
		destructive = false;
	}
	this.onfill = function() {
	};
	this.ondrain = function() {
	};
	this.busy = false;
	this.queue = [];
	this.used = 0;
	var _gthis = this;
	tink_core_SimpleDisposable.call(this,function() {
		if(!_gthis.busy) {
			_gthis.destroy();
		}
	});
	this.destructive = destructive;
	this.cells = [];
};
$hxClasses["tink.core.CallbackList"] = tink_core_CallbackList;
tink_core_CallbackList.__name__ = "tink.core.CallbackList";
tink_core_CallbackList.__super__ = tink_core_SimpleDisposable;
tink_core_CallbackList.prototype = $extend(tink_core_SimpleDisposable.prototype,{
	destructive: null
	,cells: null
	,get_length: function() {
		return this.used;
	}
	,used: null
	,queue: null
	,busy: null
	,ondrain: null
	,onfill: null
	,release: function() {
		if(--this.used <= this.cells.length >> 1) {
			this.compact();
		}
	}
	,destroy: function() {
		var _g = 0;
		var _g1 = this.cells;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.cb = null;
			c.list = null;
		}
		this.queue = null;
		this.cells = null;
		if(this.used > 0) {
			this.used = 0;
			var fn = this.ondrain;
			if(tink_core_Callback.depth < 500) {
				tink_core_Callback.depth++;
				fn();
				tink_core_Callback.depth--;
			} else {
				tink_core_Callback.defer(fn);
			}
		}
	}
	,drain: function() {
		var fn = this.ondrain;
		if(tink_core_Callback.depth < 500) {
			tink_core_Callback.depth++;
			fn();
			tink_core_Callback.depth--;
		} else {
			tink_core_Callback.defer(fn);
		}
	}
	,add: function(cb) {
		if(this.disposeHandlers == null) {
			return null;
		}
		var node = new tink_core__$Callback_ListCell(cb,this);
		this.cells.push(node);
		if(this.used++ == 0) {
			var fn = this.onfill;
			if(tink_core_Callback.depth < 500) {
				tink_core_Callback.depth++;
				fn();
				tink_core_Callback.depth--;
			} else {
				tink_core_Callback.defer(fn);
			}
		}
		return node;
	}
	,invoke: function(data) {
		var _gthis = this;
		if(tink_core_Callback.depth < 500) {
			tink_core_Callback.depth++;
			if(_gthis.disposeHandlers != null) {
				if(_gthis.busy) {
					if(_gthis.destructive != true) {
						var _g = $bind(_gthis,_gthis.invoke);
						var data1 = data;
						var tmp = function() {
							_g(data1);
						};
						_gthis.queue.push(tmp);
					}
				} else {
					_gthis.busy = true;
					if(_gthis.destructive) {
						_gthis.dispose();
					}
					var length = _gthis.cells.length;
					var _g1 = 0;
					var _g2 = length;
					while(_g1 < _g2) {
						var i = _g1++;
						var _this = _gthis.cells[i];
						if(_this.list != null) {
							_this.cb(data);
						}
					}
					_gthis.busy = false;
					if(_gthis.disposeHandlers == null) {
						_gthis.destroy();
					} else {
						if(_gthis.used < _gthis.cells.length) {
							_gthis.compact();
						}
						if(_gthis.queue.length > 0) {
							(_gthis.queue.shift())();
						}
					}
				}
			}
			tink_core_Callback.depth--;
		} else {
			tink_core_Callback.defer(function() {
				if(_gthis.disposeHandlers != null) {
					if(_gthis.busy) {
						if(_gthis.destructive != true) {
							var _g = $bind(_gthis,_gthis.invoke);
							var data1 = data;
							var tmp = function() {
								_g(data1);
							};
							_gthis.queue.push(tmp);
						}
					} else {
						_gthis.busy = true;
						if(_gthis.destructive) {
							_gthis.dispose();
						}
						var length = _gthis.cells.length;
						var _g1 = 0;
						var _g2 = length;
						while(_g1 < _g2) {
							var i = _g1++;
							var _this = _gthis.cells[i];
							if(_this.list != null) {
								_this.cb(data);
							}
						}
						_gthis.busy = false;
						if(_gthis.disposeHandlers == null) {
							_gthis.destroy();
						} else {
							if(_gthis.used < _gthis.cells.length) {
								_gthis.compact();
							}
							if(_gthis.queue.length > 0) {
								(_gthis.queue.shift())();
							}
						}
					}
				}
			});
		}
	}
	,compact: function() {
		if(this.busy) {
			return;
		} else if(this.used == 0) {
			this.resize(0);
			var fn = this.ondrain;
			if(tink_core_Callback.depth < 500) {
				tink_core_Callback.depth++;
				fn();
				tink_core_Callback.depth--;
			} else {
				tink_core_Callback.defer(fn);
			}
		} else {
			var compacted = 0;
			var _g = 0;
			var _g1 = this.cells.length;
			while(_g < _g1) {
				var i = _g++;
				var _g2 = this.cells[i];
				var _g3 = _g2.list;
				if(_g2.cb != null) {
					var v = _g2;
					if(compacted != i) {
						this.cells[compacted] = v;
					}
					if(++compacted == this.used) {
						break;
					}
				}
			}
			this.resize(this.used);
		}
	}
	,resize: function(length) {
		this.cells.length = length;
	}
	,clear: function() {
		if(this.busy) {
			this.queue.push($bind(this,this.clear));
		}
		var _g = 0;
		var _g1 = this.cells;
		while(_g < _g1.length) {
			var cell = _g1[_g];
			++_g;
			cell.cb = null;
			cell.list = null;
		}
		this.resize(0);
	}
	,__class__: tink_core_CallbackList
	,__properties__: $extend(tink_core_SimpleDisposable.prototype.__properties__,{get_length:"get_length"})
});
var tink_core_AlreadyDisposed = function() {
};
$hxClasses["tink.core.AlreadyDisposed"] = tink_core_AlreadyDisposed;
tink_core_AlreadyDisposed.__name__ = "tink.core.AlreadyDisposed";
tink_core_AlreadyDisposed.__interfaces__ = [tink_core_OwnedDisposable];
tink_core_AlreadyDisposed.prototype = {
	get_disposed: function() {
		return true;
	}
	,ondispose: function(d) {
		d();
	}
	,dispose: function() {
	}
	,__class__: tink_core_AlreadyDisposed
	,__properties__: {get_disposed:"get_disposed"}
};
var tink_core_TypedError = function(code,message,pos) {
	if(code == null) {
		code = 500;
	}
	this.isTinkError = true;
	this.code = code;
	this.message = message;
	this.pos = pos;
	this.exceptionStack = [];
	this.callStack = [];
};
$hxClasses["tink.core.TypedError"] = tink_core_TypedError;
tink_core_TypedError.__name__ = "tink.core.TypedError";
tink_core_TypedError.withData = function(code,message,data,pos) {
	return tink_core_TypedError.typed(code,message,data,pos);
};
tink_core_TypedError.typed = function(code,message,data,pos) {
	var ret = new tink_core_TypedError(code,message,pos);
	ret.data = data;
	return ret;
};
tink_core_TypedError.ofJsError = function(e,pos) {
	return tink_core_TypedError.withData(500,e.message,e,pos);
};
tink_core_TypedError.asError = function(v) {
	if(v != null && v.isTinkError) {
		return v;
	} else {
		return null;
	}
};
tink_core_TypedError.catchExceptions = function(f,report,pos) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( _g ) {
		var e = haxe_Exception.caught(_g).unwrap();
		var e1 = tink_core_TypedError.asError(e);
		var tmp;
		if(e1 == null) {
			tmp = report == null ? tink_core_TypedError.withData(null,"Unexpected Error",e1,pos) : report(e1);
		} else {
			var e = e1;
			tmp = e;
		}
		return tink_core_Outcome.Failure(tmp);
	}
};
tink_core_TypedError.reporter = function(code,message,pos) {
	return function(e) {
		return tink_core_TypedError.withData(code,message,e,pos);
	};
};
tink_core_TypedError.rethrow = function(any) {
	throw haxe_Exception.thrown(any);
};
tink_core_TypedError.tryFinally = function(f,cleanup) {
	try { return f(); } finally { cleanup(); }
	return null;
};
tink_core_TypedError.prototype = {
	message: null
	,code: null
	,data: null
	,pos: null
	,callStack: null
	,exceptionStack: null
	,isTinkError: null
	,printPos: function() {
		return this.pos.className + "." + this.pos.methodName + ":" + this.pos.lineNumber;
	}
	,toString: function() {
		var ret = "Error#" + this.code + ": " + this.message;
		if(this.pos != null) {
			ret += " @ " + this.printPos();
		}
		return ret;
	}
	,toPromise: function() {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(this)));
	}
	,throwSelf: function() {
		var any = this;
		throw haxe_Exception.thrown(any);
	}
	,toJsError: function() {
		var value = this.data;
		var _g = ((value) instanceof Error) ? value : null;
		if(_g == null) {
			return new tink_core__$Error_TinkError(this);
		} else {
			var e = _g;
			return e;
		}
	}
	,__class__: tink_core_TypedError
};
var tink_core_Stack = {};
tink_core_Stack.toString = function(this1) {
	return "Error stack not available. Compile with -D error_stack.";
};
var tink_core__$Error_TinkError = function(e) {
	Error.call(this);
	this.message = e.message;
	this.data = e;
};
$hxClasses["tink.core._Error.TinkError"] = tink_core__$Error_TinkError;
tink_core__$Error_TinkError.__name__ = "tink.core._Error.TinkError";
tink_core__$Error_TinkError.__super__ = Error;
tink_core__$Error_TinkError.prototype = $extend(Error.prototype,{
	data: null
	,__class__: tink_core__$Error_TinkError
});
var tink_core__$Future_FutureObject = function() { };
$hxClasses["tink.core._Future.FutureObject"] = tink_core__$Future_FutureObject;
tink_core__$Future_FutureObject.__name__ = "tink.core._Future.FutureObject";
tink_core__$Future_FutureObject.__isInterface__ = true;
tink_core__$Future_FutureObject.prototype = {
	getStatus: null
	,handle: null
	,eager: null
	,__class__: tink_core__$Future_FutureObject
};
var tink_core__$Future_NeverFuture = function() {
};
$hxClasses["tink.core._Future.NeverFuture"] = tink_core__$Future_NeverFuture;
tink_core__$Future_NeverFuture.__name__ = "tink.core._Future.NeverFuture";
tink_core__$Future_NeverFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_NeverFuture.prototype = {
	getStatus: function() {
		return tink_core_FutureStatus.NeverEver;
	}
	,handle: function(callback) {
		return null;
	}
	,eager: function() {
	}
	,__class__: tink_core__$Future_NeverFuture
};
var tink_core__$Lazy_Computable = function() { };
$hxClasses["tink.core._Lazy.Computable"] = tink_core__$Lazy_Computable;
tink_core__$Lazy_Computable.__name__ = "tink.core._Lazy.Computable";
tink_core__$Lazy_Computable.__isInterface__ = true;
tink_core__$Lazy_Computable.prototype = {
	isComputed: null
	,compute: null
	,underlying: null
	,__class__: tink_core__$Lazy_Computable
};
var tink_core__$Lazy_LazyObject = function() { };
$hxClasses["tink.core._Lazy.LazyObject"] = tink_core__$Lazy_LazyObject;
tink_core__$Lazy_LazyObject.__name__ = "tink.core._Lazy.LazyObject";
tink_core__$Lazy_LazyObject.__isInterface__ = true;
tink_core__$Lazy_LazyObject.__interfaces__ = [tink_core__$Lazy_Computable];
tink_core__$Lazy_LazyObject.prototype = {
	get: null
	,__class__: tink_core__$Lazy_LazyObject
};
var tink_core__$Lazy_LazyConst = function(value) {
	this.value = value;
};
$hxClasses["tink.core._Lazy.LazyConst"] = tink_core__$Lazy_LazyConst;
tink_core__$Lazy_LazyConst.__name__ = "tink.core._Lazy.LazyConst";
tink_core__$Lazy_LazyConst.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyConst.prototype = {
	value: null
	,isComputed: function() {
		return true;
	}
	,get: function() {
		return this.value;
	}
	,compute: function() {
	}
	,underlying: function() {
		return null;
	}
	,__class__: tink_core__$Lazy_LazyConst
};
var tink_core__$Future_SyncFuture = function(value) {
	this.value = value;
};
$hxClasses["tink.core._Future.SyncFuture"] = tink_core__$Future_SyncFuture;
tink_core__$Future_SyncFuture.__name__ = "tink.core._Future.SyncFuture";
tink_core__$Future_SyncFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_SyncFuture.prototype = {
	value: null
	,getStatus: function() {
		return tink_core_FutureStatus.Ready(this.value);
	}
	,handle: function(cb) {
		tink_core_Callback.invoke(cb,tink_core_Lazy.get(this.value));
		return null;
	}
	,eager: function() {
		if(!this.value.isComputed()) {
			tink_core_Lazy.get(this.value);
		}
	}
	,__class__: tink_core__$Future_SyncFuture
};
var tink_core_Future = {};
tink_core_Future.__properties__ = {get_status:"get_status"};
tink_core_Future.get_status = function(this1) {
	return this1.getStatus();
};
tink_core_Future._new = function(wakeup) {
	var this1 = new tink_core__$Future_SuspendableFuture(wakeup);
	return this1;
};
tink_core_Future.handle = function(this1,callback) {
	return this1.handle(callback);
};
tink_core_Future.eager = function(this1) {
	this1.eager();
	return this1;
};
tink_core_Future.noise = function(this1) {
	if(this1.getStatus()._hx_index == 4) {
		return tink_core_Future.NEVER;
	} else {
		return tink_core_Future.map(this1,function(_) {
			return null;
		});
	}
};
tink_core_Future.first = function(this1,that) {
	var _g = this1;
	var _g1 = _g.getStatus();
	switch(_g1._hx_index) {
	case 3:
		var _g2 = _g1.result;
		var _g1 = that.getStatus();
		switch(_g1._hx_index) {
		case 3:
			var _g2 = _g1.result;
			var v = _g;
			return v;
		case 4:
			var v = _g;
			return v;
		default:
			var v = _g;
			return v;
		}
		break;
	case 4:
		var v = that;
		return v;
	default:
		var _g1 = that.getStatus();
		switch(_g1._hx_index) {
		case 3:
			var _g2 = _g1.result;
			var v = that;
			return v;
		case 4:
			var v = _g;
			return v;
		default:
			return new tink_core__$Future_SuspendableFuture(function(fire) {
				return new tink_core__$Callback_LinkPair(this1.handle(fire),that.handle(fire));
			});
		}
	}
};
tink_core_Future.map = function(this1,f,gather) {
	var _g = this1.getStatus();
	switch(_g._hx_index) {
	case 3:
		var l = _g.result;
		var this2 = l;
		var f1 = f;
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyFunc(function() {
			return f1(this2.get());
		},this2));
	case 4:
		return tink_core_Future.NEVER;
	default:
		return new tink_core__$Future_SuspendableFuture(function(fire) {
			return this1.handle(function(v) {
				fire(f(v));
			});
		});
	}
};
tink_core_Future.flatMap = function(this1,next,gather) {
	var _g = this1.getStatus();
	switch(_g._hx_index) {
	case 3:
		var l = _g.result;
		return new tink_core__$Future_SuspendableFuture(function(fire) {
			return next(tink_core_Lazy.get(l)).handle(function(v) {
				fire(v);
			});
		});
	case 4:
		return tink_core_Future.NEVER;
	default:
		return new tink_core__$Future_SuspendableFuture(function($yield) {
			var inner = new tink_core_CallbackLinkRef();
			var outer = this1.handle(function(v) {
				var outer = next(v).handle($yield);
				inner.link = outer;
			});
			return new tink_core__$Callback_LinkPair(outer,inner);
		});
	}
};
tink_core_Future.next = function(this1,n) {
	return tink_core_Future.flatMap(this1,n);
};
tink_core_Future.gather = function(this1) {
	return this1;
};
tink_core_Future.merge = function(this1,that,combine) {
	var _g = this1.getStatus();
	var _g1 = that.getStatus();
	if(_g._hx_index == 4) {
		return tink_core_Future.NEVER;
	} else if(_g1._hx_index == 4) {
		return tink_core_Future.NEVER;
	} else {
		return new tink_core__$Future_SuspendableFuture(function($yield) {
			var check = function(v) {
				var _g = this1.getStatus();
				var _g1 = that.getStatus();
				if(_g._hx_index == 3) {
					if(_g1._hx_index == 3) {
						var b = _g1.result;
						var a = _g.result;
						$yield(combine(tink_core_Lazy.get(a),tink_core_Lazy.get(b)));
					}
				}
			};
			return new tink_core__$Callback_LinkPair(this1.handle(check),that.handle(check));
		});
	}
};
tink_core_Future.flatten = function(f) {
	return tink_core_Future.flatMap(f,function(v) {
		return v;
	});
};
tink_core_Future.ofJsPromise = function(promise) {
	return tink_core_Future.irreversible(function(cb) {
		promise.then(function(a) {
			var _g = cb;
			var a1 = tink_core_Outcome.Success(a);
			tink_core_Callback.defer(function() {
				_g(a1);
			});
		},function(e) {
			cb(tink_core_Outcome.Failure(tink_core_TypedError.withData(null,e.message,e,{ fileName : "tink/core/Future.hx", lineNumber : 158, className : "tink.core._Future.Future_Impl_", methodName : "ofJsPromise"})));
		});
	});
};
tink_core_Future.neverToAny = function(l) {
	return l;
};
tink_core_Future.ofAny = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
tink_core_Future.asPromise = function(s) {
	return s;
};
tink_core_Future.ofMany = function(futures,gather) {
	return tink_core_Future.inSequence(futures);
};
tink_core_Future.inParallel = function(futures,concurrency) {
	return tink_core_Future.many(futures,concurrency);
};
tink_core_Future.inSequence = function(futures) {
	return tink_core_Future.many(futures,1);
};
tink_core_Future.many = function(a,concurrency) {
	return tink_core_Future.processMany(a,concurrency,tink_core_Outcome.Success,function(o) {
		return tink_core_OutcomeTools.orNull(o);
	});
};
tink_core_Future.processMany = function(a,concurrency,fn,lift) {
	if(a.length == 0) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(lift(tink_core_Outcome.Success([]))));
	} else {
		var this1 = new tink_core__$Future_SuspendableFuture(function($yield) {
			var links = [];
			var _g = [];
			var _g1 = 0;
			while(_g1 < a.length) {
				var x = a[_g1];
				++_g1;
				_g.push(null);
			}
			var ret = _g;
			var index = 0;
			var pending = 0;
			var done = false;
			var concurrency1;
			if(concurrency == null) {
				concurrency1 = a.length;
			} else {
				var v = concurrency;
				concurrency1 = v < 1 ? 1 : v > a.length ? a.length : v;
			}
			var fireWhenReady = function() {
				if(index == ret.length) {
					if(pending == 0) {
						var v = lift(tink_core_Outcome.Success(ret));
						done = true;
						$yield(v);
						return true;
					} else {
						return false;
					}
				} else {
					return false;
				}
			};
			var step = null;
			step = function() {
				if(!done && !fireWhenReady()) {
					while(index < ret.length) {
						index += 1;
						var index1 = [index - 1];
						var p = a[index1[0]];
						var check = [(function(index) {
							return function(o) {
								var _g = fn(o);
								switch(_g._hx_index) {
								case 0:
									var v = _g.data;
									ret[index[0]] = v;
									fireWhenReady();
									break;
								case 1:
									var e = _g.failure;
									var _g = 0;
									while(_g < links.length) {
										var l = links[_g];
										++_g;
										if(l != null) {
											l.cancel();
										}
									}
									var v = lift(tink_core_Outcome.Failure(e));
									done = true;
									$yield(v);
									break;
								}
							};
						})(index1)];
						var _g = p.getStatus();
						if(_g._hx_index == 3) {
							var _hx_tmp;
							_hx_tmp = tink_core_Lazy.get(_g.result);
							var v = _hx_tmp;
							check[0](v);
							if(!done) {
								continue;
							}
						} else {
							pending += 1;
							links.push(p.handle((function(check) {
								return function(o) {
									pending -= 1;
									check[0](o);
									if(!done) {
										step();
									}
								};
							})(check)));
						}
						break;
					}
				}
			};
			var _g = 0;
			var _g1 = concurrency1;
			while(_g < _g1) {
				var i = _g++;
				step();
			}
			return tink_core_CallbackLink.fromMany(links);
		});
		return this1;
	}
};
tink_core_Future.lazy = function(l) {
	return new tink_core__$Future_SyncFuture(l);
};
tink_core_Future.sync = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
tink_core_Future.isFuture = function(maybeFuture) {
	return js_Boot.__implements(maybeFuture,tink_core__$Future_FutureObject);
};
tink_core_Future.async = function(init,lazy) {
	if(lazy == null) {
		lazy = false;
	}
	var ret = tink_core_Future.irreversible(init);
	if(lazy) {
		return ret;
	} else {
		ret.eager();
		return ret;
	}
};
tink_core_Future.irreversible = function(init) {
	return new tink_core__$Future_SuspendableFuture(function($yield) {
		init($yield);
		return null;
	});
};
tink_core_Future.or = function(a,b) {
	return tink_core_Future.first(a,b);
};
tink_core_Future.either = function(a,b) {
	return tink_core_Future.first(tink_core_Future.map(a,haxe_ds_Either.Left),tink_core_Future.map(b,haxe_ds_Either.Right));
};
tink_core_Future.and = function(a,b) {
	return tink_core_Future.merge(a,b,function(a,b) {
		var this1 = new tink_core_MPair(a,b);
		return this1;
	});
};
tink_core_Future._tryFailingFlatMap = function(f,map) {
	return tink_core_Future.flatMap(f,function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return map(d);
		case 1:
			var f = o.failure;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f)));
		}
	});
};
tink_core_Future._tryFlatMap = function(f,map) {
	return tink_core_Future.flatMap(f,function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return tink_core_Future.map(map(d),tink_core_Outcome.Success);
		case 1:
			var f = o.failure;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f)));
		}
	});
};
tink_core_Future._tryFailingMap = function(f,map) {
	return tink_core_Future.map(f,function(o) {
		return tink_core_OutcomeTools.flatMap(o,tink_core__$Outcome_OutcomeMapper.withSameError(map));
	});
};
tink_core_Future._tryMap = function(f,map) {
	return tink_core_Future.map(f,function(o) {
		return tink_core_OutcomeTools.map(o,map);
	});
};
tink_core_Future._flatMap = function(f,map) {
	return tink_core_Future.flatMap(f,map);
};
tink_core_Future._map = function(f,map) {
	return tink_core_Future.map(f,map);
};
tink_core_Future.trigger = function() {
	return new tink_core_FutureTrigger();
};
tink_core_Future.delay = function(ms,value) {
	var this1 = tink_core_Future.irreversible(function(cb) {
		haxe_Timer.delay(function() {
			cb(tink_core_Lazy.get(value));
		},ms);
	});
	this1.eager();
	return this1;
};
var tink_core_FutureStatus = $hxEnums["tink.core.FutureStatus"] = { __ename__:"tink.core.FutureStatus",__constructs__:null
	,Suspended: {_hx_name:"Suspended",_hx_index:0,__enum__:"tink.core.FutureStatus",toString:$estr}
	,Awaited: {_hx_name:"Awaited",_hx_index:1,__enum__:"tink.core.FutureStatus",toString:$estr}
	,EagerlyAwaited: {_hx_name:"EagerlyAwaited",_hx_index:2,__enum__:"tink.core.FutureStatus",toString:$estr}
	,Ready: ($_=function(result) { return {_hx_index:3,result:result,__enum__:"tink.core.FutureStatus",toString:$estr}; },$_._hx_name="Ready",$_.__params__ = ["result"],$_)
	,NeverEver: {_hx_name:"NeverEver",_hx_index:4,__enum__:"tink.core.FutureStatus",toString:$estr}
};
tink_core_FutureStatus.__constructs__ = [tink_core_FutureStatus.Suspended,tink_core_FutureStatus.Awaited,tink_core_FutureStatus.EagerlyAwaited,tink_core_FutureStatus.Ready,tink_core_FutureStatus.NeverEver];
var tink_core_FutureTrigger = function() {
	this.status = tink_core_FutureStatus.Awaited;
	this.list = new tink_core_CallbackList(true);
};
$hxClasses["tink.core.FutureTrigger"] = tink_core_FutureTrigger;
tink_core_FutureTrigger.__name__ = "tink.core.FutureTrigger";
tink_core_FutureTrigger.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core_FutureTrigger.prototype = {
	status: null
	,list: null
	,getStatus: function() {
		return this.status;
	}
	,handle: function(callback) {
		var _g = this.status;
		if(_g._hx_index == 3) {
			var result = _g.result;
			tink_core_Callback.invoke(callback,tink_core_Lazy.get(result));
			return null;
		} else {
			var v = _g;
			var _this = this.list;
			if(_this.disposeHandlers == null) {
				return null;
			} else {
				var node = new tink_core__$Callback_ListCell(callback,_this);
				_this.cells.push(node);
				if(_this.used++ == 0) {
					var fn = _this.onfill;
					if(tink_core_Callback.depth < 500) {
						tink_core_Callback.depth++;
						fn();
						tink_core_Callback.depth--;
					} else {
						tink_core_Callback.defer(fn);
					}
				}
				return node;
			}
		}
	}
	,eager: function() {
	}
	,asFuture: function() {
		return this;
	}
	,trigger: function(result) {
		var _g = this.status;
		if(_g._hx_index == 3) {
			var _g1 = _g.result;
			return false;
		} else {
			this.status = tink_core_FutureStatus.Ready(new tink_core__$Lazy_LazyConst(result));
			this.list.invoke(result);
			return true;
		}
	}
	,__class__: tink_core_FutureTrigger
};
var tink_core_JsPromiseTools = function() { };
$hxClasses["tink.core.JsPromiseTools"] = tink_core_JsPromiseTools;
tink_core_JsPromiseTools.__name__ = "tink.core.JsPromiseTools";
tink_core_JsPromiseTools.toSurprise = function(promise) {
	return tink_core_Future.ofJsPromise(promise);
};
tink_core_JsPromiseTools.toPromise = function(promise) {
	return tink_core_Future.ofJsPromise(promise);
};
var tink_core__$Future_SuspendableFuture = function(wakeup) {
	this.status = tink_core_FutureStatus.Suspended;
	var _gthis = this;
	this.wakeup = wakeup;
	this.callbacks = new tink_core_CallbackList(true);
	this.callbacks.ondrain = function() {
		if(_gthis.status == tink_core_FutureStatus.Awaited) {
			_gthis.status = tink_core_FutureStatus.Suspended;
			var this1 = _gthis.link;
			if(this1 != null) {
				this1.cancel();
			}
			_gthis.link = null;
		}
	};
	this.callbacks.onfill = function() {
		if(_gthis.status == tink_core_FutureStatus.Suspended) {
			_gthis.status = tink_core_FutureStatus.Awaited;
			_gthis.arm();
		}
	};
};
$hxClasses["tink.core._Future.SuspendableFuture"] = tink_core__$Future_SuspendableFuture;
tink_core__$Future_SuspendableFuture.__name__ = "tink.core._Future.SuspendableFuture";
tink_core__$Future_SuspendableFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_SuspendableFuture.prototype = {
	callbacks: null
	,status: null
	,link: null
	,wakeup: null
	,getStatus: function() {
		return this.status;
	}
	,trigger: function(value) {
		var _g = this.status;
		if(_g._hx_index == 3) {
			var _g1 = _g.result;
		} else {
			this.status = tink_core_FutureStatus.Ready(new tink_core__$Lazy_LazyConst(value));
			var link = this.link;
			this.link = null;
			this.wakeup = null;
			this.callbacks.invoke(value);
			if(link != null) {
				link.cancel();
			}
		}
	}
	,handle: function(callback) {
		var _g = this.status;
		if(_g._hx_index == 3) {
			var result = _g.result;
			tink_core_Callback.invoke(callback,tink_core_Lazy.get(result));
			return null;
		} else {
			var _this = this.callbacks;
			if(_this.disposeHandlers == null) {
				return null;
			} else {
				var node = new tink_core__$Callback_ListCell(callback,_this);
				_this.cells.push(node);
				if(_this.used++ == 0) {
					var fn = _this.onfill;
					if(tink_core_Callback.depth < 500) {
						tink_core_Callback.depth++;
						fn();
						tink_core_Callback.depth--;
					} else {
						tink_core_Callback.defer(fn);
					}
				}
				return node;
			}
		}
	}
	,arm: function() {
		var _gthis = this;
		this.link = this.wakeup(function(x) {
			_gthis.trigger(x);
		});
	}
	,eager: function() {
		switch(this.status._hx_index) {
		case 0:
			this.status = tink_core_FutureStatus.EagerlyAwaited;
			this.arm();
			break;
		case 1:
			this.status = tink_core_FutureStatus.EagerlyAwaited;
			break;
		default:
		}
	}
	,__class__: tink_core__$Future_SuspendableFuture
};
var tink_core_Lazy = {};
tink_core_Lazy.__properties__ = {get_computed:"get_computed"};
tink_core_Lazy.get_computed = function(this1) {
	return this1.isComputed();
};
tink_core_Lazy.get = function(this1) {
	this1.compute();
	return this1.get();
};
tink_core_Lazy.fromNoise = function(l) {
	return l;
};
tink_core_Lazy.ofFunc = function(f) {
	return new tink_core__$Lazy_LazyFunc(f);
};
tink_core_Lazy.map = function(this1,f) {
	return new tink_core__$Lazy_LazyFunc(function() {
		return f(this1.get());
	},this1);
};
tink_core_Lazy.flatMap = function(this1,f) {
	return new tink_core__$Lazy_LazyFunc(function() {
		return tink_core_Lazy.get(f(this1.get()));
	},this1);
};
tink_core_Lazy.ofConst = function(c) {
	return new tink_core__$Lazy_LazyConst(c);
};
var tink_core__$Lazy_LazyFunc = function(f,from) {
	this.busy = false;
	this.f = f;
	this.from = from;
};
$hxClasses["tink.core._Lazy.LazyFunc"] = tink_core__$Lazy_LazyFunc;
tink_core__$Lazy_LazyFunc.__name__ = "tink.core._Lazy.LazyFunc";
tink_core__$Lazy_LazyFunc.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyFunc.prototype = {
	f: null
	,from: null
	,result: null
	,busy: null
	,underlying: function() {
		return this.from;
	}
	,isComputed: function() {
		return this.f == null;
	}
	,get: function() {
		return this.result;
	}
	,compute: function() {
		if(this.busy) {
			throw haxe_Exception.thrown(new tink_core_TypedError(null,"circular lazyness",{ fileName : "tink/core/Lazy.hx", lineNumber : 85, className : "tink.core._Lazy.LazyFunc", methodName : "compute"}));
		}
		var _g = this.f;
		if(_g != null) {
			var v = _g;
			this.busy = true;
			this.f = null;
			var _g = this.from;
			if(_g != null) {
				var cur = _g;
				this.from = null;
				var stack = [];
				while(cur != null && !cur.isComputed()) {
					stack.push(cur);
					cur = cur.underlying();
				}
				stack.reverse();
				var _g = 0;
				while(_g < stack.length) {
					var c = stack[_g];
					++_g;
					c.compute();
				}
			}
			this.result = v();
			this.busy = false;
		}
	}
	,__class__: tink_core__$Lazy_LazyFunc
};
var tink_core_Noise = {};
tink_core_Noise.ofAny = function(t) {
	return null;
};
var tink_core_OptionTools = function() { };
$hxClasses["tink.core.OptionTools"] = tink_core_OptionTools;
tink_core_OptionTools.__name__ = "tink.core.OptionTools";
tink_core_OptionTools.force = function(o,pos) {
	if(o._hx_index == 0) {
		var v = o.v;
		return v;
	} else {
		throw haxe_Exception.thrown(new tink_core_TypedError(404,"Some value expected but none found",pos));
	}
};
tink_core_OptionTools.sure = function(o,pos) {
	if(o._hx_index == 0) {
		var v = o.v;
		return v;
	} else {
		throw haxe_Exception.thrown(new tink_core_TypedError(404,"Some value expected but none found",pos));
	}
};
tink_core_OptionTools.toOutcome = function(o,pos) {
	switch(o._hx_index) {
	case 0:
		var value = o.v;
		return tink_core_Outcome.Success(value);
	case 1:
		return tink_core_Outcome.Failure(new tink_core_TypedError(404,"Some value expected but none found in " + pos.fileName + "@line " + pos.lineNumber,{ fileName : "tink/core/Option.hx", lineNumber : 31, className : "tink.core.OptionTools", methodName : "toOutcome"}));
	}
};
tink_core_OptionTools.or = function(o,l) {
	if(o._hx_index == 0) {
		var v = o.v;
		return v;
	} else {
		return tink_core_Lazy.get(l);
	}
};
tink_core_OptionTools.orTry = function(o,fallback) {
	if(o._hx_index == 0) {
		var v = o.v;
		return o;
	} else {
		return tink_core_Lazy.get(fallback);
	}
};
tink_core_OptionTools.orNull = function(o) {
	if(o._hx_index == 0) {
		var v = o.v;
		return v;
	} else {
		return null;
	}
};
tink_core_OptionTools.filter = function(o,f) {
	if(o._hx_index == 0) {
		if(f(o.v) == false) {
			return haxe_ds_Option.None;
		} else {
			return o;
		}
	} else {
		return o;
	}
};
tink_core_OptionTools.satisfies = function(o,f) {
	if(o._hx_index == 0) {
		var v = o.v;
		return f(v);
	} else {
		return false;
	}
};
tink_core_OptionTools.equals = function(o,v) {
	if(o._hx_index == 0) {
		var v1 = o.v;
		return v1 == v;
	} else {
		return false;
	}
};
tink_core_OptionTools.map = function(o,f) {
	if(o._hx_index == 0) {
		var v = o.v;
		return haxe_ds_Option.Some(f(v));
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.flatMap = function(o,f) {
	if(o._hx_index == 0) {
		var v = o.v;
		return f(v);
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.iterator = function(o) {
	return new tink_core_OptionIter(o);
};
tink_core_OptionTools.toArray = function(o) {
	if(o._hx_index == 0) {
		var v = o.v;
		return [v];
	} else {
		return [];
	}
};
var tink_core_OptionIter = function(o) {
	this.alive = true;
	if(o._hx_index == 0) {
		var v = o.v;
		this.value = v;
	} else {
		this.alive = false;
	}
};
$hxClasses["tink.core.OptionIter"] = tink_core_OptionIter;
tink_core_OptionIter.__name__ = "tink.core.OptionIter";
tink_core_OptionIter.prototype = {
	value: null
	,alive: null
	,hasNext: function() {
		return this.alive;
	}
	,next: function() {
		this.alive = false;
		return this.value;
	}
	,__class__: tink_core_OptionIter
};
var tink_core_Outcome = $hxEnums["tink.core.Outcome"] = { __ename__:"tink.core.Outcome",__constructs__:null
	,Success: ($_=function(data) { return {_hx_index:0,data:data,__enum__:"tink.core.Outcome",toString:$estr}; },$_._hx_name="Success",$_.__params__ = ["data"],$_)
	,Failure: ($_=function(failure) { return {_hx_index:1,failure:failure,__enum__:"tink.core.Outcome",toString:$estr}; },$_._hx_name="Failure",$_.__params__ = ["failure"],$_)
};
tink_core_Outcome.__constructs__ = [tink_core_Outcome.Success,tink_core_Outcome.Failure];
var tink_core_OutcomeTools = function() { };
$hxClasses["tink.core.OutcomeTools"] = tink_core_OutcomeTools;
tink_core_OutcomeTools.__name__ = "tink.core.OutcomeTools";
tink_core_OutcomeTools.sure = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return data;
	case 1:
		var failure = outcome.failure;
		var _g = tink_core_TypedError.asError(failure);
		if(_g == null) {
			throw haxe_Exception.thrown(failure);
		} else {
			var e = _g;
			return e.throwSelf();
		}
		break;
	}
};
tink_core_OutcomeTools.toOption = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return haxe_ds_Option.Some(data);
	case 1:
		var _g = outcome.failure;
		return haxe_ds_Option.None;
	}
};
tink_core_OutcomeTools.orNull = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return data;
	case 1:
		var _g = outcome.failure;
		return null;
	}
};
tink_core_OutcomeTools.orUse = function(outcome,fallback) {
	return tink_core_OutcomeTools.or(outcome,fallback);
};
tink_core_OutcomeTools.or = function(outcome,fallback) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return data;
	case 1:
		var _g = outcome.failure;
		return tink_core_Lazy.get(fallback);
	}
};
tink_core_OutcomeTools.orTry = function(outcome,fallback) {
	switch(outcome._hx_index) {
	case 0:
		var _g = outcome.data;
		return outcome;
	case 1:
		var _g = outcome.failure;
		return tink_core_Lazy.get(fallback);
	}
};
tink_core_OutcomeTools.equals = function(outcome,to) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return data == to;
	case 1:
		var _g = outcome.failure;
		return false;
	}
};
tink_core_OutcomeTools.map = function(outcome,transform) {
	switch(outcome._hx_index) {
	case 0:
		var a = outcome.data;
		return tink_core_Outcome.Success(transform(a));
	case 1:
		var f = outcome.failure;
		return tink_core_Outcome.Failure(f);
	}
};
tink_core_OutcomeTools.isSuccess = function(outcome) {
	if(outcome._hx_index == 0) {
		var _g = outcome.data;
		return true;
	} else {
		return false;
	}
};
tink_core_OutcomeTools.flatMap = function(o,mapper) {
	return tink_core__$Outcome_OutcomeMapper.apply(mapper,o);
};
tink_core_OutcomeTools.swap = function(outcome,v) {
	switch(outcome._hx_index) {
	case 0:
		var a = outcome.data;
		return tink_core_Outcome.Success(v);
	case 1:
		var f = outcome.failure;
		return tink_core_Outcome.Failure(f);
	}
};
tink_core_OutcomeTools.next = function(outcome,f) {
	switch(outcome._hx_index) {
	case 0:
		var v = outcome.data;
		return f(v);
	case 1:
		var e = outcome.failure;
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
	}
};
tink_core_OutcomeTools.attempt = function(f,report) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( _g ) {
		var e = haxe_Exception.caught(_g).unwrap();
		return tink_core_Outcome.Failure(report(e));
	}
};
tink_core_OutcomeTools.flatten = function(o) {
	switch(o._hx_index) {
	case 0:
		var _g = o.data;
		switch(_g._hx_index) {
		case 0:
			var d = _g.data;
			return tink_core_Outcome.Success(d);
		case 1:
			var f = _g.failure;
			return tink_core_Outcome.Failure(f);
		}
		break;
	case 1:
		var f = o.failure;
		return tink_core_Outcome.Failure(f);
	}
};
var tink_core__$Outcome_OutcomeMapper = {};
tink_core__$Outcome_OutcomeMapper._new = function(f) {
	var this1 = { f : f};
	return this1;
};
tink_core__$Outcome_OutcomeMapper.apply = function(this1,o) {
	return this1.f(o);
};
tink_core__$Outcome_OutcomeMapper.withSameError = function(f) {
	return tink_core__$Outcome_OutcomeMapper._new(function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return f(d);
		case 1:
			var f1 = o.failure;
			return tink_core_Outcome.Failure(f1);
		}
	});
};
tink_core__$Outcome_OutcomeMapper.withEitherError = function(f) {
	return tink_core__$Outcome_OutcomeMapper._new(function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			var _g = f(d);
			switch(_g._hx_index) {
			case 0:
				var d = _g.data;
				return tink_core_Outcome.Success(d);
			case 1:
				var f1 = _g.failure;
				return tink_core_Outcome.Failure(haxe_ds_Either.Right(f1));
			}
			break;
		case 1:
			var f1 = o.failure;
			return tink_core_Outcome.Failure(haxe_ds_Either.Left(f1));
		}
	});
};
var tink_core_Pair = {};
tink_core_Pair.__properties__ = {get_b:"get_b",get_a:"get_a"};
tink_core_Pair._new = function(a,b) {
	var this1 = new tink_core_MPair(a,b);
	return this1;
};
tink_core_Pair.get_a = function(this1) {
	return this1.a;
};
tink_core_Pair.get_b = function(this1) {
	return this1.b;
};
tink_core_Pair.toBool = function(this1) {
	return this1 != null;
};
tink_core_Pair.isNil = function(this1) {
	return this1 == null;
};
tink_core_Pair.nil = function() {
	return null;
};
var tink_core_MPair = function(a,b) {
	this.a = a;
	this.b = b;
};
$hxClasses["tink.core.MPair"] = tink_core_MPair;
tink_core_MPair.__name__ = "tink.core.MPair";
tink_core_MPair.prototype = {
	a: null
	,b: null
	,__class__: tink_core_MPair
};
var tink_core_Promise = {};
tink_core_Promise._new = function(f) {
	var this1 = new tink_core__$Future_SuspendableFuture(function(cb) {
		return f(function(v) {
			cb(tink_core_Outcome.Success(v));
		},function(e) {
			cb(tink_core_Outcome.Failure(e));
		});
	});
	var this2 = this1;
	return this2;
};
tink_core_Promise.eager = function(this1) {
	this1.eager();
	return this1;
};
tink_core_Promise.map = function(this1,f) {
	return tink_core_Future.map(this1,f);
};
tink_core_Promise.flatMap = function(this1,f) {
	return tink_core_Future.flatMap(this1,f);
};
tink_core_Promise.tryRecover = function(this1,f) {
	return tink_core_Future.flatMap(this1,function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
		case 1:
			var e = o.failure;
			return f(e);
		}
	});
};
tink_core_Promise.recover = function(this1,f) {
	return tink_core_Future.flatMap(this1,function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(d));
		case 1:
			var e = o.failure;
			return f(e);
		}
	});
};
tink_core_Promise.mapError = function(this1,f) {
	return tink_core_Future.map(this1,function(o) {
		switch(o._hx_index) {
		case 0:
			var _g = o.data;
			return o;
		case 1:
			var e = o.failure;
			return tink_core_Outcome.Failure(f(e));
		}
	});
};
tink_core_Promise.handle = function(this1,cb) {
	return this1.handle(cb);
};
tink_core_Promise.noise = function(this1) {
	if(this1.getStatus()._hx_index == 4) {
		return tink_core_Promise.NEVER;
	} else {
		return tink_core_Promise.next(this1,function(v) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(null)));
		});
	}
};
tink_core_Promise.isSuccess = function(this1) {
	return tink_core_Future.map(this1,function(o) {
		return tink_core_OutcomeTools.isSuccess(o);
	});
};
tink_core_Promise.next = function(this1,f,gather) {
	return tink_core_Future.flatMap(this1,function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return f(d);
		case 1:
			var f1 = o.failure;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f1)));
		}
	});
};
tink_core_Promise.swap = function(this1,v) {
	return tink_core_Promise.next(this1,function(_) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(v)));
	});
};
tink_core_Promise.swapError = function(this1,e) {
	return tink_core_Promise.mapError(this1,function(_) {
		return e;
	});
};
tink_core_Promise.merge = function(this1,other,merger,gather) {
	return tink_core_Future.flatMap(tink_core_Future.merge(this1,other,function(a,b) {
		switch(a._hx_index) {
		case 0:
			var _g = a.data;
			switch(b._hx_index) {
			case 0:
				var b1 = b.data;
				var a1 = _g;
				return merger(a1,b1);
			case 1:
				var e = b.failure;
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
			}
			break;
		case 1:
			var e = a.failure;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
		}
	}),function(o) {
		return o;
	});
};
tink_core_Promise.and = function(a,b) {
	return tink_core_Promise.merge(a,b,function(a,b) {
		var this1 = new tink_core_MPair(a,b);
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(this1)));
	});
};
tink_core_Promise.iterate = function(promises,$yield,fallback) {
	return tink_core_Future.irreversible(function(cb) {
		var iter = $getIterator(promises);
		var next = null;
		next = function() {
			if(iter.hasNext()) {
				iter.next().handle(function(o) {
					switch(o._hx_index) {
					case 0:
						var v = o.data;
						$yield(v).handle(function(o) {
							switch(o._hx_index) {
							case 0:
								var _g = o.data;
								switch(_g._hx_index) {
								case 0:
									var ret = _g.v;
									cb(tink_core_Outcome.Success(ret));
									break;
								case 1:
									next();
									break;
								}
								break;
							case 1:
								var e = o.failure;
								cb(tink_core_Outcome.Failure(e));
								break;
							}
						});
						break;
					case 1:
						var e = o.failure;
						cb(tink_core_Outcome.Failure(e));
						break;
					}
				});
			} else {
				fallback.handle(cb);
			}
		};
		next();
	});
};
tink_core_Promise.retry = function(gen,next) {
	var stamp = function() {
		return HxOverrides.now() / 1000 * 1000;
	};
	var start = stamp();
	var attempt = null;
	attempt = function(count) {
		var f = function(error) {
			return tink_core_Promise.next(next({ attempt : count, error : error, elapsed : stamp() - start}),function(_) {
				return attempt(count + 1);
			});
		};
		return tink_core_Future.flatMap(gen(),function(o) {
			switch(o._hx_index) {
			case 0:
				var d = o.data;
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
			case 1:
				var e = o.failure;
				return f(e);
			}
		});
	};
	return attempt(1);
};
tink_core_Promise.ofJsPromise = function(promise) {
	return tink_core_Future.ofJsPromise(promise);
};
tink_core_Promise.toJsPromise = function(this1) {
	return new Promise(function(resolve,reject) {
		this1.handle(function(o) {
			switch(o._hx_index) {
			case 0:
				var v = o.data;
				resolve(v);
				break;
			case 1:
				var e = o.failure;
				reject(e.toJsError());
				break;
			}
		});
	});
};
tink_core_Promise.ofSpecific = function(s) {
	return s;
};
tink_core_Promise.fromNever = function(l) {
	return l;
};
tink_core_Promise.ofTrigger = function(f) {
	return f;
};
tink_core_Promise.ofHappyTrigger = function(f) {
	return tink_core_Future.map(f,tink_core_Outcome.Success);
};
tink_core_Promise.ofFuture = function(f) {
	return tink_core_Future.map(f,tink_core_Outcome.Success);
};
tink_core_Promise.ofOutcome = function(o) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
};
tink_core_Promise.ofError = function(e) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
};
tink_core_Promise.ofData = function(d) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(d)));
};
tink_core_Promise.lazy = function(p) {
	var this1 = new tink_core__$Future_SuspendableFuture(function(cb) {
		return tink_core_Lazy.get(p).handle(cb);
	});
	return this1;
};
tink_core_Promise.inParallel = function(a,concurrency) {
	return tink_core_Promise.many(a,concurrency);
};
tink_core_Promise.many = function(a,concurrency) {
	return tink_core_Future.processMany(a,concurrency,function(o) {
		return o;
	},function(o) {
		return o;
	});
};
tink_core_Promise.inSequence = function(a) {
	return tink_core_Promise.many(a,1);
};
tink_core_Promise.cache = function(gen) {
	var p = null;
	return function() {
		var ret = p;
		if(ret == null) {
			var sync = false;
			ret = tink_core_Promise.next(gen(),function(o) {
				o.b.handle(function(_) {
					sync = true;
					p = null;
				});
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(o.a)));
			});
			if(!sync) {
				p = ret;
			}
		}
		return tink_core_Future.map(ret,function(o) {
			if(!tink_core_OutcomeTools.isSuccess(o)) {
				p = null;
			}
			return o;
		});
	};
};
tink_core_Promise.lift = function(p) {
	return p;
};
tink_core_Promise.trigger = function() {
	var this1 = new tink_core_FutureTrigger();
	return this1;
};
tink_core_Promise.resolve = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(v)));
};
tink_core_Promise.reject = function(e) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
};
var tink_core_Next = {};
tink_core_Next.ofSafe = function(f) {
	return function(x) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x)));
	};
};
tink_core_Next.ofSync = function(f) {
	return function(x) {
		return tink_core_Future.map(f(x),tink_core_Outcome.Success);
	};
};
tink_core_Next.ofSafeSync = function(f) {
	return function(x) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(f(x))));
	};
};
tink_core_Next._chain = function(a,b) {
	return function(v) {
		return tink_core_Promise.next(a(v),b);
	};
};
var tink_core_Recover = {};
tink_core_Recover.ofSync = function(f) {
	return function(e) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(e)));
	};
};
var tink_core_Combiner = {};
tink_core_Combiner.ofSync = function(f) {
	return function(x1,x2) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x1,x2)));
	};
};
tink_core_Combiner.ofSafe = function(f) {
	return function(x1,x2) {
		return tink_core_Future.map(f(x1,x2),tink_core_Outcome.Success);
	};
};
tink_core_Combiner.ofSafeSync = function(f) {
	return function(x1,x2) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(f(x1,x2))));
	};
};
var tink_core_PromiseTrigger = {};
tink_core_PromiseTrigger._new = function() {
	var this1 = new tink_core_FutureTrigger();
	return this1;
};
tink_core_PromiseTrigger.resolve = function(this1,v) {
	return this1.trigger(tink_core_Outcome.Success(v));
};
tink_core_PromiseTrigger.reject = function(this1,e) {
	return this1.trigger(tink_core_Outcome.Failure(e));
};
tink_core_PromiseTrigger.asPromise = function(this1) {
	return this1;
};
var tink_core_Gather = {};
tink_core_Gather._new = function(v) {
	var this1 = v;
	return this1;
};
tink_core_Gather.ofBool = function(b) {
	var this1 = b;
	return this1;
};
var tink_core_Signal = {};
tink_core_Signal._new = function(f,init) {
	var this1 = new tink_core__$Signal_Suspendable(f,init);
	return this1;
};
tink_core_Signal.handle = function(this1,handler) {
	return this1.listen(handler);
};
tink_core_Signal.map = function(this1,f,gather) {
	return tink_core__$Signal_Suspendable.over(this1,function(fire) {
		return this1.listen(function(v) {
			fire(f(v));
		});
	});
};
tink_core_Signal.flatMap = function(this1,f,gather) {
	return tink_core__$Signal_Suspendable.over(this1,function(fire) {
		return this1.listen(function(v) {
			f(v).handle(fire);
		});
	});
};
tink_core_Signal.filter = function(this1,f,gather) {
	return tink_core__$Signal_Suspendable.over(this1,function(fire) {
		return this1.listen(function(v) {
			if(f(v)) {
				fire(v);
			}
		});
	});
};
tink_core_Signal.select = function(this1,selector,gather) {
	return tink_core__$Signal_Suspendable.over(this1,function(fire) {
		return this1.listen(function(v) {
			var _g = selector(v);
			if(_g._hx_index == 0) {
				var v = _g.v;
				fire(v);
			}
		});
	});
};
tink_core_Signal.join = function(this1,that,gather) {
	if(this1.get_disposed()) {
		return that;
	} else if(that.get_disposed()) {
		return this1;
	} else {
		return new tink_core__$Signal_Suspendable(function(fire) {
			var cb = fire;
			return new tink_core__$Callback_LinkPair(this1.listen(cb),that.listen(cb));
		},function(self) {
			var release = function() {
				if(this1.get_disposed() && that.get_disposed()) {
					self.dispose();
				}
			};
			this1.ondispose(release);
			that.ondispose(release);
		});
	}
};
tink_core_Signal.nextTime = function(this1,condition) {
	return tink_core_Signal.pickNext(this1,function(v) {
		if(condition == null || condition(v)) {
			return haxe_ds_Option.Some(v);
		} else {
			return haxe_ds_Option.None;
		}
	});
};
tink_core_Signal.pickNext = function(this1,selector) {
	var ret = new tink_core_FutureTrigger();
	var link = null;
	link = this1.listen(function(v) {
		var _g = selector(v);
		switch(_g._hx_index) {
		case 0:
			var v = _g.v;
			ret.trigger(v);
			break;
		case 1:
			break;
		}
	});
	ret.handle(link == null ? tink_core_CallbackLink.noop : ($_=link,$bind($_,$_.cancel)));
	return ret;
};
tink_core_Signal.until = function(this1,end) {
	return new tink_core__$Signal_Suspendable(function($yield) {
		return this1.listen($yield);
	},function(self) {
		end.handle($bind(self,self.dispose));
	});
};
tink_core_Signal.next = function(this1,condition) {
	return tink_core_Signal.nextTime(this1,condition);
};
tink_core_Signal.noise = function(this1) {
	return tink_core_Signal.map(this1,function(_) {
		return null;
	});
};
tink_core_Signal.gather = function(this1) {
	return this1;
};
tink_core_Signal.create = function(f) {
	var this1 = new tink_core__$Signal_Suspendable(f,null);
	return this1;
};
tink_core_Signal.generate = function(generator,init) {
	var this1 = new tink_core__$Signal_Suspendable(function(fire) {
		generator(fire);
		return null;
	},init);
	return this1;
};
tink_core_Signal.trigger = function() {
	return new tink_core_SignalTrigger();
};
tink_core_Signal.ofClassical = function(add,remove,gather) {
	return new tink_core__$Signal_Suspendable(function(fire) {
		add(fire);
		var _g = remove;
		var a1 = fire;
		var this1 = new tink_core_SimpleLink(function() {
			_g(a1);
		});
		return this1;
	});
};
tink_core_Signal.dead = function() {
	return tink_core__$Signal_Disposed.INST;
};
var tink_core__$Signal_SignalObject = function() { };
$hxClasses["tink.core._Signal.SignalObject"] = tink_core__$Signal_SignalObject;
tink_core__$Signal_SignalObject.__name__ = "tink.core._Signal.SignalObject";
tink_core__$Signal_SignalObject.__isInterface__ = true;
tink_core__$Signal_SignalObject.__interfaces__ = [tink_core_Disposable];
tink_core__$Signal_SignalObject.prototype = {
	listen: null
	,__class__: tink_core__$Signal_SignalObject
};
var tink_core__$Signal_Disposed = function() {
	tink_core_AlreadyDisposed.call(this);
};
$hxClasses["tink.core._Signal.Disposed"] = tink_core__$Signal_Disposed;
tink_core__$Signal_Disposed.__name__ = "tink.core._Signal.Disposed";
tink_core__$Signal_Disposed.__interfaces__ = [tink_core__$Signal_SignalObject];
tink_core__$Signal_Disposed.__super__ = tink_core_AlreadyDisposed;
tink_core__$Signal_Disposed.prototype = $extend(tink_core_AlreadyDisposed.prototype,{
	listen: function(cb) {
		return null;
	}
	,__class__: tink_core__$Signal_Disposed
});
var tink_core__$Signal_Suspendable = function(activate,init) {
	this.handlers = new tink_core_CallbackList();
	var _gthis = this;
	this.activate = activate;
	this.init = init;
	this.handlers.ondrain = function() {
		var this1 = _gthis.subscription;
		if(this1 != null) {
			this1.cancel();
		}
	};
	this.handlers.onfill = function() {
		if(init != null) {
			var f = init;
			init = null;
			f(_gthis);
		}
		_gthis.subscription = activate(($_=_gthis.handlers,$bind($_,$_.invoke)));
	};
};
$hxClasses["tink.core._Signal.Suspendable"] = tink_core__$Signal_Suspendable;
tink_core__$Signal_Suspendable.__name__ = "tink.core._Signal.Suspendable";
tink_core__$Signal_Suspendable.__interfaces__ = [tink_core_OwnedDisposable,tink_core__$Signal_SignalObject];
tink_core__$Signal_Suspendable.over = function(s,activate) {
	if(s.get_disposed()) {
		return tink_core_Signal.dead();
	} else {
		var ret = new tink_core__$Signal_Suspendable(activate);
		s.ondispose($bind(ret,ret.dispose));
		return ret;
	}
};
tink_core__$Signal_Suspendable.prototype = {
	handlers: null
	,activate: null
	,init: null
	,subscription: null
	,get_disposed: function() {
		return this.handlers.disposeHandlers == null;
	}
	,dispose: function() {
		this.handlers.dispose();
	}
	,ondispose: function(handler) {
		this.handlers.ondispose(handler);
	}
	,listen: function(cb) {
		var _this = this.handlers;
		if(_this.disposeHandlers == null) {
			return null;
		} else {
			var node = new tink_core__$Callback_ListCell(cb,_this);
			_this.cells.push(node);
			if(_this.used++ == 0) {
				var fn = _this.onfill;
				if(tink_core_Callback.depth < 500) {
					tink_core_Callback.depth++;
					fn();
					tink_core_Callback.depth--;
				} else {
					tink_core_Callback.defer(fn);
				}
			}
			return node;
		}
	}
	,__class__: tink_core__$Signal_Suspendable
	,__properties__: {get_disposed:"get_disposed"}
};
var tink_core_SignalTrigger = function() {
	this.handlers = new tink_core_CallbackList();
};
$hxClasses["tink.core.SignalTrigger"] = tink_core_SignalTrigger;
tink_core_SignalTrigger.__name__ = "tink.core.SignalTrigger";
tink_core_SignalTrigger.__interfaces__ = [tink_core_OwnedDisposable,tink_core__$Signal_SignalObject];
tink_core_SignalTrigger.prototype = {
	get_disposed: function() {
		return this.handlers.disposeHandlers == null;
	}
	,handlers: null
	,dispose: function() {
		this.handlers.dispose();
	}
	,ondispose: function(d) {
		this.handlers.ondispose(d);
	}
	,trigger: function(event) {
		this.handlers.invoke(event);
	}
	,getLength: function() {
		return this.handlers.used;
	}
	,listen: function(cb) {
		var _this = this.handlers;
		if(_this.disposeHandlers == null) {
			return null;
		} else {
			var node = new tink_core__$Callback_ListCell(cb,_this);
			_this.cells.push(node);
			if(_this.used++ == 0) {
				var fn = _this.onfill;
				if(tink_core_Callback.depth < 500) {
					tink_core_Callback.depth++;
					fn();
					tink_core_Callback.depth--;
				} else {
					tink_core_Callback.defer(fn);
				}
			}
			return node;
		}
	}
	,clear: function() {
		this.handlers.clear();
	}
	,asSignal: function() {
		return this;
	}
	,__class__: tink_core_SignalTrigger
	,__properties__: {get_disposed:"get_disposed"}
};
var tink_macro_Bouncer = function() { };
$hxClasses["tink.macro.Bouncer"] = tink_macro_Bouncer;
tink_macro_Bouncer.__name__ = "tink.macro.Bouncer";
tink_macro_Bouncer.makeOuter = function(a) {
	return null;
};
var tools_ClassInfo = function() { };
$hxClasses["tools.ClassInfo"] = tools_ClassInfo;
tools_ClassInfo.__name__ = "tools.ClassInfo";
tools_ClassInfo.classPath = function(obj) {
	var cL = js_Boot.getClass(obj);
	if(cL != null) {
		return cL.__name__;
	}
	return null;
};
tools_ClassInfo.keyNames = function(map) {
	var _g = [];
	var key = map.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		_g.push(key1);
	}
	return _g;
};
var uuid_Uuid = function() { };
$hxClasses["uuid.Uuid"] = uuid_Uuid;
uuid_Uuid.__name__ = "uuid.Uuid";
uuid_Uuid.splitmix64_seed = function(index) {
	var a_high = index >> 31;
	var a_low = index;
	var b_high = -1640531527;
	var b_low = 2135587861;
	var high = a_high + b_high | 0;
	var low = a_low + b_low | 0;
	if(haxe_Int32.ucompare(low,a_low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var result = this1;
	var b = 30;
	b &= 63;
	var b1;
	if(b == 0) {
		var this1 = new haxe__$Int64__$_$_$Int64(result.high,result.low);
		b1 = this1;
	} else if(b < 32) {
		var this1 = new haxe__$Int64__$_$_$Int64(result.high >> b,result.high << 32 - b | result.low >>> b);
		b1 = this1;
	} else {
		var this1 = new haxe__$Int64__$_$_$Int64(result.high >> 31,result.high >> b - 32);
		b1 = this1;
	}
	var a_high = result.high ^ b1.high;
	var a_low = result.low ^ b1.low;
	var b_high = -1084733587;
	var b_low = 484763065;
	var mask = 65535;
	var al = a_low & mask;
	var ah = a_low >>> 16;
	var bl = b_low & mask;
	var bh = b_low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a_low,b_high) + haxe_Int32._mul(a_high,b_low) | 0) | 0;
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	result = this1;
	var b = 27;
	b &= 63;
	var b1;
	if(b == 0) {
		var this1 = new haxe__$Int64__$_$_$Int64(result.high,result.low);
		b1 = this1;
	} else if(b < 32) {
		var this1 = new haxe__$Int64__$_$_$Int64(result.high >> b,result.high << 32 - b | result.low >>> b);
		b1 = this1;
	} else {
		var this1 = new haxe__$Int64__$_$_$Int64(result.high >> 31,result.high >> b - 32);
		b1 = this1;
	}
	var a_high = result.high ^ b1.high;
	var a_low = result.low ^ b1.low;
	var b_high = -1798288965;
	var b_low = 321982955;
	var mask = 65535;
	var al = a_low & mask;
	var ah = a_low >>> 16;
	var bl = b_low & mask;
	var bh = b_low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a_low,b_high) + haxe_Int32._mul(a_high,b_low) | 0) | 0;
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	result = this1;
	var b = 31;
	b &= 63;
	var b1;
	if(b == 0) {
		var this1 = new haxe__$Int64__$_$_$Int64(result.high,result.low);
		b1 = this1;
	} else if(b < 32) {
		var this1 = new haxe__$Int64__$_$_$Int64(result.high >> b,result.high << 32 - b | result.low >>> b);
		b1 = this1;
	} else {
		var this1 = new haxe__$Int64__$_$_$Int64(result.high >> 31,result.high >> b - 32);
		b1 = this1;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(result.high ^ b1.high,result.low ^ b1.low);
	return this1;
};
uuid_Uuid.randomFromRange = function(min,max) {
	var s1 = uuid_Uuid.state0;
	var s0 = uuid_Uuid.state1;
	uuid_Uuid.state0 = s0;
	var b = 23;
	b &= 63;
	var b1;
	if(b == 0) {
		var this1 = new haxe__$Int64__$_$_$Int64(s1.high,s1.low);
		b1 = this1;
	} else if(b < 32) {
		var this1 = new haxe__$Int64__$_$_$Int64(s1.high << b | s1.low >>> 32 - b,s1.low << b);
		b1 = this1;
	} else {
		var this1 = new haxe__$Int64__$_$_$Int64(s1.low << b - 32,0);
		b1 = this1;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(s1.high ^ b1.high,s1.low ^ b1.low);
	s1 = this1;
	var a_high = s1.high ^ s0.high;
	var a_low = s1.low ^ s0.low;
	var b = 18;
	b &= 63;
	var b1;
	if(b == 0) {
		var this1 = new haxe__$Int64__$_$_$Int64(s1.high,s1.low);
		b1 = this1;
	} else if(b < 32) {
		var this1 = new haxe__$Int64__$_$_$Int64(s1.high >>> b,s1.high << 32 - b | s1.low >>> b);
		b1 = this1;
	} else {
		var this1 = new haxe__$Int64__$_$_$Int64(0,s1.high >>> b - 32);
		b1 = this1;
	}
	var a_high1 = a_high ^ b1.high;
	var a_low1 = a_low ^ b1.low;
	var b = 5;
	b &= 63;
	var b1;
	if(b == 0) {
		var this1 = new haxe__$Int64__$_$_$Int64(s0.high,s0.low);
		b1 = this1;
	} else if(b < 32) {
		var this1 = new haxe__$Int64__$_$_$Int64(s0.high >>> b,s0.high << 32 - b | s0.low >>> b);
		b1 = this1;
	} else {
		var this1 = new haxe__$Int64__$_$_$Int64(0,s0.high >>> b - 32);
		b1 = this1;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(a_high1 ^ b1.high,a_low1 ^ b1.low);
	uuid_Uuid.state1 = this1;
	var a = uuid_Uuid.state1;
	var high = a.high + s0.high | 0;
	var low = a.low + s0.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var x = max - min + 1;
	var this11 = new haxe__$Int64__$_$_$Int64(x >> 31,x);
	var result = haxe_Int64.divMod(this1,this11).modulus.low;
	if(result < 0) {
		result = -result;
	}
	return result + min;
};
uuid_Uuid.randomByte = function() {
	return uuid_Uuid.randomFromRange(0,255);
};
uuid_Uuid.fromShort = function(shortUuid,separator,fromAlphabet) {
	if(fromAlphabet == null) {
		fromAlphabet = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ";
	}
	if(separator == null) {
		separator = "-";
	}
	var uuid = uuid_Uuid.convert(shortUuid,fromAlphabet,"0123456789abcdef");
	return uuid_Uuid.hexToUuid(uuid,separator);
};
uuid_Uuid.toShort = function(uuid,separator,toAlphabet) {
	if(toAlphabet == null) {
		toAlphabet = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ";
	}
	if(separator == null) {
		separator = "-";
	}
	uuid = StringTools.replace(uuid,separator,"").toLowerCase();
	return uuid_Uuid.convert(uuid,"0123456789abcdef",toAlphabet);
};
uuid_Uuid.fromNano = function(nanoUuid,separator,fromAlphabet) {
	if(fromAlphabet == null) {
		fromAlphabet = "_-0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
	}
	if(separator == null) {
		separator = "-";
	}
	var uuid = uuid_Uuid.convert(nanoUuid,fromAlphabet,"0123456789abcdef");
	return uuid_Uuid.hexToUuid(uuid,separator);
};
uuid_Uuid.toNano = function(uuid,separator,toAlphabet) {
	if(toAlphabet == null) {
		toAlphabet = "_-0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
	}
	if(separator == null) {
		separator = "-";
	}
	uuid = StringTools.replace(uuid,separator,"").toLowerCase();
	return uuid_Uuid.convert(uuid,"0123456789abcdef",toAlphabet);
};
uuid_Uuid.v1 = function(node,optClockSequence,msecs,optNsecs,randomFunc,separator,shortUuid,toAlphabet) {
	if(toAlphabet == null) {
		toAlphabet = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ";
	}
	if(shortUuid == null) {
		shortUuid = false;
	}
	if(separator == null) {
		separator = "-";
	}
	if(optNsecs == null) {
		optNsecs = -1;
	}
	if(msecs == null) {
		msecs = -1;
	}
	if(optClockSequence == null) {
		optClockSequence = -1;
	}
	if(randomFunc == null) {
		randomFunc = uuid_Uuid.randomByte;
	}
	var buffer = new haxe_io_Bytes(new ArrayBuffer(16));
	if(node == null) {
		node = new haxe_io_Bytes(new ArrayBuffer(6));
		var v = randomFunc();
		node.b[0] = v;
		var v = randomFunc();
		node.b[1] = v;
		var v = randomFunc();
		node.b[2] = v;
		var v = randomFunc();
		node.b[3] = v;
		var v = randomFunc();
		node.b[4] = v;
		var v = randomFunc();
		node.b[5] = v;
		node.b[0] |= 1;
	}
	if(uuid_Uuid.clockSequenceBuffer == -1) {
		uuid_Uuid.clockSequenceBuffer = (randomFunc() << 8 | randomFunc()) & 16383;
	}
	var clockSeq = optClockSequence;
	if(optClockSequence == -1) {
		clockSeq = uuid_Uuid.clockSequenceBuffer;
	}
	if(msecs == -1) {
		msecs = HxOverrides.now() / 1000;
	}
	var nsecs = optNsecs;
	if(optNsecs == -1) {
		nsecs = uuid_Uuid.lastNSecs + 1;
	}
	var dt = msecs - uuid_Uuid.lastMSecs + (nsecs - uuid_Uuid.lastNSecs) / 10000;
	if(dt < 0 && optClockSequence == -1) {
		clockSeq = clockSeq + 1 & 16383;
	}
	if((dt < 0 || msecs > uuid_Uuid.lastMSecs) && optNsecs == -1) {
		nsecs = 0;
	}
	if(nsecs >= 10000) {
		throw haxe_Exception.thrown("Can't create more than 10M uuids/sec");
	}
	uuid_Uuid.lastMSecs = msecs;
	uuid_Uuid.lastNSecs = nsecs;
	uuid_Uuid.clockSequenceBuffer = clockSeq;
	msecs += 12219292800000;
	var this1 = new haxe__$Int64__$_$_$Int64(1,0);
	var dvs = this1;
	var a = haxe_Int64Helper.fromFloat(msecs);
	var b_high = 0;
	var b_low = 268435455;
	var a_high = a.high & b_high;
	var a_low = a.low & b_low;
	var b_high = 0;
	var b_low = 10000;
	var mask = 65535;
	var al = a_low & mask;
	var ah = a_low >>> 16;
	var bl = b_low & mask;
	var bh = b_low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a_low,b_high) + haxe_Int32._mul(a_high,b_low) | 0) | 0;
	var a_high = high;
	var a_low = low;
	var b_high = nsecs >> 31;
	var b_low = nsecs;
	var high = a_high + b_high | 0;
	var low = a_low + b_low | 0;
	if(haxe_Int32.ucompare(low,a_low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var tl = haxe_Int64.divMod(this1,dvs).modulus.low;
	buffer.b[0] = tl >>> 24 & 255;
	buffer.b[1] = tl >>> 16 & 255;
	buffer.b[2] = tl >>> 8 & 255;
	buffer.b[3] = tl & 255;
	var a = haxe_Int64.divMod(haxe_Int64Helper.fromFloat(msecs),dvs).quotient;
	var b_high = 0;
	var b_low = 10000;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b_low & mask;
	var bh = b_low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a.low,b_high) + haxe_Int32._mul(a.high,b_low) | 0) | 0;
	var a_high = high;
	var a_low = low;
	var b_high = 0;
	var b_low = 268435455;
	var this1_high = a_high & b_high;
	var this1_low = a_low & b_low;
	var tmh = this1_low;
	buffer.b[4] = tmh >>> 8 & 255;
	buffer.b[5] = tmh & 255;
	buffer.b[6] = tmh >>> 24 & 15 | 16;
	buffer.b[7] = tmh >>> 16 & 255;
	buffer.b[8] = clockSeq >>> 8 | 128;
	buffer.b[9] = clockSeq & 255;
	buffer.b[10] = node.b[0];
	buffer.b[11] = node.b[1];
	buffer.b[12] = node.b[2];
	buffer.b[13] = node.b[3];
	buffer.b[14] = node.b[4];
	buffer.b[15] = node.b[5];
	var uuid = uuid_Uuid.stringify(buffer,separator);
	if(shortUuid) {
		uuid = uuid_Uuid.toShort(uuid,separator,toAlphabet);
	}
	return uuid;
};
uuid_Uuid.v3 = function(name,namespace,separator,shortUuid,toAlphabet) {
	if(toAlphabet == null) {
		toAlphabet = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ";
	}
	if(shortUuid == null) {
		shortUuid = false;
	}
	if(separator == null) {
		separator = "-";
	}
	if(namespace == null) {
		namespace = "";
	}
	namespace = StringTools.replace(namespace,"-","");
	var buffer = haxe_crypto_Md5.make(haxe_io_Bytes.ofHex(namespace + haxe_io_Bytes.ofString(name).toHex()));
	buffer.b[6] = buffer.b[6] & 15 | 48;
	buffer.b[8] = buffer.b[8] & 63 | 128;
	var uuid = uuid_Uuid.stringify(buffer,separator);
	if(shortUuid) {
		uuid = uuid_Uuid.toShort(uuid,separator,toAlphabet);
	}
	return uuid;
};
uuid_Uuid.v4 = function(randBytes,randomFunc,separator,shortUuid,toAlphabet) {
	if(toAlphabet == null) {
		toAlphabet = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ";
	}
	if(shortUuid == null) {
		shortUuid = false;
	}
	if(separator == null) {
		separator = "-";
	}
	if(randomFunc == null) {
		randomFunc = uuid_Uuid.randomByte;
	}
	var buffer = randBytes;
	if(buffer == null) {
		buffer = new haxe_io_Bytes(new ArrayBuffer(16));
		var v = randomFunc();
		buffer.b[0] = v;
		var v = randomFunc();
		buffer.b[1] = v;
		var v = randomFunc();
		buffer.b[2] = v;
		var v = randomFunc();
		buffer.b[3] = v;
		var v = randomFunc();
		buffer.b[4] = v;
		var v = randomFunc();
		buffer.b[5] = v;
		var v = randomFunc();
		buffer.b[6] = v;
		var v = randomFunc();
		buffer.b[7] = v;
		var v = randomFunc();
		buffer.b[8] = v;
		var v = randomFunc();
		buffer.b[9] = v;
		var v = randomFunc();
		buffer.b[10] = v;
		var v = randomFunc();
		buffer.b[11] = v;
		var v = randomFunc();
		buffer.b[12] = v;
		var v = randomFunc();
		buffer.b[13] = v;
		var v = randomFunc();
		buffer.b[14] = v;
		var v = randomFunc();
		buffer.b[15] = v;
	} else if(buffer.length < 16) {
		throw haxe_Exception.thrown("Random bytes should be at least 16 bytes");
	}
	buffer.b[6] = buffer.b[6] & 15 | 64;
	buffer.b[8] = buffer.b[8] & 63 | 128;
	var uuid = uuid_Uuid.stringify(buffer,separator);
	if(shortUuid) {
		uuid = uuid_Uuid.toShort(uuid,separator,toAlphabet);
	}
	return uuid;
};
uuid_Uuid.v5 = function(name,namespace,separator,shortUuid,toAlphabet) {
	if(toAlphabet == null) {
		toAlphabet = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ";
	}
	if(shortUuid == null) {
		shortUuid = false;
	}
	if(separator == null) {
		separator = "-";
	}
	if(namespace == null) {
		namespace = "";
	}
	namespace = StringTools.replace(namespace,"-","");
	var buffer = haxe_crypto_Sha1.make(haxe_io_Bytes.ofHex(namespace + haxe_io_Bytes.ofString(name).toHex()));
	buffer.b[6] = buffer.b[6] & 15 | 80;
	buffer.b[8] = buffer.b[8] & 63 | 128;
	var uuid = uuid_Uuid.stringify(buffer,separator);
	if(shortUuid) {
		uuid = uuid_Uuid.toShort(uuid,separator,toAlphabet);
	}
	return uuid;
};
uuid_Uuid.stringify = function(data,separator) {
	if(separator == null) {
		separator = "-";
	}
	return uuid_Uuid.hexToUuid(data.toHex(),separator);
};
uuid_Uuid.parse = function(uuid,separator) {
	if(separator == null) {
		separator = "-";
	}
	return haxe_io_Bytes.ofHex(StringTools.replace(uuid,separator,""));
};
uuid_Uuid.validate = function(uuid,separator) {
	if(separator == null) {
		separator = "-";
	}
	if(separator == "") {
		uuid = HxOverrides.substr(uuid,0,8) + "-" + HxOverrides.substr(uuid,8,4) + "-" + HxOverrides.substr(uuid,12,4) + "-" + HxOverrides.substr(uuid,16,4) + "-" + HxOverrides.substr(uuid,20,12);
	} else if(separator != "-") {
		uuid = StringTools.replace(uuid,separator,"-");
	}
	return uuid_Uuid.regexp.match(uuid);
};
uuid_Uuid.version = function(uuid,separator) {
	if(separator == null) {
		separator = "-";
	}
	uuid = StringTools.replace(uuid,separator,"");
	return Std.parseInt("0x" + HxOverrides.substr(uuid,12,1));
};
uuid_Uuid.hexToUuid = function(hex,separator) {
	return HxOverrides.substr(hex,0,8) + separator + HxOverrides.substr(hex,8,4) + separator + HxOverrides.substr(hex,12,4) + separator + HxOverrides.substr(hex,16,4) + separator + HxOverrides.substr(hex,20,12);
};
uuid_Uuid.convert = function(number,fromAlphabet,toAlphabet) {
	var fromBase = fromAlphabet.length;
	var toBase = toAlphabet.length;
	var len = number.length;
	var buf = "";
	var this1 = new Array(len);
	var numberMap = this1;
	var divide = 0;
	var newlen = 0;
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		numberMap[i] = fromAlphabet.indexOf(number.charAt(i));
	}
	while(true) {
		divide = 0;
		newlen = 0;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			divide = divide * fromBase + numberMap[i];
			if(divide >= toBase) {
				numberMap[newlen++] = Math.floor(divide / toBase);
				divide %= toBase;
			} else if(newlen > 0) {
				numberMap[newlen++] = 0;
			}
		}
		len = newlen;
		buf = toAlphabet.charAt(divide) + buf;
		if(!(newlen != 0)) {
			break;
		}
	}
	return buf;
};
uuid_Uuid.nanoId = function(len,alphabet,randomFunc) {
	if(alphabet == null) {
		alphabet = "_-0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
	}
	if(len == null) {
		len = 21;
	}
	if(randomFunc == null) {
		randomFunc = uuid_Uuid.randomByte;
	}
	if(alphabet == null) {
		throw haxe_Exception.thrown("Alphabet cannot be null");
	}
	if(alphabet.length == 0 || alphabet.length >= 256) {
		throw haxe_Exception.thrown("Alphabet must contain between 1 and 255 symbols");
	}
	if(len <= 0) {
		throw haxe_Exception.thrown("Length must be greater than zero");
	}
	var mask = (2 << Math.floor(Math.log(alphabet.length - 1) / Math.log(2))) - 1;
	var step = Math.ceil(1.6 * mask * len / alphabet.length);
	var sb_b = "";
	while(sb_b.length != len) {
		var _g = 0;
		var _g1 = step;
		while(_g < _g1) {
			var i = _g++;
			var rnd = randomFunc();
			var aIndex = rnd & mask;
			if(aIndex < alphabet.length) {
				sb_b += Std.string(alphabet.charAt(aIndex));
				if(sb_b.length == len) {
					break;
				}
			}
		}
	}
	return sb_b;
};
uuid_Uuid.short = function(toAlphabet,randomFunc) {
	if(toAlphabet == null) {
		toAlphabet = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ";
	}
	return uuid_Uuid.v4(null,randomFunc,null,true,toAlphabet);
};
var view_Accounting = function(props,context) {
	this.mounted = false;
	React_Component.call(this,props);
	if(props.match.url == "/Accounting" && props.match.isExact) {
		haxe_Log.trace("pushing2: /Accounting/ReturnDebits/List",{ fileName : "src/view/Accounting.hx", lineNumber : 47, className : "view.Accounting", methodName : "new"});
		props.history.push("/Accounting/ReturnDebits/List");
	}
};
$hxClasses["view.Accounting"] = view_Accounting;
view_Accounting.__name__ = "view.Accounting";
view_Accounting.mapDispatchToProps = function(dispatch) {
	return { onTodoClick : function(id) {
		return dispatch(redux_Action.map(action_AppAction.Config(action_ConfigAction.SetTheme("orange"))));
	}};
};
view_Accounting.mapStateToProps = function() {
	return function(aState) {
		var uState = aState.userState;
		return { appConfig : aState.config, userState : aState.userState, redirectAfterLogin : aState.locationStore.redirectAfterLogin};
	};
};
view_Accounting.__super__ = React_Component;
view_Accounting.prototype = $extend(React_Component.prototype,{
	mounted: null
	,componentDidMount: function() {
		this.mounted = true;
	}
	,componentDidCatch: function(error,info) {
		haxe_Log.trace(error,{ fileName : "src/view/Accounting.hx", lineNumber : 69, className : "view.Accounting", methodName : "componentDidCatch"});
	}
	,render: function() {
		var tmp = react_ReactType.fromComp(React_Fragment);
		var tmp1 = react_ReactType.fromString("div");
		var tmp2 = react_ReactType.fromComp(bulma_$components_Tabs);
		var tmp3 = react_ReactType.fromComp(view_shared_TabLink);
		var tmp4 = this.props;
		var tmp5 = this.props.location.key;
		var tmp6 = this.props.location.hash;
		var tmp7 = shared_Utils.extend(this.props.location.state,{ contact : this.props.location.hash});
		var tmp8 = React.createElement(tmp3,Object.assign({ },tmp4,{ to : { key : tmp5, hash : tmp6, pathname : "/Accounting/DirectDebits", search : "", state : tmp7}}),"Bankeinzug");
		var tmp3 = React.createElement(react_ReactType.fromComp(view_shared_TabLink),Object.assign({ },this.props,{ to : "/Accounting/ReturnDebits"}),"Rücklastschriften");
		var tmp4 = React.createElement(tmp1,{ className : "tabNav2"},React.createElement(tmp2,{ className : "is-boxed"},tmp8,tmp3));
		var tmp1 = react_ReactType.fromString("div");
		var tmp2 = react_ReactType.fromComp(react_router_Switch);
		var tmp3 = React.createElement(react_ReactType.fromComp(react_router_Route),Object.assign({ },this.props,{ path : "/Accounting/DirectDebits/:section?/:action?/:id?", component : react_ReactType.fromComp(view_accounting_DirectDebits)}));
		var tmp5 = React.createElement(react_ReactType.fromComp(react_router_Route),Object.assign({ },this.props,{ path : "/Accounting/ReturnDebits/:section?/:action?/:id?", component : react_ReactType.fromComp(view_accounting_ReturnDebits)}));
		var tmp6 = React.createElement(tmp1,{ className : "tabContent2"},React.createElement(tmp2,{ },tmp3,tmp5));
		var tmp1 = React.createElement(view_StatusBar._renderWrapper,this.props);
		return React.createElement(tmp,{ },tmp4,tmp6,tmp1);
	}
	,__class__: view_Accounting
});
var view_DashBoard = function(props) {
	this.renderCount = 0;
	this.rendered = false;
	this.mounted = false;
	this.state = { hasError : false, mounted : false};
	React_Component.call(this,props);
	if(props.match.url == "/DashBoard") {
		props.history.push("/DashBoard/Setup/DBSync");
	}
};
$hxClasses["view.DashBoard"] = view_DashBoard;
view_DashBoard.__name__ = "view.DashBoard";
view_DashBoard.mapDispatchToProps = function(dispatch) {
	return { setThemeColor : function() {
		dispatch(redux_Action.map(action_AppAction.Config(action_ConfigAction.SetTheme("violet"))));
	}};
};
view_DashBoard.mapStateToProps = function(aState) {
	var uState = aState.userState;
	return { appConfig : aState.config, redirectAfterLogin : aState.locationStore.redirectAfterLogin, userState : uState};
};
view_DashBoard.__super__ = React_Component;
view_DashBoard.prototype = $extend(React_Component.prototype,{
	mounted: null
	,rendered: null
	,renderCount: null
	,componentDidMount: function() {
		this.mounted = true;
	}
	,componentDidCatch: function(error,info) {
		if(this.mounted) {
			this.setState({ hasError : true});
		}
		haxe_Log.trace(error,{ fileName : "src/view/DashBoard.hx", lineNumber : 75, className : "view.DashBoard", methodName : "componentDidCatch"});
		haxe_Log.trace(info,{ fileName : "src/view/DashBoard.hx", lineNumber : 76, className : "view.DashBoard", methodName : "componentDidCatch"});
	}
	,componentWillUnmount: function() {
		haxe_Log.trace("leaving...",{ fileName : "src/view/DashBoard.hx", lineNumber : 81, className : "view.DashBoard", methodName : "componentWillUnmount"});
	}
	,render: function() {
		if(this.state.hasError) {
			var tmp = react_ReactType.fromString("h1");
			var c = js_Boot.getClass(this);
			var tmp1 = c.__name__;
			return React.createElement(tmp,{ },"Fehler in ",tmp1,".");
		}
		haxe_Log.trace(Reflect.fields(this.props),{ fileName : "src/view/DashBoard.hx", lineNumber : 122, className : "view.DashBoard", methodName : "render"});
		haxe_Log.trace(Reflect.fields(this.state),{ fileName : "src/view/DashBoard.hx", lineNumber : 123, className : "view.DashBoard", methodName : "render"});
		var tmp = react_ReactType.fromComp(React_Fragment);
		var tmp1 = react_ReactType.fromString("div");
		var tmp2 = react_ReactType.fromComp(bulma_$components_Tabs);
		var tmp3 = React.createElement(react_ReactType.fromComp(view_shared_TabLink),Object.assign({ },this.props,{ to : "/DashBoard/Roles"}),"Benutzer");
		var tmp4 = React.createElement(react_ReactType.fromComp(view_shared_TabLink),Object.assign({ },this.props,{ to : "/DashBoard/Settings"}),"Einstellungen");
		var tmp5 = React.createElement(react_ReactType.fromComp(view_shared_TabLink),Object.assign({ },this.props,{ to : "/DashBoard/Setup"}),"Setup");
		var tmp6 = React.createElement(tmp1,{ className : "tabNav2"},React.createElement(tmp2,{ className : "is-boxed"},tmp3,tmp4,tmp5));
		var tmp1 = react_ReactType.fromString("div");
		var tmp2 = React.createElement(react_ReactType.fromComp(react_router_Route),Object.assign({ },this.props,{ path : "/DashBoard/Roles/:section?/:action?/:id?", component : react_ReactType.fromComp(view_dashboard_Roles)}));
		var tmp3 = React.createElement(react_ReactType.fromComp(react_router_Route),Object.assign({ },this.props,{ path : "/DashBoard/Settings/:section?/:action?/:id?", component : react_ReactType.fromComp(view_dashboard_Settings)}));
		var tmp4 = react_ReactType.fromComp(react_router_Route);
		var tmp5 = Object.assign({ },this.props,{ path : "/DashBoard/Setup/:section?/:action?", component : react_ReactType.fromComp(view_dashboard_Setup)});
		var tmp7 = React.createElement(tmp1,{ className : "tabContent2"},tmp2,tmp3,React.createElement(tmp4,tmp5));
		var tmp1 = React.createElement(view_StatusBar._renderWrapper,this.props);
		return React.createElement(tmp,{ },tmp6,tmp7,tmp1);
	}
	,__class__: view_DashBoard
});
var view_Data = function(props) {
	this.renderCount = 0;
	this.rendered = false;
	this.mounted = false;
	this.state = { hasError : false, mounted : false};
	if(this._trace) {
		haxe_Log.trace("location.pathname:" + Std.string(props.history.location.pathname) + " match.url: " + Std.string(props.match.url) + " userState:" + Std.string(props.user),{ fileName : "src/view/Data.hx", lineNumber : 59, className : "view.Data", methodName : "new"});
	}
	React_Component.call(this,props);
	view_Data._strace = this._trace = false;
	if(this._trace) {
		haxe_Log.trace(props.match,{ fileName : "src/view/Data.hx", lineNumber : 62, className : "view.Data", methodName : "new"});
	}
	if(this._trace) {
		haxe_Log.trace(props.store,{ fileName : "src/view/Data.hx", lineNumber : 63, className : "view.Data", methodName : "new"});
	}
	if(props.match.url == "/Data" && props.match.isExact) {
		if(this._trace) {
			haxe_Log.trace("pushing2: /Data/Contacts/List/get",{ fileName : "src/view/Data.hx", lineNumber : 66, className : "view.Data", methodName : "new"});
		}
		props.history.push("/Data/Contacts/List/get");
	}
};
$hxClasses["view.Data"] = view_Data;
view_Data.__name__ = "view.Data";
view_Data.mapDispatchToProps = function(dispatch) {
	return { redirect : function(path,props) {
		return dispatch(redux_Action.map(action_async_LocationAccess.redirect(["/Data/Contacts/:section?/:action?/:id?","/Data/Deals/:section?/:action?/:id?","/Data/Accounts/:section?/:action?/:id?"],path,props)));
	}};
};
view_Data.__super__ = React_Component;
view_Data.prototype = $extend(React_Component.prototype,{
	mounted: null
	,rendered: null
	,renderCount: null
	,_trace: null
	,componentDidMount: function() {
		this.mounted = true;
		haxe_Log.trace(this.props.match,{ fileName : "src/view/Data.hx", lineNumber : 76, className : "view.Data", methodName : "componentDidMount"});
	}
	,componentDidCatch: function(error,info) {
		if(this.mounted) {
			this.setState({ hasError : true});
		}
		if(this._trace) {
			haxe_Log.trace(error,{ fileName : "src/view/Data.hx", lineNumber : 89, className : "view.Data", methodName : "componentDidCatch"});
		}
		if(this._trace) {
			haxe_Log.trace(info,{ fileName : "src/view/Data.hx", lineNumber : 90, className : "view.Data", methodName : "componentDidCatch"});
		}
	}
	,shouldComponentUpdate: function(nextProps,nextState) {
		if(this._trace) {
			haxe_Log.trace("propsChanged:" + Std.string(nextProps != this.props),{ fileName : "src/view/Data.hx", lineNumber : 95, className : "view.Data", methodName : "shouldComponentUpdate"});
		}
		if(nextProps != this.props) {
			shared_Utils.compare(this.props,nextProps);
		}
		if(this._trace) {
			haxe_Log.trace("stateChanged:" + Std.string(nextState != this.state),{ fileName : "src/view/Data.hx", lineNumber : 97, className : "view.Data", methodName : "shouldComponentUpdate"});
		}
		if(nextState != this.state || nextProps != this.props) {
			return true;
		}
		return nextProps != this.props;
	}
	,find: function() {
		haxe_Log.trace("OK",{ fileName : "src/view/Data.hx", lineNumber : 120, className : "view.Data", methodName : "find"});
	}
	,render: function() {
		if(this._trace) {
			haxe_Log.trace(Reflect.fields(this.props),{ fileName : "src/view/Data.hx", lineNumber : 125, className : "view.Data", methodName : "render"});
		}
		if(this._trace) {
			haxe_Log.trace(Reflect.fields(this.state),{ fileName : "src/view/Data.hx", lineNumber : 126, className : "view.Data", methodName : "render"});
		}
		var tmp = react_ReactType.fromComp(React_Fragment);
		var tmp1 = react_ReactType.fromString("div");
		var tmp2 = react_ReactType.fromComp(bulma_$components_Tabs);
		var tmp3 = react_ReactType.fromComp(view_shared_TabLink);
		var tmp4 = this.props;
		var tmp5 = this.props.location.key;
		var tmp6 = shared_Utils.extend(this.props.location.state,{ contact : this.props.location.hash});
		var tmp7 = React.createElement(tmp3,Object.assign({ },tmp4,{ to : { key : tmp5, hash : "", pathname : "/Data/Contacts", search : "", state : tmp6}}),"Kontakte");
		var tmp3 = react_ReactType.fromComp(view_shared_TabLink);
		var tmp4 = this.props;
		var tmp5 = this.props.location.key;
		var tmp6 = shared_Utils.extend(this.props.location.state,{ contact : this.props.location.hash});
		var tmp8 = React.createElement(tmp3,Object.assign({ },tmp4,{ to : { key : tmp5, hash : "", pathname : "/Data/Deals", search : "", state : tmp6}}),"Spenden");
		var tmp3 = React.createElement(react_ReactType.fromComp(view_shared_TabLink),Object.assign({ },this.props,{ to : "/Data/QC"}),"QC");
		var tmp4 = React.createElement(tmp1,{ className : "tabNav2"},React.createElement(tmp2,{ className : "is-boxed"},tmp7,tmp8,tmp3));
		var tmp1 = react_ReactType.fromString("div");
		var tmp2 = react_ReactType.fromComp(react_router_Switch);
		var tmp3 = React.createElement(react_ReactType.fromComp(react_router_Route),Object.assign({ },this.props,{ path : "/Data/Contacts/:section?/:action?/:id?", component : react_ReactType.fromComp(view_data_Contacts)}));
		var tmp5 = React.createElement(react_ReactType.fromComp(react_router_Route),Object.assign({ },this.props,{ path : "/Data/Deals/:section?/:action?/:id?", component : react_ReactType.fromComp(view_data_Deals)}));
		var tmp6 = React.createElement(react_ReactType.fromComp(react_router_Route),Object.assign({ },this.props,{ path : "/Data/QC/:section?/:action?/:id?", component : react_ReactType.fromComp(view_data_QC)}));
		var tmp7 = React.createElement(tmp1,{ className : "tabContent2"},React.createElement(tmp2,{ },tmp3,tmp5,tmp6));
		var tmp1 = React.createElement(view_StatusBar._renderWrapper,this.props);
		return React.createElement(tmp,{ },tmp4,tmp7,tmp1);
	}
	,renderComponent: function(props) {
		if(this._trace) {
			haxe_Log.trace(props.location,{ fileName : "src/view/Data.hx", lineNumber : 162, className : "view.Data", methodName : "renderComponent"});
		}
		if(this._trace) {
			haxe_Log.trace(props.match,{ fileName : "src/view/Data.hx", lineNumber : 163, className : "view.Data", methodName : "renderComponent"});
		}
		return null;
	}
	,internalRedirect: function(path) {
		if(path == null) {
			path = "/Data/Contacts/List/get";
		}
		if(this._trace) {
			haxe_Log.trace("" + this.props.location.pathname + " " + path,{ fileName : "src/view/Data.hx", lineNumber : 169, className : "view.Data", methodName : "internalRedirect"});
		}
		if(this.props.location.pathname != path) {
			if(path != this.props.location.pathname) {
				this.props.redirect(path,this.props);
			}
		}
	}
	,__class__: view_Data
});
var view_LoginForm = function(props) {
	haxe_Log.trace(Reflect.fields(props),{ fileName : "src/view/LoginForm.hx", lineNumber : 61, className : "view.LoginForm", methodName : "new"});
	haxe_Log.trace(props.submitLogin,{ fileName : "src/view/LoginForm.hx", lineNumber : 62, className : "view.LoginForm", methodName : "new"});
	React_Component.call(this,props);
	this.submitValue = "";
	if(props.userState.dbUser == null) {
		haxe_Log.trace(App.store.getState().userState,{ fileName : "src/view/LoginForm.hx", lineNumber : 66, className : "view.LoginForm", methodName : "new"});
	}
	this.state = react_ReactUtil.copy(props.userState,{ waiting : false});
};
$hxClasses["view.LoginForm"] = view_LoginForm;
view_LoginForm.__name__ = "view.LoginForm";
view_LoginForm.mapDispatchToProps = function(dispatch) {
	haxe_Log.trace("ok",{ fileName : "src/view/LoginForm.hx", lineNumber : 72, className : "view.LoginForm", methodName : "mapDispatchToProps"});
	return { dispatch : dispatch, submitLogin : function(lState) {
		return dispatch(lState.new_pass != null ? redux_Action.map(action_async_UserAccess.changePassword(lState)) : redux_Action.map(action_async_UserAccess.doLogin(lState)));
	}, resetPassword : function(lState) {
		return dispatch(redux_Action.map(action_async_UserAccess.resetPassword(lState)));
	}, stateChange : function(lState) {
		return dispatch(redux_Action.map(action_UserAction.LoginChange(lState)));
	}};
};
view_LoginForm.mapStateToProps = function() {
	return function(aState) {
		var uState = aState.userState;
		haxe_Log.trace(aState.locationStore.redirectAfterLogin,{ fileName : "src/view/LoginForm.hx", lineNumber : 129, className : "view.LoginForm", methodName : "mapStateToProps"});
		if(uState.loginTask == "ChangePassword") {
			var rAL = aState.locationStore.redirectAfterLogin;
			haxe_Log.trace(rAL,{ fileName : "src/view/LoginForm.hx", lineNumber : 134, className : "view.LoginForm", methodName : "mapStateToProps"});
			var param = shared_Utils.argList(rAL,["action","jwt","user_name","opath"]);
			haxe_Log.trace(param == null ? "null" : haxe_ds_StringMap.stringify(param.h),{ fileName : "src/view/LoginForm.hx", lineNumber : 138, className : "view.LoginForm", methodName : "mapStateToProps"});
			return { userState : uState, redirectAfterLogin : aState.locationStore.redirectAfterLogin};
		}
		return { userState : uState, redirectAfterLogin : aState.locationStore.redirectAfterLogin};
	};
};
view_LoginForm.__super__ = React_Component;
view_LoginForm.prototype = $extend(React_Component.prototype,{
	submitValue: null
	,shouldComponentUpdate: function(nextProps,nextState) {
		haxe_Log.trace("propsChanged:" + Std.string(nextProps != this.props) + " stateChanged:" + Std.string(nextState != this.state),{ fileName : "src/view/LoginForm.hx", lineNumber : 85, className : "view.LoginForm", methodName : "shouldComponentUpdate"});
		if(nextState != this.state) {
			shared_Utils.compare(this.state,nextState);
		}
		if(nextProps != this.props) {
			shared_Utils.compare(this.props.userState.dbUser,nextProps.userState);
		}
		return true;
	}
	,componentDidMount: function() {
		var img = new Image();
		img.onload = function() {
			haxe_Log.trace("img.onload:ok",{ fileName : "src/view/LoginForm.hx", lineNumber : 105, className : "view.LoginForm", methodName : "componentDidMount"});
		};
		img.src = "img/schutzengelwerk-logo.png";
		if(App.devPassword != "" && App.devUser != "") {
			var doc = window.document;
			var user_name = js_Boot.__cast(doc.querySelector("input[name=\"user_name\"]") , HTMLInputElement);
			this.props.userState.dbUser.user_name = App.devUser;
			var password = js_Boot.__cast(doc.querySelector("input[name=\"password\"]") , HTMLInputElement);
			var formElement = js_Boot.__cast(doc.querySelector("form[name=\"form\"]") , HTMLFormElement);
			this.props.userState.dbUser.password = App.devPassword;
			me_cunity_debug_Out.dumpObject(this.props.userState,{ fileName : "src/view/LoginForm.hx", lineNumber : 118, className : "view.LoginForm", methodName : "componentDidMount"});
			this.props.submitLogin(this.props.userState);
		}
		haxe_Log.trace(this.props.redirectAfterLogin,{ fileName : "src/view/LoginForm.hx", lineNumber : 121, className : "view.LoginForm", methodName : "componentDidMount"});
	}
	,handleChange: function(e) {
		var s = { dbUser : this.props.userState.dbUser};
		var t = e.target;
		haxe_Log.trace(t.name,{ fileName : "src/view/LoginForm.hx", lineNumber : 156, className : "view.LoginForm", methodName : "handleChange"});
		if(t.name != "password" && t.name != "new_pass") {
			haxe_Log.trace(t.value,{ fileName : "src/view/LoginForm.hx", lineNumber : 158, className : "view.LoginForm", methodName : "handleChange"});
		}
		try {
			if(t.name == "new_pass" && t.value == this.props.userState.dbUser.password) {
				t.value = "";
			}
			(t.name.indexOf("new_pass") == -1 ? s.dbUser : s)[t.name] = t.value;
			var tmp = this.props;
			var tmp1 = react_ReactUtil.copy(this.props.userState,s);
			tmp.stateChange(tmp1);
			haxe_Log.trace(this.state,{ fileName : "src/view/LoginForm.hx", lineNumber : 172, className : "view.LoginForm", methodName : "handleChange"});
		} catch( _g ) {
			var ex = haxe_Exception.caught(_g);
			haxe_Log.trace($bind(ex,ex.details),{ fileName : "src/view/LoginForm.hx", lineNumber : 175, className : "view.LoginForm", methodName : "handleChange"});
		}
	}
	,handleSubmit: function(e) {
		e.preventDefault();
		haxe_Log.trace(this.props,{ fileName : "src/view/LoginForm.hx", lineNumber : 182, className : "view.LoginForm", methodName : "handleSubmit"});
		haxe_Log.trace(this.state,{ fileName : "src/view/LoginForm.hx", lineNumber : 183, className : "view.LoginForm", methodName : "handleSubmit"});
		haxe_Log.trace(this.submitValue,{ fileName : "src/view/LoginForm.hx", lineNumber : 184, className : "view.LoginForm", methodName : "handleSubmit"});
		if(this.submitValue == "Login") {
			if(this.props.userState.dbUser == null) {
				var appStore = App.store;
				return;
			}
			this.props.submitLogin(this.props.userState);
			return;
		}
		var _g = this.props.userState.loginTask;
		if(_g == null) {
			var dbUserProps = shared_Utils.updateDyn(this.props.userState.dbUser,{ user_name : this.props.userState.dbUser.user_name, password : this.props.userState.dbUser.password, jwt : this.props.userState.dbUser.jwt});
			this.props.submitLogin(this.props.userState.dbUser.change_pass_required ? { new_pass : this.props.userState.new_pass, dbUser : dbUserProps} : { dbUser : dbUserProps});
		} else {
			switch(_g) {
			case "ChangePassword":
				this.props.submitLogin({ new_pass : this.props.userState.new_pass, dbUser : shared_Utils.updateDyn(this.props.userState.dbUser,{ user_name : this.props.userState.dbUser.user_name, password : this.props.userState.dbUser.password, jwt : this.props.userState.dbUser.jwt})});
				break;
			case "ResetPassword":
				haxe_Log.trace("Reset Password requested",{ fileName : "src/view/LoginForm.hx", lineNumber : 203, className : "view.LoginForm", methodName : "handleSubmit"});
				haxe_Log.trace(this.props,{ fileName : "src/view/LoginForm.hx", lineNumber : 204, className : "view.LoginForm", methodName : "handleSubmit"});
				this.props.resetPassword(this.props.userState);
				return;
			default:
				var dbUserProps = shared_Utils.updateDyn(this.props.userState.dbUser,{ user_name : this.props.userState.dbUser.user_name, password : this.props.userState.dbUser.password, jwt : this.props.userState.dbUser.jwt});
				this.props.submitLogin(this.props.userState.dbUser.change_pass_required ? { new_pass : this.props.userState.new_pass, dbUser : dbUserProps} : { dbUser : dbUserProps});
			}
		}
	}
	,renderForm: function() {
		var _gthis = this;
		haxe_Log.trace(this.props.redirectAfterLogin,{ fileName : "src/view/LoginForm.hx", lineNumber : 230, className : "view.LoginForm", methodName : "renderForm"});
		haxe_Log.trace("error_style password:" + this.errorStyle("password"),{ fileName : "src/view/LoginForm.hx", lineNumber : 232, className : "view.LoginForm", methodName : "renderForm"});
		if(this.props.userState.loginTask == "CheckEmail") {
			var tmp = react_ReactType.fromString("form");
			var tmp1 = React.createElement(react_ReactType.fromString("div"),{ className : "formField"},React.createElement(react_ReactType.fromString("img"),{ className : "center", src : "img/emblem-mail.png"}));
			var tmp2 = react_ReactType.fromString("div");
			return React.createElement(tmp,{ name : "form", onSubmit : $bind(this,this.handleSubmit), className : "login"},tmp1,React.createElement(tmp2,{ className : "formField"},React.createElement(react_ReactType.fromString("span"),{ className : "center"},this.props.userState.dbUser.email," hat eine neue Nachricht!")));
		}
		if(this.props.userState.loginTask == "ChangePassword") {
			var tmp = react_ReactType.fromString("form");
			var tmp1 = React.createElement(react_ReactType.fromString("input"),{ name : "password", type : "hidden", value : this.props.userState.dbUser.password});
			var tmp2 = React.createElement(react_ReactType.fromString("div"),{ className : "formField"},React.createElement(react_ReactType.fromString("h3"),{ },"Bitte neues Passwort eintragen!"));
			var tmp3 = react_ReactType.fromString("div");
			var tmp4 = React.createElement(react_ReactType.fromString("label"),{ className : "fa userIcon", forhtml : "login_user_name"},React.createElement(react_ReactType.fromString("span"),{ className : "hidden"},"User ID"));
			var tmp5 = react_ReactType.fromString("input");
			var tmp6 = this.errorStyle("user_name") + "form-input";
			var tmp7 = React.createElement(tmp3,{ className : "formField"},tmp4,React.createElement(tmp5,{ id : "login_user_name", name : "user_name", disabled : "disabled", className : tmp6, placeholder : "User ID", value : this.props.userState.dbUser.user_name, onChange : $bind(this,this.handleChange)}));
			var tmp3 = react_ReactType.fromString("div");
			var tmp4 = React.createElement(react_ReactType.fromString("label"),{ className : "fa lockIcon", forhtml : "pw"},React.createElement(react_ReactType.fromString("span"),{ className : "hidden"},"Password"));
			var tmp5 = react_ReactType.fromString("input");
			var tmp6 = this.errorStyle("new_pass") + "form-input";
			var tmp8 = React.createElement(tmp3,{ className : "formField"},tmp4,React.createElement(tmp5,{ className : tmp6, name : "new_pass", type : "password", placeholder : "New Password", value : this.state.new_pass, onChange : $bind(this,this.handleChange)}));
			var tmp3 = react_ReactType.fromString("div");
			var tmp4 = React.createElement(react_ReactType.fromString("label"),{ className : "fa lockIcon", forhtml : "pw"},React.createElement(react_ReactType.fromString("span"),{ className : "hidden"},"Password"));
			var tmp5 = react_ReactType.fromString("input");
			var tmp6 = this.errorStyle("new_pass_confirm") + "form-input";
			var tmp9 = React.createElement(tmp3,{ className : "formField"},tmp4,React.createElement(tmp5,{ className : tmp6, name : "new_pass_confirm", type : "password", placeholder : "Confirm New Password", value : this.state.new_pass_confirm, onChange : $bind(this,this.handleChange)}));
			var tmp3 = react_ReactType.fromString("div");
			return React.createElement(tmp,{ name : "form", onSubmit : $bind(this,this.handleSubmit), className : "login"},tmp1,tmp2,tmp7,tmp8,tmp9,React.createElement(tmp3,{ className : "formField"},React.createElement(react_ReactType.fromString("input"),{ type : "submit", style : { width : "100%"}, value : "Absenden"})));
		}
		if(this.props.userState.dbUser != null && this.props.userState.dbUser.change_pass_required) {
			haxe_Log.trace("props.userState.dbUser.change_pass_required:" + Std.string(this.props.userState.dbUser.change_pass_required),{ fileName : "src/view/LoginForm.hx", lineNumber : 282, className : "view.LoginForm", methodName : "renderForm"});
			var tmp = react_ReactType.fromString("form");
			var tmp1 = React.createElement(react_ReactType.fromString("input"),{ name : "password", type : "hidden", value : this.props.userState.dbUser.password});
			var tmp2 = React.createElement(react_ReactType.fromString("div"),{ className : "formField"},React.createElement(react_ReactType.fromString("h3"),{ },"Bitte neues Passwort eintragen!"));
			var tmp3 = react_ReactType.fromString("div");
			var tmp4 = React.createElement(react_ReactType.fromString("label"),{ className : "fa userIcon", forhtml : "login_user_name"},React.createElement(react_ReactType.fromString("span"),{ className : "hidden"},"User ID"));
			var tmp5 = react_ReactType.fromString("input");
			var tmp6 = this.errorStyle("user_name") + "form-input";
			var tmp7 = React.createElement(tmp3,{ className : "formField"},tmp4,React.createElement(tmp5,{ id : "login_user_name", name : "user_name", disabled : "disabled", className : tmp6, placeholder : "User ID", value : this.props.userState.dbUser.user_name, onChange : $bind(this,this.handleChange)}));
			var tmp3 = react_ReactType.fromString("div");
			var tmp4 = React.createElement(react_ReactType.fromString("label"),{ className : "fa lockIcon", forhtml : "pw"},React.createElement(react_ReactType.fromString("span"),{ className : "hidden"},"Password"));
			var tmp5 = react_ReactType.fromString("input");
			var tmp6 = this.errorStyle("new_pass") + "form-input";
			var tmp8 = React.createElement(tmp3,{ className : "formField"},tmp4,React.createElement(tmp5,{ className : tmp6, name : "new_pass", type : "password", placeholder : "New Password", value : this.props.userState.new_pass, onChange : $bind(this,this.handleChange)}));
			var tmp3 = react_ReactType.fromString("div");
			var tmp4 = React.createElement(react_ReactType.fromString("label"),{ className : "fa lockIcon", forhtml : "pw"},React.createElement(react_ReactType.fromString("span"),{ className : "hidden"},"Password"));
			var tmp5 = react_ReactType.fromString("input");
			var tmp6 = this.errorStyle("new_pass_confirm") + "form-input";
			var tmp9 = React.createElement(tmp3,{ className : "formField"},tmp4,React.createElement(tmp5,{ className : tmp6, name : "new_pass_confirm", type : "password", placeholder : "Confirm New Password", value : this.state.new_pass_confirm, onChange : $bind(this,this.handleChange)}));
			var tmp3 = react_ReactType.fromString("div");
			return React.createElement(tmp,{ name : "form", onSubmit : $bind(this,this.handleSubmit), className : "login"},tmp1,tmp2,tmp7,tmp8,tmp9,React.createElement(tmp3,{ className : "formField"},React.createElement(react_ReactType.fromString("input"),{ type : "submit", style : { width : "100%"}, value : "Login"})));
		}
		var tmp = react_ReactType.fromString("form");
		var tmp1 = react_ReactType.fromString("div");
		var tmp2 = React.createElement(react_ReactType.fromString("label"),{ className : "fa userIcon", forhtml : "login_user_name"},React.createElement(react_ReactType.fromString("span"),{ className : "hidden"},"User ID"));
		var tmp3 = react_ReactType.fromString("input");
		var tmp4 = this.errorStyle("user_name") + " form-input";
		var tmp5 = React.createElement(tmp1,{ className : "formField"},tmp2,React.createElement(tmp3,{ id : "login_user_name", name : "user_name", autoComplete : "username", className : tmp4, placeholder : "User ID", onChange : $bind(this,this.handleChange)}));
		var tmp1 = react_ReactType.fromString("div");
		var tmp2 = React.createElement(react_ReactType.fromString("label"),{ className : "fa lockIcon", forhtml : "pw"},React.createElement(react_ReactType.fromString("span"),{ className : "hidden"},"Password"));
		var tmp3 = react_ReactType.fromString("input");
		var tmp4 = this.errorStyle("password") + " form-input";
		var tmp6 = React.createElement(tmp1,{ className : "formField"},tmp2,React.createElement(tmp3,{ id : "pw", className : tmp4, name : "password", autoComplete : "current-password", type : "password", placeholder : "Password", onChange : $bind(this,this.handleChange)}));
		var tmp1 = React.createElement(react_ReactType.fromString("div"),{ className : "formField"},React.createElement(react_ReactType.fromString("input"),{ type : "submit", style : { width : "100%"}, value : "Login", onClick : function() {
			_gthis.submitValue = "Login";
			return true;
		}}));
		var tmp2 = react_ReactType.fromString("div");
		var tmp3 = { className : "formField", style : { display : this.props.userState.loginTask == "ResetPassword" || this.props.userState.lastError != null && this.props.userState.lastError.indexOf("password") > -1 ? "flex" : "none"}, onClick : function() {
			_gthis.submitValue = "ResetPassword";
			return true;
		}};
		return React.createElement(tmp,{ name : "form", onSubmit : $bind(this,this.handleSubmit), className : "login"},tmp5,tmp6,tmp1,React.createElement(tmp2,tmp3,React.createElement(react_ReactType.fromString("input"),{ type : "submit", value : "Passwort vergessen?"})));
	}
	,render: function() {
		var style = { maxWidth : "32rem"};
		if(this.state.waiting) {
			var tmp = react_ReactType.fromString("section");
			var tmp1 = react_ReactType.fromString("div");
			return React.createElement(tmp,{ className : "hero is-alt is-fullheight"},React.createElement(tmp1,{ className : "hero-body"},React.createElement(react_ReactType.fromString("div"),{ className : "loader", style : { width : "7rem", height : "7rem", margin : "auto", borderWidth : "0.58rem"}})));
		}
		var tmp = react_ReactType.fromString("section");
		var tmp1 = react_ReactType.fromString("div");
		var tmp2 = react_ReactType.fromString("div");
		var tmp3 = react_ReactType.fromString("div");
		var tmp4 = React.createElement(react_ReactType.fromString("img"),{ src : "img/schutzengelwerk-logo.png", style : { width : "100%"}});
		var tmp5 = React.createElement(tmp3,{ className : "logo"},tmp4,React.createElement(react_ReactType.fromString("h2"),{ className : "overlaySubTitle"},"crm 2.0"));
		var tmp3 = react_ReactType.fromString("div");
		var tmp4 = this.renderForm();
		return React.createElement(tmp,{ className : "hero is-alt is-fullheight"},React.createElement(tmp1,{ className : "formContainer"},React.createElement(tmp2,{ className : "formBox is-rounded", style : style},tmp5,React.createElement(tmp3,{ className : "form2"},tmp4))));
	}
	,errorStyle: function(name) {
		haxe_Log.trace(name,{ fileName : "src/view/LoginForm.hx", lineNumber : 388, className : "view.LoginForm", methodName : "errorStyle"});
		var eStyle;
		switch(name) {
		case "new_pass_confirm":
			var res = this.props.userState.new_pass != this.props.userState.new_pass_confirm ? "error " : "";
			eStyle = res;
			break;
		case "password":
			var res = this.props.userState.lastError != null && this.props.userState.lastError.indexOf("password") > -1 ? "error " : "";
			haxe_Log.trace(res,{ fileName : "src/view/LoginForm.hx", lineNumber : 393, className : "view.LoginForm", methodName : "errorStyle"});
			eStyle = res;
			break;
		case "user_name":
			var res = this.props.userState.lastError != null && this.props.userState.lastError.indexOf("user_name") > -1 ? "error " : "";
			eStyle = res;
			break;
		default:
			eStyle = "";
		}
		return eStyle;
	}
	,__class__: view_LoginForm
});
var view_NavTabs = function(props,context) {
	React_Component.call(this,props);
};
$hxClasses["view.NavTabs"] = view_NavTabs;
view_NavTabs.__name__ = "view.NavTabs";
view_NavTabs.__super__ = React_Component;
view_NavTabs.prototype = $extend(React_Component.prototype,{
	logOut: function() {
		App.store.dispatch(redux_Action.map(action_async_UserAccess.logOut()));
	}
	,render: function() {
		return React.createElement(react_ReactType.fromComp(bulma_$components_Tabs),{ className : "is-centered"},this.buildNav());
	}
	,buildNav: function() {
		var userState = App.store.getState().userState;
		if(userState.waiting || userState.dbUser.id == 0 || userState.dbUser.jwt == null || userState.dbUser.jwt == "") {
			return null;
		} else {
			var tmp = react_ReactType.fromComp(React_Fragment);
			var tmp1 = React.createElement(react_ReactType.fromComp(view_shared_TabLink),Object.assign({ },this.props,{ to : "/DashBoard"}),"DashBoard");
			var tmp2 = React.createElement(react_ReactType.fromComp(view_shared_TabLink),Object.assign({ },this.props,{ to : "/Data"}),"Daten");
			var tmp3 = React.createElement(react_ReactType.fromComp(view_shared_TabLink),Object.assign({ },this.props,{ to : "/Accounting"}),"Buchhaltung");
			var tmp4 = React.createElement(react_ReactType.fromComp(view_shared_TabLink),Object.assign({ },this.props,{ to : "/Reports"}),"Berichte");
			var tmp5 = React.createElement(react_ReactType.fromString("i"),{ className : "icon abs-right fa fa-sign-out", title : "Abmelden", onClick : $bind(this,this.logOut), style : { margin : ".8rem .5rem", fontSize : "1.7rem", cursor : "pointer", color : "#801111"}});
			return React.createElement(tmp,{ },tmp1,tmp2,tmp3,tmp4,tmp5);
		}
	}
	,__class__: view_NavTabs
});
var view_RedirectBox = function(props,context) {
	React_Component.call(this,props,context);
	haxe_Log.trace(props,{ fileName : "src/view/RedirectBox.hx", lineNumber : 17, className : "view.RedirectBox", methodName : "new"});
};
$hxClasses["view.RedirectBox"] = view_RedirectBox;
view_RedirectBox.__name__ = "view.RedirectBox";
view_RedirectBox.__super__ = React_Component;
view_RedirectBox.prototype = $extend(React_Component.prototype,{
	render: function() {
		haxe_Log.trace(this.props.to,{ fileName : "src/view/RedirectBox.hx", lineNumber : 23, className : "view.RedirectBox", methodName : "render"});
		return React.createElement(react_ReactType.fromComp(react_router_Redirect),{ to : this.props.to});
	}
	,__class__: view_RedirectBox
});
var view_Reports = function(props,context) {
	this.mounted = false;
	haxe_Log.trace(context,{ fileName : "src/view/Reports.hx", lineNumber : 31, className : "view.Reports", methodName : "new"});
	React_Component.call(this,props);
	if(props.match.url == "/Reports" && props.match.isExact) {
		haxe_Log.trace("pushing2: /Reports/History",{ fileName : "src/view/Reports.hx", lineNumber : 37, className : "view.Reports", methodName : "new"});
		props.history.push("/Reports/History/Charts/get");
	}
};
$hxClasses["view.Reports"] = view_Reports;
view_Reports.__name__ = "view.Reports";
view_Reports.mapStateToProps = function() {
	return function(aState) {
		haxe_Log.trace(Reflect.fields(aState),{ fileName : "src/view/Reports.hx", lineNumber : 61, className : "view.Reports", methodName : "mapStateToProps"});
		return { appConfig : aState.config, userState : aState.userState};
	};
};
view_Reports.__super__ = React_Component;
view_Reports.prototype = $extend(React_Component.prototype,{
	mounted: null
	,componentDidMount: function() {
		this.mounted = true;
		haxe_Log.trace("Ok",{ fileName : "src/view/Reports.hx", lineNumber : 46, className : "view.Reports", methodName : "componentDidMount"});
	}
	,componentDidCatch: function(error,info) {
		haxe_Log.trace(error,{ fileName : "src/view/Reports.hx", lineNumber : 54, className : "view.Reports", methodName : "componentDidCatch"});
	}
	,render: function() {
		var tmp = react_ReactType.fromComp(React_Fragment);
		var tmp1 = react_ReactType.fromString("div");
		var tmp2 = react_ReactType.fromComp(bulma_$components_Tabs);
		var tmp3 = React.createElement(react_ReactType.fromComp(view_shared_TabLink),Object.assign({ },this.props,{ to : "/Reports/History"}),"Entwicklung");
		var tmp4 = React.createElement(react_ReactType.fromComp(view_shared_TabLink),Object.assign({ },this.props,{ to : "/Reports/Preview"}),"Vorschau");
		var tmp5 = React.createElement(tmp1,{ className : "tabNav2"},React.createElement(tmp2,{ className : "is-boxed"},tmp3,tmp4));
		var tmp1 = react_ReactType.fromString("div");
		var tmp2 = react_ReactType.fromComp(react_router_Switch);
		var tmp3 = React.createElement(react_ReactType.fromComp(react_router_Route),Object.assign({ },this.props,{ path : "/Reports/History/:section?/:action?/", component : react_ReactType.fromComp(view_stats_History)}));
		var tmp4 = React.createElement(react_ReactType.fromComp(react_router_Route),Object.assign({ },this.props,{ path : "/Reports/Preview/:section?/:action?/:id?", component : react_ReactType.fromComp(view_stats_Preview)}));
		var tmp6 = React.createElement(tmp1,{ className : "tabContent2"},React.createElement(tmp2,{ },tmp3,tmp4));
		var tmp1 = React.createElement(view_StatusBar._renderWrapper,this.props);
		return React.createElement(tmp,{ },tmp5,tmp6,tmp1);
	}
	,__class__: view_Reports
});
var view_StatusBar = function(props,context) {
	this.mounted = false;
	this.state = react_ReactUtil.copy(props,{ date : new Date()});
	React_Component.call(this,props);
	haxe_Log.trace(Reflect.fields(this.state).join("|"),{ fileName : "src/view/StatusBar.hx", lineNumber : 66, className : "view.StatusBar", methodName : "new"});
};
$hxClasses["view.StatusBar"] = view_StatusBar;
view_StatusBar.__name__ = "view.StatusBar";
view_StatusBar.mapStateToProps = function(astate) {
	return { className : astate.status.className == null ? "" : astate.status.className, userState : astate.userState, path : astate.status.path, text : astate.status.text};
};
view_StatusBar.__super__ = React_Component;
view_StatusBar.prototype = $extend(React_Component.prototype,{
	mounted: null
	,itimer: null
	,timer: null
	,componentDidMount: function() {
		var _gthis = this;
		this.mounted = true;
		var d = new Date();
		var s = d.getSeconds();
		this.itimer = haxe_Timer.delay(function() {
			_gthis.state.date = new Date();
			_gthis.timer = new haxe_Timer(60000);
			_gthis.timer.run = function() {
				_gthis.setState({ date : new Date()});
			};
		},(60 - d.getSeconds()) * 1000);
	}
	,componentWillUnmount: function() {
		this.mounted = false;
		if(this.itimer != null) {
			this.itimer.stop();
		}
		if(this.timer != null) {
			this.timer.stop();
		}
	}
	,render: function() {
		var userIcon = "fa fa-user-o";
		var display_name = "Gast";
		var display_text = this.props.text;
		if(typeof(this.props.text) != "string") {
			haxe_Log.trace(Reflect.fields(this.props),{ fileName : "src/view/StatusBar.hx", lineNumber : 115, className : "view.StatusBar", methodName : "render"});
			if(this.props.text == null) {
				haxe_Log.trace(this.props,{ fileName : "src/view/StatusBar.hx", lineNumber : 117, className : "view.StatusBar", methodName : "render"});
			}
			display_text = "";
		}
		if(this.props.userState.dbUser != null) {
			display_name = this.props.userState.dbUser.first_name != null && this.props.userState.dbUser.first_name != "" ? [this.props.userState.dbUser.first_name,this.props.userState.dbUser.last_name].join(" ") : "";
			userIcon = "fa fa-user";
		}
		var tmp = react_ReactType.fromComp(bulma_$components_Footer);
		var tmp1 = react_ReactType.fromString("div");
		var tmp2 = React.createElement(react_ReactType.fromString("span"),{ className : "column"},this.props.path);
		var tmp3 = "main column " + this.props.className;
		var tmp4 = React.createElement(react_ReactType.fromString("span"),{ className : tmp3},display_text);
		var tmp3 = React.createElement(react_ReactType.fromString("span"),{ className : "column flex-end"},React.createElement(react_ReactType.fromString("i"),{ className : userIcon})," ",display_name);
		var tmp5 = React.createElement(tmp1,{ className : "statusbar"},tmp2,tmp4,tmp3,React.createElement(view_shared_DateTime._renderWrapper,{ }));
		return React.createElement(tmp,{ },tmp5);
	}
	,__class__: view_StatusBar
});
var view_UiView = function(props) {
	haxe_Log.trace(Reflect.fields(props),{ fileName : "src/view/UiView.hx", lineNumber : 70, className : "view.UiView", methodName : "new"});
	React_Component.call(this,props);
	this.state = { hasError : false};
	this.browserHistory = App.store.getState().locationStore.history;
	if(props.userState.dbUser == null) {
		this.browserHistory.replace("/");
	}
	this.mounted = false;
	App.modalBox = React.createRef();
};
$hxClasses["view.UiView"] = view_UiView;
view_UiView.__name__ = "view.UiView";
view_UiView.mapStateToProps = function(aState) {
	return { userState : aState.userState};
};
view_UiView.__super__ = React_Component;
view_UiView.prototype = $extend(React_Component.prototype,{
	browserHistory: null
	,dispatchInitial: null
	,mounted: null
	,componentDidCatch: function(error,info) {
		if(this.mounted) {
			this.setState({ hasError : true});
		}
		haxe_Log.trace(error,{ fileName : "src/view/UiView.hx", lineNumber : 91, className : "view.UiView", methodName : "componentDidCatch"});
	}
	,componentDidMount: function() {
		this.mounted = true;
	}
	,render: function() {
		if(this.state.hasError) {
			return React.createElement(react_ReactType.fromString("h1"),{ },"Something went wrong.");
		}
		if(this.props.userState.waiting) {
			haxe_Log.trace(this.props.userState,{ fileName : "src/view/UiView.hx", lineNumber : 108, className : "view.UiView", methodName : "render"});
			var tmp = react_ReactType.fromString("section");
			var tmp1 = react_ReactType.fromString("div");
			return React.createElement(tmp,{ className : "hero is-alt is-fullheight"},React.createElement(tmp1,{ className : "hero-body"},React.createElement(react_ReactType.fromString("div"),{ className : "loader", style : { width : "7rem", height : "7rem", margin : "auto", borderWidth : "0.58rem"}})));
		}
		if(this.props.userState.dbUser == null || this.props.userState.dbUser.jwt == null || this.props.userState.dbUser.jwt == "" || !this.props.userState.dbUser.online || this.props.userState.dbUser.change_pass_required) {
			if(App.store.getState().userState.dbUser == null) {
				haxe_Log.trace(App.store.getState().userState,{ fileName : "src/view/UiView.hx", lineNumber : 126, className : "view.UiView", methodName : "render"});
			}
			return React.createElement(view_LoginForm._renderWrapper,{ userState : this.props.userState});
		} else {
			var tmp = react_ReactType.fromComp(react_router_Router);
			var tmp1 = { history : this.browserHistory};
			var tmp2 = react_ReactType.fromComp(React_Fragment);
			var tmp3 = React.createElement(react_ReactType.fromString("div"),{ ref : App.modalBox, className : "modal"});
			var tmp4 = react_ReactType.fromString("div");
			var tmp5 = React.createElement(react_ReactType.fromComp(react_router_Route),Object.assign({ },this.props,{ path : "/DashBoard", component : react_ReactType.fromComp(view_NavTabs)}));
			var tmp6 = React.createElement(react_ReactType.fromComp(react_router_Route),Object.assign({ },this.props,{ path : "/Data", component : react_ReactType.fromComp(view_NavTabs)}));
			var tmp7 = React.createElement(react_ReactType.fromComp(react_router_Route),Object.assign({ },this.props,{ path : "/Accounting", component : react_ReactType.fromComp(view_NavTabs)}));
			var tmp8 = react_ReactType.fromComp(react_router_Route);
			var tmp9 = Object.assign({ },this.props,{ path : "/Reports", component : react_ReactType.fromComp(view_NavTabs)});
			var tmp10 = React.createElement(tmp4,{ className : "topNav"},tmp5,tmp6,tmp7,React.createElement(tmp8,tmp9));
			var tmp4 = react_ReactType.fromString("div");
			var tmp5 = React.createElement(react_ReactType.fromComp(react_router_Route),{ path : "/", render : $bind(this,this.renderRedirect), exact : true});
			var tmp6 = React.createElement(react_ReactType.fromComp(react_router_Route),{ path : "/DashBoard*", component : react_ReactType.fromComp(view_DashBoard)});
			var tmp7 = React.createElement(react_ReactType.fromComp(react_router_Route),{ path : "/Data", component : react_ReactType.fromComp(view_Data)});
			var tmp8 = React.createElement(react_ReactType.fromComp(react_router_Route),{ path : "/Accounting", component : react_ReactType.fromComp(view_Accounting)});
			var tmp9 = react_ReactType.fromComp(react_router_Route);
			var tmp11 = React.createElement(tmp4,{ className : "tabComponent", id : "development"},tmp5,tmp6,tmp7,tmp8,React.createElement(tmp9,{ path : "/Reports", component : react_ReactType.fromComp(view_Reports)}));
			return React.createElement(tmp,tmp1,React.createElement(tmp2,{ },tmp3,tmp10,tmp11));
		}
	}
	,renderRedirect: function(p) {
		haxe_Log.trace(App.store.getState().locationStore.redirectAfterLogin,{ fileName : "src/view/UiView.hx", lineNumber : 195, className : "view.UiView", methodName : "renderRedirect"});
		haxe_Log.trace(p,{ fileName : "src/view/UiView.hx", lineNumber : 197, className : "view.UiView", methodName : "renderRedirect"});
		if(p != null && p.to == null) {
			p = null;
		}
		return React.createElement(react_ReactType.fromComp(view_RedirectBox),{ to : p == null ? App.store.getState().locationStore.redirectAfterLogin : p.to});
	}
	,__class__: view_UiView
});
var view_accounting_Accounts = function(props) {
	React_Component.call(this,props);
	haxe_Log.trace(Reflect.fields(props),{ fileName : "src/view/accounting/Accounts.hx", lineNumber : 41, className : "view.accounting.Accounts", methodName : "new"});
	haxe_Log.trace(props.match.params.section,{ fileName : "src/view/accounting/Accounts.hx", lineNumber : 42, className : "view.accounting.Accounts", methodName : "new"});
	this.state = { clean : true, hasError : false, mounted : false, loading : true, sideMenu : view_shared_io_FormApi.initSideMenuMulti(this,[{ dataClassPath : "data.Contacts", label : "Konten", section : "List", items : view_data_accounts_List.menuItems},{ dataClassPath : "contact.Deals", label : "Aufträge", section : "Edit", items : view_data_accounts_Edit.menuItems}],{ section : props.match.params.section == null ? "DBSync" : props.match.params.section, sameWidth : true})};
	haxe_Log.trace(Reflect.fields(props),{ fileName : "src/view/accounting/Accounts.hx", lineNumber : 69, className : "view.accounting.Accounts", methodName : "new"});
};
$hxClasses["view.accounting.Accounts"] = view_accounting_Accounts;
view_accounting_Accounts.__name__ = "view.accounting.Accounts";
view_accounting_Accounts.__super__ = React_Component;
view_accounting_Accounts.prototype = $extend(React_Component.prototype,{
	componentDidCatch: function(error,info) {
		if(this.state.mounted) {
			this.setState({ hasError : true});
		}
		haxe_Log.trace(error,{ fileName : "src/view/accounting/Accounts.hx", lineNumber : 91, className : "view.accounting.Accounts", methodName : "componentDidCatch"});
	}
	,componentDidMount: function() {
		this.setState({ mounted : true});
		if(this.props.match.params.section == null) {
			var basePath = this.props.match.url;
			this.props.history.push("" + basePath + "/List");
			haxe_Log.trace(this.props.history.location.pathname,{ fileName : "src/view/accounting/Accounts.hx", lineNumber : 102, className : "view.accounting.Accounts", methodName : "componentDidMount"});
			haxe_Log.trace("setting section to:List",{ fileName : "src/view/accounting/Accounts.hx", lineNumber : 103, className : "view.accounting.Accounts", methodName : "componentDidMount"});
		}
		haxe_Log.trace("" + Std.string(this.props.match),{ fileName : "src/view/accounting/Accounts.hx", lineNumber : 105, className : "view.accounting.Accounts", methodName : "componentDidMount"});
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.section,{ fileName : "src/view/accounting/Accounts.hx", lineNumber : 128, className : "view.accounting.Accounts", methodName : "render"});
		switch(this.props.match.params.section) {
		case "Edit":
			return React.createElement(react_ReactType.fromComp(view_data_accounts_Edit),Object.assign({ },this.props,{ fullWidth : true, sideMenu : this.state.sideMenu}));
		case "List":
			return React.createElement(view_data_accounts_List._renderWrapper,Object.assign({ },this.props,{ limit : 100, fullWidth : true, sideMenu : this.state.sideMenu}));
		default:
			return null;
		}
	}
	,__class__: view_accounting_Accounts
});
var view_accounting_DirectDebits = function(props) {
	React_Component.call(this,props);
	if(props.match.params.section == null) {
		var baseUrl = props.match.path.split(":section")[0];
		haxe_Log.trace("pushing2: " + baseUrl + "Edit",{ fileName : "src/view/accounting/DirectDebits.hx", lineNumber : 54, className : "view.accounting.DirectDebits", methodName : "new"});
		props.history.push("" + baseUrl + "Edit");
	}
	this.state = App.initEState({ loading : false, sideMenu : view_shared_io_FormApi.initSideMenuMulti(this,[{ dataClassPath : "data.DirectDebits", label : "Gesamtliste", section : "List", items : view_accounting_directdebit_List.menuItems},{ dataClassPath : "data.DirectDebits", hasFindForm : false, label : "Bearbeiten", section : "Edit", items : view_accounting_directdebit_Edit.menuItems}],{ section : props.match.params.section == null ? "Edit" : props.match.params.section, sameWidth : true})},this);
	haxe_Log.trace(Reflect.fields(props),{ fileName : "src/view/accounting/DirectDebits.hx", lineNumber : 81, className : "view.accounting.DirectDebits", methodName : "new"});
};
$hxClasses["view.accounting.DirectDebits"] = view_accounting_DirectDebits;
view_accounting_DirectDebits.__name__ = "view.accounting.DirectDebits";
view_accounting_DirectDebits.mapStateToProps = function(aState) {
	return function(aState) {
		var uState = aState.userState;
		return { userState : uState};
	};
};
view_accounting_DirectDebits.__super__ = React_Component;
view_accounting_DirectDebits.prototype = $extend(React_Component.prototype,{
	_trace: null
	,dataDisplay: null
	,formApi: null
	,fieldNames: null
	,dbData: null
	,dbMetaData: null
	,componentDidMount: function() {
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/accounting/DirectDebits.hx", lineNumber : 97, className : "view.accounting.DirectDebits", methodName : "componentDidMount"});
		this.state.formApi.doAction();
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.section,{ fileName : "src/view/accounting/DirectDebits.hx", lineNumber : 103, className : "view.accounting.DirectDebits", methodName : "render"});
		switch(this.props.match.params.section) {
		case "Edit":
			return React.createElement(view_accounting_directdebit_Edit._renderWrapper,Object.assign({ },this.props,{ fullWidth : true, parentComponent : this}));
		case "List":
			return React.createElement(react_ReactType.fromComp(view_accounting_directdebit_List),Object.assign({ },this.props,{ limit : 100, fullWidth : true, sideMenu : this.state.sideMenu}));
		default:
			return null;
		}
	}
	,__class__: view_accounting_DirectDebits
});
var view_accounting_ReturnDebits = function(props) {
	React_Component.call(this,props);
	this._trace = true;
	this.state = App.initEState({ dbTable : [], loading : false, importData : new haxe_ds_IntMap(), selectedRows : [], values : new haxe_ds_StringMap()},this);
	if(props.match.params.section == null) {
		var baseUrl = props.match.path.split(":section")[0];
		if(this._trace) {
			haxe_Log.trace("reme2" + baseUrl + "Files/",{ fileName : "src/view/accounting/ReturnDebits.hx", lineNumber : 89, className : "view.accounting.ReturnDebits", methodName : "new"});
		}
		props.history.push("" + baseUrl + "Files/");
	}
};
$hxClasses["view.accounting.ReturnDebits"] = view_accounting_ReturnDebits;
view_accounting_ReturnDebits.__name__ = "view.accounting.ReturnDebits";
view_accounting_ReturnDebits.mapStateToProps = function(aState) {
	return { userState : aState.userState};
};
view_accounting_ReturnDebits.mapDispatchToProps = function(dispatch) {
	return { };
};
view_accounting_ReturnDebits.__super__ = React_Component;
view_accounting_ReturnDebits.prototype = $extend(React_Component.prototype,{
	_trace: null
	,dataAccess: null
	,dataDisplay: null
	,formApi: null
	,formBuilder: null
	,formFields: null
	,fieldNames: null
	,baseForm: null
	,contact: null
	,dbData: null
	,dbMetaData: null
	,componentDidCatch: function(error,info) {
		try {
			this.setState({ hasError : true});
		} catch( _g ) {
			var ex = haxe_Exception.caught(_g).unwrap();
			if(this._trace) {
				haxe_Log.trace(ex,{ fileName : "src/view/accounting/ReturnDebits.hx", lineNumber : 125, className : "view.accounting.ReturnDebits", methodName : "componentDidCatch"});
			}
		}
		if(this._trace) {
			haxe_Log.trace(error,{ fileName : "src/view/accounting/ReturnDebits.hx", lineNumber : 127, className : "view.accounting.ReturnDebits", methodName : "componentDidCatch"});
		}
		me_cunity_debug_Out.dumpStack(haxe_CallStack.callStack(),{ fileName : "src/view/accounting/ReturnDebits.hx", lineNumber : 128, className : "view.accounting.ReturnDebits", methodName : "componentDidCatch"});
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.action + ":" + this.props.match.params.section,{ fileName : "src/view/accounting/ReturnDebits.hx", lineNumber : 133, className : "view.accounting.ReturnDebits", methodName : "render"});
		if(this.state.loading) {
			return this.state.formApi.renderWait();
		}
		switch(this.props.match.params.section) {
		case "Files":
			return React.createElement(view_accounting_returndebit_Files._renderWrapper,Object.assign({ },this.props,{ parentComponent : this, formApi : this.state.formApi, fullWidth : true}));
		case "List":
			haxe_Log.trace("render List",{ fileName : "src/view/accounting/ReturnDebits.hx", lineNumber : 142, className : "view.accounting.ReturnDebits", methodName : "render"});
			return React.createElement(view_accounting_returndebit_List._renderWrapper,Object.assign({ },this.props,{ limit : 25, parentComponent : this, formApi : this.state.formApi, fullWidth : true}));
		default:
			return null;
		}
	}
	,__class__: view_accounting_ReturnDebits
});
var view_accounting_directdebit_Edit = function(props) {
	this.mounted = false;
	React_Component.call(this,props);
	haxe_Log.trace(props.match.params,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 97, className : "view.accounting.directdebit.Edit", methodName : "new"});
	haxe_Log.trace(Reflect.fields(props),{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 99, className : "view.accounting.directdebit.Edit", methodName : "new"});
	if(props.match.params.id == null && new EReg("open(/)*$","").match(props.match.params.action)) {
		haxe_Log.trace("nothing selected - redirect",{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 104, className : "view.accounting.directdebit.Edit", methodName : "new"});
		var baseUrl = props.match.path.split(":section")[0];
		props.history.push("" + baseUrl + "List/get");
		return;
	}
	this.dataAccess = model_accounting_DebitModel.dataAccess;
	this.fieldNames = view_shared_io_BaseForm.initFieldNames(new haxe_ds__$StringMap_StringMapKeyIterator(this.dataAccess.h["open"].view.h));
	this.state = App.initSectionState({ actualState : null, initialData : null, loading : false, mHandlers : view_accounting_directdebit_Edit.menuItems, selectedRows : [], sideMenu : props.parentComponent.state.sideMenu, values : new haxe_ds_StringMap()},this);
	haxe_Log.trace(this.state.initialData,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 146, className : "view.accounting.directdebit.Edit", methodName : "new"});
	haxe_Log.trace(this.state.loading,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 150, className : "view.accounting.directdebit.Edit", methodName : "new"});
};
$hxClasses["view.accounting.directdebit.Edit"] = view_accounting_directdebit_Edit;
view_accounting_directdebit_Edit.__name__ = "view.accounting.directdebit.Edit";
view_accounting_directdebit_Edit.mapDispatchToProps = function(dispatch) {
	haxe_Log.trace("here we should be ready to load",{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 154, className : "view.accounting.directdebit.Edit", methodName : "mapDispatchToProps"});
	return { load : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.read(param)));
	}};
};
view_accounting_directdebit_Edit.mapStateToProps = function(aState) {
	return { userState : aState.userState};
};
view_accounting_directdebit_Edit.__super__ = React_Component;
view_accounting_directdebit_Edit.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,formApi: null
	,formBuilder: null
	,formFields: null
	,formRef: null
	,fieldNames: null
	,baseForm: null
	,deal: null
	,dbData: null
	,dbMetaData: null
	,mounted: null
	,componentDidMount: function() {
		this.dataAccess = model_accounting_DebitModel.dataAccess;
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 170, className : "view.accounting.directdebit.Edit", methodName : "componentDidMount"});
	}
	,create: function(fd) {
		haxe_Log.trace(fd,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 175, className : "view.accounting.directdebit.Edit", methodName : "create"});
		if(fd == null || fd.get("booking_day") == null) {
			return;
		}
		var p = this.props;
		var p1 = "Buchungsdatei für den " + fd.get("booking_day") + " wurde geladen";
		var p2 = "Buchungsdatei für den " + fd.get("booking_day") + " konnte nicht geladen werden";
		var p3 = p.load({ classPath : "data.Booking", action : "createDirectDebitsCSV", filter : { mandator : 1}, resolveMessage : { success : p1, failure : p2}, viciBoxDB : false, dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p3.then(function(data) {
			haxe_Log.trace(data,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 195, className : "view.accounting.directdebit.Edit", methodName : "create"});
		},function(data) {
			haxe_Log.trace(data,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 217, className : "view.accounting.directdebit.Edit", methodName : "create"});
		});
	}
	,create1: function(fd) {
		var _gthis = this;
		haxe_Log.trace(fd,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 223, className : "view.accounting.directdebit.Edit", methodName : "create1"});
		if(fd == null) {
			return;
		}
		haxe_Log.trace(fd.entries().next(),{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 226, className : "view.accounting.directdebit.Edit", methodName : "create1"});
		var iPromise = new Promise(function(resolve,reject) {
			fd.append("devIP",App.devIP);
			fd.append("action","createDirectDebitsCSV");
			fd.append("classPath","data.Booking");
			var xhr = new XMLHttpRequest();
			xhr.open("POST","" + Std.string(App.config.api),true);
			xhr.onerror = function(e) {
				haxe_Log.trace(e,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 235, className : "view.accounting.directdebit.Edit", methodName : "create1"});
				haxe_Log.trace(e.type,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 236, className : "view.accounting.directdebit.Edit", methodName : "create1"});
				reject({ error : e});
			};
			xhr.withCredentials = true;
			xhr.onload = function(e) {
				haxe_Log.trace(xhr.status,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 241, className : "view.accounting.directdebit.Edit", methodName : "create1"});
				if(xhr.status != 200) {
					haxe_Log.trace(xhr.statusText,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 243, className : "view.accounting.directdebit.Edit", methodName : "create1"});
					reject({ error : xhr.statusText});
				}
				haxe_Log.trace(xhr.response.length,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 246, className : "view.accounting.directdebit.Edit", methodName : "create1"});
				resolve(xhr.response);
			};
			xhr.send(fd);
			_gthis.setState({ action : "createDirectDebitsCSV", loading : true});
		});
		iPromise.then(function(r) {
			haxe_Log.trace(r,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 255, className : "view.accounting.directdebit.Edit", methodName : "create1"});
		},function(r) {
			haxe_Log.trace(r,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 268, className : "view.accounting.directdebit.Edit", methodName : "create1"});
			App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : r.error == null ? "" : r.error}))));
		});
	}
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 279, className : "view.accounting.directdebit.Edit", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
	}
	,get: function(ev) {
		var _gthis = this;
		haxe_Log.trace("hi " + Std.string(ev),{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 285, className : "view.accounting.directdebit.Edit", methodName : "get"});
		var offset = 0;
		if(ev != null && ev.page != null) {
			offset = this.props.limit * ev.page | 0;
		}
		haxe_Log.trace(this.props.userState,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 291, className : "view.accounting.directdebit.Edit", methodName : "get"});
		var p = this.props.load({ classPath : "data.DirectDebits", action : "get", filter : this.props.match.params.id != null ? { id : this.props.match.params.id, mandator : "1"} : { mandator : "1", processed : "false"}, limit : this.props.limit, offset : offset > 0 ? offset : 0, table : "debit_return_statements", resolveMessage : { success : "", failure : ""}, dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 309, className : "view.accounting.directdebit.Edit", methodName : "get"});
			_gthis.setState({ loading : false, dbTable : data.dataRows});
		});
	}
	,edit: function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 316, className : "view.accounting.directdebit.Edit", methodName : "edit"});
	}
	,update: function() {
		if(this.state.actualState != null) {
			haxe_Log.trace(this.state.actualState.fieldsModified.length,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 323, className : "view.accounting.directdebit.Edit", methodName : "update"});
		}
		if(this.state.actualState == null || this.state.actualState.fieldsModified.length == 0) {
			return;
		}
		var data2save = this.state.actualState.allModified();
		var doc = window.document;
		var aState = react_ReactUtil.copy(this.state.actualState);
		var dbQ = { classPath : "data.Deals", action : "update", data : data2save, filter : { id : this.state.actualState.id, mandator : 1}, resolveMessage : { success : "Spende " + this.state.actualState.id + " wurde aktualisiert", failure : "Spende " + this.state.actualState.id + " konnte nicht aktualisiert werden"}, table : "deals", dbUser : this.props.userState.dbUser, devIP : App.devIP};
		haxe_Log.trace("" + this.props.match.params.action + ": " + Std.string(this.state.initialData.id) + " :: creation_date: " + Std.string(aState.creation_date) + " " + Std.string(this.state.initialData.creation_date),{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 353, className : "view.accounting.directdebit.Edit", methodName : "update"});
		if(this.state.actualState != null) {
			haxe_Log.trace(Std.string(this.state.actualState.modified()) + (":" + Std.string(this.state.actualState.fieldsModified)),{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 356, className : "view.accounting.directdebit.Edit", methodName : "update"});
		}
		haxe_Log.trace(this.state.actualState.id,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 359, className : "view.accounting.directdebit.Edit", methodName : "update"});
		if(!this.state.actualState.modified()) {
			App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : "Spende wurde nicht geändert"}))));
			haxe_Log.trace("nothing modified",{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 368, className : "view.accounting.directdebit.Edit", methodName : "update"});
			return;
		}
		haxe_Log.trace(this.state.actualState.allModified(),{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 371, className : "view.accounting.directdebit.Edit", methodName : "update"});
		App.store.dispatch(redux_Action.map(action_async_CRUD.update(dbQ)));
	}
	,loadDealData: function(id) {
		var _gthis = this;
		haxe_Log.trace("loading:" + id,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 400, className : "view.accounting.directdebit.Edit", methodName : "loadDealData"});
		if(id == null) {
			return;
		}
		var p = this.props.load({ classPath : "data.Deals", action : "get", filter : { id : id, mandator : 1}, resolveMessage : { success : "Aktion " + id + " wurde geladen", failure : "Aktion " + id + " konnte nicht geladen werden"}, table : "deals", dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 418, className : "view.accounting.directdebit.Edit", methodName : "loadDealData"});
			if(data.dataRows.length == 1) {
				var data1 = data.dataRows[0];
				haxe_Log.trace(data1 == null ? "null" : haxe_ds_StringMap.stringify(data1.h),{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 422, className : "view.accounting.directdebit.Edit", methodName : "loadDealData"});
				var deal = new model_Deal(data1);
				haxe_Log.trace(deal.id,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 425, className : "view.accounting.directdebit.Edit", methodName : "loadDealData"});
				_gthis.setState({ loading : false, actualState : deal, initialData : react_ReactUtil.copy(deal)});
				haxe_Log.trace(_gthis.state.actualState.id + ":" + _gthis.state.actualState.fieldsInitalized.join(","),{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 427, className : "view.accounting.directdebit.Edit", methodName : "loadDealData"});
				haxe_Log.trace(_gthis.props.location.pathname + ":" + _gthis.state.actualState.amount,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 429, className : "view.accounting.directdebit.Edit", methodName : "loadDealData"});
				var _gthis1 = _gthis.props.history;
				var tmp = StringTools.replace(_gthis.props.location.pathname,"open","update");
				_gthis1.replace(tmp);
			}
		});
	}
	,renderResults: function() {
		haxe_Log.trace(this.props.match.params.section + ":" + Std.string(this.state.dbTable != null),{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 437, className : "view.accounting.directdebit.Edit", methodName : "renderResults"});
		haxe_Log.trace(Std.string(this.state.loading) + ":" + this.props.match.params.action,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 439, className : "view.accounting.directdebit.Edit", methodName : "renderResults"});
		if(this.state.loading) {
			return this.state.formApi.renderWait();
		}
		haxe_Log.trace("###########loading:" + Std.string(this.state.loading),{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 442, className : "view.accounting.directdebit.Edit", methodName : "renderResults"});
		switch(this.props.match.params.action) {
		case "delete":
			return null;
		case "open":case "update":
			haxe_Log.trace(this.state.actualState,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 452, className : "view.accounting.directdebit.Edit", methodName : "renderResults"});
			if(this.state.actualState == null) {
				return this.state.formApi.renderWait();
			} else {
				var tmp = this.state.formBuilder;
				var tmp1 = this.state.mHandlers;
				var _g = new haxe_ds_StringMap();
				var h = this.dataAccess.h["open"].view.h;
				var k_h = h;
				var k_keys = Object.keys(h);
				var k_length = k_keys.length;
				var k_current = 0;
				while(k_current < k_length) {
					var k = k_keys[k_current++];
					_g.h[k] = this.dataAccess.h["open"].view.h[k];
				}
				return tmp.renderForm({ mHandlers : tmp1, fields : _g, model : "deal", title : "Bearbeite Aktion"},this.state.actualState);
			}
			break;
		default:
			return null;
		}
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.section,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 486, className : "view.accounting.directdebit.Edit", methodName : "render"});
		var tmp = this.state.formApi;
		var tmp1 = react_ReactType.fromString("form");
		var tmp2 = this.renderResults();
		return tmp.render(React.createElement(tmp1,{ className : "tabComponentForm"},tmp2));
	}
	,updateMenu: function(viewClassPath) {
		var sideMenu = this.state.sideMenu;
		haxe_Log.trace(sideMenu.section,{ fileName : "src/view/accounting/directdebit/Edit.hx", lineNumber : 497, className : "view.accounting.directdebit.Edit", methodName : "updateMenu"});
		var _g = 0;
		var _g1 = sideMenu.menuBlocks.h["Contact"].items;
		while(_g < _g1.length) {
			var mI = _g1[_g];
			++_g;
			var _g2 = mI.action;
			if(_g2 != null) {
				switch(_g2) {
				case "editTableFields":
					mI.disabled = this.state.selectedRows.length == 0;
					break;
				case "save":
					mI.disabled = this.state.clean;
					break;
				default:
				}
			}
		}
		return sideMenu;
	}
	,__class__: view_accounting_directdebit_Edit
});
var view_accounting_directdebit_List = function(props) {
	React_Component.call(this,props);
	view_accounting_directdebit_List._instance = this;
	this.dataDisplay = model_accounting_DebitModel.dataGridDisplay;
	haxe_Log.trace("..." + Std.string(Reflect.fields(props)),{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 86, className : "view.accounting.directdebit.List", methodName : "new"});
	this.state = App.initEState({ action : props.action == null ? props.match.params.action == null ? "get" : props.match.params.action : props.action, loading : true, sideMenu : props.sideMenu},this);
	if(this.state.action == null && props.match.params.action == null) {
		var baseUrl = props.match.path.split(":section")[0];
		haxe_Log.trace("redirecting to " + baseUrl + "List/get",{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 100, className : "view.accounting.directdebit.List", methodName : "new"});
		props.history.push("" + baseUrl + "List/get");
	}
	haxe_Log.trace(props.match.path,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 104, className : "view.accounting.directdebit.List", methodName : "new"});
};
$hxClasses["view.accounting.directdebit.List"] = view_accounting_directdebit_List;
view_accounting_directdebit_List.__name__ = "view.accounting.directdebit.List";
view_accounting_directdebit_List.mapStateToProps = function(aState) {
	return { userState : aState.userState};
};
view_accounting_directdebit_List.mapDispatchToProps = function(dispatch) {
	return { load : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.read(param)));
	}, storeData : function(id,action) {
		dispatch(redux_Action.map(action_async_LiveDataAccess.storeData(id,action)));
	}, select : function(id,data,me,selectType) {
		if(id == null) {
			id = -1;
		}
		haxe_Log.trace(data,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 123, className : "view.accounting.directdebit.List", methodName : "mapDispatchToProps"});
		haxe_Log.trace("select:" + id + " selectType:" + selectType,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 124, className : "view.accounting.directdebit.List", methodName : "mapDispatchToProps"});
		dispatch(redux_Action.map(action_async_LiveDataAccess.sSelect({ id : id, data : data, match : me.props.match, selectType : selectType})));
	}, update : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.update(param)));
	}};
};
view_accounting_directdebit_List.__super__ = React_Component;
view_accounting_directdebit_List.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,dataDisplay: null
	,formApi: null
	,formBuilder: null
	,formFields: null
	,fieldNames: null
	,baseForm: null
	,contact: null
	,dbData: null
	,dbMetaData: null
	,componentDidMount: function() {
		this.dataAccess = model_accounting_DebitModel.dataAccess;
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 135, className : "view.accounting.directdebit.List", methodName : "componentDidMount"});
		if(this.state.action == "get") {
			this.get();
		} else if(Reflect.isFunction(Reflect.field(this,this.state.action))) {
			Reflect.field(this,this.state.action).apply(this,[]);
		}
	}
	,get: function(filter) {
		var _gthis = this;
		var offset = 0;
		if(filter != null && filter.page != null) {
			haxe_Log.trace(filter,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 149, className : "view.accounting.directdebit.List", methodName : "get"});
			offset = this.props.limit * filter.page | 0;
			Reflect.deleteField(filter,"page");
		}
		filter = shared_Utils.extend(filter,this.props.match.params.id != null ? { mandat_id : shared_FindFields.iLike(this.props.match.params.id), mandator : this.props.userState.dbUser.mandator} : { mandator : this.props.userState.dbUser.mandator});
		haxe_Log.trace("hi " + Std.string(filter),{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 158, className : "view.accounting.directdebit.List", methodName : "get"});
		var p = App.store.dispatch(redux_Action.map(action_async_CRUD.read({ classPath : "data.DirectDebits", action : "get", filter : filter, table : "booking_requests", limit : this.props.limit, offset : offset > 0 ? offset : 0, resolveMessage : { success : "Bankeinzug wurden geladen", failure : "Bankeinzug konnte nicht geladen werden"}, dbUser : this.props.userState.dbUser, devIP : App.devIP})));
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 184, className : "view.accounting.directdebit.List", methodName : "get"});
			_gthis.setState({ loading : false, dbTable : data.dataRows, dataCount : Std.parseInt(data.dataInfo.h["count"]), pageCount : Math.ceil(Std.parseInt(data.dataInfo.h["count"]) / _gthis.props.limit)});
		});
	}
	,getHistory: function(filter) {
		var _gthis = this;
		var offset = 0;
		if(filter != null && filter.page != null) {
			haxe_Log.trace(filter,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 200, className : "view.accounting.directdebit.List", methodName : "getHistory"});
			offset = this.props.limit * filter.page | 0;
			Reflect.deleteField(filter,"page");
		}
		filter = shared_Utils.extend(filter,this.props.match.params.id != null ? { deal_id : this.props.match.params.id, mandator : this.props.userState.dbUser.mandator} : { mandator : this.props.userState.dbUser.mandator});
		haxe_Log.trace("hi " + Std.string(filter),{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 209, className : "view.accounting.directdebit.List", methodName : "getHistory"});
		haxe_Log.trace(this.props.match.params,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 211, className : "view.accounting.directdebit.List", methodName : "getHistory"});
		var dS_h = Object.create(null);
		var _g = new haxe_ds_StringMap();
		_g.h["alias"] = "bor";
		_g.h["fields"] = "termin,id,mandat_id deal_id,betrag amount,info";
		dS_h["booking_requests"] = _g;
		var _g = new haxe_ds_StringMap();
		_g.h["alias"] = "drs";
		_g.h["fields"] = "value_date termin,deal_id,kid id,amount,sepa_code info";
		dS_h["debit_return_statements"] = _g;
		var p = App.store;
		var _g = new haxe_ds_StringMap();
		var _g1 = new haxe_ds_StringMap();
		_g1.h["alias"] = "bor";
		_g1.h["fields"] = "termin,id,mandat_id deal_id,betrag amount,sequenz info,mandator";
		_g.h["booking_requests"] = _g1;
		var _g1 = new haxe_ds_StringMap();
		_g1.h["alias"] = "drs";
		_g1.h["fields"] = "value_date termin,kid id,deal_id,amount,sepa_code info,mandator";
		_g.h["debit_return_statements"] = _g1;
		var p1 = p.dispatch(redux_Action.map(action_async_CRUD.read({ classPath : "data.DirectDebits", action : "getHistory", dataSource : _g, filter : filter, limit : this.props.limit, offset : offset > 0 ? offset : 0, order : "termin| ASC", resolveMessage : { success : "Buchungen wurden geladen", failure : "Keine Buchungen", failureClass : ""}, dbUser : this.props.userState.dbUser, devIP : App.devIP})));
		p1.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 252, className : "view.accounting.directdebit.List", methodName : "getHistory"});
			if(data.dataRows.length > 0) {
				var tmp = data.dataRows[data.dataRows.length - 1];
				haxe_Log.trace(tmp == null ? "null" : haxe_ds_StringMap.stringify(tmp.h),{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 254, className : "view.accounting.directdebit.List", methodName : "getHistory"});
			}
			_gthis.setState({ loading : false, dbTable : data.dataRows, dataCount : Std.parseInt(data.dataInfo.h["count"]), pageCount : Math.ceil(Std.parseInt(data.dataInfo.h["count"]) / _gthis.props.limit)});
		},function(data) {
			haxe_Log.trace(data,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 263, className : "view.accounting.directdebit.List", methodName : "getHistory"});
			_gthis.setState({ loading : false});
		});
	}
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 272, className : "view.accounting.directdebit.List", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
		haxe_Log.trace(data,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 274, className : "view.accounting.directdebit.List", methodName : "delete"});
	}
	,processReturnDebitStatements: function(_) {
		haxe_Log.trace(this.state.dbTable,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 279, className : "view.accounting.directdebit.List", methodName : "processReturnDebitStatements"});
		var p = this.props.update({ classPath : "data.DebitReturnStatements", action : "insert", mandator : 1, data : haxe_Serializer.run(this.state.dbTable), table : "debit_return_statements", resolveMessage : { success : "Rücklastschriften wurden verarbeitet", failure : "Rücklastschriften konnten nicht verarbeitet werden"}, dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(haxe_Unserializer.run(data.dataInfo.h["data"]),{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 298, className : "view.accounting.directdebit.List", methodName : "processReturnDebitStatements"});
			haxe_Log.trace(shared_Utils.getAllByKey(haxe_Unserializer.run(data.dataInfo.h["data"]),"id"),{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 299, className : "view.accounting.directdebit.List", methodName : "processReturnDebitStatements"});
		});
	}
	,loadLocal: function() {
		var finput = window.document.getElementById("returnDebitFile");
		haxe_Log.trace(finput.files,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 308, className : "view.accounting.directdebit.List", methodName : "loadLocal"});
		haxe_Log.trace(Reflect.fields(finput),{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 309, className : "view.accounting.directdebit.List", methodName : "loadLocal"});
		console.log(finput.files);
		haxe_Log.trace(finput.value,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 311, className : "view.accounting.directdebit.List", methodName : "loadLocal"});
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.section,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 317, className : "view.accounting.directdebit.List", methodName : "render"});
		if(this.state.sideMenu.menuBlocks == null) {
			return this.renderResults();
		}
		var tmp = this.state.formApi;
		var tmp1 = react_ReactType.fromComp(React_Fragment);
		var tmp2 = react_ReactType.fromString("form");
		var tmp3 = this.renderResults();
		var tmp4 = React.createElement(tmp2,{ className : "tabComponentForm"},tmp3);
		return tmp.render(React.createElement(tmp1,{ },tmp4));
	}
	,renderResults: function() {
		haxe_Log.trace(this.props.match.params.action + ":" + Std.string(this.state.dbTable != null),{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 332, className : "view.accounting.directdebit.List", methodName : "renderResults"});
		if(this.state.loading) {
			return this.state.formApi.renderWait();
		}
		haxe_Log.trace("###########loading:" + Std.string(this.state.loading) + " state.action:" + this.state.action,{ fileName : "src/view/accounting/directdebit/List.hx", lineNumber : 335, className : "view.accounting.directdebit.List", methodName : "renderResults"});
		var _g = this.state.action;
		if(_g == null) {
			if(this.state.data == null) {
				return null;
			} else {
				var tmp = this.state.data.h["hint"];
				return React.createElement(react_ReactType.fromString("div"),{ className : "hint"},tmp);
			}
		} else {
			switch(_g) {
			case "get":
				if(this.state.dbTable.length == 0) {
					return null;
				} else {
					return React.createElement(view_grid_Grid._renderWrapper,Object.assign({ },this.props,{ id : "rDebitList", data : this.state.dbTable, dataState : this.dataDisplay.h["rDebitList"], parentComponent : this, className : "is-striped is-hoverable", fullWidth : true}));
				}
				break;
			case "getHistory":
				if(this.state.dbTable.length == 0) {
					return null;
				} else {
					return React.createElement(view_grid_Grid._renderWrapper,Object.assign({ },this.props,{ id : "rDebitList", data : this.state.dbTable, title : "Verlauf", scrollHeight : "15", dataState : this.dataDisplay.h["historyList"], parentComponent : this, className : "is-striped is-hoverable", fullWidth : true}));
				}
				break;
			default:
				if(this.state.data == null) {
					return null;
				} else {
					var tmp = this.state.data.h["hint"];
					return React.createElement(react_ReactType.fromString("div"),{ className : "hint"},tmp);
				}
			}
		}
	}
	,__class__: view_accounting_directdebit_List
});
var view_accounting_returndebit_AccountForm = function(props) {
	React_Component.call(this,props);
	this.dataDisplay = model_accounting_AccountsModel.dataGridDisplay;
	haxe_Log.trace("..." + Std.string(Reflect.fields(props)),{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 49, className : "view.accounting.returndebit.AccountForm", methodName : "new"});
	this.state = App.initEState({ actualStates : new haxe_ds_IntMap(), dbTable : [], loading : true, model : "accounts", accountsData : new haxe_ds_IntMap(), selectedRows : [], sideMenu : null, values : new haxe_ds_StringMap()},this);
	haxe_Log.trace(this.state.loading,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 60, className : "view.accounting.returndebit.AccountForm", methodName : "new"});
	this.parentState = props.parentComponent.state;
};
$hxClasses["view.accounting.returndebit.AccountForm"] = view_accounting_returndebit_AccountForm;
view_accounting_returndebit_AccountForm.__name__ = "view.accounting.returndebit.AccountForm";
view_accounting_returndebit_AccountForm.mapDispatchToProps = function(dispatch) {
	return { load : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.read(param)));
	}, loadData : function(id,me) {
		if(id == null) {
			id = -1;
		}
		return me.loadData(id);
	}, save : function(me) {
		return me.update();
	}, select : function(id,me,pComp,sType) {
		if(id == null) {
			id = -1;
		}
		var c = js_Boot.getClass(me);
		var tmp = "select:" + id + " me:" + c.__name__ + " SelectType:" + sType + " parentComponent:";
		var c = js_Boot.getClass(pComp.props.parentComponent);
		haxe_Log.trace(tmp + c.__name__,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 72, className : "view.accounting.returndebit.AccountForm", methodName : "mapDispatchToProps"});
	}};
};
view_accounting_returndebit_AccountForm.mapStateToProps = function(aState) {
	haxe_Log.trace(Reflect.fields(aState),{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 82, className : "view.accounting.returndebit.AccountForm", methodName : "mapStateToProps"});
	return { userState : aState.userState};
};
view_accounting_returndebit_AccountForm.__super__ = React_Component;
view_accounting_returndebit_AccountForm.prototype = $extend(React_Component.prototype,{
	dataDisplay: null
	,dataAccess: null
	,dbData: null
	,dbMetaData: null
	,parentState: null
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 90, className : "view.accounting.returndebit.AccountForm", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
	}
	,get: function() {
		var _gthis = this;
		haxe_Log.trace(this.props.filter,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 97, className : "view.accounting.returndebit.AccountForm", methodName : "get"});
		var offset = 0;
		me_cunity_debug_Out.dumpObject(this.props.userState,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 101, className : "view.accounting.returndebit.AccountForm", methodName : "get"});
		var p = this.props.load({ classPath : "data.Accounts", action : "get", filter : this.props.filter != null ? this.props.filter : { mandator : "1"}, limit : this.props.limit, offset : offset > 0 ? offset : 0, table : this.state.model, resolveMessage : { success : "Kontenliste wurde geladen", failure : "Kontenliste konnte nicht geladen werden"}, dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 119, className : "view.accounting.returndebit.AccountForm", methodName : "get"});
			_gthis.setState({ loading : false, dbTable : data.dataRows});
		});
	}
	,edit: function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 126, className : "view.accounting.returndebit.AccountForm", methodName : "edit"});
	}
	,componentDidMount: function() {
		var _g = new haxe_ds_StringMap();
		var _g1 = new haxe_ds_StringMap();
		var value = new haxe_ds_StringMap();
		_g1.h["contacts"] = value;
		var value = { source : _g1, view : new haxe_ds_StringMap()};
		_g.h["get"] = value;
		this.dataAccess = _g;
		haxe_Log.trace("ok",{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 139, className : "view.accounting.returndebit.AccountForm", methodName : "componentDidMount"});
		this.props.parentComponent.registerOrmRef(this);
		this.get();
		if(this.parentState.relDataComps != null) {
			var this1 = this.parentState.relDataComps;
			var c = js_Boot.getClass(this);
			var k = c.__name__;
			this1.h[k] = this;
		}
	}
	,loadData: function(id) {
		var _gthis = this;
		haxe_Log.trace("loading:" + id,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 149, className : "view.accounting.returndebit.AccountForm", methodName : "loadData"});
		if(id == null) {
			return;
		}
		var p = this.props.load({ classPath : "data.Accounts", action : "get", filter : { id : id, mandator : 1}, resolveMessage : { success : "Konto " + id + " wurde geladen", failure : "Konto " + id + " konnte nicht geladen werden"}, table : "accounts", dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 167, className : "view.accounting.returndebit.AccountForm", methodName : "loadData"});
			if(data.dataRows.length == 1) {
				var data1 = data.dataRows[0];
				var account = new model_Account(data1);
				haxe_Log.trace(account.id,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 174, className : "view.accounting.returndebit.AccountForm", methodName : "loadData"});
				_gthis.state.actualStates.h[account.id] = account;
				_gthis.state.loading = false;
				account.state.actualState = account;
				haxe_Log.trace(Std.string(account.state.actualState.id) + ":" + Std.string(account.state.actualState.fieldsInitalized.join(",")),{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 178, className : "view.accounting.returndebit.AccountForm", methodName : "loadData"});
				_gthis.props.parentComponent.registerORM("accounts",account);
			}
		});
	}
	,renderResults: function() {
		haxe_Log.trace(Std.string(this.state.loading) + ":" + this.props.action,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 187, className : "view.accounting.returndebit.AccountForm", methodName : "renderResults"});
		if(this.state.loading || this.state.dbTable == null || this.state.dbTable.length == 0) {
			return this.state.formApi.renderWait();
		}
		haxe_Log.trace("###########loading:" + this.props.action,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 190, className : "view.accounting.returndebit.AccountForm", methodName : "renderResults"});
		var _g = this.props.action;
		if(_g == null) {
			return null;
		} else {
			switch(_g) {
			case "delete":
				return null;
			case "get":
				haxe_Log.trace(this.state.dbTable,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 194, className : "view.accounting.returndebit.AccountForm", methodName : "renderResults"});
				return React.createElement(view_grid_Grid._renderWrapper,Object.assign({ },this.props,{ id : "accountsList", data : this.state.dbTable, dataState : this.dataDisplay.h["accountsList"], parentComponent : this, className : "is-striped is-hoverable", fullWidth : true}));
			case "insert":
				haxe_Log.trace(this.dataDisplay.h["accountsList"],{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 208, className : "view.accounting.returndebit.AccountForm", methodName : "renderResults"});
				haxe_Log.trace(Std.string(this.state.dbTable[29].h["id"]) + "<<<",{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 209, className : "view.accounting.returndebit.AccountForm", methodName : "renderResults"});
				return React.createElement(view_grid_Grid._renderWrapper,Object.assign({ },this.props,{ id : "accountsList", data : this.state.dbTable, dataState : this.dataDisplay.h["accountsList"], className : "is-striped is-hoverable", fullWidth : true}));
			case "update":
				return React.createElement(view_grid_Grid._renderWrapper,Object.assign({ },this.props,{ id : "accountsList", data : this.state.dbTable, dataState : this.dataDisplay.h["accountsList"], className : "is-striped is-hoverable", fullWidth : true}));
			default:
				return null;
			}
		}
	}
	,render: function() {
		haxe_Log.trace(this.props.action,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 226, className : "view.accounting.returndebit.AccountForm", methodName : "render"});
		var tmp = react_ReactType.fromString("div");
		var tmp1 = react_ReactType.fromString("form");
		var tmp2 = this.renderResults();
		return React.createElement(tmp,{ className : "t_caption"},"Konten",React.createElement(tmp1,{ className : "tabComponentForm", name : "accountsList"},tmp2));
	}
	,select: function(mEvOrID) {
		haxe_Log.trace(Reflect.fields(this.props),{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 239, className : "view.accounting.returndebit.AccountForm", methodName : "select"});
		haxe_Log.trace(mEvOrID,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 240, className : "view.accounting.returndebit.AccountForm", methodName : "select"});
	}
	,update: function() {
		var _gthis = this;
		var changed = 0;
		try {
			var it = this.state.actualStates.iterator();
			while(it.hasNext()) {
				var account = it.next();
				if(account.fieldsModified.length > 0) {
					++changed;
					var data2save = account.allModified();
					var dbQ = { classPath : "data.Accounts", action : "update", data : data2save, filter : { id : account.id, mandator : 1}, resolveMessage : { success : "Konto " + account.id + " wurde aktualisiert", failure : "Konto " + account.id + " konnte nicht aktualisiert werden"}, table : "accounts", dbUser : this.props.userState.dbUser, devIP : App.devIP};
					var p = App.store.dispatch(redux_Action.map(action_async_CRUD.update(dbQ)));
					p.then(function(d) {
						haxe_Log.trace(d,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 269, className : "view.accounting.returndebit.AccountForm", methodName : "update"});
						_gthis.get();
					});
				}
			}
		} catch( _g ) {
			var ex = haxe_Exception.caught(_g);
			haxe_Log.trace($bind(ex,ex.details),{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 276, className : "view.accounting.returndebit.AccountForm", methodName : "update"});
		}
	}
	,updateMenu: function(viewClassPath) {
		var sideMenu = this.state.sideMenu;
		haxe_Log.trace(sideMenu.section,{ fileName : "src/view/accounting/returndebit/AccountForm.hx", lineNumber : 283, className : "view.accounting.returndebit.AccountForm", methodName : "updateMenu"});
		var _g = 0;
		var _g1 = sideMenu.menuBlocks.h["Contact"].items;
		while(_g < _g1.length) {
			var mI = _g1[_g];
			++_g;
			var _g2 = mI.action;
			if(_g2 != null) {
				switch(_g2) {
				case "editTableFields":
					mI.disabled = this.state.selectedRows.length == 0;
					break;
				case "save":
					mI.disabled = this.state.clean;
					break;
				default:
				}
			}
		}
		return sideMenu;
	}
	,__class__: view_accounting_returndebit_AccountForm
});
var view_accounting_returndebit_ContactForm = function(props) {
	React_Component.call(this,props);
	this.dataAccess = model_contacts_ContactsModel.dataAccess;
	this.fieldNames = view_shared_io_BaseForm.initFieldNames(new haxe_ds__$StringMap_StringMapKeyIterator(this.dataAccess.h["open"].view.h));
	haxe_Log.trace(this.fieldNames,{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 66, className : "view.accounting.returndebit.ContactForm", methodName : "new"});
	this.dataDisplay = model_contacts_ContactsModel.dataGridDisplay;
	haxe_Log.trace("..." + Std.string(Reflect.fields(props)),{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 68, className : "view.accounting.returndebit.ContactForm", methodName : "new"});
	this.state = App.initEState({ actualStates : new haxe_ds_IntMap(), dbTable : [], loading : false, dealsData : new haxe_ds_IntMap(), model : "contacts", selectedRows : [], sideMenu : null, values : new haxe_ds_StringMap()},this);
	this.parentState = props.parentComponent.state;
	haxe_Log.trace("id:" + props.id,{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 80, className : "view.accounting.returndebit.ContactForm", methodName : "new"});
	if(props.id != null) {
		this.loadData(props.id);
	}
};
$hxClasses["view.accounting.returndebit.ContactForm"] = view_accounting_returndebit_ContactForm;
view_accounting_returndebit_ContactForm.__name__ = "view.accounting.returndebit.ContactForm";
view_accounting_returndebit_ContactForm.mapDispatchToProps = function(dispatch) {
	return { load : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.read(param)));
	}, loadData : function(id,me) {
		if(id == null) {
			id = -1;
		}
		return me.loadData(id);
	}, save : function(me) {
		return me.update();
	}, select : function(id,data,me,sType) {
		if(id == null) {
			id = -1;
		}
		var c = js_Boot.getClass(me);
		haxe_Log.trace("select:" + id + " me:" + c.__name__ + " SelectType:" + sType,{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 94, className : "view.accounting.returndebit.ContactForm", methodName : "mapDispatchToProps"});
	}};
};
view_accounting_returndebit_ContactForm.mapStateToProps = function(aState) {
	haxe_Log.trace(Reflect.fields(aState),{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 104, className : "view.accounting.returndebit.ContactForm", methodName : "mapStateToProps"});
	return { userState : aState.userState};
};
view_accounting_returndebit_ContactForm.__super__ = React_Component;
view_accounting_returndebit_ContactForm.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,dataDisplay: null
	,contact: null
	,formFields: null
	,fieldNames: null
	,dbData: null
	,dbMetaData: null
	,parentState: null
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 112, className : "view.accounting.returndebit.ContactForm", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
	}
	,componentDidMount: function() {
		haxe_Log.trace(this.props.action,{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 119, className : "view.accounting.returndebit.ContactForm", methodName : "componentDidMount"});
		if(this.props.userState.dbUser != null) {
			haxe_Log.trace("yeah: " + this.props.userState.dbUser.first_name,{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 121, className : "view.accounting.returndebit.ContactForm", methodName : "componentDidMount"});
		}
		this.props.parentComponent.registerOrmRef(this);
		if(this.parentState.relDataComps != null) {
			var this1 = this.parentState.relDataComps;
			var c = js_Boot.getClass(this);
			var k = c.__name__;
			this1.h[k] = this;
		}
	}
	,loadData: function(id) {
		var _gthis = this;
		haxe_Log.trace("loading:" + id,{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 133, className : "view.accounting.returndebit.ContactForm", methodName : "loadData"});
		if(id == null) {
			return;
		}
		var p = this.props.load({ classPath : "data.Contacts", action : "get", filter : { id : id, mandator : 1}, resolveMessage : { success : "Kontakt " + id + " wurde geladen", failure : "Kontakt " + id + " konnte nicht geladen werden"}, table : "contacts", dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 151, className : "view.accounting.returndebit.ContactForm", methodName : "loadData"});
			if(data.dataRows.length == 1) {
				var data1 = data.dataRows[0];
				haxe_Log.trace(data1 == null ? "null" : haxe_ds_StringMap.stringify(data1.h),{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 155, className : "view.accounting.returndebit.ContactForm", methodName : "loadData"});
				_gthis.contact = new model_Contact(data1);
				haxe_Log.trace(_gthis.contact.id,{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 158, className : "view.accounting.returndebit.ContactForm", methodName : "loadData"});
				_gthis.setState({ loading : false, actualState : _gthis.contact, initialData : react_ReactUtil.copy(_gthis.contact)});
				_gthis.contact.state.actualState = _gthis.contact;
				_gthis.state.actualStates.h[_gthis.contact.id] = _gthis.contact;
				haxe_Log.trace(Std.string(_gthis.contact.state.actualState.id) + ":" + Std.string(_gthis.contact.state.actualState.fieldsInitalized.join(",")),{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 163, className : "view.accounting.returndebit.ContactForm", methodName : "loadData"});
				_gthis.props.parentComponent.registerORM("contacts",_gthis.contact);
			}
		});
	}
	,renderForm: function() {
		haxe_Log.trace(Std.string(this.state.loading) + ":" + Std.string(this.props.parentComponent.props.match.params.action),{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 179, className : "view.accounting.returndebit.ContactForm", methodName : "renderForm"});
		if(this.state.loading) {
			return this.state.formApi.renderWait();
		}
		haxe_Log.trace("###########loading:" + Std.string(this.state.loading) + (" state.actualState:" + Std.string(this.state.actualState)),{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 182, className : "view.accounting.returndebit.ContactForm", methodName : "renderForm"});
		if(this.state.actualState == null) {
			return this.state.formApi.renderWait();
		} else {
			var tmp = this.state.formBuilder;
			var tmp1 = this.state.mHandlers;
			var _g = new haxe_ds_StringMap();
			var h = this.dataAccess.h["open"].view.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				_g.h[k] = this.dataAccess.h["open"].view.h[k];
			}
			return tmp.renderForm({ mHandlers : tmp1, fields : _g, model : "contact", title : "Bearbeite Kontakt"},this.state.actualState);
		}
	}
	,render: function() {
		haxe_Log.trace(this.state.loading || this.state.dbTable == null || this.state.dbTable.length == 0,{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 201, className : "view.accounting.returndebit.ContactForm", methodName : "render"});
		if(this.state.loading || this.state.dbTable == null || this.state.dbTable.length == 0) {
			return null;
		}
		return this.state.formApi.renderWait();
	}
	,update: function() {
		var _gthis = this;
		var changed = 0;
		try {
			var it = this.state.actualStates.iterator();
			while(it.hasNext()) {
				var contact = it.next();
				if(contact.fieldsModified.length > 0) {
					++changed;
					var data2save = contact.allModified();
					haxe_Log.trace(data2save[0],{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 238, className : "view.accounting.returndebit.ContactForm", methodName : "update"});
					var dbQ = { classPath : "data.Deals", action : "update", data : data2save, filter : { id : contact.id, mandator : 1}, resolveMessage : { success : "Spende " + contact.id + " wurde aktualisiert", failure : "Spende " + contact.id + " konnte nicht aktualisiert werden"}, table : "contacts", dbUser : this.props.userState.dbUser, devIP : App.devIP};
					var p = App.store.dispatch(redux_Action.map(action_async_CRUD.update(dbQ)));
					p.then(function(d) {
						haxe_Log.trace(d,{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 254, className : "view.accounting.returndebit.ContactForm", methodName : "update"});
						_gthis.loadData(_gthis.props.id);
					});
				}
			}
		} catch( _g ) {
			var ex = haxe_Exception.caught(_g);
			haxe_Log.trace($bind(ex,ex.details),{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 261, className : "view.accounting.returndebit.ContactForm", methodName : "update"});
		}
		if(changed == 0) {
			haxe_Log.trace("nothing to save",{ fileName : "src/view/accounting/returndebit/ContactForm.hx", lineNumber : 264, className : "view.accounting.returndebit.ContactForm", methodName : "update"});
		}
	}
	,__class__: view_accounting_returndebit_ContactForm
});
var view_accounting_returndebit_DealForm = function(props) {
	React_Component.call(this,props);
	this.dataAccess = model_deals_DealsModel.dataAccess;
	this.fieldNames = view_shared_io_BaseForm.initFieldNames(new haxe_ds__$StringMap_StringMapKeyIterator(this.dataAccess.h["open"].view.h));
	this.dataDisplay = model_deals_DealsModel.dataGridDisplay;
	haxe_Log.trace("..." + Std.string(Reflect.fields(props)),{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 66, className : "view.accounting.returndebit.DealForm", methodName : "new"});
	this.state = App.initEState({ actualStates : new haxe_ds_IntMap(), dbTable : [], loading : false, dealsData : new haxe_ds_IntMap(), model : "deals", selectedRows : [], sideMenu : null, values : new haxe_ds_StringMap()},this);
	this.parentState = props.parentComponent.state;
	haxe_Log.trace(this.state.loading,{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 78, className : "view.accounting.returndebit.DealForm", methodName : "new"});
	haxe_Log.trace("id:" + props.id,{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 79, className : "view.accounting.returndebit.DealForm", methodName : "new"});
	if(props.id != null) {
		this.loadData(props.id);
	}
};
$hxClasses["view.accounting.returndebit.DealForm"] = view_accounting_returndebit_DealForm;
view_accounting_returndebit_DealForm.__name__ = "view.accounting.returndebit.DealForm";
view_accounting_returndebit_DealForm.mapDispatchToProps = function(dispatch) {
	return { load : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.read(param)));
	}};
};
view_accounting_returndebit_DealForm.mapStateToProps = function(aState) {
	haxe_Log.trace(Reflect.fields(aState),{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 103, className : "view.accounting.returndebit.DealForm", methodName : "mapStateToProps"});
	haxe_Log.trace(aState.dataStore.returnDebitsData,{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 104, className : "view.accounting.returndebit.DealForm", methodName : "mapStateToProps"});
	return { userState : aState.userState};
};
view_accounting_returndebit_DealForm.__super__ = React_Component;
view_accounting_returndebit_DealForm.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,dataDisplay: null
	,deal: null
	,formFields: null
	,fieldNames: null
	,dbData: null
	,dbMetaData: null
	,parentState: null
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 112, className : "view.accounting.returndebit.DealForm", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
	}
	,get: function() {
		var _gthis = this;
		var offset = 0;
		haxe_Log.trace(this.props.filter,{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 123, className : "view.accounting.returndebit.DealForm", methodName : "get"});
		this.state.loading = true;
		var p = this.props.load({ classPath : "data.Deals", action : "get", filter : this.props.filter != null ? this.props.filter : { mandator : "1"}, limit : this.props.limit, offset : offset > 0 ? offset : 0, table : this.state.model, resolveMessage : { success : "Spendenliste wurde geladen", failure : "Spendenliste konnte nicht geladen werden"}, dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 144, className : "view.accounting.returndebit.DealForm", methodName : "get"});
			if(data.dataRows.length > 0) {
				var tmp = data.dataRows[0];
				haxe_Log.trace(tmp == null ? "null" : haxe_ds_StringMap.stringify(tmp.h),{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 146, className : "view.accounting.returndebit.DealForm", methodName : "get"});
			}
			_gthis.setState({ loading : false, dbTable : data.dataRows, dataCount : Std.parseInt(data.dataInfo.h["count"]), pageCount : Math.ceil(Std.parseInt(data.dataInfo.h["count"]) / _gthis.props.limit)});
		});
	}
	,edit: function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 159, className : "view.accounting.returndebit.DealForm", methodName : "edit"});
	}
	,componentDidMount: function() {
		haxe_Log.trace(this.props.action,{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 164, className : "view.accounting.returndebit.DealForm", methodName : "componentDidMount"});
		if(this.props.userState.dbUser != null) {
			haxe_Log.trace("yeah: " + this.props.userState.dbUser.first_name,{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 166, className : "view.accounting.returndebit.DealForm", methodName : "componentDidMount"});
		}
		this.props.parentComponent.registerOrmRef(this);
		if(this.parentState.relDataComps != null) {
			var this1 = this.parentState.relDataComps;
			var c = js_Boot.getClass(this);
			var k = c.__name__;
			this1.h[k] = this;
		}
	}
	,loadData: function(id) {
		var _gthis = this;
		haxe_Log.trace("loading:" + id,{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 178, className : "view.accounting.returndebit.DealForm", methodName : "loadData"});
		if(id == null) {
			return;
		}
		var p = this.props.load({ classPath : "data.Deals", action : "get", filter : { id : id, mandator : 1}, resolveMessage : { success : "Spende " + id + " wurde geladen", failure : "Spende " + id + " konnte nicht geladen werden"}, table : "deals", dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 196, className : "view.accounting.returndebit.DealForm", methodName : "loadData"});
			if(data.dataRows.length == 1) {
				var data1 = data.dataRows[0];
				haxe_Log.trace(data1 == null ? "null" : haxe_ds_StringMap.stringify(data1.h),{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 200, className : "view.accounting.returndebit.DealForm", methodName : "loadData"});
				_gthis.deal = new model_Deal(data1);
				haxe_Log.trace(_gthis.deal.id,{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 203, className : "view.accounting.returndebit.DealForm", methodName : "loadData"});
				_gthis.setState({ loading : false, actualState : _gthis.deal, initialData : react_ReactUtil.copy(_gthis.deal)});
				_gthis.deal.state.actualState = _gthis.deal;
				_gthis.state.actualStates.h[_gthis.deal.id] = _gthis.deal;
				haxe_Log.trace(Std.string(_gthis.deal.state.actualState.id) + ":" + Std.string(_gthis.deal.state.actualState.fieldsInitalized.join(",")),{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 208, className : "view.accounting.returndebit.DealForm", methodName : "loadData"});
				_gthis.props.parentComponent.registerORM("deals",_gthis.deal);
			}
		});
	}
	,renderForm: function() {
		haxe_Log.trace(Std.string(this.state.loading) + ":" + Std.string(this.props.parentComponent.props.match.params.action),{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 222, className : "view.accounting.returndebit.DealForm", methodName : "renderForm"});
		if(this.state.loading) {
			return this.state.formApi.renderWait();
		}
		if(this.state.actualState == null) {
			return this.state.formApi.renderWait();
		} else {
			var tmp = this.state.formBuilder;
			var tmp1 = this.state.mHandlers;
			var _g = new haxe_ds_StringMap();
			var h = this.dataAccess.h["open"].view.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				_g.h[k] = this.dataAccess.h["open"].view.h[k];
			}
			return tmp.renderForm({ mHandlers : tmp1, fields : _g, model : "deals", title : "Bearbeite Spende"},this.state.actualState);
		}
	}
	,renderResults: function() {
		if(this.state.loading || this.state.dbTable == null || this.state.dbTable.length == 0) {
			return this.state.formApi.renderWait();
		}
		haxe_Log.trace(this.props.action,{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 249, className : "view.accounting.returndebit.DealForm", methodName : "renderResults"});
		var _g = this.props.action;
		if(_g == null) {
			return null;
		} else {
			switch(_g) {
			case "delete":
				return null;
			case "get":
				var tmp = react_ReactType.fromComp(React_Fragment);
				var tmp1 = React.createElement(view_grid_Grid._renderWrapper,Object.assign({ },this.props,{ id : "dealsList", data : this.state.dbTable, dataState : this.dataDisplay.h["dealsList"], parentComponent : this, className : "is-striped is-hoverable", fullWidth : true}));
				var tmp2 = this.renderForm();
				return React.createElement(tmp,{ },tmp1,tmp2);
			default:
				return null;
			}
		}
	}
	,render: function() {
		return null;
	}
	,update: function() {
		var _gthis = this;
		var changed = 0;
		try {
			var it = this.state.actualStates.iterator();
			while(it.hasNext()) {
				var deal = it.next();
				if(deal.fieldsModified.length > 0) {
					++changed;
					var data2save = deal.allModified();
					haxe_Log.trace(data2save[0],{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 287, className : "view.accounting.returndebit.DealForm", methodName : "update"});
					var dbQ = { classPath : "data.Deals", action : "update", data : data2save, filter : { id : deal.id, mandator : 1}, resolveMessage : { success : "Spende " + deal.id + " wurde aktualisiert", failure : "Spende " + deal.id + " konnte nicht aktualisiert werden"}, table : "deals", dbUser : this.props.userState.dbUser, devIP : App.devIP};
					var p = App.store.dispatch(redux_Action.map(action_async_CRUD.update(dbQ)));
					p.then(function(d) {
						haxe_Log.trace(d,{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 303, className : "view.accounting.returndebit.DealForm", methodName : "update"});
						_gthis.get();
					});
				}
			}
		} catch( _g ) {
			var ex = haxe_Exception.caught(_g);
			haxe_Log.trace($bind(ex,ex.details),{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 310, className : "view.accounting.returndebit.DealForm", methodName : "update"});
		}
		if(changed == 0) {
			haxe_Log.trace("nothing to save",{ fileName : "src/view/accounting/returndebit/DealForm.hx", lineNumber : 313, className : "view.accounting.returndebit.DealForm", methodName : "update"});
		}
	}
	,__class__: view_accounting_returndebit_DealForm
});
var view_shared_io_BaseForm = function() { };
$hxClasses["view.shared.io.BaseForm"] = view_shared_io_BaseForm;
view_shared_io_BaseForm.__name__ = "view.shared.io.BaseForm";
view_shared_io_BaseForm.addRecordings = function(state,recs) {
	var recItems = [];
	var _g = 0;
	while(_g < recs.length) {
		var rec = recs[_g];
		++_g;
		recItems.push({ label : rec.h["start_time"], formField : { src : StringTools.replace(rec.h["location"],"85.25.93.167","pbx.pitverwaltung.de"), type : "Audio"}});
	}
	var tmp = state.sideMenu.menuBlocks.h[state.sideMenu.section].items;
	var _g = [];
	var _g1 = 0;
	var _g2 = recItems;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if((function(mi) {
			var _g = 0;
			var _g1 = state.sideMenu.menuBlocks.h[state.sideMenu.section].items;
			while(_g < _g1.length) {
				var si = _g1[_g];
				++_g;
				if(si.formField != null && si.formField.src.length > 0) {
					if(mi.formField.src == si.formField.src) {
						return false;
					}
				}
			}
			return true;
		})(v)) {
			_g.push(v);
		}
	}
	state.mHandlers = tmp.concat(_g);
};
view_shared_io_BaseForm.compareStates = function(comp) {
	var dObj = js_Boot.__cast(comp.state.actualState , model_ORM);
	var _g = 0;
	var _g1 = Reflect.fields(dObj);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		haxe_Log.trace("" + f + ":" + Std.string(Reflect.field(comp.state.actualState,f)) + "<==>" + Std.string(Reflect.field(comp.state.initialState,f)) + "<",{ fileName : "src/view/shared/io/BaseForm.hx", lineNumber : 76, className : "view.shared.io.BaseForm", methodName : "compareStates"});
	}
};
view_shared_io_BaseForm.doChange = function(comp,name,value) {
	if(name != null && name != "") {
		haxe_Log.trace(Reflect.getProperty(comp.state.actualState,name),{ fileName : "src/view/shared/io/BaseForm.hx", lineNumber : 87, className : "view.shared.io.BaseForm", methodName : "doChange"});
		Reflect.setProperty(comp.state.actualState,name,value);
		haxe_Log.trace(Reflect.getProperty(comp.state.actualState,name),{ fileName : "src/view/shared/io/BaseForm.hx", lineNumber : 89, className : "view.shared.io.BaseForm", methodName : "doChange"});
	}
};
view_shared_io_BaseForm.filter = function(props,param) {
	var filter = view_shared_io_BaseForm.copy({ mandator : "1"},param);
	if(props.match.params.id != null) {
		filter.id = props.match.params.id;
	}
	return filter;
};
view_shared_io_BaseForm.copy = function(ob,ob2,useNull) {
	if(useNull == null) {
		useNull = false;
	}
	var res = { };
	var _g = 0;
	var _g1 = Reflect.fields(ob);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		res[f] = Reflect.field(ob,f);
	}
	var _g = 0;
	var _g1 = Reflect.fields(ob2);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		if(useNull || Reflect.field(ob2,f) != null) {
			res[f] = Reflect.field(ob2,f);
		}
	}
	return res;
};
view_shared_io_BaseForm.initFieldNames = function(keys) {
	var fieldNames = [];
	var k = keys;
	while(k.hasNext()) {
		var k1 = k.next();
		fieldNames.push(k1);
	}
	return fieldNames;
};
view_shared_io_BaseForm.ormsModified = function(cmp) {
	var ormRefs = cmp.ormRefs;
	var h = ormRefs.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var model = _g1_key;
		var ormRef = _g1_value;
		var orm = ormRef.orms.iterator();
		while(orm.hasNext()) {
			var orm1 = orm.next();
			if(orm1.modified()) {
				return true;
			}
		}
	}
	return false;
};
view_shared_io_BaseForm.warn = function(text) {
	App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "warn", text : text}))));
};
view_shared_io_BaseForm.renderPager = function(comp) {
	haxe_Log.trace("pageCount=" + Std.string(comp.state.pageCount),{ fileName : "src/view/shared/io/BaseForm.hx", lineNumber : 190, className : "view.shared.io.BaseForm", methodName : "renderPager"});
	var tmp = react_ReactType.fromString("div");
	var tmp1 = react_ReactType.fromString("nav");
	return React.createElement(tmp,{ className : "paginationContainer"},React.createElement(tmp1,{ },React.createElement(react_ReactType.fromComp(react_ReactPaginate),{ previousLabel : "<", breakLinkClassName : "pagination-link", pageLinkClassName : "pagination-link", nextLinkClassName : "pagination-next", previousLinkClassName : "pagination-previous", nextLabel : ">", breakLabel : "...", breakClassName : "break-me", pageCount : comp.state.pageCount, marginPagesDisplayed : 2, pageRangeDisplayed : 5, onPageChange : function(data) {
		haxe_Log.trace("" + Std.string(comp.props.match.params.action) + "  " + data.selected,{ fileName : "src/view/shared/io/BaseForm.hx", lineNumber : 207, className : "view.shared.io.BaseForm", methodName : "renderPager"});
		var fun = Reflect.field(comp,comp.props.match.params.action);
		if(Reflect.isFunction(fun)) {
			fun.apply(comp,[{ page : data.selected}]);
		}
	}, containerClassName : "pagination  is-small", subContainerClassName : "pages pagination", activeLinkClassName : "is-current"})));
};
view_shared_io_BaseForm.prototype = {
	storeParams: function(path,params) {
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		var _g2 = Reflect.fields(params);
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.h[f] = Reflect.field(params,f);
		}
		var pMap = _g;
		var _g = new haxe_ds_StringMap();
		_g.h[path] = pMap;
		return _g;
	}
	,restoreParams: function(m) {
		var p = { };
		var h = m.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g1_key = key;
			var _g1_value = _g_h[key];
			var k = _g1_key;
			var v = _g1_value;
			p[k] = v;
		}
		return p;
	}
	,__class__: view_shared_io_BaseForm
};
var view_shared_io_LiveData = function() { };
$hxClasses["view.shared.io.LiveData"] = view_shared_io_LiveData;
view_shared_io_LiveData.__name__ = "view.shared.io.LiveData";
view_shared_io_LiveData.form = function(props,view) {
	return React.createElement(react_ReactType.fromString("div"),{ key : "dummy"},"Dummy");
};
view_shared_io_LiveData.createFormView = function(props,view) {
	var formView = { form : view_shared_io_LiveData.form(props,view), orm : null, props : props, view : view};
	view_shared_io_LiveData.loadORM(props.id,{ classPath : "data.Deals", action : "get", filter : { id : props.id, mandator : 1}, resolveMessage : { success : "Spende " + props.id + " wurde geladen", failure : "Spende " + props.id + " konnte nicht geladen werden"}, table : "deals", then : function(data) {
		haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 58, className : "view.shared.io.LiveData", methodName : "createFormView"});
		if(data.dataRows.length == 1) {
			var data1 = data.dataRows[0];
			haxe_Log.trace(data1 == null ? "null" : haxe_ds_StringMap.stringify(data1.h),{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 62, className : "view.shared.io.LiveData", methodName : "createFormView"});
			var deal = new model_Deal(data1);
			haxe_Log.trace(deal.id,{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 64, className : "view.shared.io.LiveData", methodName : "createFormView"});
			deal.state.actualState = deal;
			haxe_Log.trace(Std.string(deal.state.actualState.id) + ":" + Std.string(deal.state.actualState.fieldsInitalized.join(",")),{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 66, className : "view.shared.io.LiveData", methodName : "createFormView"});
			props.parentComponent.registerORM("deals",deal);
			formView.orm = deal;
			view_shared_io_LiveData.loadORM(props.id,{ classPath : "data.Contacts", action : "get", filter : { id : deal.contact, mandator : 1}, resolveMessage : { success : "Kontakt " + deal.contact + " wurde geladen", failure : "Kontakt " + deal.contact + " konnte nicht geladen werden"}, table : "contacts", then : function(data) {
				haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 82, className : "view.shared.io.LiveData", methodName : "createFormView"});
				if(data.dataRows.length == 1) {
					var data1 = data.dataRows[0];
					haxe_Log.trace(data1 == null ? "null" : haxe_ds_StringMap.stringify(data1.h),{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 86, className : "view.shared.io.LiveData", methodName : "createFormView"});
					var contact = new model_Contact(data1);
					haxe_Log.trace(deal.id,{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 88, className : "view.shared.io.LiveData", methodName : "createFormView"});
					contact.state.actualState = contact;
					haxe_Log.trace(Std.string(contact.state.actualState.id) + ":" + Std.string(contact.state.actualState.fieldsInitalized.join(",")),{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 90, className : "view.shared.io.LiveData", methodName : "createFormView"});
					props.parentComponent.registerORM("contacts",contact);
				}
			}, dbUser : props.userState.dbUser, devIP : App.devIP});
			view_shared_io_LiveData.loadORM(props.id,{ classPath : "data.Accounts", action : "get", filter : { id : deal.account, mandator : 1}, resolveMessage : { success : "Konto " + deal.account + " wurde geladen", failure : "Konto " + deal.account + " konnte nicht geladen werden"}, table : "accounts", then : function(data) {
				haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 110, className : "view.shared.io.LiveData", methodName : "createFormView"});
				if(data.dataRows.length == 1) {
					var data1 = data.dataRows[0];
					haxe_Log.trace(data1 == null ? "null" : haxe_ds_StringMap.stringify(data1.h),{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 114, className : "view.shared.io.LiveData", methodName : "createFormView"});
					var account = new model_Account(data1);
					haxe_Log.trace(account.id,{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 116, className : "view.shared.io.LiveData", methodName : "createFormView"});
					account.state.actualState = account;
					haxe_Log.trace(Std.string(account.state.actualState.id) + ":" + Std.string(account.state.actualState.fieldsInitalized.join(",")),{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 118, className : "view.shared.io.LiveData", methodName : "createFormView"});
					props.parentComponent.registerORM("accounts",account);
				}
			}, dbUser : props.userState.dbUser, devIP : App.devIP});
		}
	}, dbUser : props.userState.dbUser, devIP : App.devIP});
	return formView;
};
view_shared_io_LiveData.create = function(props,view) {
	var viewPath = tools_ClassInfo.classPath(view);
	if(viewPath != null) {
		haxe_Log.trace(">" + props.model + "<",{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 141, className : "view.shared.io.LiveData", methodName : "create"});
		if(props != null && props.model != null) {
			haxe_Log.trace(props.model,{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 143, className : "view.shared.io.LiveData", methodName : "create"});
			if(!Object.prototype.hasOwnProperty.call(view_shared_io_LiveData.forms.h,viewPath)) {
				var this1 = view_shared_io_LiveData.forms;
				var _g = new haxe_ds_StringMap();
				var key = props.model;
				var _g1 = new haxe_ds_IntMap();
				var key1 = props.id;
				var value = view_shared_io_LiveData.createFormView(props,view);
				_g1.h[key1] = value;
				_g.h[key] = _g1;
				this1.h[viewPath] = _g;
			}
		}
	}
};
view_shared_io_LiveData.loadORM1 = function(param,viewPath,sType) {
	if(sType == null) {
		sType = "One";
	}
	haxe_Log.trace(viewPath + ":" + Std.string(Object.prototype.hasOwnProperty.call(view_shared_io_LiveData.forms.h,viewPath)),{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 168, className : "view.shared.io.LiveData", methodName : "loadORM1"});
};
view_shared_io_LiveData.loadORM = function(id,param) {
	haxe_Log.trace("loading:" + id,{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 193, className : "view.shared.io.LiveData", methodName : "loadORM"});
	if(id == null) {
		return;
	}
	var cb = param.then;
	param.then = null;
	var p = App.store.dispatch(redux_Action.map(action_async_CRUD.read(param)));
	p.then(function(data) {
		cb(data);
	});
};
view_shared_io_LiveData.registerORM = function(parent,refModel,orm) {
	if(parent.ormRefs.exists(refModel)) {
		parent.ormRefs.get(refModel).orms.set(orm.id,orm);
		haxe_Log.trace(refModel,{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 235, className : "view.shared.io.LiveData", methodName : "registerORM"});
		parent.setState({ ormRefs : parent.ormRefs});
	} else {
		haxe_Log.trace("OrmRef " + refModel + " not found!",{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 243, className : "view.shared.io.LiveData", methodName : "registerORM"});
	}
};
view_shared_io_LiveData.select = function(props) {
	var actPath = view_shared_io_FormApi.getTableRoot();
	haxe_Log.trace(actPath,{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 249, className : "view.shared.io.LiveData", methodName : "select"});
	var sData = App.store.getState().dataStore.returnDebitsData;
	if(actPath[1] == "ReturnDebits") {
		sData = view_shared_io_LiveData.selectType(props.id,props.data,sData,props.selectType);
		haxe_Log.trace("" + actPath[2] + "/" + Std.parseInt(props.data.h[props.id].h["deal_id"]),{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 256, className : "view.shared.io.LiveData", methodName : "select"});
		haxe_Log.trace(props.match.params,{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 257, className : "view.shared.io.LiveData", methodName : "select"});
		haxe_Log.trace(props.match.path,{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 258, className : "view.shared.io.LiveData", methodName : "select"});
		var tmp = App.store.getState().locationStore.history;
		var tmp1 = "" + actPath[2] + "/" + view_shared_io_FormApi.params(shared_Utils.keysList(sData.keys()));
		var tmp2 = "" + actPath[2] + "/" + view_shared_io_FormApi.params(shared_Utils.keysList(sData.keys()));
		tmp.push(tmp1,{ activeContactUrl : tmp2});
		App.store.dispatch(redux_Action.map(action_DataAction.SelectReturnDebits(sData)));
		return sData;
	} else {
		return null;
	}
};
view_shared_io_LiveData.selectType = function(id,data,sData,sT) {
	if(sData == null) {
		sData = new haxe_ds_IntMap();
	}
	switch(sT) {
	case "All":
		var map = data;
		var _g_map = map;
		var _g_keys = map.keys();
		while(_g_keys.hasNext()) {
			var key = _g_keys.next();
			var _g1_value = _g_map.get(key);
			var _g1_key = key;
			var k = _g1_key;
			var v = _g1_value;
			sData.h[k] = v;
		}
		return sData;
	case "One":
		var _g = new haxe_ds_IntMap();
		_g.h[id] = data.h[id];
		return _g;
	case "Unselect":
		sData.remove(id);
		return sData;
	case "UnselectAll":
		sData = new haxe_ds_IntMap();
		return sData;
	default:
		haxe_Log.trace(data,{ fileName : "src/view/shared/io/LiveData.hx", lineNumber : 289, className : "view.shared.io.LiveData", methodName : "selectType"});
		var _g = new haxe_ds_IntMap();
		_g.h[id] = data.h[id];
		return _g;
	}
};
var view_shared_io_FormApi = function(rc,sM) {
	this.ky = shared_Utils.genKey;
	this.comp = rc;
	if(this.comp.props.match != null) {
		haxe_Log.trace(this.comp.props.match.path,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 84, className : "view.shared.io.FormApi", methodName : "new"});
	}
	if(rc.props != null) {
		this.sM = sM == null ? rc.props.sideMenu : sM;
	}
	if(this.sM != null && this.sM.menuBlocks != null && this.comp.props.match != null) {
		if(this.comp.props.match.params.section != null && Object.prototype.hasOwnProperty.call(this.sM.menuBlocks.h,this.comp.props.match.params.section)) {
			haxe_Log.trace(shared_Utils.arrayKeysList(this.sM.menuBlocks.h[this.comp.props.match.params.section].items,"id"),{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 105, className : "view.shared.io.FormApi", methodName : "new"});
		}
	}
};
$hxClasses["view.shared.io.FormApi"] = view_shared_io_FormApi;
view_shared_io_FormApi.__name__ = "view.shared.io.FormApi";
view_shared_io_FormApi.dyn2map = function(d) {
	if(d == null) {
		return null;
	}
	var _g = new haxe_ds_StringMap();
	var _g1 = 0;
	var _g2 = Reflect.fields(d);
	while(_g1 < _g2.length) {
		var f = _g2[_g1];
		++_g1;
		_g.h[f] = Reflect.field(d,f);
	}
	return _g;
};
view_shared_io_FormApi.getTableRoot = function() {
	var tR = $global.location.pathname.split("/");
	tR.shift();
	haxe_Log.trace(tR.toString(),{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 265, className : "view.shared.io.FormApi", methodName : "getTableRoot"});
	return tR.concat([$global.location.pathname]);
};
view_shared_io_FormApi.mHandlers = function(e) {
	e.preventDefault();
	haxe_Log.trace(js_Boot.getClass(e.target),{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 294, className : "view.shared.io.FormApi", methodName : "mHandlers"});
};
view_shared_io_FormApi.renderSelectOptions = function(fel) {
	var sel = fel;
	var _this = ["Audio","Button","Hidden","DatePicker","DateTimePicker","Text","Password","Checkbox","Radio","Select","None","NFormat","TextArea","File","Upload"];
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = _this[i];
	}
	var opts = result;
	var rOpts = [];
	var k = 0;
	var _g = 0;
	while(_g < opts.length) {
		var opt = opts[_g];
		++_g;
		rOpts.push(React.createElement(react_ReactType.fromString("option"),{ key : shared_Utils.genKey(k++,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 526, className : "view.shared.io.FormApi", methodName : "renderSelectOptions"})},opt));
	}
	return rOpts;
};
view_shared_io_FormApi.params = function(ids) {
	return view_shared_io_Param.pInts(ids);
};
view_shared_io_FormApi.sParams = function(ids) {
	return view_shared_io_Param.pStrings(ids);
};
view_shared_io_FormApi.initSideMenu = function(comp,sMb,sM) {
	return view_shared_io_FormApi.initSideMenuMulti(comp,[sMb],sM);
};
view_shared_io_FormApi.initSideMenuMulti = function(comp,sMa,sM) {
	var sma;
	var _g = new haxe_ds_StringMap();
	var _g1 = 0;
	while(_g1 < sMa.length) {
		var sma = sMa[_g1];
		++_g1;
		_g.h[sma.section] = sma;
	}
	sM.menuBlocks = _g;
	return sM;
};
view_shared_io_FormApi.localDate = function(d) {
	if(d == null) {
		d = HxOverrides.dateStr(new Date());
	}
	haxe_Log.trace(d,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 705, className : "view.shared.io.FormApi", methodName : "localDate"});
	haxe_Log.trace(Date.parse(d),{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 706, className : "view.shared.io.FormApi", methodName : "localDate"});
	return DateTools.format(new Date(Date.parse(d)),"%d.%m.%Y %H:%M");
};
view_shared_io_FormApi.obj2map = function(obj,fields) {
	var m = new haxe_ds_StringMap();
	if(fields == null) {
		fields = Reflect.fields(obj);
	}
	var _g = 0;
	while(_g < fields.length) {
		var field = fields[_g];
		++_g;
		m.h[field] = Reflect.field(obj,field);
	}
	return m;
};
view_shared_io_FormApi.filterMap = function(m,keys) {
	var r = new haxe_ds_StringMap();
	var _g = 0;
	while(_g < keys.length) {
		var k = keys[_g];
		++_g;
		r.h[k] = m.h[k];
	}
	return r;
};
view_shared_io_FormApi.prototype = {
	requests: null
	,dataAccess: null
	,dbData: null
	,dbMetaData: null
	,formColElements: null
	,_menuItems: null
	,fState: null
	,_fstate: null
	,modalFormTableHeader: null
	,modalFormTableBody: null
	,autoFocus: null
	,initialState: null
	,section: null
	,comp: null
	,sM: null
	,doAction: function(defaultAction) {
		if(this.comp.props.match != null && (this.comp.props.match.params.action != null || defaultAction != null)) {
			var action = this.comp.props.match.params.action != null ? this.comp.props.match.params.action : defaultAction;
			var c = js_Boot.getClass(this.comp);
			haxe_Log.trace("going 2 call " + c.__name__ + " " + action,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 115, className : "view.shared.io.FormApi", methodName : "doAction"});
			this.executeMethod(action);
		}
	}
	,createStateValuesArray: function(data,view) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < data.length) {
			var r = data[_g1];
			++_g1;
			_g.push(this.createStateValues(r,view));
		}
		return _g;
	}
	,createStateValues: function(data,view) {
		var vState = new haxe_ds_StringMap();
		haxe_Log.trace(new haxe_ds__$StringMap_StringMapKeyIterator(data.h),{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 128, className : "view.shared.io.FormApi", methodName : "createStateValues"});
		haxe_Log.trace(new haxe_ds__$StringMap_StringMapKeyIterator(view.h),{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 129, className : "view.shared.io.FormApi", methodName : "createStateValues"});
		var h = data.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			if(Object.prototype.hasOwnProperty.call(view.h,k)) {
				var v = data.h[k];
				vState.h[k] = v;
			}
		}
		haxe_Log.trace(vState == null ? "null" : haxe_ds_StringMap.stringify(vState.h),{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 138, className : "view.shared.io.FormApi", methodName : "createStateValues"});
		return vState;
	}
	,selectedRowsMap: function(state) {
		var _g = [];
		var _g1 = 0;
		var _g2 = state.selectedRows;
		while(_g1 < _g2.length) {
			var r = _g2[_g1];
			++_g1;
			_g.push(this.selectedRowMap(r));
		}
		return _g;
	}
	,selectedRowMap: function(row) {
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		var _g2 = row.cells;
		while(_g1 < _g2.length) {
			var c = _g2[_g1];
			++_g1;
			_g.h[c.dataset.name] = c.innerHTML;
		}
		var rM = _g;
		var v = row.dataset.id;
		rM.h["id"] = v;
		return rM;
	}
	,setSectionComponent: function(s) {
		this.section = s;
	}
	,itemHandler: function(e) {
		haxe_Log.trace(Reflect.fields(e),{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 181, className : "view.shared.io.FormApi", methodName : "itemHandler"});
		e.preventDefault();
		var action = (js_Boot.__cast(e.target , HTMLButtonElement)).getAttribute("data-action");
		haxe_Log.trace(action,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 184, className : "view.shared.io.FormApi", methodName : "itemHandler"});
		this.callMethod(action,e);
	}
	,callMethod: function(method,e) {
		var eTarget = js_Boot.__cast(e.target , HTMLElement);
		var targetSection = eTarget.dataset.section;
		haxe_Log.trace(">>" + targetSection + "<< " + this.comp.props.match.params.section,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 194, className : "view.shared.io.FormApi", methodName : "callMethod"});
		if(targetSection == "Edit" && this.comp.state.dataGrid != null) {
			if(!this.comp.state.dataGrid.state.selectedRows.keys().hasNext()) {
				haxe_Log.trace(this.comp.state.dataGrid.state.selectedRows.toString(),{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 199, className : "view.shared.io.FormApi", methodName : "callMethod"});
				return false;
			}
		}
		if(eTarget.dataset.then != null) {
			shared_Utils.extend(this.comp.props.location.state,{ then : eTarget.dataset.then});
		}
		haxe_Log.trace(this.comp.props.location.state,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 207, className : "view.shared.io.FormApi", methodName : "callMethod"});
		if(targetSection != null && targetSection != this.comp.props.match.params.section) {
			haxe_Log.trace("" + targetSection + "." + method,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 210, className : "view.shared.io.FormApi", methodName : "callMethod"});
			if(method == "reset" && this.comp.props.location.state != null && this.comp.props.location.state.activeContactUrl != null) {
				haxe_Log.trace("goBack",{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 214, className : "view.shared.io.FormApi", methodName : "callMethod"});
				this.comp.props.history.goBack();
				return true;
			}
			var tmp = this.comp.props.history;
			var tmp1 = this.getUrl(eTarget.dataset.action,targetSection);
			tmp.push(tmp1,this.comp.props.location.state);
			return true;
		}
		if(targetSection != null) {
			haxe_Log.trace(this.getUrl(eTarget.dataset.action),{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 223, className : "view.shared.io.FormApi", methodName : "callMethod"});
			var c = js_Boot.getClass(this.comp);
			haxe_Log.trace(c.__name__,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 224, className : "view.shared.io.FormApi", methodName : "callMethod"});
		}
		var formEl = e.target.form;
		haxe_Log.trace(formEl,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 227, className : "view.shared.io.FormApi", methodName : "callMethod"});
		return this.executeMethod(method,formEl != null ? new FormData(formEl) : null);
	}
	,executeMethod: function(method,r) {
		haxe_Log.trace(method,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 232, className : "view.shared.io.FormApi", methodName : "executeMethod"});
		haxe_Log.trace(r,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 233, className : "view.shared.io.FormApi", methodName : "executeMethod"});
		var fun = Reflect.field(this.comp,method);
		if(Reflect.isFunction(fun)) {
			fun.apply(this.comp,[r]);
			return true;
		}
		haxe_Log.trace("" + method + " is not a function",{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 242, className : "view.shared.io.FormApi", methodName : "executeMethod"});
		return false;
	}
	,getUrl: function(action,targetSection) {
		var match = this.comp.props.match;
		var baseUrl = match.path.split(":section")[0];
		var section = match.params.section;
		var id = this.comp.props.location.hash == "" || action == "insert" ? "" : "/" + HxOverrides.substr(this.comp.props.location.hash,1,null);
		return "" + baseUrl + (targetSection == null ? section : targetSection) + "/" + action + id;
	}
	,toParams: function(to) {
		var id = this.comp.props.match.params.id;
		if(id == null) {
			return "";
		} else {
			return "/" + id;
		}
	}
	,selectAllRows: function(state,unselect) {
		if(unselect == null) {
			unselect = false;
		}
		var _g = 0;
		var _g1 = state.selectedRows;
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(unselect) {
				r.classList.remove("is-selected");
			} else {
				r.classList.add("is-selected");
			}
		}
	}
	,render: function(content,err) {
		if(this.sM == null || this.sM.menuBlocks == null) {
			haxe_Log.trace(Type.typeof(content),{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 300, className : "view.shared.io.FormApi", methodName : "render"});
			return React.createElement(react_ReactType.fromString("div"),{ className : "columns"},React.createElement(react_ReactType.fromString("div"),{ className : "formsContainer"},content),err);
		}
		if(Object.prototype.hasOwnProperty.call(this.sM.menuBlocks.h,this.sM.section)) {
			var mB = this.sM.menuBlocks.h[this.sM.section];
			if(this.comp.state.mHandlers != null && this.comp.state.mHandlers.length > mB.items.length) {
				mB.items = this.comp.state.mHandlers;
				this.sM.menuBlocks.h[this.sM.section] = mB;
			}
		}
		if(this.sM.section != null) {
			haxe_Log.trace(this.sM.section + ":" + this.comp.props.match.params.section,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 322, className : "view.shared.io.FormApi", methodName : "render"});
			if(this.sM.section != this.comp.props.match.params.section && this.comp.props.match.params.section != null) {
				this.sM.section = this.comp.props.match.params.section;
			}
		}
		var tmp = react_ReactType.fromString("div");
		var tmp1 = React.createElement(react_ReactType.fromString("div"),{ className : "formsContainer"},content);
		var tmp2 = view_shared_Menu._renderWrapper;
		var tmp3 = Object.assign({ },this.sM,{ className : "menu", parentComponent : this.comp, itemHandler : $bind(this,this.itemHandler)});
		return React.createElement(tmp,{ className : "columns"},tmp1,React.createElement(tmp2,tmp3),err);
	}
	,renderField: function(name,k,state) {
		var formField = state.fields.h[name];
		if(k == 0) {
			haxe_Log.trace(state.handleChange,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 341, className : "view.shared.io.FormApi", methodName : "renderField"});
		}
		var _g = formField.type;
		if(_g == null) {
			return [React.createElement(react_ReactType.fromString("label"),{ key : shared_Utils.genKey(k++,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 349, className : "view.shared.io.FormApi", methodName : "renderField"})},formField.label),React.createElement(react_ReactType.fromString("input"),{ key : shared_Utils.genKey(k++,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 349, className : "view.shared.io.FormApi", methodName : "renderField"}), name : name, defaultValue : state.values.h[name], onChange : formField.disabled ? null : state.handleChange, readOnly : formField.disabled})];
		} else if(_g == "Hidden") {
			return React.createElement(react_ReactType.fromString("input"),{ key : shared_Utils.genKey(k++,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 347, className : "view.shared.io.FormApi", methodName : "renderField"}), name : name, type : "hidden", defaultValue : state.values.h[name], readOnly : formField.disabled});
		} else {
			return [React.createElement(react_ReactType.fromString("label"),{ key : shared_Utils.genKey(k++,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 349, className : "view.shared.io.FormApi", methodName : "renderField"})},formField.label),React.createElement(react_ReactType.fromString("input"),{ key : shared_Utils.genKey(k++,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 349, className : "view.shared.io.FormApi", methodName : "renderField"}), name : name, defaultValue : state.values.h[name], onChange : formField.disabled ? null : state.handleChange, readOnly : formField.disabled})];
		}
	}
	,renderElements: function(cState) {
		haxe_Log.trace(Lambda.empty(cState.data),{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 358, className : "view.shared.io.FormApi", methodName : "renderElements"});
		if(Lambda.empty(cState.data)) {
			return null;
		}
		var h = cState.fields.h;
		var field_h = h;
		var field_keys = Object.keys(h);
		var field_length = field_keys.length;
		var field_current = 0;
		var elements = [];
		var k = 0;
		while(field_current < field_length) {
			var field = field_keys[field_current++];
			var tmp = react_ReactType.fromString("div");
			var tmp1 = shared_Utils.genKey(k++,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 367, className : "view.shared.io.FormApi", methodName : "renderElements"});
			var tmp2 = cState.fields.h[field].type == "Hidden" ? null : "formField";
			var tmp3 = this.renderField(field,k,cState);
			elements.push(React.createElement(tmp,{ key : tmp1, className : tmp2},tmp3));
		}
		return elements;
	}
	,createElementsArray: function() {
		if(Lambda.empty(this._fstate.dbTable)) {
			return null;
		}
		this.formColElements = new haxe_ds_StringMap();
		this.addFormColumns();
		var fields = new haxe_ds__$StringMap_StringMapKeyIterator(this._fstate.fields.h);
		var pID = "";
		var name = fields;
		while(name.hasNext()) {
			var name1 = name.next();
			if(this._fstate.fields.h[name1].type == "Hidden" && this._fstate.fields.h[name1].primary) {
				pID = name1;
				break;
			}
		}
		var _g = 0;
		var _g1 = this._fstate.dbTable;
		while(_g < _g1.length) {
			var dR = _g1[_g];
			++_g;
			fields = new haxe_ds__$StringMap_StringMapKeyIterator(this._fstate.fields.h);
			var name = fields;
			while(name.hasNext()) {
				var name1 = name.next();
				if(this._fstate.fields.h[name1].type == "Hidden") {
					continue;
				}
				var fF = this._fstate.fields.h[name1];
				if(name1 == "geburts_datum") {
					haxe_Log.trace(name1 + "=>" + (fF.displayFormat == null ? "null" : "" + fF.displayFormat),{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 403, className : "view.shared.io.FormApi", methodName : "createElementsArray"});
				}
				this.formColElements.h[name1].push({ className : fF.className, name : name1, value : Std.string(dR.h[name1]), displayFormat : fF.displayFormat, type : fF.type, disabled : fF.disabled, required : fF.required, placeholder : fF.placeholder, validate : fF.validate});
			}
		}
		return this.renderColumns();
	}
	,addFormColumns: function() {
		var h = this._fstate.fields.h;
		var name_h = h;
		var name_keys = Object.keys(h);
		var name_length = name_keys.length;
		var name_current = 0;
		while(name_current < name_length) {
			var name = name_keys[name_current++];
			if(this._fstate.fields.h[name].type == "Hidden") {
				continue;
			}
			var this1 = this.formColElements;
			var v = [];
			this1.h[name] = v;
		}
	}
	,renderColumns: function() {
		var h = this.formColElements.h;
		var name_h = h;
		var name_keys = Object.keys(h);
		var name_length = name_keys.length;
		var name_current = 0;
		var cols = [];
		var col = 0;
		while(name_current < name_length) {
			var name = name_keys[name_current++];
			cols.push(React.createElement(react_ReactType.fromString("div"),{ key : shared_Utils.genKey(name + "_" + col++,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 445, className : "view.shared.io.FormApi", methodName : "renderColumns"}), className : "col", 'data-name' : name},this.renderRows(name)));
		}
		return cols;
	}
	,renderColumnHeaders: function() {
		var h = this._fstate.fields.h;
		var name_h = h;
		var name_keys = Object.keys(h);
		var name_length = name_keys.length;
		var name_current = 0;
		var cols = [];
		var c = 0;
		while(name_current < name_length) {
			var name = name_keys[name_current++];
			if(this._fstate.fields.h[name].type == "Hidden") {
				continue;
			}
			var formField = this._fstate.fields.h[name];
			cols.push(React.createElement(react_ReactType.fromString("div"),{ key : shared_Utils.genKey(c++,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 461, className : "view.shared.io.FormApi", methodName : "renderColumnHeaders"}), className : "col"},React.createElement(react_ReactType.fromString("div"),{ className : "form-table-cell"},React.createElement(react_ReactType.fromString("div"),{ className : "header", 'data-name' : name},formField.label))));
		}
		return cols;
	}
	,renderRowCell: function(fF,k) {
		var model = fF.name;
		var _g = fF.type;
		if(_g == null) {
			return React.createElement(react_ReactType.fromString("input"),{ key : shared_Utils.genKey(k++,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 491, className : "view.shared.io.FormApi", methodName : "renderRowCell"}), name : model, type : "hidden"});
		} else {
			switch(_g) {
			case "Checkbox":
				return React.createElement(react_ReactType.fromString("input"),{ key : shared_Utils.genKey(k++,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 480, className : "view.shared.io.FormApi", methodName : "renderRowCell"}), name : model, disabled : fF.disabled});
			case "Hidden":
				if(fF.primary) {
					return null;
				} else {
					return React.createElement(react_ReactType.fromString("inputl"),{ key : shared_Utils.genKey(k++,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 483, className : "view.shared.io.FormApi", methodName : "renderRowCell"}), name : model, type : "hidden"});
				}
				break;
			case "Select":
				var tmp = react_ReactType.fromString("select");
				var tmp1 = view_shared_io_FormApi.renderSelectOptions(fF.value);
				return React.createElement(tmp,{ name : model},tmp1);
			default:
				return React.createElement(react_ReactType.fromString("input"),{ key : shared_Utils.genKey(k++,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 491, className : "view.shared.io.FormApi", methodName : "renderRowCell"}), name : model, type : "hidden"});
			}
		}
	}
	,renderRows: function(name) {
		var elements = [];
		var k = 0;
		var tmp = react_ReactType.fromString("div");
		var tmp1 = { key : shared_Utils.genKey(k++,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 502, className : "view.shared.io.FormApi", methodName : "renderRows"}), className : "form-table-cell", style : { minHeight : "0px", height : "0px", overflow : "hidden", padding : "0px 0.3rem"}};
		var tmp2 = this._fstate.fields.h[name];
		elements.push(React.createElement(tmp,tmp1,React.createElement(react_ReactType.fromString("div"),{ className : "header", 'data-name' : name},tmp2.label)));
		var _g = 0;
		var _g1 = this.formColElements.h[name];
		while(_g < _g1.length) {
			var fF = _g1[_g];
			++_g;
			elements.push(React.createElement(react_ReactType.fromString("div"),{ key : shared_Utils.genKey(k++,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 511, className : "view.shared.io.FormApi", methodName : "renderRows"}), className : "form-table-cell"},this.renderRowCell(fF,k++)));
		}
		return elements;
	}
	,renderModalFormBodyHeader: function() {
		this.modalFormTableHeader = React.createRef();
		if(this._fstate.dbTable == null || this._fstate.dbTable.length == 0) {
			return null;
		}
		return React.createElement(react_ReactType.fromString("section"),{ ref : this.modalFormTableHeader, className : "modal-card-body header"},this.renderColumnHeaders());
	}
	,renderModalScreen: function(content) {
		haxe_Log.trace(App.modalBox,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 588, className : "view.shared.io.FormApi", methodName : "renderModalScreen"});
		this.modalFormTableBody = React.createRef();
		react_ReactRef.get_current(App.modalBox).classList.toggle("is-active");
		var click = function(_) {
			react_ReactRef.get_current(App.modalBox).classList.toggle("is-active");
		};
		var tmp = react_ReactType.fromComp(React_Fragment);
		var tmp1 = React.createElement(react_ReactType.fromString("div"),{ className : "modal-background", onClick : click});
		var tmp2 = react_ReactType.fromString("div");
		var tmp3 = react_ReactType.fromString("header");
		var tmp4 = React.createElement(react_ReactType.fromString("p"),{ className : "modal-card-title"},"dada...");
		var tmp5 = React.createElement(tmp3,{ className : "modal-card-head"},tmp4,React.createElement(react_ReactType.fromString("button"),{ className : "delete", 'aria-label' : "close", onClick : click}));
		var tmp3 = React.createElement(tmp2,{ className : "modal-card"},tmp5,React.createElement(react_ReactType.fromString("div"),{ ref : this.modalFormTableBody, className : "modal-card-body"},content));
		return ReactDOM.render(React.createElement(tmp,{ },tmp1,tmp3),react_ReactRef.get_current(App.modalBox));
	}
	,adjustModalFormColumns: function() {
		haxe_Log.trace(react_ReactRef.get_current(this.modalFormTableHeader),{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 615, className : "view.shared.io.FormApi", methodName : "adjustModalFormColumns"});
		haxe_Log.trace(react_ReactRef.get_current(this.modalFormTableBody).children,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 617, className : "view.shared.io.FormApi", methodName : "adjustModalFormColumns"});
		var bodyCols = react_ReactRef.get_current(this.modalFormTableBody).children;
		var headerCols = react_ReactRef.get_current(this.modalFormTableHeader).children;
		haxe_Log.trace(bodyCols,{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 620, className : "view.shared.io.FormApi", methodName : "adjustModalFormColumns"});
		if(bodyCols == null) {
			return;
		}
		var i = 0;
		var _g = 0;
		while(_g < bodyCols.length) {
			var child = bodyCols[_g];
			++_g;
			headerCols.item(i++).setAttribute("style","width:" + child.offsetWidth + "px");
		}
	}
	,closeWait: function() {
		this.comp.setState({ loading : false});
		haxe_Log.trace("Done waiting",{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 636, className : "view.shared.io.FormApi", methodName : "closeWait"});
	}
	,renderWait: function() {
		if(this.comp.state.values != null && this.comp.state.values.h["loadResult"] != null) {
			haxe_Log.trace(this.comp.state.values.h["closeAfter"] != -1 ? "Y" : "N",{ fileName : "src/view/shared/io/FormApi.hx", lineNumber : 647, className : "view.shared.io.FormApi", methodName : "renderWait"});
			if(this.comp.state.values.h["closeAfter"] != -1) {
				var t = haxe_Timer.delay($bind(this,this.closeWait),this.comp.state.values.h["closeAfter"] != null ? this.comp.state.values.h["closeAfter"] : 8000);
			}
			var tmp = react_ReactType.fromString("div");
			var tmp1 = react_ReactType.fromString("div");
			var tmp2 = this.comp.state.values.h["loadResult"];
			return React.createElement(tmp,{ className : "loader-screen"},React.createElement(tmp1,{ className : "loader-box"},React.createElement(react_ReactType.fromString("div"),{ className : "loader-content"},tmp2)));
		} else {
			var tmp = react_ReactType.fromString("div");
			var tmp1 = react_ReactType.fromString("div");
			return React.createElement(tmp,{ className : "loader-screen"},React.createElement(tmp1,{ className : "loader-box"},React.createElement(react_ReactType.fromString("div"),{ className : "loader loader-content", style : { width : "6rem", height : "6rem", margin : "auto", borderWidth : "0.64rem"}})));
		}
	}
	,ky: null
	,__class__: view_shared_io_FormApi
};
var view_shared_io_Param = function() { };
$hxClasses["view.shared.io.Param"] = view_shared_io_Param;
view_shared_io_Param.__name__ = "view.shared.io.Param";
view_shared_io_Param.pInts = function(ints) {
	var result = new Array(ints.length);
	var _g = 0;
	var _g1 = ints.length;
	while(_g < _g1) {
		var i = _g++;
		var i1 = ints[i];
		result[i] = i1 == null ? "null" : "" + i1;
	}
	return result.join("|");
};
view_shared_io_Param.pStrings = function(ids) {
	var result = new Array(ids.length);
	var _g = 0;
	var _g1 = ids.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = ids[i];
	}
	return result.join("|");
};
var view_shared_FormBuilder = function(rc) {
	this.comp = rc;
	this.i = 1;
	this.requests = [];
	var tmp = rc.props != null;
};
$hxClasses["view.shared.FormBuilder"] = view_shared_FormBuilder;
view_shared_FormBuilder.__name__ = "view.shared.FormBuilder";
view_shared_FormBuilder.prototype = {
	requests: null
	,dataAccess: null
	,dbData: null
	,dbMetaData: null
	,formColElements: null
	,_menuItems: null
	,fState: null
	,_fstate: null
	,initialState: null
	,section: null
	,comp: null
	,sM: null
	,i: null
	,renderElement: function(el,label) {
		var tmp = react_ReactType.fromString("div");
		var tmp1 = { key : this.i++, className : "g_row_2", role : "rowgroup"};
		var tmp2 = this.i + "_l";
		var tmp3 = React.createElement(react_ReactType.fromString("div"),{ key : tmp2, className : "g_cell", role : "cell"},label);
		var tmp2 = this.i + "_r";
		return React.createElement(tmp,tmp1,tmp3,React.createElement(react_ReactType.fromString("div"),{ key : tmp2, className : "g_cell_r", role : "cell"},el));
	}
	,renderOption: function(si,label,value) {
		if(value == null) {
			return React.createElement(react_ReactType.fromString("option"),{ key : this.i++},label);
		} else {
			return React.createElement(react_ReactType.fromString("option"),{ key : this.i++, title : value, value : value},label);
		}
	}
	,renderSelect: function(options) {
		var si = 1;
		var _g = [];
		var h = options.h;
		var _g1_h = h;
		var _g1_keys = Object.keys(h);
		var _g1_length = _g1_keys.length;
		var _g1_current = 0;
		while(_g1_current < _g1_length) {
			var key = _g1_keys[_g1_current++];
			var _g2_key = key;
			var _g2_value = _g1_h[key];
			var value = _g2_key;
			var label = _g2_value;
			_g.push(this.renderOption(si++,label,value));
		}
		return _g;
	}
	,renderRadio: function(name,options,actValue) {
		var _g = [];
		var h = options.h;
		var _g1_h = h;
		var _g1_keys = Object.keys(h);
		var _g1_length = _g1_keys.length;
		var _g1_current = 0;
		while(_g1_current < _g1_length) {
			var key = _g1_keys[_g1_current++];
			var _g2_key = key;
			var _g2_value = _g1_h[key];
			var value = _g2_key;
			var label = _g2_value;
			var check = actValue == value ? "on" : "";
			var tmp = react_ReactType.fromComp(React_Fragment);
			var tmp1 = { key : this.i++};
			var tmp2 = "label_" + this.i;
			var tmp3 = React.createElement(react_ReactType.fromString("label"),{ key : tmp2},label);
			var tmp4 = "option_" + this.i;
			_g.push(React.createElement(tmp,tmp1,tmp3,React.createElement(react_ReactType.fromString("input"),{ key : tmp4, type : "radio", name : name, defaultChecked : check, onChange : $bind(this,this.onChange), value : value})));
		}
		return _g;
	}
	,renderFormInputElements: function(fields,initialData,compOnChange) {
		var _g = [];
		var h = fields.h;
		var _g1_h = h;
		var _g1_keys = Object.keys(h);
		var _g1_length = _g1_keys.length;
		var _g1_current = 0;
		while(_g1_current < _g1_length) {
			var key = _g1_keys[_g1_current++];
			var _g2_key = key;
			var _g2_value = _g1_h[key];
			var name = _g2_key;
			var field = _g2_value;
			var value = Reflect.field(initialData,name);
			if(name == "entry_date") {
				haxe_Log.trace(field.type + (" " + name + ":") + Std.string(value),{ fileName : "src/view/shared/FormBuilder.hx", lineNumber : 119, className : "view.shared.FormBuilder", methodName : "renderFormInputElements"});
			}
			var _g1 = field.type;
			var tmp;
			if(_g1 == null) {
				tmp = this.renderElement(field.cellFormat != null ? React.createElement(react_ReactType.fromString("input"),{ key : this.i++, name : name, onChange : $bind(this,this.onChange), type : "text", value : field.cellFormat(value), disabled : field.disabled, required : field.required}) : React.createElement(react_ReactType.fromString("input"),{ key : this.i++, name : name, onChange : $bind(this,this.onChange), type : "text", defaultValue : value, disabled : field.disabled, required : field.required}),field.label);
			} else {
				switch(_g1) {
				case "Button":
					tmp = React.createElement(react_ReactType.fromString("button"),{ key : this.i++, type : "submit"},value);
					break;
				case "Checkbox":
					var checked;
					switch(value) {
					case "1":case "TRUE":case "on":case true:
						checked = true;
						break;
					default:
						checked = false;
					}
					tmp = this.renderElement(React.createElement(react_ReactType.fromString("input"),{ key : this.i++, name : name, type : "checkbox", defaultChecked : checked, onChange : $bind(this,this.onChange)}),field.label);
					break;
				case "DatePicker":
					var dC = { comp : this.comp, disabled : field.disabled, name : name, onChange : $bind(this,this.onChange), options : { dateFormat : field.displayFormat, defaultDate : "00.00.0000", _inline : field.disabled}, value : value};
					var tmp1 = react_ReactType.fromString("div");
					var tmp2 = { key : this.i++, className : "g_row_2", role : "rowgroup"};
					var tmp3 = this.i + "_l";
					tmp = React.createElement(tmp1,tmp2,React.createElement(react_ReactType.fromString("div"),{ key : tmp3, className : "g_cell", role : "cell"},field.label),React.createElement(react_ReactType.fromString("div"),{ key : this.i + "_r", className : "g_cell_r", role : "cell"},React.createElement(react_ReactType.fromComp(react_DateControl),dC)));
					break;
				case "DateTimePicker":
					var dTC = { comp : this.comp, name : name, disabled : field.disabled, onChange : $bind(this,this.onChange), options : { dateFormat : field.displayFormat, defaultDate : value, time_24hr : true, _inline : field.disabled}, value : value};
					var tmp4 = react_ReactType.fromString("div");
					var tmp5 = { key : this.i++, className : "g_row_2", role : "rowgroup"};
					var tmp6 = this.i + "_l";
					tmp = React.createElement(tmp4,tmp5,React.createElement(react_ReactType.fromString("div"),{ key : tmp6, className : "g_cell", role : "cell"},field.label),React.createElement(react_ReactType.fromString("div"),{ key : this.i + "_r", className : "g_cell_r", role : "cell"},React.createElement(react_ReactType.fromComp(react_DateTimeControl),dTC)));
					break;
				case "Hidden":
					tmp = React.createElement(react_ReactType.fromString("input"),{ key : this.i++, type : "hidden", name : name, defaultValue : value});
					break;
				case "NFormat":
					var nfP = { decimalScale : 2, decimalSeparator : ",", fixedDecimalScale : true, isNumericString : true, name : name, onChange : $bind(this,this.onChange), onValueChange : function(values) {
						haxe_Log.trace(values,{ fileName : "src/view/shared/FormBuilder.hx", lineNumber : 214, className : "view.shared.FormBuilder", methodName : "renderFormInputElements"});
					}, removeFormatting : function(fV) {
						haxe_Log.trace(Std.string(parseFloat(fV)),{ fileName : "src/view/shared/FormBuilder.hx", lineNumber : 218, className : "view.shared.FormBuilder", methodName : "renderFormInputElements"});
						return Std.string(parseFloat(fV));
					}, suffix : " €", value : value};
					tmp = React.createElement(react_ReactType.fromString("div"),{ key : this.i++, className : "g_row_2", role : "rowgroup"},React.createElement(react_ReactType.fromString("div"),{ className : "g_cell", role : "cell"},field.label),React.createElement(react_ReactType.fromString("div"),{ className : "g_cell_r", role : "cell"},React.createElement(react_ReactType.fromComp(react_NumberFormat),nfP)));
					break;
				case "Radio":
					haxe_Log.trace(field.type + (" " + name + ":") + Std.string(value),{ fileName : "src/view/shared/FormBuilder.hx", lineNumber : 145, className : "view.shared.FormBuilder", methodName : "renderFormInputElements"});
					var tmp7 = react_ReactType.fromString("div");
					var tmp8 = { key : this.i++, className : "g_row_2_radio", role : "rowgroup"};
					var tmp9 = name + "_" + this.i;
					var tmp10 = React.createElement(react_ReactType.fromString("div"),{ key : tmp9, className : "g_cell", role : "cell"},field.label);
					var tmp11 = react_ReactType.fromString("div");
					var tmp12 = this.renderRadio(name,field.options,value);
					tmp = React.createElement(tmp7,tmp8,tmp10,React.createElement(tmp11,{ key : name + "_opt", className : "g_cell_r optLabel", role : "cell"},tmp12));
					break;
				case "Select":
					haxe_Log.trace("" + this.i + ":: " + name + ": " + Std.string(value),{ fileName : "src/view/shared/FormBuilder.hx", lineNumber : 153, className : "view.shared.FormBuilder", methodName : "renderFormInputElements"});
					tmp = this.renderElement(React.createElement(react_ReactType.fromString("select"),{ key : this.i++, name : name, onChange : $bind(this,this.onChange), className : field.className, defaultValue : value, multiple : field.multiple},this.renderSelect(field.options)),field.label);
					break;
				case "TextArea":
					if(value == null) {
						value = "";
					}
					var tmp13 = react_ReactType.fromString("div");
					var tmp14 = { key : this.i++, className : "g_row_2 g_span_2", role : "rowgroup"};
					var tmp15 = this.i + "_l";
					tmp = React.createElement(tmp13,tmp14,React.createElement(react_ReactType.fromString("div"),{ key : tmp15, className : "g_cell", role : "cell"},field.label),React.createElement(react_ReactType.fromString("div"),{ key : this.i + "_r", className : "g_cell", role : "cell"},React.createElement(react_ReactType.fromString("textarea"),{ name : name, value : value, onChange : $bind(this,this.onChange)})));
					break;
				case "Upload":
					tmp = React.createElement(react_ReactType.fromString("div"),{ key : this.i++, className : "g_row_2", role : "rowgroup"},React.createElement(react_ReactType.fromString("div"),{ className : "g_cell", role : "cell"},field.label),React.createElement(react_ReactType.fromString("div"),{ className : "g_cell_r", role : "cell"},"Dummy"));
					break;
				default:
					tmp = this.renderElement(field.cellFormat != null ? React.createElement(react_ReactType.fromString("input"),{ key : this.i++, name : name, onChange : $bind(this,this.onChange), type : "text", value : field.cellFormat(value), disabled : field.disabled, required : field.required}) : React.createElement(react_ReactType.fromString("input"),{ key : this.i++, name : name, onChange : $bind(this,this.onChange), type : "text", defaultValue : value, disabled : field.disabled, required : field.required}),field.label);
				}
			}
			_g.push(tmp);
		}
		return _g;
	}
	,renderForm: function(props,initialState) {
		haxe_Log.trace(props.model,{ fileName : "src/view/shared/FormBuilder.hx", lineNumber : 261, className : "view.shared.FormBuilder", methodName : "renderForm"});
		var sK = 0;
		var tmp = react_ReactType.fromString("form");
		var tmp1 = { key : props.model, ref : props.formRef, name : props.model, className : "tabComponentForm formField"};
		var tmp2 = react_ReactType.fromString("div");
		var tmp3 = props.model + "caption";
		return React.createElement(tmp,tmp1,React.createElement(tmp2,{ key : props.model + "_grid_box", className : "grid_box", role : "table", 'aria-label' : "Destinations"},React.createElement(react_ReactType.fromString("div"),{ key : tmp3, className : "g_caption"},props.title),"\t\t\t",this.renderFormInputElements(props.fields,initialState)));
	}
	,renderButton: function(mItem,i) {
		if(mItem.onlySm) {
			return null;
		}
		if(mItem.separator) {
			return React.createElement(react_ReactType.fromString("hr"),{ className : "menuSeparator"});
		}
		haxe_Log.trace(mItem.handler,{ fileName : "src/view/shared/FormBuilder.hx", lineNumber : 282, className : "view.shared.FormBuilder", methodName : "renderButton"});
		return React.createElement(react_ReactType.fromComp(bulma_$components_Button),{ key : i++, onClick : mItem.handler, 'data-section' : mItem.section, disabled : mItem.disabled, type : "button"},mItem.label);
	}
	,itemHandler: function(e) {
		e.preventDefault();
		var action = (js_Boot.__cast(e.target , HTMLElement)).getAttribute("data-action");
		haxe_Log.trace(action,{ fileName : "src/view/shared/FormBuilder.hx", lineNumber : 293, className : "view.shared.FormBuilder", methodName : "itemHandler"});
		var mP = Reflect.field(this.comp.state.formApi,"callMethod");
		mP.apply(this.comp.state.formApi,[action,e]);
	}
	,hidden: function(cm) {
		return React.createElement(react_ReactType.fromString("input"),{ type : "hidden", name : cm});
	}
	,onChange: function(ev) {
		switch(ev.target.type) {
		case "checkbox":
			haxe_Log.trace("" + Std.string(ev.target.name) + ":" + Std.string(ev.target.value) + ":" + Std.string(ev.target.checked),{ fileName : "src/view/shared/FormBuilder.hx", lineNumber : 310, className : "view.shared.FormBuilder", methodName : "onChange"});
			var tmp;
			switch(ev.target.checked) {
			case "1":case "TRUE":case "on":case true:
				tmp = 1;
				break;
			default:
				tmp = 0;
			}
			view_shared_io_BaseForm.doChange(this.comp,ev.target.name,tmp);
			haxe_Log.trace("" + Std.string(ev.target.name) + ":" + Std.string(ev.target.value) + ":" + Std.string(ev.target.checked),{ fileName : "src/view/shared/FormBuilder.hx", lineNumber : 320, className : "view.shared.FormBuilder", methodName : "onChange"});
			break;
		case "select-multiple":case "select-one":
			view_shared_io_BaseForm.doChange(this.comp,ev.target.name,ev.target.value);
			break;
		default:
			view_shared_io_BaseForm.doChange(this.comp,ev.target.name,ev.target.value);
		}
	}
	,__class__: view_shared_FormBuilder
};
var view_accounting_returndebit_Files = function(props) {
	React_Component.call(this,props);
	view_accounting_returndebit_Files._instance = this;
	this.ormRefs = new haxe_ds_StringMap();
	this.dataAccess = model_accounting_ReturnDebitModel.dataAccess;
	this.dataDisplay = model_accounting_ReturnDebitModel.dataGridDisplay;
	this.formDataAccess = new haxe_ds_StringMap();
	var model = "deals";
	var this1 = this.formDataAccess;
	var v;
	switch(model) {
	case "accounts":
		v = model_accounting_AccountsModel.dataAccess;
		break;
	case "contacts":
		v = model_contacts_ContactsModel.dataAccess;
		break;
	case "deals":
		v = model_deals_DealsModel.dataAccess;
		break;
	default:
		v = null;
	}
	this1.h[model] = v;
	var model = "contacts";
	var this1 = this.formDataAccess;
	var v;
	switch(model) {
	case "accounts":
		v = model_accounting_AccountsModel.dataAccess;
		break;
	case "contacts":
		v = model_contacts_ContactsModel.dataAccess;
		break;
	case "deals":
		v = model_deals_DealsModel.dataAccess;
		break;
	default:
		v = null;
	}
	this1.h[model] = v;
	var model = "accounts";
	var this1 = this.formDataAccess;
	var v;
	switch(model) {
	case "accounts":
		v = model_accounting_AccountsModel.dataAccess;
		break;
	case "contacts":
		v = model_contacts_ContactsModel.dataAccess;
		break;
	case "deals":
		v = model_deals_DealsModel.dataAccess;
		break;
	default:
		v = null;
	}
	this1.h[model] = v;
	view_accounting_returndebit_Files.menuItems[0].handler = $bind(this,this.importReturnDebit);
	view_accounting_returndebit_Files.menuItems[0].formField.id = App._app.state.userState.dbUser.id;
	view_accounting_returndebit_Files.menuItems[0].formField.jwt = App._app.state.userState.dbUser.jwt;
	haxe_Log.trace(view_accounting_returndebit_Files.menuItems[0].formField,{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 156, className : "view.accounting.returndebit.Files", methodName : "new"});
	var _g = new haxe_ds_StringMap();
	_g.h["hint"] = "Rücklastschriften zum Hochladen auswählen";
	this.state = App.initEState({ data : _g, errors : [], action : props.match.params.action == null ? "importReturnDebit" : props.match.params.action, sideMenu : view_shared_io_FormApi.initSideMenuMulti(this,[{ dataClassPath : "admin.Debit", label : "Liste", section : "List", items : view_accounting_returndebit_List.menuItems},{ dataClassPath : "admin.Debit", label : "Dateien", section : "Files", items : view_accounting_returndebit_Files.menuItems}],{ section : props.match.params.section == null ? "Files" : props.match.params.section, sameWidth : true})},this);
	if(props.match.params.id != null) {
		var baseUrl = props.match.path.split(":section")[0];
		haxe_Log.trace("redirecting to " + baseUrl + "Files/" + props.match.params.action,{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 185, className : "view.accounting.returndebit.Files", methodName : "new"});
		props.history.push("" + baseUrl + "Files/" + props.match.params.action);
	}
	haxe_Log.trace(props.match.path,{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 188, className : "view.accounting.returndebit.Files", methodName : "new"});
	if(props.match.params.action == null) {
		var baseUrl = props.match.path.split(":section")[0];
		haxe_Log.trace("redirecting to " + baseUrl + "Files/importReturnDebitFile",{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 193, className : "view.accounting.returndebit.Files", methodName : "new"});
		props.history.push("" + baseUrl + "Files/importReturnDebitFile");
	}
};
$hxClasses["view.accounting.returndebit.Files"] = view_accounting_returndebit_Files;
view_accounting_returndebit_Files.__name__ = "view.accounting.returndebit.Files";
view_accounting_returndebit_Files.mapDispatchToProps = function(dispatch) {
	return { storeData : function(id,action) {
		dispatch(redux_Action.map(action_async_LiveDataAccess.storeData(id,action)));
	}, select : function(id,data,me,selectType) {
		if(id == null) {
			id = -1;
		}
		haxe_Log.trace("select:" + id + " selectType:" + selectType,{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 217, className : "view.accounting.returndebit.Files", methodName : "mapDispatchToProps"});
		if(id > -1 && view_shared_io_BaseForm.ormsModified(me)) {
			view_shared_io_BaseForm.warn("Änderungen speichern oder zurücksetzen");
			return;
		}
		var sData = view_shared_io_LiveData.select({ id : id, data : data, match : me.props.match, selectType : selectType});
		if(sData.keys().hasNext()) {
			haxe_Log.trace(me.state.sideMenu.instance.enableItem("close"),{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 227, className : "view.accounting.returndebit.Files", methodName : "mapDispatchToProps"});
			if(sData.keys().next() == id) {
				haxe_Log.trace("yes:" + id,{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 231, className : "view.accounting.returndebit.Files", methodName : "mapDispatchToProps"});
				me.ormRefs = new haxe_ds_StringMap();
				view_shared_io_LiveData.create({ history : me.props.history, id : id, location : me.props.location, match : me.props.match, model : "deals", parentComponent : me, userState : App.store.getState().userState},me);
			}
		}
		haxe_Log.trace(App.store.getState().dataStore.returnDebitsData.toString(),{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 245, className : "view.accounting.returndebit.Files", methodName : "mapDispatchToProps"});
	}, update : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.update(param)));
	}};
};
view_accounting_returndebit_Files.__super__ = React_Component;
view_accounting_returndebit_Files.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,dataDisplay: null
	,formDataAccess: null
	,formDataDisplay: null
	,formApi: null
	,formBuilder: null
	,formFields: null
	,dealsFormRef: null
	,formRef: null
	,fieldNames: null
	,ormRefs: null
	,accountsFormRef: null
	,baseForm: null
	,contact: null
	,dbData: null
	,dbMetaData: null
	,close: function() {
		haxe_Log.trace(Reflect.fields(this.state).join("|"),{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 252, className : "view.accounting.returndebit.Files", methodName : "close"});
		haxe_Log.trace(Reflect.fields(App.store.getState().dataStore).join("|"),{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 253, className : "view.accounting.returndebit.Files", methodName : "close"});
	}
	,componentDidMount: function() {
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 275, className : "view.accounting.returndebit.Files", methodName : "componentDidMount"});
	}
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 281, className : "view.accounting.returndebit.Files", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
		haxe_Log.trace(data,{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 283, className : "view.accounting.returndebit.Files", methodName : "delete"});
	}
	,importReturnDebitFile: function() {
		this.state.action = "importReturnDebitFile";
		haxe_Log.trace(this.state.action,{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 288, className : "view.accounting.returndebit.Files", methodName : "importReturnDebitFile"});
	}
	,importReturnDebit: function(ev) {
		if(this.state.dbTable.length < 1) {
			haxe_Log.trace({ error : new Error("Keine Daten")},{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 383, className : "view.accounting.returndebit.Files", methodName : "importReturnDebit"});
		}
		haxe_Log.trace("go on",{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 385, className : "view.accounting.returndebit.Files", methodName : "importReturnDebit"});
		var p = this.props.update({ classPath : "data.DebitReturnStatements", action : "insert", data : haxe_Serializer.run(this.state.dbTable), mandator : 1, table : "debit_return_statements", resolveMessage : { success : "Rücklastschriften wurden verarbeitet", failure : "Rücklastschriften konnten nicht verarbeitet werden"}, dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data,{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 405, className : "view.accounting.returndebit.Files", methodName : "importReturnDebit"});
		});
	}
	,parseCamt: function(files) {
		var _gthis = this;
		this.state.errors = new haxe_ds_StringMap();
		var dT = [];
		var h = model_deals_DealsModel.dataAccess.h["open"].view.h["sepa_code"].options.h;
		var inlStringMapKeyIterator_h = h;
		var inlStringMapKeyIterator_keys = Object.keys(h);
		var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
		var inlStringMapKeyIterator_current = 0;
		var valid_codes = Std.string(inlStringMapKeyIterator_keys).split(",");
		var xml = "";
		var _g = 0;
		while(_g < files.length) {
			var file = files[_g];
			++_g;
			var reader = new FileReader();
			reader.onload = function(e) {
				xml = e.target.result;
				var xmlDoc = $.parseXML(xml);
				var camt = $(xmlDoc);
				var returnDebit = camt.find("Ntry:has(RtrInf Rsn Cd)");
				haxe_Log.trace(returnDebit.length,{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 426, className : "view.accounting.returndebit.Files", methodName : "parseCamt"});
				returnDebit.each(function(i,el) {
					var sepa_code = $(this).find("RtrInf Rsn Cd")[0].textContent;
					if(valid_codes.indexOf(sepa_code) == -1) {
						var v = el.outerHTML;
						_gthis.state.errors.h[i == null ? "null" : "" + i] = v;
					} else {
						var dT1 = dT;
						var _g = new haxe_ds_StringMap();
						var value = Std.parseInt($(this).find("MndtId")[0].textContent);
						_g.h["id"] = value;
						var value = $(this).find("EndToEndId")[0].textContent;
						_g.h["ba_id"] = value;
						var value = $(this).find("Dbtr>Nm")[0].textContent;
						_g.h["name"] = value;
						var value = $(this).find("DbtrAcct IBAN")[0].textContent;
						_g.h["iban"] = value;
						var value = $(this).find("RtrInf AddtlInf").length > 0 ? $(this).find("RtrInf AddtlInf")[0].textContent : "";
						_g.h["title"] = value;
						_g.h["sepa_code"] = sepa_code;
						var value = $(this).find("ValDt>Dt")[0].textContent;
						_g.h["value_date"] = value;
						var value = Std.parseInt($(this).find("MndtId")[0].textContent);
						_g.h["deal_id"] = value;
						var value = App.sprintf("%.2f",$(this).find("Ntry>Amt")[0].textContent);
						_g.h["amount"] = value;
						dT1.push(_g);
					}
				});
				if(dT.length == 0) {
					var _gthis1 = _gthis;
					var _g = new haxe_ds_StringMap();
					_g.h["hint"] = "Keine Rücklastschriften gefunden";
					_gthis1.setState({ data : _g});
				} else {
					_gthis.setState({ action : "showLoadedReturnDebit", dbTable : dT, loading : false});
				}
				haxe_Log.trace(dT.length,{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 452, className : "view.accounting.returndebit.Files", methodName : "parseCamt"});
				if(dT.length > 0) {
					haxe_Log.trace(view_accounting_returndebit_Files._instance.state.sideMenu.instance.enableItem("returnDebitFile",true),{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 454, className : "view.accounting.returndebit.Files", methodName : "parseCamt"});
				}
			};
			reader.readAsText(file);
		}
	}
	,showSelectedAccounts: function(ev) {
		var sRows = this.ormRefs.h["accounts"].compRef.state.dataGrid.state.selectedRows;
		var k = sRows.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			this.ormRefs.h["accounts"].compRef.props.loadData(k1,this.ormRefs.h["accounts"].compRef);
		}
	}
	,showSelectedDeal: function(id) {
	}
	,relForm: function(model) {
		if(Object.prototype.hasOwnProperty.call(this.ormRefs.h,model)) {
			return this.ormRefs.h[model].compRef.renderForm();
		} else {
			return null;
		}
	}
	,relData: function(dGrid) {
		var FormView = null;
		haxe_Log.trace(new haxe_ds__$StringMap_StringMapKeyIterator(this.ormRefs.h),{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 495, className : "view.accounting.returndebit.Files", methodName : "relData"});
		var _g = [];
		var model = "deals";
		if(Object.prototype.hasOwnProperty.call(this.ormRefs.h,model)) {
			var _g1 = 0;
			var _g2 = Lambda.array(this.ormRefs.h[model].orms);
			while(_g1 < _g2.length) {
				var orm = _g2[_g1];
				++_g1;
				var orm1 = orm.formBuilder;
				var _g3 = new haxe_ds_StringMap();
				var h = this.formDataAccess.h[model].h["open"].view.h;
				var k_h = h;
				var k_keys = Object.keys(h);
				var k_length = k_keys.length;
				var k_current = 0;
				while(k_current < k_length) {
					var k = k_keys[k_current++];
					_g3.h[k] = this.formDataAccess.h[model].h["open"].view.h[k];
				}
				var tmp = _g3;
				var tmp1;
				switch(model) {
				case "accounts":
					tmp1 = "Konto";
					break;
				case "contacts":
					tmp1 = "Kontakt";
					break;
				case "deals":
					tmp1 = "Spende";
					break;
				default:
					tmp1 = model;
				}
				_g.push(orm1.renderForm({ fields : tmp, model : model, ref : null, title : tmp1},orm));
			}
		}
		var model = "contacts";
		if(Object.prototype.hasOwnProperty.call(this.ormRefs.h,model)) {
			var _g1 = 0;
			var _g2 = Lambda.array(this.ormRefs.h[model].orms);
			while(_g1 < _g2.length) {
				var orm = _g2[_g1];
				++_g1;
				var orm1 = orm.formBuilder;
				var _g3 = new haxe_ds_StringMap();
				var h = this.formDataAccess.h[model].h["open"].view.h;
				var k_h = h;
				var k_keys = Object.keys(h);
				var k_length = k_keys.length;
				var k_current = 0;
				while(k_current < k_length) {
					var k = k_keys[k_current++];
					_g3.h[k] = this.formDataAccess.h[model].h["open"].view.h[k];
				}
				var tmp = _g3;
				var tmp1;
				switch(model) {
				case "accounts":
					tmp1 = "Konto";
					break;
				case "contacts":
					tmp1 = "Kontakt";
					break;
				case "deals":
					tmp1 = "Spende";
					break;
				default:
					tmp1 = model;
				}
				_g.push(orm1.renderForm({ fields : tmp, model : model, ref : null, title : tmp1},orm));
			}
		}
		var model = "accounts";
		if(Object.prototype.hasOwnProperty.call(this.ormRefs.h,model)) {
			var _g1 = 0;
			var _g2 = Lambda.array(this.ormRefs.h[model].orms);
			while(_g1 < _g2.length) {
				var orm = _g2[_g1];
				++_g1;
				var orm1 = orm.formBuilder;
				var _g3 = new haxe_ds_StringMap();
				var h = this.formDataAccess.h[model].h["open"].view.h;
				var k_h = h;
				var k_keys = Object.keys(h);
				var k_length = k_keys.length;
				var k_current = 0;
				while(k_current < k_length) {
					var k = k_keys[k_current++];
					_g3.h[k] = this.formDataAccess.h[model].h["open"].view.h[k];
				}
				var tmp = _g3;
				var tmp1;
				switch(model) {
				case "accounts":
					tmp1 = "Konto";
					break;
				case "contacts":
					tmp1 = "Kontakt";
					break;
				case "deals":
					tmp1 = "Spende";
					break;
				default:
					tmp1 = model;
				}
				_g.push(orm1.renderForm({ fields : tmp, model : model, ref : null, title : tmp1},orm));
			}
		}
		var FormsView = _g;
		return React.createElement(react_ReactType.fromComp(React_Fragment),{ },dGrid);
	}
	,render: function() {
		if(this.state.loading) {
			return this.state.formApi.renderWait();
		}
		var tmp = this.state.formApi;
		var tmp1;
		var _g = this.state.action;
		if(_g == null) {
			if(this.state.data != null && Object.prototype.hasOwnProperty.call(this.state.data.h,"hint")) {
				var tmp2 = react_ReactType.fromString("div");
				var tmp3 = this.state.data.h["hint"];
				tmp1 = React.createElement(tmp2,{ key : "loadReturnDebitsFile", className : "hint"},React.createElement(react_ReactType.fromString("h3"),{ },tmp3));
			} else {
				tmp1 = null;
			}
		} else {
			switch(_g) {
			case "showError":
				var tmp2 = react_ReactType.fromString("div");
				var tmp3 = haxe_ds_StringMap.stringify(this.state.errors.h);
				return React.createElement(tmp2,{ className : "hint"},"Fehler:",tmp3);
			case "showLoadedReturnDebit":
				tmp1 = React.createElement(view_grid_Grid._renderWrapper,Object.assign({ },this.props,{ key : "importedReturnDebitList", id : "loadedReturnDebit", data : this.state.dbTable, readOnly : true, dataState : this.dataDisplay.h["rDebitList"], parentComponent : this, className : "is-striped is-hoverable"}));
				break;
			default:
				if(this.state.data != null && Object.prototype.hasOwnProperty.call(this.state.data.h,"hint")) {
					var tmp2 = react_ReactType.fromString("div");
					var tmp3 = this.state.data.h["hint"];
					tmp1 = React.createElement(tmp2,{ key : "loadReturnDebitsFile", className : "hint"},React.createElement(react_ReactType.fromString("h3"),{ },tmp3));
				} else {
					tmp1 = null;
				}
			}
		}
		var tmp2;
		if(Lambda.empty(this.state.errors)) {
			tmp2 = null;
		} else {
			var tmp3 = react_ReactType.fromString("div");
			var tmp4 = react_ReactType.fromString("p");
			var tmp5 = haxe_ds_StringMap.stringify(this.state.errors.h);
			tmp2 = React.createElement(tmp3,{ className : "err"},React.createElement(tmp4,{ className : "hint"},tmp5));
		}
		return tmp.render(tmp1,tmp2);
	}
	,__class__: view_accounting_returndebit_Files
});
var view_accounting_returndebit_List = function(props) {
	React_Component.call(this,props);
	view_accounting_returndebit_List._instance = this;
	this.dataDisplay = model_accounting_ReturnDebitModel.listReturnDebitsDisplay;
	this.state = App.initEState({ action : props.match.params.action == null ? "listReturnDebit" : props.match.params.action, loading : true, sideMenu : view_shared_io_FormApi.initSideMenuMulti(this,[{ dataClassPath : "admin.Debit", label : "Liste", section : "List", items : view_accounting_returndebit_List.menuItems},{ dataClassPath : "admin.Debit", label : "Dateien", section : "Files", items : view_accounting_returndebit_Files.menuItems}],{ section : props.match.params.section == null ? "List" : props.match.params.section, sameWidth : true})},this);
	if(props.match.params.action == null) {
		var baseUrl = props.match.path.split(":section")[0];
		haxe_Log.trace("redirecting to " + baseUrl + "List/listReturnDebit",{ fileName : "src/view/accounting/returndebit/List.hx", lineNumber : 115, className : "view.accounting.returndebit.List", methodName : "new"});
		props.history.push("" + baseUrl + "List/listReturnDebit");
		this.listReturnDebit(null);
	}
	haxe_Log.trace(props.match.path,{ fileName : "src/view/accounting/returndebit/List.hx", lineNumber : 119, className : "view.accounting.returndebit.List", methodName : "new"});
};
$hxClasses["view.accounting.returndebit.List"] = view_accounting_returndebit_List;
view_accounting_returndebit_List.__name__ = "view.accounting.returndebit.List";
view_accounting_returndebit_List.mapStateToProps = function(aState) {
	return { userState : aState.userState};
};
view_accounting_returndebit_List.mapDispatchToProps = function(dispatch) {
	return { load : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.read(param)));
	}, storeData : function(id,action) {
		dispatch(redux_Action.map(action_async_LiveDataAccess.storeData(id,action)));
	}, select : function(id,data,me,selectType) {
		if(id == null) {
			id = -1;
		}
		haxe_Log.trace(data,{ fileName : "src/view/accounting/returndebit/List.hx", lineNumber : 138, className : "view.accounting.returndebit.List", methodName : "mapDispatchToProps"});
		haxe_Log.trace("select:" + id + " selectType:" + selectType,{ fileName : "src/view/accounting/returndebit/List.hx", lineNumber : 139, className : "view.accounting.returndebit.List", methodName : "mapDispatchToProps"});
		dispatch(redux_Action.map(action_async_LiveDataAccess.sSelect({ id : id, data : data, match : me.props.match, selectType : selectType})));
	}, update : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.update(param)));
	}};
};
view_accounting_returndebit_List.__super__ = React_Component;
view_accounting_returndebit_List.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,dataDisplay: null
	,formApi: null
	,formBuilder: null
	,formFields: null
	,fieldNames: null
	,baseForm: null
	,contact: null
	,dbData: null
	,dbMetaData: null
	,componentDidMount: function() {
		this.dataAccess = model_accounting_ReturnDebitModel.dataAccess;
		if(this.props.match.params.action == "listReturnDebit") {
			this.listReturnDebit();
		}
	}
	,listReturnDebit: function(ev) {
		var _gthis = this;
		var offset = 0;
		if(ev != null && ev.page != null) {
			offset = this.props.limit * ev.page | 0;
		}
		var _g = new haxe_ds_StringMap();
		var _g1 = new haxe_ds_StringMap();
		_g1.h["alias"] = "drs";
		_g1.h["fields"] = "deal_id,sepa_code,iban,ba_id,amount,mandator,last_modified,processed,created_at,value_date";
		_g.h["debit_return_statements"] = _g1;
		var _g1 = new haxe_ds_StringMap();
		_g1.h["fields"] = "zahlpfl_name,mandat_id";
		_g1.h["jCond"] = "drs.ba_id=ref_id";
		_g.h["booking_requests"] = _g1;
		var _g1 = new haxe_ds_StringMap();
		_g1.h["fields"] = "description";
		_g1.h["jCond"] = "drs.sepa_code=code";
		_g.h["sepa_return_codes"] = _g1;
		var dS = _g;
		var params = { dbUser : this.props.userState.dbUser, devIP : App.devIP, jwt : this.props.userState.dbUser.jwt, classPath : "data.DebitReturnStatements", action : "get", dataSource : haxe_Serializer.run(dS), limit : this.props.limit, resolveMessage : { success : "Rücklastschriften wurde geladen", failure : "Rücklastschriften konnte nicht geladen werden"}, offset : offset > 0 ? offset : 0, joinID : "drs.id"};
		var p = this.props.load(params);
		p.then(function(data) {
			if(data.dataRows.length > 0) {
				var tmp = data.dataRows[0];
				haxe_Log.trace(tmp == null ? "null" : haxe_ds_StringMap.stringify(tmp.h),{ fileName : "src/view/accounting/returndebit/List.hx", lineNumber : 199, className : "view.accounting.returndebit.List", methodName : "listReturnDebit"});
			}
			_gthis.setState({ loading : false, dbTable : data.dataRows, dataCount : Std.parseInt(data.dataInfo.h["count"]), pageCount : Math.ceil(Std.parseInt(data.dataInfo.h["count"]) / _gthis.props.limit)});
		});
	}
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/accounting/returndebit/List.hx", lineNumber : 211, className : "view.accounting.returndebit.List", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
		haxe_Log.trace(data,{ fileName : "src/view/accounting/returndebit/List.hx", lineNumber : 213, className : "view.accounting.returndebit.List", methodName : "delete"});
	}
	,processReturnDebitStatements: function(_) {
		haxe_Log.trace(this.state.dbTable,{ fileName : "src/view/accounting/returndebit/List.hx", lineNumber : 218, className : "view.accounting.returndebit.List", methodName : "processReturnDebitStatements"});
		var p = this.props.update({ classPath : "data.DebitReturnStatements", action : "insert", mandator : 1, data : haxe_Serializer.run(this.state.dbTable), table : "debit_return_statements", resolveMessage : { success : "Rücklastschriften wurden verarbeitet", failure : "Rücklastschriften konnten nicht verarbeitet werden"}, dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(haxe_Unserializer.run(data.dataInfo.h["data"]),{ fileName : "src/view/accounting/returndebit/List.hx", lineNumber : 237, className : "view.accounting.returndebit.List", methodName : "processReturnDebitStatements"});
			haxe_Log.trace(shared_Utils.getAllByKey(haxe_Unserializer.run(data.dataInfo.h["data"]),"id"),{ fileName : "src/view/accounting/returndebit/List.hx", lineNumber : 238, className : "view.accounting.returndebit.List", methodName : "processReturnDebitStatements"});
		});
	}
	,render: function() {
		var tmp = this.state.formApi;
		var tmp1 = react_ReactType.fromComp(React_Fragment);
		var tmp2 = react_ReactType.fromString("form");
		var tmp3 = this.renderResults();
		var tmp4 = React.createElement(tmp2,{ className : "tabComponentForm"},tmp3);
		return tmp.render(React.createElement(tmp1,{ },tmp4));
	}
	,renderResults: function() {
		if(this.state.loading) {
			return this.state.formApi.renderWait();
		}
		var _g = this.state.action;
		if(_g == null) {
			if(this.state.data == null) {
				return null;
			} else {
				var tmp = this.state.data.h["hint"];
				return React.createElement(react_ReactType.fromString("div"),{ className : "hint"},tmp);
			}
		} else if(_g == "listReturnDebit") {
			return React.createElement(view_grid_Grid._renderWrapper,Object.assign({ },this.props,{ id : "returnDebitList", data : this.state.dbTable, dataState : this.dataDisplay.h["rDebitData"], parentComponent : this, className : "is-striped is-hoverable", fullWidth : true}));
		} else if(this.state.data == null) {
			return null;
		} else {
			var tmp = this.state.data.h["hint"];
			return React.createElement(react_ReactType.fromString("div"),{ className : "hint"},tmp);
		}
	}
	,__class__: view_accounting_returndebit_List
});
var view_dashboard_DB = function(props) {
	React_Component.call(this,props);
	haxe_Log.trace("" + App.devIP + " action:" + props.match.params.action,{ fileName : "src/view/dashboard/DB.hx", lineNumber : 57, className : "view.dashboard.DB", methodName : "new"});
	this.dataDisplay = view_dashboard_model_DBFormsModel.dataDisplay;
	this.state = { formApi : new view_shared_io_FormApi(this), hasError : false, sideMenu : props.sideMenu};
};
$hxClasses["view.dashboard.DB"] = view_dashboard_DB;
view_dashboard_DB.__name__ = "view.dashboard.DB";
view_dashboard_DB.mapStateToProps = function(aState) {
	return { userState : aState.userState};
};
view_dashboard_DB.__super__ = React_Component;
view_dashboard_DB.prototype = $extend(React_Component.prototype,{
	dataDisplay: null
	,dataAccess: null
	,createFieldList: function(ev) {
		var _gthis = this;
		haxe_Log.trace("hi :)",{ fileName : "src/view/dashboard/DB.hx", lineNumber : 85, className : "view.dashboard.DB", methodName : "createFieldList"});
		this.state.formApi.requests.push(haxe_ds_Either.Left(view_shared_io_Loader.load("" + Std.string(App.config.api),{ id : this.props.userState.dbUser.id, jwt : this.props.userState.dbUser.jwt, classPath : "tools.DB", action : "createFieldList", update : "1"},function(data) {
			haxe_Log.trace(data == null ? "null" : haxe_ds_StringMap.stringify(data.h),{ fileName : "src/view/dashboard/DB.hx", lineNumber : 97, className : "view.dashboard.DB", methodName : "createFieldList"});
			if(Object.prototype.hasOwnProperty.call(data.h,"error")) {
				haxe_Log.trace(data.h["error"],{ fileName : "src/view/dashboard/DB.hx", lineNumber : 101, className : "view.dashboard.DB", methodName : "createFieldList"});
				return;
			}
			_gthis.setState({ data : data});
		})));
		haxe_Log.trace(this.props.history,{ fileName : "src/view/dashboard/DB.hx", lineNumber : 107, className : "view.dashboard.DB", methodName : "createFieldList"});
		haxe_Log.trace(this.props.match,{ fileName : "src/view/dashboard/DB.hx", lineNumber : 108, className : "view.dashboard.DB", methodName : "createFieldList"});
	}
	,setView: function() {
		this.createOrUpdateView();
	}
	,getView: function() {
		var _gthis = this;
		var pro = new Promise(function(resolve,reject) {
			if(!_gthis.props.userState.dbUser.online) {
				haxe_Log.trace("LoginError",{ fileName : "src/view/dashboard/DB.hx", lineNumber : 120, className : "view.dashboard.DB", methodName : "getView"});
				var _g = new haxe_ds_StringMap();
				_g.h["LoginError"] = "Du musst dich neu anmelden!";
				reject(shared_DbDataTools.create(_g));
			}
			var bl = loader_BinaryLoader.dbQuery("" + Std.string(App.config.api),{ devIP : App.devIP, dbUser : _gthis.props.userState.dbUser, data : { ux_class_path : "model.deals.DealsModel"}, classPath : "view.Forms", action : "getView"},function(res) {
				haxe_Log.trace(res,{ fileName : "src/view/dashboard/DB.hx", lineNumber : 136, className : "view.dashboard.DB", methodName : "getView"});
				resolve(haxe_Unserializer.run(res.dataRows[0].h["hx_serial"]));
			});
		});
		pro.then(function(viewData) {
			haxe_Log.trace(viewData == null ? "null" : haxe_ds_StringMap.stringify(viewData.h),{ fileName : "src/view/dashboard/DB.hx", lineNumber : 143, className : "view.dashboard.DB", methodName : "getView"});
			var _gthis1 = _gthis;
			var _g = new haxe_ds_StringMap();
			_g.h["row"] = 1;
			var _g1 = new haxe_ds_StringMap();
			_g1.h["view"] = viewData;
			_gthis1.setState({ action : "getView", dbTable : [_g], data : _g1});
		},function(whatever) {
			haxe_Log.trace(whatever,{ fileName : "src/view/dashboard/DB.hx", lineNumber : 146, className : "view.dashboard.DB", methodName : "getView"});
		});
	}
	,createOrUpdateView: function() {
		var _gthis = this;
		App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : "update model.deals.DealsModel"}))));
		var pro = new Promise(function(resolve,reject) {
			if(!_gthis.props.userState.dbUser.online) {
				haxe_Log.trace("LoginError",{ fileName : "src/view/dashboard/DB.hx", lineNumber : 160, className : "view.dashboard.DB", methodName : "createOrUpdateView"});
				var reject1 = reject;
				var _g = new haxe_ds_StringMap();
				_g.h["LoginError"] = "Du musst dich neu anmelden!";
				reject1(shared_DbDataTools.create(_g));
			}
			var bl = loader_BinaryLoader.dbQuery("" + Std.string(App.config.api),{ devIP : App.devIP, dbUser : _gthis.props.userState.dbUser, classPath : "view.Forms", data : { ux_class_path : "model.deals.DealsModel", hx_serial : haxe_Serializer.run(model_deals_DealsModel.dataAccess.h["open"].view)}, action : "setView"},function(res) {
				haxe_Log.trace(res,{ fileName : "src/view/dashboard/DB.hx", lineNumber : 176, className : "view.dashboard.DB", methodName : "createOrUpdateView"});
				var h = res.dataErrors.h;
				var inlStringMapKeyIterator_h = h;
				var inlStringMapKeyIterator_keys = Object.keys(h);
				var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
				var inlStringMapKeyIterator_current = 0;
				if(inlStringMapKeyIterator_current < inlStringMapKeyIterator_length) {
					reject(res);
				} else {
					resolve(res);
				}
			});
		});
		pro.then(function(dbData) {
			var info = dbData.dataInfo;
			haxe_Log.trace(info == null ? "null" : haxe_ds_StringMap.stringify(info.h),{ fileName : "src/view/dashboard/DB.hx", lineNumber : 189, className : "view.dashboard.DB", methodName : "createOrUpdateView"});
			var _gthis1 = _gthis;
			var _g = new haxe_ds_StringMap();
			_g.h["row"] = 1;
			var _g1 = new haxe_ds_StringMap();
			_g1.h["SetView"] = info.h["setView"];
			_g1.h["Zeilen geändert:"] = info.h["updatedRows"];
			_gthis1.setState({ action : "setView", dbTable : [_g], data : _g1});
		},function(whatever) {
			haxe_Log.trace(whatever,{ fileName : "src/view/dashboard/DB.hx", lineNumber : 192, className : "view.dashboard.DB", methodName : "createOrUpdateView"});
			var tmp = Object.prototype.hasOwnProperty.call(whatever.dataInfo.h,"loginTask");
		});
	}
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/dashboard/DB.hx", lineNumber : 207, className : "view.dashboard.DB", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
	}
	,editTableFields: function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/dashboard/DB.hx", lineNumber : 214, className : "view.dashboard.DB", methodName : "editTableFields"});
		var data = this.state.formApi.selectedRowsMap(this.state);
		var view = haxe_ds_StringMap.createCopy(this.dataAccess.h["editTableFields"].view.h);
		haxe_Log.trace(this.dataAccess.h["editTableFields"].view.h["table_name"],{ fileName : "src/view/dashboard/DB.hx", lineNumber : 217, className : "view.dashboard.DB", methodName : "editTableFields"});
		haxe_Log.trace(data[0].h["id"] + "<",{ fileName : "src/view/dashboard/DB.hx", lineNumber : 218, className : "view.dashboard.DB", methodName : "editTableFields"});
	}
	,initStateFromDataTable: function(dt) {
		var iS = { };
		var _g = 0;
		while(_g < dt.length) {
			var dR = dt[_g];
			++_g;
			var rS = { };
			var h = dR.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				haxe_Log.trace(k,{ fileName : "src/view/dashboard/DB.hx", lineNumber : 244, className : "view.dashboard.DB", methodName : "initStateFromDataTable"});
				if(this.dataDisplay.h["fieldsList"].columns.h[k].cellFormat == view_dashboard_model_DBFormsModel.formatBool) {
					rS[k] = dR.h[k] == "Y";
				} else {
					rS[k] = dR.h[k];
				}
			}
			iS[dR.h["id"]] = rS;
		}
		haxe_Log.trace(iS,{ fileName : "src/view/dashboard/DB.hx", lineNumber : 254, className : "view.dashboard.DB", methodName : "initStateFromDataTable"});
		return iS;
	}
	,saveTableFields: function(vA) {
		haxe_Log.trace(vA,{ fileName : "src/view/dashboard/DB.hx", lineNumber : 260, className : "view.dashboard.DB", methodName : "saveTableFields"});
	}
	,showFieldList: function(_) {
		this.state.formApi.requests.push(null);
	}
	,componentDidMount: function() {
		haxe_Log.trace("Ok",{ fileName : "src/view/dashboard/DB.hx", lineNumber : 329, className : "view.dashboard.DB", methodName : "componentDidMount"});
		var _g = new haxe_ds_StringMap();
		var _g1 = new haxe_ds_StringMap();
		_g1.h["selectedRows"] = null;
		var _g2 = new haxe_ds_StringMap();
		_g2.h["table_name"] = { label : "Tabelle", disabled : true};
		_g2.h["field_name"] = { label : "Feldname", disabled : true};
		_g2.h["field_type"] = { label : "Datentyp", type : "Select"};
		_g2.h["element"] = { label : "Eingabefeld", type : "Select"};
		_g2.h["disabled"] = { label : "Readonly", type : "Checkbox"};
		_g2.h["required"] = { label : "Required", type : "Checkbox"};
		_g2.h["use_as_index"] = { label : "Index", type : "Checkbox"};
		_g2.h["any"] = { label : "Eigenschaften", disabled : true, type : "Hidden"};
		_g2.h["id"] = { primary : true, type : "Hidden"};
		_g.h["editTableFields"] = { source : _g1, view : _g2};
		_g.h["saveTableFields"] = { source : null, view : null};
		this.dataAccess = _g;
	}
	,renderResults: function() {
		haxe_Log.trace(this.state.action,{ fileName : "src/view/dashboard/DB.hx", lineNumber : 363, className : "view.dashboard.DB", methodName : "renderResults"});
		if(this.state.dbTable != null) {
			var _g = this.state.action;
			if(_g == null) {
				return null;
			} else {
				switch(_g) {
				case "editForm":
					return null;
				case "getView":case "setView":
					var tmp = react_ReactType.fromString("div");
					var tmp1 = react_ReactType.fromString("pre");
					var tmp2 = this.state.data.toString();
					return React.createElement(tmp,{ className : ""},React.createElement(tmp1,{ className : "pwrap"},tmp2));
				case "showFieldList":
					haxe_Log.trace(Std.string(this.state.dbTable[29].h["id"]) + "<<<",{ fileName : "src/view/dashboard/DB.hx", lineNumber : 372, className : "view.dashboard.DB", methodName : "renderResults"});
					return React.createElement(react_ReactType.fromComp(view_table_Table),Object.assign({ },this.props,{ id : "fieldsList", data : this.state.dbTable, dataState : this.dataDisplay.h["fieldsList"], className : "is-striped is-hoverable", fullWidth : true}));
				default:
					return null;
				}
			}
		}
		return null;
	}
	,render: function() {
		if(this.state.values != null) {
			haxe_Log.trace(this.state.values == null ? "null" : haxe_ds_StringMap.stringify(this.state.values.h),{ fileName : "src/view/dashboard/DB.hx", lineNumber : 389, className : "view.dashboard.DB", methodName : "render"});
		}
		haxe_Log.trace(this.props.match.params.section,{ fileName : "src/view/dashboard/DB.hx", lineNumber : 390, className : "view.dashboard.DB", methodName : "render"});
		var tmp = this.state.formApi;
		var tmp1 = react_ReactType.fromString("form");
		var tmp2 = React.createElement(react_ReactType.fromString("div"),{ className : "caption"},"DB");
		var tmp3 = this.renderResults();
		return tmp.render(React.createElement(tmp1,{ className : "tabComponentForm"},tmp2,tmp3));
	}
	,updateMenu: function(viewClassPath) {
		var sideMenu = this.state.sideMenu;
		var _g = 0;
		var _g1 = sideMenu.menuBlocks.h["DB"].items;
		while(_g < _g1.length) {
			var mI = _g1[_g];
			++_g;
			var _g2 = mI.action;
			if(_g2 != null) {
				switch(_g2) {
				case "editTableFields":
					mI.disabled = this.state.selectedRows.length == 0;
					break;
				case "save":
					mI.disabled = this.state.clean;
					break;
				default:
				}
			}
		}
		return sideMenu;
	}
	,__class__: view_dashboard_DB
});
var view_dashboard_DBSync = function(props) {
	React_Component.call(this,props);
	this.dataDisplay = view_dashboard_model_DBSyncModel.dataDisplay;
	this.dataAccess = view_dashboard_model_DBSyncModel.dataAccess(props.match.params.action);
	this.formFields = view_dashboard_model_DBSyncModel.formFields(props.match.params.action);
	haxe_Log.trace("..." + Std.string(Reflect.fields(props)),{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 94, className : "view.dashboard.DBSync", methodName : "new"});
	this.state = App.initEState({ loading : false, dbTable : [], actualState : { edited_by : props.userState.dbUser.id, mandator : props.userState.dbUser.mandator}, initialState : { edited_by : props.userState.dbUser.id, mandator : props.userState.dbUser.mandator}, values : new haxe_ds_StringMap()},this);
};
$hxClasses["view.dashboard.DBSync"] = view_dashboard_DBSync;
view_dashboard_DBSync.__name__ = "view.dashboard.DBSync";
view_dashboard_DBSync.mapStateToProps = function(aState) {
	return { userState : aState.userState};
};
view_dashboard_DBSync.mapDispatchToProps = function(dispatch) {
	return { load : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.update(param)));
	}};
};
view_dashboard_DBSync.__super__ = React_Component;
view_dashboard_DBSync.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,dataDisplay: null
	,formApi: null
	,formBuilder: null
	,formFields: null
	,fieldNames: null
	,baseForm: null
	,contact: null
	,dbData: null
	,dbMetaData: null
	,createFieldList: function(ev) {
		haxe_Log.trace("hi :)",{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 123, className : "view.dashboard.DBSync", methodName : "createFieldList"});
	}
	,editTableFields: function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 132, className : "view.dashboard.DBSync", methodName : "editTableFields"});
	}
	,initStateFromDataTable: function(dt) {
		var iS = { };
		var _g = 0;
		while(_g < dt.length) {
			var dR = dt[_g];
			++_g;
			var rS = { };
			var h = dR.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				haxe_Log.trace(k,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 143, className : "view.dashboard.DBSync", methodName : "initStateFromDataTable"});
				if(this.dataDisplay.h["fieldsList"].columns.h[k].cellFormat == view_dashboard_model_DBSyncModel.formatBool) {
					rS[k] = dR.h[k] == "Y";
				} else {
					rS[k] = dR.h[k];
				}
			}
			iS[dR.h["id"]] = rS;
		}
		haxe_Log.trace(iS,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 153, className : "view.dashboard.DBSync", methodName : "initStateFromDataTable"});
		return iS;
	}
	,saveTableFields: function(vA) {
		haxe_Log.trace(vA,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 159, className : "view.dashboard.DBSync", methodName : "saveTableFields"});
	}
	,getMissingExternalBookings: function(cB) {
		var _gthis = this;
		this.setState({ loading : true});
		var p = this.props.load({ classPath : "admin.SyncExternalBookings", action : "getMissing", extDB : true, filter : { mandator : "1"}, limit : 4000, offset : 0, table : "booking_requests", dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			if(data.dataInfo.h["offset"] == null) {
				return App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : "Fehler 0  Aktualisiert"}))));
			}
			var offset = Std.parseInt(data.dataInfo.h["offset"]);
			App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : " ", text : "" + offset + " von " + Std.string(data.dataInfo.h["maxImport"]) + " aktualisiert"}))));
			haxe_Log.trace("" + offset + " < " + Std.string(data.dataInfo.h["maxImport"]),{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 219, className : "view.dashboard.DBSync", methodName : "getMissingExternalBookings"});
			if(offset < Std.parseInt(data.dataInfo.h["maxImport"])) {
				haxe_Log.trace("next loop:" + (data.dataInfo == null ? "null" : haxe_ds_StringMap.stringify(data.dataInfo.h)),{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 222, className : "view.dashboard.DBSync", methodName : "getMissingExternalBookings"});
				return _gthis.doSyncAll2(data.dataInfo);
			} else {
				_gthis.setState({ loading : false});
				App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : " ", text : "" + offset + " von " + Std.string(data.dataInfo.h["maxImport"]) + " aktualisiert"}))));
				if(cB != null) {
					cB();
				}
				return p;
			}
		});
		return p;
	}
	,getAllExternalDebitReturnBookings: function() {
		this.getMissingExternalDebitReturnBookings(true);
	}
	,getMissingExternalDebitReturnBookings: function(all) {
		if(all == null) {
			all = false;
		}
		this.setState({ loading : true});
		var p = this.props.load({ classPath : "admin.SyncExternalDebitReturnBookings", action : all ? "importAll" : "getMissing", extDB : true, filter : { mandator : "1"}, table : "debit_return_statements", dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			if(data.dataInfo.h["SyncExternalDebitReturnBookings"] == null) {
				return App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : "Fehler 0  Aktualisiert"}))));
			}
			var offset = Std.parseInt(data.dataInfo.h["SyncExternalDebitReturnBookings"]);
			App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : " ", text : "" + offset + " Datensätze aktualisiert"}))));
			return p;
		});
	}
	,importAccounts2: function(_) {
		haxe_Log.trace(this.props.userState.dbUser.first_name,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 285, className : "view.dashboard.DBSync", methodName : "importAccounts2"});
		this.setState({ loading : true});
		this.doSyncAll2({ classPath : "admin.SyncExternalAccounts", action : "importContacts", extDB : true, filter : { mandator : "1"}, limit : 1000, offset : 0, table : "accounts", dbUser : this.props.userState.dbUser, devIP : App.devIP, maxImport : 4000});
	}
	,doSyncAll2: function(dbQueryParam) {
		var _gthis = this;
		var p = this.props.load(dbQueryParam);
		p.then(function(data) {
			if(data.dataInfo.h["offset"] == null) {
				return App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "error", text : "Fehler 0  Aktualisiert"}))));
			}
			var offset = Std.parseInt(data.dataInfo.h["offset"]);
			App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : " ", text : "" + offset + " von " + Std.string(data.dataInfo.h["maxImport"]) + " aktualisiert"}))));
			haxe_Log.trace("" + offset + " < " + Std.string(data.dataInfo.h["maxImport"]),{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 323, className : "view.dashboard.DBSync", methodName : "doSyncAll2"});
			if(offset < Std.parseInt(data.dataInfo.h["maxImport"])) {
				haxe_Log.trace("next loop:" + (data.dataInfo == null ? "null" : haxe_ds_StringMap.stringify(data.dataInfo.h)),{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 326, className : "view.dashboard.DBSync", methodName : "doSyncAll2"});
				return _gthis.doSyncAll2(data.dataInfo);
			} else {
				_gthis.setState({ loading : false});
				return App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : " ", text : "" + offset + " von " + Std.string(data.dataInfo.h["maxImport"]) + " aktualisiert"}))));
			}
		});
		return p;
	}
	,syncQC: function() {
		App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : " ", text : "Aktualisiere QC Test leads"}))));
		var dbQueryParam = { classPath : "data.SyncExternal", action : "sync2dev", extDB : true, filter : { mandator : "1"}, dbUser : this.props.userState.dbUser, devIP : App.devIP};
		var p = action_async_LivePBXSync.query(dbQueryParam);
		p.then(function(data) {
			haxe_Log.trace(data.dataInfo == null ? "null" : haxe_ds_StringMap.stringify(data.dataInfo.h),{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 364, className : "view.dashboard.DBSync", methodName : "syncQC"});
			haxe_Log.trace(new haxe_ds__$StringMap_StringMapKeyIterator(data.dataInfo.h),{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 365, className : "view.dashboard.DBSync", methodName : "syncQC"});
			var offset = Std.parseInt(data.dataInfo.h["qc_leads"]);
			App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : " ", text : "" + Std.string(data.dataInfo.h["qc_leads"]) + " QC Test leads aktualisiert"}))));
			haxe_Log.trace(data,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 374, className : "view.dashboard.DBSync", methodName : "syncQC"});
			return p;
		});
	}
	,importContacts: function() {
		haxe_Log.trace(this.props.userState.dbUser.first_name,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 382, className : "view.dashboard.DBSync", methodName : "importContacts"});
		App.store.dispatch(action_async_LivePBXSync.importContacts({ devIP : App.devIP, limit : 4000, maxImport : 4000, userState : this.props.userState, offset : 0, classPath : "admin.SyncExternalContacts", action : "importContacts"}));
	}
	,importAllBookingRequests2: function(_) {
		haxe_Log.trace(this.props.userState.dbUser.first_name,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 396, className : "view.dashboard.DBSync", methodName : "importAllBookingRequests2"});
		App.store.dispatch(action_async_LivePBXSync.importContacts({ limit : 50000, maxImport : 50000, userState : this.props.userState, offset : 100000, table : "booking_requests", classPath : "admin.SyncExternalBookings", action : "importContacts"}));
	}
	,importBookingRequests2: function() {
		App.store.dispatch(redux_Action.map(action_async_LivePBXSync.importBookingRequests({ limit : 25000, offset : 0, classPath : "admin.SyncExternalBookings", action : "syncBookingRequests", userState : this.props.userState})));
	}
	,checkBookingRequests: function(fD) {
		var _gthis = this;
		if(fD != null) {
			haxe_Log.trace(fD,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 423, className : "view.dashboard.DBSync", methodName : "checkBookingRequests"});
			haxe_Log.trace(fD.get("sync_now"),{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 428, className : "view.dashboard.DBSync", methodName : "checkBookingRequests"});
			if(fD.get("sync_now") == "on") {
				App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : "Aktualisiere Buchungsanforderungen"}))));
				this.getMissingExternalBookings(function() {
					_gthis.loadBookingRequestsCount();
					window.document.querySelector("[name=\"sync_now\"]").checked = false;
					haxe_Log.trace((js_Boot.__cast(window.document.querySelector("[name=\"sync_now\"]") , HTMLInputElement)).checked ? "Yes" : "No",{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 439, className : "view.dashboard.DBSync", methodName : "checkBookingRequests"});
				});
			} else {
				this.loadBookingRequestsCount();
			}
			return;
		} else {
			this.loadBookingRequestsCount();
		}
	}
	,loadBookingRequestsCount: function() {
		var _gthis = this;
		App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : "Lade Anzahl Buchungsanforderungen"}))));
		var pro = action_async_LivePBXSync.check({ limit : 1000, userState : this.props.userState, offset : 0, classPath : "data.SyncExternal", action : "bookingRequestsCount"});
		pro.then(function(props) {
			haxe_Log.trace(props,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 468, className : "view.dashboard.DBSync", methodName : "loadBookingRequestsCount"});
			haxe_Log.trace(_gthis.state.data == null ? "null" : haxe_ds_StringMap.stringify(_gthis.state.data.h),{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 469, className : "view.dashboard.DBSync", methodName : "loadBookingRequestsCount"});
			var _gthis1 = _gthis;
			var _g = new haxe_ds_StringMap();
			_g.h["action"] = "bookingRequestsCount";
			_g.h["buchungsAnforderungenCount"] = props.dataInfo.h["buchungsAnforderungenCount"];
			_g.h["bookingRequestsCount"] = props.dataInfo.h["bookingRequestsCount"];
			_gthis1.setState({ data : _g});
			haxe_Log.trace(_gthis.state.data == null ? "null" : haxe_ds_StringMap.stringify(_gthis.state.data.h),{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 480, className : "view.dashboard.DBSync", methodName : "loadBookingRequestsCount"});
		},function(whatever) {
			haxe_Log.trace(whatever,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 482, className : "view.dashboard.DBSync", methodName : "loadBookingRequestsCount"});
		});
	}
	,checkAccounts: function(fD) {
		var _gthis = this;
		if(fD != null) {
			haxe_Log.trace(fD,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 489, className : "view.dashboard.DBSync", methodName : "checkAccounts"});
		}
		App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : "Aktualisiere Konten"}))));
		var pro = action_async_LivePBXSync.check({ limit : 1000, userState : this.props.userState, offset : 0, classPath : "data.SyncExternal", action : "accountsCount"});
		pro.then(function(props) {
			haxe_Log.trace(props,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 507, className : "view.dashboard.DBSync", methodName : "checkAccounts"});
			var _gthis1 = _gthis;
			var _g = new haxe_ds_StringMap();
			_g.h["action"] = "accountsCount";
			_g.h["pay_sourceCount"] = props.dataInfo.h["pay_sourceCount"];
			_g.h["accountsCount"] = props.dataInfo.h["accountsCount"];
			_gthis1.setState({ data : _g});
		},function(whatever) {
			haxe_Log.trace(whatever,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 514, className : "view.dashboard.DBSync", methodName : "checkAccounts"});
		});
	}
	,checkContacts: function(fD) {
		var _gthis = this;
		if(fD != null) {
			haxe_Log.trace(fD,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 522, className : "view.dashboard.DBSync", methodName : "checkContacts"});
		}
		App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : "Aktualisiere Kontakte"}))));
		var sync_now = { checked : false};
		haxe_Log.trace(sync_now.checked,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 532, className : "view.dashboard.DBSync", methodName : "checkContacts"});
		if(sync_now.checked) {
			this.importContacts();
			return;
		}
		var pro = action_async_LivePBXSync.check({ limit : 1000, userState : this.props.userState, offset : 0, classPath : "data.SyncExternal", action : "clientsCount"});
		pro.then(function(props) {
			haxe_Log.trace(props,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 546, className : "view.dashboard.DBSync", methodName : "checkContacts"});
			var _gthis1 = _gthis;
			var _g = new haxe_ds_StringMap();
			_g.h["action"] = "contactsCount";
			_g.h["clientsCount"] = props.dataInfo.h["clientsCount"];
			_g.h["contactsCount"] = props.dataInfo.h["contactsCount"];
			_gthis1.setState({ data : _g});
		},function(whatever) {
			haxe_Log.trace(whatever,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 553, className : "view.dashboard.DBSync", methodName : "checkContacts"});
		});
	}
	,checkDeals: function() {
		var _gthis = this;
		App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : "Aktualisiere Spenden"}))));
		var pro = action_async_LivePBXSync.check({ limit : 1000, userState : this.props.userState, offset : 0, classPath : "data.SyncExternal", action : "dealsCount"});
		pro.then(function(props) {
			haxe_Log.trace(props,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 573, className : "view.dashboard.DBSync", methodName : "checkDeals"});
			var _gthis1 = _gthis;
			var _g = new haxe_ds_StringMap();
			_g.h["action"] = "dealsCount";
			_g.h["pay_planCount"] = props.dataInfo.h["pay_planCount"];
			_g.h["dealsCount"] = props.dataInfo.h["dealsCount"];
			_gthis1.setState({ data : _g});
		},function(whatever) {
			haxe_Log.trace(whatever,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 580, className : "view.dashboard.DBSync", methodName : "checkDeals"});
			App.store.dispatch(redux_Action.map(action_AppAction.User(action_UserAction.LoginError({ dbUser : _gthis.props.userState.dbUser, lastError : "Du musst dich neu anmelden!"}))));
		});
	}
	,checkAll: function() {
		App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : " ", text : "Synchronisiere Kontakte, Spenden + Konten"}))));
		var pro = App.store.dispatch(action_async_LivePBXSync.checkAll({ limit : 1000, userState : this.props.userState, offset : 0, classPath : "admin.SyncExternal", action : "checkAll"}));
		pro.then(function(props) {
			haxe_Log.trace(props,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 607, className : "view.dashboard.DBSync", methodName : "checkAll"});
		},function(whatever) {
			haxe_Log.trace(whatever,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 609, className : "view.dashboard.DBSync", methodName : "checkAll"});
		});
	}
	,displaySummary: function() {
	}
	,importDeals2: function() {
		App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : " ", text : "Importiere Spenden"}))));
		App.store.dispatch(redux_Action.map(action_async_LivePBXSync.importDeals({ limit : 1000, offset : 0, onlyNew : true, classPath : "admin.SyncExternalDeals", action : "importAll", userState : this.props.userState})));
	}
	,syncDeals2: function() {
		App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : " ", text : "Aktualisiere Spenden"}))));
		App.store.dispatch(redux_Action.map(action_async_LivePBXSync.importDeals({ limit : 1000, offset : 0, classPath : "admin.SyncExternalDeals", action : "importAll", userState : this.props.userState})));
	}
	,syncUserDetails2: function(_) {
		var _gthis = this;
		haxe_Log.trace(App.config.api,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 650, className : "view.dashboard.DBSync", methodName : "syncUserDetails2"});
		haxe_Log.trace(this.props.userState.dbUser,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 651, className : "view.dashboard.DBSync", methodName : "syncUserDetails2"});
		loader_BinaryLoader.create("" + Std.string(App.config.api),{ id : this.props.userState.dbUser.id, jwt : this.props.userState.dbUser.jwt, fields : "id,table_name,field_name,disabled,element,required,use_as_index", classPath : "admin.SyncExternal", action : "syncUserDetails", devIP : App.devIP, dbUser : this.props.userState.dbUser},function(data) {
			haxe_Log.trace(data,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 667, className : "view.dashboard.DBSync", methodName : "syncUserDetails2"});
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 669, className : "view.dashboard.DBSync", methodName : "syncUserDetails2"});
			if(data.dataRows.length > 0) {
				_gthis.setState({ dbTable : data.dataRows});
			}
			App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : "aktualisiert: " + Std.string(data.dataInfo.h["updated"]) + " Benutzer"}))));
		});
	}
	,proxy_showUserList: function(_) {
		var _gthis = this;
		haxe_Log.trace(App.config.api,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 684, className : "view.dashboard.DBSync", methodName : "proxy_showUserList"});
		loader_BinaryLoader.create("https://pitverwaltung.de/sync/proxy.php",{ id : this.props.userState.dbUser.id, jwt : this.props.userState.dbUser.jwt, fields : "id,table_name,field_name,disabled,element,required,use_as_index", classPath : "admin.SyncExternal", action : "syncUserDetails", target : "syncUsers.php", devIP : App.devIP},function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 702, className : "view.dashboard.DBSync", methodName : "proxy_showUserList"});
			if(data.dataRows.length > 0) {
				_gthis.setState({ dbTable : data.dataRows});
			}
		});
	}
	,componentDidMount: function() {
		if(this.props.userState != null) {
			haxe_Log.trace("yeah: " + this.props.userState.dbUser.first_name,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 719, className : "view.dashboard.DBSync", methodName : "componentDidMount"});
		}
	}
	,go: function(aState) {
		haxe_Log.trace(Reflect.fields(aState),{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 724, className : "view.dashboard.DBSync", methodName : "go"});
		var dbaProps_action = this.props.match.params.action;
		var dbaProps_classPath = "data.Contacts";
		var dbaProps_dataSource = null;
		var dbaProps_table = "contacts";
		var dbaProps_userState = this.props.userState;
		switch(this.props.match.params.action) {
		case "delete":case "get":
			break;
		case "insert":
			var _g = 0;
			var _g1 = this.fieldNames;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				haxe_Log.trace("" + f + " =>" + Std.string(Reflect.field(aState,f)) + "<=",{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 738, className : "view.dashboard.DBSync", methodName : "go"});
				if(Reflect.field(aState,f) == "") {
					Reflect.deleteField(aState,f);
				}
			}
			Reflect.deleteField(aState,"id");
			Reflect.deleteField(aState,"creation_date");
			var _g = new haxe_ds_StringMap();
			var _g1 = new haxe_ds_StringMap();
			_g1.h["data"] = aState;
			var value = Reflect.fields(aState).join(",");
			_g1.h["fields"] = value;
			_g.h["contacts"] = _g1;
			dbaProps_dataSource = _g;
			break;
		}
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.section,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 758, className : "view.dashboard.DBSync", methodName : "render"});
		var tmp = this.state.formApi;
		var tmp1 = react_ReactType.fromComp(React_Fragment);
		var tmp2 = react_ReactType.fromString("form");
		var tmp3 = this.renderResults();
		var tmp4 = React.createElement(tmp2,{ className : "tabComponentForm"},tmp3);
		return tmp.render(React.createElement(tmp1,{ },tmp4));
	}
	,renderResults: function() {
		if(this.state.data != null) {
			haxe_Log.trace(Std.string(this.state.data.h["action"]) + ":",{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 770, className : "view.dashboard.DBSync", methodName : "renderResults"});
		}
		haxe_Log.trace(this.state.loading,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 771, className : "view.dashboard.DBSync", methodName : "renderResults"});
		if(this.state.data == null) {
			return React.createElement(react_ReactType.fromString("div"),{ className : "flex0 cCenter"},this.state.formApi.renderWait());
		}
		haxe_Log.trace("###########loading:" + Std.string(this.state.loading),{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 774, className : "view.dashboard.DBSync", methodName : "renderResults"});
		var _g = this.state.data.h["action"];
		if(_g == null) {
			return null;
		} else {
			switch(_g) {
			case "accountsCount":
				if(this.state.data.h["accountsCount"] == null) {
					return this.state.formApi.renderWait();
				} else {
					var tmp = react_ReactType.fromString("div");
					var tmp1 = react_ReactType.fromString("ul");
					var tmp2 = React.createElement(react_ReactType.fromString("li"),{ },React.createElement(react_ReactType.fromString("h3"),{ },"Konten"));
					var tmp3 = react_ReactType.fromString("li");
					var tmp4 = React.createElement(react_ReactType.fromString("div"),{ },"Live System:");
					var tmp5 = this.state.data.h["pay_sourceCount"];
					var tmp6 = React.createElement(tmp3,{ },tmp4,React.createElement(react_ReactType.fromString("div"),{ className : "tRight tableNums"},tmp5));
					var tmp3 = react_ReactType.fromString("li");
					var tmp4 = React.createElement(react_ReactType.fromString("div"),{ },"Neues System:");
					var tmp5 = this.state.data.h["accountsCount"];
					return React.createElement(tmp,{ className : "flex0 cCenter"},React.createElement(tmp1,{ },tmp2,tmp6,React.createElement(tmp3,{ },tmp4,React.createElement(react_ReactType.fromString("div"),{ className : "tRight tableNums"},tmp5))));
				}
				break;
			case "bookingRequestsCount":
				if(this.state.data.h["bookingRequestsCount"] == null) {
					return this.state.formApi.renderWait();
				} else {
					var tmp = react_ReactType.fromString("div");
					var tmp1 = react_ReactType.fromString("ul");
					var tmp2 = React.createElement(react_ReactType.fromString("li"),{ },React.createElement(react_ReactType.fromString("h3"),{ },"BuchungsAnforderungen"));
					var tmp3 = react_ReactType.fromString("li");
					var tmp4 = React.createElement(react_ReactType.fromString("div"),{ },"Live System:");
					var tmp5 = this.state.data.h["buchungsAnforderungenCount"];
					var tmp6 = React.createElement(tmp3,{ },tmp4,React.createElement(react_ReactType.fromString("div"),{ className : "tRight tableNums"},tmp5));
					var tmp3 = react_ReactType.fromString("li");
					var tmp4 = React.createElement(react_ReactType.fromString("div"),{ },"Neues System:");
					var tmp5 = this.state.data.h["bookingRequestsCount"];
					return React.createElement(tmp,{ className : "flex0 cCenter"},React.createElement(tmp1,{ },tmp2,tmp6,React.createElement(tmp3,{ },tmp4,React.createElement(react_ReactType.fromString("div"),{ className : "tRight tableNums"},tmp5))));
				}
				break;
			case "contactsCount":
				if(this.state.data.h["contactsCount"] == null) {
					return this.state.formApi.renderWait();
				} else {
					var tmp = react_ReactType.fromString("div");
					var tmp1 = react_ReactType.fromString("ul");
					var tmp2 = React.createElement(react_ReactType.fromString("li"),{ },React.createElement(react_ReactType.fromString("h3"),{ },"Kontakte"));
					var tmp3 = react_ReactType.fromString("li");
					var tmp4 = React.createElement(react_ReactType.fromString("div"),{ },"Live System:");
					var tmp5 = this.state.data.h["clientsCount"];
					var tmp6 = React.createElement(tmp3,{ },tmp4,React.createElement(react_ReactType.fromString("div"),{ className : "tRight tableNums"},tmp5));
					var tmp3 = react_ReactType.fromString("li");
					var tmp4 = React.createElement(react_ReactType.fromString("div"),{ },"Neues System:");
					var tmp5 = this.state.data.h["contactsCount"];
					return React.createElement(tmp,{ className : "flex0 cCenter"},React.createElement(tmp1,{ },tmp2,tmp6,React.createElement(tmp3,{ },tmp4,React.createElement(react_ReactType.fromString("div"),{ className : "tRight tableNums"},tmp5))));
				}
				break;
			case "dealsCount":
				if(this.state.data.h["dealsCount"] == null) {
					return this.state.formApi.renderWait();
				} else {
					var tmp = react_ReactType.fromString("div");
					var tmp1 = react_ReactType.fromString("ul");
					var tmp2 = React.createElement(react_ReactType.fromString("li"),{ },React.createElement(react_ReactType.fromString("h3"),{ },"Spenden"));
					var tmp3 = react_ReactType.fromString("li");
					var tmp4 = React.createElement(react_ReactType.fromString("div"),{ },"Live System:");
					var tmp5 = this.state.data.h["pay_planCount"];
					var tmp6 = React.createElement(tmp3,{ },tmp4,React.createElement(react_ReactType.fromString("div"),{ className : "tRight tableNums"},tmp5));
					var tmp3 = react_ReactType.fromString("li");
					var tmp4 = React.createElement(react_ReactType.fromString("div"),{ },"Neues System:");
					var tmp5 = this.state.data.h["dealsCount"];
					return React.createElement(tmp,{ className : "flex0 cCenter"},React.createElement(tmp1,{ },tmp2,tmp6,React.createElement(tmp3,{ },tmp4,React.createElement(react_ReactType.fromString("div"),{ className : "tRight tableNums"},tmp5))));
				}
				break;
			case "importClientList":
				haxe_Log.trace(this.state.actualState,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 778, className : "view.dashboard.DBSync", methodName : "renderResults"});
				if(this.state.actualState == null) {
					return this.state.formApi.renderWait();
				} else {
					return this.state.formBuilder.renderForm({ mHandlers : this.state.mHandlers, fields : this.formFields, model : "importClientList", title : "Stammdaten Import"},this.state.actualState);
				}
				break;
			default:
				return null;
			}
		}
	}
	,updateMenu: function(viewClassPath) {
		var sideMenu = this.state.sideMenu;
		haxe_Log.trace(sideMenu.section,{ fileName : "src/view/dashboard/DBSync.hx", lineNumber : 836, className : "view.dashboard.DBSync", methodName : "updateMenu"});
		var _g = 0;
		var _g1 = sideMenu.menuBlocks.h["DBSync"].items;
		while(_g < _g1.length) {
			var mI = _g1[_g];
			++_g;
			var _g2 = mI.action;
			if(_g2 != null) {
				switch(_g2) {
				case "editTableFields":
					mI.disabled = this.state.selectedRows.length == 0;
					break;
				case "save":
					mI.disabled = this.state.clean;
					break;
				default:
				}
			}
		}
		return sideMenu;
	}
	,__class__: view_dashboard_DBSync
});
var view_dashboard_Roles = function(props) {
	React_Component.call(this,props);
	this.state = { clean : true, hasError : false, mounted : false, loading : true, sideMenu : view_shared_io_FormApi.initSideMenuMulti(this,[{ dataClassPath : "roles.User", label : "Benutzer", section : "Users", items : view_shared_io_Users.menuItems},{ dataClassPath : "settings.Bookmarks", label : "Benutzergruppen", section : "Bookmarks", items : []},{ dataClassPath : "roles.Permissions", label : "Rechte", section : "permissions", items : []}],{ section : "Users", sameWidth : true})};
	new view_shared_io_FormApi(this,this.state.sideMenu);
	haxe_Log.trace(Reflect.fields(props),{ fileName : "src/view/dashboard/Roles.hx", lineNumber : 69, className : "view.dashboard.Roles", methodName : "new"});
};
$hxClasses["view.dashboard.Roles"] = view_dashboard_Roles;
view_dashboard_Roles.__name__ = "view.dashboard.Roles";
view_dashboard_Roles.mapStateToProps = function(aState) {
	return function(aState) {
		var uState = aState.userState;
		haxe_Log.trace(uState,{ fileName : "src/view/dashboard/Roles.hx", lineNumber : 133, className : "view.dashboard.Roles", methodName : "mapStateToProps"});
		return { userState : uState};
	};
};
view_dashboard_Roles.__super__ = React_Component;
view_dashboard_Roles.prototype = $extend(React_Component.prototype,{
	createUsers: function(ev) {
	}
	,editUsers: function(ev) {
	}
	,deleteUsers: function(ev) {
	}
	,createUserGroups: function(ev) {
	}
	,editUserGroups: function(ev) {
	}
	,deleteUserGroups: function(ev) {
	}
	,createRoles: function(ev) {
	}
	,editRoles: function(ev) {
	}
	,deleteRoles: function(ev) {
	}
	,importExternalUsers: function(ev) {
		haxe_Log.trace(ev.currentTarget,{ fileName : "src/view/dashboard/Roles.hx", lineNumber : 113, className : "view.dashboard.Roles", methodName : "importExternalUsers"});
		this.props.formApi.requests.push(haxe_ds_Either.Left(loader_AjaxLoader.load("" + Std.string(App.config.api),{ id : this.props.userState.dbUser.id, jwt : this.props.userState.dbUser.jwt, first_name : this.props.userState.dbUser.first_name, classPath : "admin.CreateUsers", action : "importExternal"},function(data) {
			haxe_Log.trace(data,{ fileName : "src/view/dashboard/Roles.hx", lineNumber : 124, className : "view.dashboard.Roles", methodName : "importExternalUsers"});
		})));
	}
	,componentDidMount: function() {
		haxe_Log.trace(this.state.loading,{ fileName : "src/view/dashboard/Roles.hx", lineNumber : 143, className : "view.dashboard.Roles", methodName : "componentDidMount"});
	}
	,render: function() {
		var sM = this.state.sideMenu;
		if(sM.menuBlocks != null) {
			var h = sM.menuBlocks.h;
			var inlStringMapKeyIterator_h = h;
			var inlStringMapKeyIterator_keys = Object.keys(h);
			var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
			var inlStringMapKeyIterator_current = 0;
			haxe_Log.trace(inlStringMapKeyIterator_keys[inlStringMapKeyIterator_current++] + ":" + this.props.match.params.section,{ fileName : "src/view/dashboard/Roles.hx", lineNumber : 168, className : "view.dashboard.Roles", methodName : "render"});
		}
		var tmp = react_ReactType.fromString("div");
		var tmp1 = this.renderContent();
		var tmp2 = view_shared_Menu._renderWrapper;
		var tmp3 = Object.assign({ },sM,{ className : "menu"});
		return React.createElement(tmp,{ className : "columns"},tmp1,React.createElement(tmp2,tmp3));
	}
	,renderContent: function() {
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/dashboard/Roles.hx", lineNumber : 180, className : "view.dashboard.Roles", methodName : "renderContent"});
		if(this.props.match.params.action == "userList") {
			return React.createElement(react_ReactType.fromComp(view_shared_io_Users),Object.assign({ },this.props,{ fullWidth : true}));
		} else {
			return React.createElement(react_ReactType.fromString("form"),{ className : "tabComponentForm"});
		}
	}
	,__class__: view_dashboard_Roles
});
var view_dashboard_Settings = function(props) {
	React_Component.call(this,props);
	this.state = { clean : true, hasError : false, mounted : false, loading : true, sideMenu : view_shared_io_FormApi.initSideMenuMulti(this,[{ dataClassPath : "auth.User", label : "UserDaten", section : "user", items : view_shared_io_User.menuItems},{ dataClassPath : "settings.Bookmarks", label : "Lesezeichen", section : "bookmarks", items : view_shared_io_Bookmarks.menuItems},{ dataClassPath : "settings.Design", label : "Design", section : "design", items : view_shared_io_Design.menuItems}],{ section : props.match.params.section == null ? "User" : props.match.params.section, sameWidth : true})};
	if(props.match.params.section != null) {
		haxe_Log.trace(props.match.params.section,{ fileName : "src/view/dashboard/Settings.hx", lineNumber : 81, className : "view.dashboard.Settings", methodName : "new"});
	}
	haxe_Log.trace("" + props.match.params.section + " " + props.match.params.action,{ fileName : "src/view/dashboard/Settings.hx", lineNumber : 86, className : "view.dashboard.Settings", methodName : "new"});
	haxe_Log.trace(Reflect.fields(props),{ fileName : "src/view/dashboard/Settings.hx", lineNumber : 87, className : "view.dashboard.Settings", methodName : "new"});
};
$hxClasses["view.dashboard.Settings"] = view_dashboard_Settings;
view_dashboard_Settings.__name__ = "view.dashboard.Settings";
view_dashboard_Settings.__super__ = React_Component;
view_dashboard_Settings.prototype = $extend(React_Component.prototype,{
	componentDidCatch: function(error,info) {
		haxe_Log.trace(Reflect.fields(this.state),{ fileName : "src/view/dashboard/Settings.hx", lineNumber : 37, className : "view.dashboard.Settings", methodName : "componentDidCatch"});
		if(this.state.mounted) {
			this.setState({ hasError : true});
		}
		haxe_Log.trace(error,{ fileName : "src/view/dashboard/Settings.hx", lineNumber : 40, className : "view.dashboard.Settings", methodName : "componentDidCatch"});
		haxe_Log.trace(info,{ fileName : "src/view/dashboard/Settings.hx", lineNumber : 41, className : "view.dashboard.Settings", methodName : "componentDidCatch"});
	}
	,componentDidMount: function() {
		haxe_Log.trace(Reflect.fields(this.state),{ fileName : "src/view/dashboard/Settings.hx", lineNumber : 93, className : "view.dashboard.Settings", methodName : "componentDidMount"});
		haxe_Log.trace(this.state.loading,{ fileName : "src/view/dashboard/Settings.hx", lineNumber : 94, className : "view.dashboard.Settings", methodName : "componentDidMount"});
		haxe_Log.trace(Reflect.fields(this.props),{ fileName : "src/view/dashboard/Settings.hx", lineNumber : 95, className : "view.dashboard.Settings", methodName : "componentDidMount"});
		haxe_Log.trace(this.props.match.params.section,{ fileName : "src/view/dashboard/Settings.hx", lineNumber : 96, className : "view.dashboard.Settings", methodName : "componentDidMount"});
	}
	,render: function() {
		var _g = this.props.match.params.section;
		if(_g == null) {
			return React.createElement(view_shared_io_Bookmarks._renderWrapper,Object.assign({ },this.props,{ sideMenu : this.state.sideMenu, fullWidth : true}));
		} else {
			switch(_g) {
			case "Bookmarks":
				return React.createElement(view_shared_io_Bookmarks._renderWrapper,Object.assign({ },this.props,{ sideMenu : this.state.sideMenu, fullWidth : true}));
			case "User":
				return React.createElement(react_ReactType.fromComp(view_shared_io_User),Object.assign({ },this.props,{ sideMenu : this.state.sideMenu, fullWidth : true}));
			default:
				return null;
			}
		}
	}
	,__class__: view_dashboard_Settings
});
var view_dashboard_Setup = function(props) {
	haxe_Log.trace(props.userState,{ fileName : "src/view/dashboard/Setup.hx", lineNumber : 41, className : "view.dashboard.Setup", methodName : "new"});
	React_Component.call(this,props);
	haxe_Log.trace(Reflect.fields(props),{ fileName : "src/view/dashboard/Setup.hx", lineNumber : 43, className : "view.dashboard.Setup", methodName : "new"});
	haxe_Log.trace(props.match.params.section,{ fileName : "src/view/dashboard/Setup.hx", lineNumber : 44, className : "view.dashboard.Setup", methodName : "new"});
	this.state = App.initEState({ sideMenu : view_shared_io_FormApi.initSideMenuMulti(this,[{ dataClassPath : "admin.SyncExternal", label : "DB Abgleich", section : "DBSync", items : view_dashboard_DBSync.menuItems},{ dataClassPath : "tools.DB", label : "DB Design", section : "DB", items : view_dashboard_DB.menuItems}],{ section : props.match.params.section == null ? "DBSync" : props.match.params.section, sameWidth : true})},this);
	haxe_Log.trace(Reflect.fields(props),{ fileName : "src/view/dashboard/Setup.hx", lineNumber : 73, className : "view.dashboard.Setup", methodName : "new"});
};
$hxClasses["view.dashboard.Setup"] = view_dashboard_Setup;
view_dashboard_Setup.__name__ = "view.dashboard.Setup";
view_dashboard_Setup.__super__ = React_Component;
view_dashboard_Setup.prototype = $extend(React_Component.prototype,{
	componentDidCatch: function(error,info) {
		haxe_Log.trace(info,{ fileName : "src/view/dashboard/Setup.hx", lineNumber : 77, className : "view.dashboard.Setup", methodName : "componentDidCatch"});
		if(this.state.mounted) {
			this.setState({ hasError : true});
		}
		haxe_Log.trace(error,{ fileName : "src/view/dashboard/Setup.hx", lineNumber : 81, className : "view.dashboard.Setup", methodName : "componentDidCatch"});
	}
	,componentDidMount: function() {
		this.state.mounted = true;
		if(this.props.match.params.section == null) {
			var basePath = this.props.match.url;
			this.props.history.push("" + basePath + "/DB");
			haxe_Log.trace(this.props.history.location.pathname,{ fileName : "src/view/dashboard/Setup.hx", lineNumber : 92, className : "view.dashboard.Setup", methodName : "componentDidMount"});
			haxe_Log.trace("setting section to:DB",{ fileName : "src/view/dashboard/Setup.hx", lineNumber : 93, className : "view.dashboard.Setup", methodName : "componentDidMount"});
		}
		haxe_Log.trace("" + 1,{ fileName : "src/view/dashboard/Setup.hx", lineNumber : 95, className : "view.dashboard.Setup", methodName : "componentDidMount"});
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.section,{ fileName : "src/view/dashboard/Setup.hx", lineNumber : 118, className : "view.dashboard.Setup", methodName : "render"});
		switch(this.props.match.params.section) {
		case "DB":
			return React.createElement(view_dashboard_DB._renderWrapper,Object.assign({ },this.props,{ fullWidth : true, sideMenu : this.state.sideMenu}));
		case "DBSync":
			return React.createElement(view_dashboard_DBSync._renderWrapper,Object.assign({ },this.props,{ fullWidth : true, sideMenu : this.state.sideMenu}));
		default:
			return null;
		}
	}
	,syncUserDetails: function() {
		haxe_Log.trace("ooo",{ fileName : "src/view/dashboard/Setup.hx", lineNumber : 136, className : "view.dashboard.Setup", methodName : "syncUserDetails"});
	}
	,__class__: view_dashboard_Setup
});
var view_dashboard_model_DBFormsModel = function() { };
$hxClasses["view.dashboard.model.DBFormsModel"] = view_dashboard_model_DBFormsModel;
view_dashboard_model_DBFormsModel.__name__ = "view.dashboard.model.DBFormsModel";
view_dashboard_model_DBFormsModel.formatBool = function(v) {
	if(v) {
		return "Y";
	} else {
		return "N";
	}
};
view_dashboard_model_DBFormsModel.formatElementSelection = function(v) {
	if(v) {
		return "Y";
	} else {
		return "N";
	}
};
view_dashboard_model_DBFormsModel.dbMetaToState = function(dbMeta) {
	var sData = [];
	var _g = 0;
	while(_g < dbMeta.length) {
		var row = dbMeta[_g];
		++_g;
		var rM = new haxe_ds_StringMap();
		var h = row.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			if(row.h[k].format_display != null) {
				var v = App.sprintf(row.h[k].format_display,row.h[k]);
				rM.h[k] = v;
			} else {
				var v1 = row.h[k];
				rM.h[k] = v1;
			}
		}
		sData.push(rM);
	}
	return sData;
};
var view_dashboard_model_DBSyncModel = function() { };
$hxClasses["view.dashboard.model.DBSyncModel"] = view_dashboard_model_DBSyncModel;
view_dashboard_model_DBSyncModel.__name__ = "view.dashboard.model.DBSyncModel";
view_dashboard_model_DBSyncModel.formatBool = function(v) {
	if(v) {
		return "Y";
	} else {
		return "N";
	}
};
view_dashboard_model_DBSyncModel.formatElementSelection = function(v) {
	if(v) {
		return "Y";
	} else {
		return "N";
	}
};
view_dashboard_model_DBSyncModel.formatPhone = function(p) {
	haxe_Log.trace(p,{ fileName : "src/view/dashboard/model/DBSyncModel.hx", lineNumber : 17, className : "view.dashboard.model.DBSyncModel", methodName : "formatPhone"});
	if(p) {
		return p.login;
	} else {
		return "";
	}
};
view_dashboard_model_DBSyncModel.dataSource = function(action) {
	switch(action) {
	case "importClientList":
		var _g = new haxe_ds_StringMap();
		var _g1 = new haxe_ds_StringMap();
		_g1.h["alias"] = "co";
		_g1.h["fields"] = "";
		_g1.h["jCond"] = "contact=co.id";
		_g.h["contacts"] = _g1;
		var _g1 = new haxe_ds_StringMap();
		_g1.h["alias"] = "da";
		_g1.h["fields"] = null;
		_g1.h["jCond"] = "contact=co.id";
		_g.h["deals"] = _g1;
		var _g1 = new haxe_ds_StringMap();
		_g1.h["alias"] = "ac";
		_g1.h["fields"] = "";
		_g.h["accounts"] = _g1;
		return _g;
	case "loadClientData":
		var _g = new haxe_ds_StringMap();
		var _g1 = new haxe_ds_StringMap();
		_g1.h["alias"] = "co";
		_g1.h["fields"] = "";
		_g1.h["jCond"] = "contact=co.id";
		_g.h["contacts"] = _g1;
		var _g1 = new haxe_ds_StringMap();
		_g1.h["alias"] = "da";
		_g1.h["fields"] = null;
		_g1.h["jCond"] = "contact=co.id";
		_g.h["deals"] = _g1;
		var _g1 = new haxe_ds_StringMap();
		_g1.h["alias"] = "ac";
		_g1.h["fields"] = "";
		_g.h["accounts"] = _g1;
		return _g;
	default:
		return null;
	}
};
view_dashboard_model_DBSyncModel.formFields = function(action) {
	switch(action) {
	case "editTableFields":
		var _g = new haxe_ds_StringMap();
		_g.h["table_name"] = { label : "Tabelle", disabled : true};
		_g.h["field_name"] = { label : "Feldname", disabled : true};
		_g.h["field_type"] = { label : "Datentyp", type : "Select"};
		_g.h["element"] = { label : "Eingabefeld", type : "Select"};
		_g.h["disabled"] = { label : "Readonly", type : "Checkbox"};
		_g.h["required"] = { label : "Required", type : "Checkbox"};
		_g.h["use_as_index"] = { label : "Index", type : "Checkbox"};
		_g.h["any"] = { label : "Eigenschaften", disabled : true, type : "Hidden"};
		_g.h["id"] = { type : "Hidden"};
		return _g;
	case "importClientList":
		var _g = new haxe_ds_StringMap();
		_g.h["import_contacts"] = { label : "Kontakte", type : "Checkbox", preset : true};
		_g.h["contacts_limit"] = { label : "Anzahl", type : "Text"};
		_g.h["import_deals"] = { label : "Aufträge", type : "Checkbox", preset : true};
		_g.h["import_accounts"] = { label : "Kontent", type : "Checkbox", preset : true};
		return _g;
	default:
		return null;
	}
};
view_dashboard_model_DBSyncModel.dataAccess = function(action) {
	switch(action) {
	case "editTableFields":
		var _g = new haxe_ds_StringMap();
		var _g1 = new haxe_ds_StringMap();
		_g1.h["selectedRows"] = null;
		var _g2 = new haxe_ds_StringMap();
		_g2.h["table_name"] = { label : "Tabelle", disabled : true};
		_g2.h["field_name"] = { label : "Feldname", disabled : true};
		_g2.h["field_type"] = { label : "Datentyp", type : "Select"};
		_g2.h["element"] = { label : "Eingabefeld", type : "Select"};
		_g2.h["disabled"] = { label : "Readonly", type : "Checkbox"};
		_g2.h["required"] = { label : "Required", type : "Checkbox"};
		_g2.h["use_as_index"] = { label : "Index", type : "Checkbox"};
		_g2.h["any"] = { label : "Eigenschaften", disabled : true, type : "Hidden"};
		_g2.h["id"] = { type : "Hidden"};
		_g.h["" + action] = { source : _g1, view : _g2};
		return _g;
	case "importClientList":
		var _g = new haxe_ds_StringMap();
		var _g1 = new haxe_ds_StringMap();
		_g1.h["selectedRows"] = null;
		var _g2 = new haxe_ds_StringMap();
		_g2.h["import_contacts"] = { label : "Kontakte", type : "Checkbox", preset : true};
		_g2.h["contacts_limit"] = { label : "Anzahl", type : "Text"};
		_g2.h["import_deals"] = { label : "Aufträge", type : "Checkbox", preset : true};
		_g2.h["import_accounts"] = { label : "Kontent", type : "Checkbox", preset : true};
		_g.h["" + action] = { source : _g1, view : _g2};
		return _g;
	case "saveTableFields":
		var _g = new haxe_ds_StringMap();
		_g.h["" + action] = { source : null, view : null};
		return _g;
	default:
		return null;
	}
};
var view_dashboard_model_RolesFormModel = function() { };
$hxClasses["view.dashboard.model.RolesFormModel"] = view_dashboard_model_RolesFormModel;
view_dashboard_model_RolesFormModel.__name__ = "view.dashboard.model.RolesFormModel";
var view_data_Accounts = function(props) {
	React_Component.call(this,props);
	view_data_Accounts._strace = true;
	haxe_Log.trace(Reflect.fields(props),{ fileName : "src/view/data/Accounts.hx", lineNumber : 51, className : "view.data.Accounts", methodName : "new"});
	haxe_Log.trace(props.match.params.section,{ fileName : "src/view/data/Accounts.hx", lineNumber : 52, className : "view.data.Accounts", methodName : "new"});
	this.state = { clean : true, hasError : false, mounted : false, loading : true, sideMenu : view_shared_io_FormApi.initSideMenuMulti(this,[{ dataClassPath : "data.Contacts", label : "Konten", section : "List", items : view_data_accounts_List.menuItems},{ dataClassPath : "contact.Deals", label : "Aufträge", section : "Edit", items : view_data_accounts_Edit.menuItems}],{ section : props.match.params.section == null ? "DBSync" : props.match.params.section, sameWidth : true})};
	haxe_Log.trace(Reflect.fields(props),{ fileName : "src/view/data/Accounts.hx", lineNumber : 79, className : "view.data.Accounts", methodName : "new"});
};
$hxClasses["view.data.Accounts"] = view_data_Accounts;
view_data_Accounts.__name__ = "view.data.Accounts";
view_data_Accounts.mapDispatchToProps = function(dispatch) {
	if(view_data_Accounts._strace) {
		haxe_Log.trace("ok",{ fileName : "src/view/data/Accounts.hx", lineNumber : 84, className : "view.data.Accounts", methodName : "mapDispatchToProps"});
	}
	return { select : function(id,data,component,selectType) {
		if(id == null) {
			id = -1;
		}
		if(view_data_Accounts._strace) {
			haxe_Log.trace("select:" + id + " selectType:" + selectType,{ fileName : "src/view/data/Accounts.hx", lineNumber : 89, className : "view.data.Accounts", methodName : "mapDispatchToProps"});
		}
		dispatch(redux_Action.map(action_async_LiveDataAccess.select({ id : id, data : data, match : component.props.match, selectType : selectType})));
	}};
};
view_data_Accounts.__super__ = React_Component;
view_data_Accounts.prototype = $extend(React_Component.prototype,{
	_trace: null
	,componentDidCatch: function(error,info) {
		if(this.state.mounted) {
			this.setState({ hasError : true});
		}
		haxe_Log.trace(error,{ fileName : "src/view/data/Accounts.hx", lineNumber : 100, className : "view.data.Accounts", methodName : "componentDidCatch"});
	}
	,componentDidMount: function() {
		this.setState({ mounted : true});
		if(this.props.match.params.section == null) {
			var basePath = this.props.match.url;
			this.props.history.push("" + basePath + "/List");
			haxe_Log.trace(this.props.history.location.pathname,{ fileName : "src/view/data/Accounts.hx", lineNumber : 111, className : "view.data.Accounts", methodName : "componentDidMount"});
			haxe_Log.trace("setting section to:List",{ fileName : "src/view/data/Accounts.hx", lineNumber : 112, className : "view.data.Accounts", methodName : "componentDidMount"});
		}
		haxe_Log.trace("" + 1,{ fileName : "src/view/data/Accounts.hx", lineNumber : 114, className : "view.data.Accounts", methodName : "componentDidMount"});
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.section,{ fileName : "src/view/data/Accounts.hx", lineNumber : 137, className : "view.data.Accounts", methodName : "render"});
		switch(this.props.match.params.section) {
		case "Edit":
			return React.createElement(react_ReactType.fromComp(view_data_accounts_Edit),Object.assign({ },this.props,{ fullWidth : true, sideMenu : this.state.sideMenu}));
		case "List":
			return React.createElement(view_data_accounts_List._renderWrapper,Object.assign({ },this.props,{ limit : 100, fullWidth : true, sideMenu : this.state.sideMenu}));
		default:
			return null;
		}
	}
	,__class__: view_data_Accounts
});
var view_data_Contacts = function(props) {
	React_Component.call(this,props);
	view_data_Contacts._strace = this._trace = true;
	this.dataAccess = model_contacts_ContactsModel.dataAccess;
	this.dataDisplay = model_contacts_ContactsModel.dataDisplay;
	if(this._trace) {
		haxe_Log.trace("..." + Std.string(Reflect.fields(props)),{ fileName : "src/view/data/Contacts.hx", lineNumber : 74, className : "view.data.Contacts", methodName : "new"});
	}
	if(this._trace) {
		haxe_Log.trace(props.match.params,{ fileName : "src/view/data/Contacts.hx", lineNumber : 75, className : "view.data.Contacts", methodName : "new"});
	}
	this.state = App.initEState({ dbTable : [], loading : false, contactData : new haxe_ds_IntMap(), page : 0, selectedRows : [], values : new haxe_ds_StringMap()},this);
	if(props.match.params.section == null) {
		if(this._trace) {
			haxe_Log.trace("reme",{ fileName : "src/view/data/Contacts.hx", lineNumber : 82, className : "view.data.Contacts", methodName : "new"});
		}
		var baseUrl = props.match.path.split(":section")[0];
		if(props.dataStore.contactsData.iterator().hasNext()) {
			if(this._trace) {
				haxe_Log.trace(shared_Utils.keysList(props.dataStore.contactsData.keys()),{ fileName : "src/view/data/Contacts.hx", lineNumber : 86, className : "view.data.Contacts", methodName : "new"});
			}
		}
		props.history.push("" + baseUrl + "List");
	}
};
$hxClasses["view.data.Contacts"] = view_data_Contacts;
view_data_Contacts.__name__ = "view.data.Contacts";
view_data_Contacts.mapDispatchToProps = function(dispatch) {
	if(view_data_Contacts._strace) {
		haxe_Log.trace("ok",{ fileName : "src/view/data/Contacts.hx", lineNumber : 112, className : "view.data.Contacts", methodName : "mapDispatchToProps"});
	}
	return { select : function(id,data,component,selectType) {
		if(id == null) {
			id = -1;
		}
		if(view_data_Contacts._strace) {
			haxe_Log.trace("select:" + id + " selectType:" + selectType,{ fileName : "src/view/data/Contacts.hx", lineNumber : 118, className : "view.data.Contacts", methodName : "mapDispatchToProps"});
		}
		dispatch(redux_Action.map(action_async_LiveDataAccess.select({ component : component, id : id, data : data, match : component.props.match, selectType : selectType})));
	}};
};
view_data_Contacts.mapStateToProps = function(aState) {
	if(view_data_Contacts._strace) {
		haxe_Log.trace(Reflect.fields(aState),{ fileName : "src/view/data/Contacts.hx", lineNumber : 131, className : "view.data.Contacts", methodName : "mapStateToProps"});
	}
	var bState = { dataStore : aState.dataStore, userState : aState.userState};
	return bState;
};
view_data_Contacts.__super__ = React_Component;
view_data_Contacts.prototype = $extend(React_Component.prototype,{
	dataDisplay: null
	,dataAccess: null
	,dbData: null
	,dbMetaData: null
	,_trace: null
	,componentDidCatch: function(error,info) {
		try {
			this.setState({ hasError : true});
		} catch( _g ) {
			var ex = haxe_Exception.caught(_g).unwrap();
			if(this._trace) {
				haxe_Log.trace(ex,{ fileName : "src/view/data/Contacts.hx", lineNumber : 104, className : "view.data.Contacts", methodName : "componentDidCatch"});
			}
		}
		if(this._trace) {
			haxe_Log.trace(error,{ fileName : "src/view/data/Contacts.hx", lineNumber : 106, className : "view.data.Contacts", methodName : "componentDidCatch"});
		}
		me_cunity_debug_Out.dumpStack(haxe_CallStack.callStack(),{ fileName : "src/view/data/Contacts.hx", lineNumber : 107, className : "view.data.Contacts", methodName : "componentDidCatch"});
	}
	,componentDidMount: function() {
		if(this._trace) {
			haxe_Log.trace(this.props.location.pathname,{ fileName : "src/view/data/Contacts.hx", lineNumber : 149, className : "view.data.Contacts", methodName : "componentDidMount"});
		}
	}
	,render: function() {
		switch(this.props.match.params.section) {
		case "Edit":
			return React.createElement(view_data_contacts_Edit._renderWrapper,Object.assign({ },this.props,{ parentComponent : this, formApi : this.state.formApi, fullWidth : true, sideMenu : this.state.sideMenu}));
		case "List":
			return React.createElement(view_data_contacts_List._renderWrapper,Object.assign({ },this.props,{ limit : 100, page : this.state.page, parentComponent : this, formApi : this.state.formApi, fullWidth : true, sideMenu : this.state.sideMenu}));
		default:
			return null;
		}
	}
	,setStateFromChild: function(cState) {
		this.setState(cState);
	}
	,importClientList: function(_) {
		haxe_Log.trace("setState loading true => " + Std.string(this.state.loading),{ fileName : "src/view/data/Contacts.hx", lineNumber : 208, className : "view.data.Contacts", methodName : "importClientList"});
		this.setState({ loading : true});
	}
	,__class__: view_data_Contacts
});
var view_data_Deals = function(props) {
	React_Component.call(this,props);
	view_data_Deals._trace = true;
	haxe_Log.trace(Reflect.fields(props),{ fileName : "src/view/data/Deals.hx", lineNumber : 50, className : "view.data.Deals", methodName : "new"});
	haxe_Log.trace(props.match.params.section,{ fileName : "src/view/data/Deals.hx", lineNumber : 51, className : "view.data.Deals", methodName : "new"});
	if(props.match.params.section == null) {
		if(view_data_Deals._trace) {
			haxe_Log.trace("reme",{ fileName : "src/view/data/Deals.hx", lineNumber : 55, className : "view.data.Deals", methodName : "new"});
		}
		var baseUrl = props.match.path.split(":section")[0];
		if(props.dataStore.dealData.iterator().hasNext()) {
			if(view_data_Deals._trace) {
				haxe_Log.trace(shared_Utils.keysList(props.dataStore.dealData.keys()),{ fileName : "src/view/data/Deals.hx", lineNumber : 59, className : "view.data.Deals", methodName : "new"});
			}
		}
		props.history.push("" + baseUrl + "List/");
	}
	this.state = { clean : true, hasError : false, mounted : false, loading : true, sideMenu : view_shared_io_FormApi.initSideMenuMulti(this,[{ dataClassPath : "data.deals.List", label : "Spenden", section : "List", items : view_data_deals_List.menuItems},{ dataClassPath : "data.deals.Edit", label : "Spenden", section : "Edit", items : view_data_deals_Edit.menuItems}],{ section : props.match.params.section == null ? "List" : props.match.params.section, sameWidth : true})};
	haxe_Log.trace(Reflect.fields(props),{ fileName : "src/view/data/Deals.hx", lineNumber : 91, className : "view.data.Deals", methodName : "new"});
};
$hxClasses["view.data.Deals"] = view_data_Deals;
view_data_Deals.__name__ = "view.data.Deals";
view_data_Deals.mapStateToProps = function(aState) {
	var bState = { dataStore : aState.dataStore, userState : aState.userState};
	if(view_data_Deals._trace) {
		haxe_Log.trace(bState.dataStore.dealData,{ fileName : "src/view/data/Deals.hx", lineNumber : 101, className : "view.data.Deals", methodName : "mapStateToProps"});
	}
	return bState;
};
view_data_Deals.mapDispatchToProps = function(dispatch) {
	if(view_data_Deals._trace) {
		haxe_Log.trace("ok",{ fileName : "src/view/data/Deals.hx", lineNumber : 107, className : "view.data.Deals", methodName : "mapDispatchToProps"});
	}
	return { storeData : function(id,action) {
		dispatch(redux_Action.map(action_async_LiveDataAccess.storeData(id,action)));
	}, select : function(id,data,component,selectType) {
		if(id == null) {
			id = -1;
		}
		if(view_data_Deals._trace) {
			haxe_Log.trace("select:" + id + " selectType:" + selectType,{ fileName : "src/view/data/Deals.hx", lineNumber : 115, className : "view.data.Deals", methodName : "mapDispatchToProps"});
		}
		haxe_Log.trace(data,{ fileName : "src/view/data/Deals.hx", lineNumber : 116, className : "view.data.Deals", methodName : "mapDispatchToProps"});
		dispatch(redux_Action.map(action_async_LiveDataAccess.select({ id : id, data : data, match : component.props.match, selectType : selectType})));
	}};
};
view_data_Deals.__super__ = React_Component;
view_data_Deals.prototype = $extend(React_Component.prototype,{
	componentDidCatch: function(error,info) {
		if(this.state.mounted) {
			this.setState({ hasError : true});
		}
		haxe_Log.trace(error,{ fileName : "src/view/data/Deals.hx", lineNumber : 127, className : "view.data.Deals", methodName : "componentDidCatch"});
	}
	,componentDidMount: function() {
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.section,{ fileName : "src/view/data/Deals.hx", lineNumber : 147, className : "view.data.Deals", methodName : "render"});
		if(view_data_Deals._trace) {
			haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/data/Deals.hx", lineNumber : 148, className : "view.data.Deals", methodName : "render"});
		}
		switch(this.props.match.params.section) {
		case "Edit":
			return React.createElement(view_data_deals_Edit._renderWrapper,Object.assign({ },this.props,{ fullWidth : true, parentComponent : this, formApi : this.state.formApi, sideMenu : this.state.sideMenu}));
		case "List":
			return React.createElement(view_data_deals_List._renderWrapper,Object.assign({ },this.props,{ limit : 100, parentComponent : this, formApi : this.state.formApi, fullWidth : true, sideMenu : this.state.sideMenu}));
		default:
			return null;
		}
	}
	,__class__: view_data_Deals
});
var view_data_QC = function(props) {
	React_Component.call(this,props);
	this.dataAccess = model_contacts_ContactsModel.dataAccess;
	this.dataDisplay = model_contacts_ContactsModel.dataDisplay;
	haxe_Log.trace("..." + Std.string(Reflect.fields(props)),{ fileName : "src/view/data/QC.hx", lineNumber : 82, className : "view.data.QC", methodName : "new"});
	this.state = App.initEState({ dbTable : [], loading : false, contactData : new haxe_ds_IntMap(), selectedRows : [], values : new haxe_ds_StringMap()},this);
	haxe_Log.trace(this.state.uid,{ fileName : "src/view/data/QC.hx", lineNumber : 86, className : "view.data.QC", methodName : "new"});
	haxe_Log.trace(props.match.params,{ fileName : "src/view/data/QC.hx", lineNumber : 87, className : "view.data.QC", methodName : "new"});
	if(props.match.params.section == null) {
		haxe_Log.trace("reme",{ fileName : "src/view/data/QC.hx", lineNumber : 91, className : "view.data.QC", methodName : "new"});
		var baseUrl = props.match.path.split(":section")[0];
		props.history.push("" + baseUrl + "List/get");
	}
	if(view_data_QC._c == null) {
		view_data_QC._c = 1;
	} else {
		view_data_QC._c++;
	}
	haxe_Log.trace(view_data_QC._c,{ fileName : "src/view/data/QC.hx", lineNumber : 102, className : "view.data.QC", methodName : "new"});
};
$hxClasses["view.data.QC"] = view_data_QC;
view_data_QC.__name__ = "view.data.QC";
view_data_QC.mapDispatchToProps = function(dispatch) {
	haxe_Log.trace("ok",{ fileName : "src/view/data/QC.hx", lineNumber : 120, className : "view.data.QC", methodName : "mapDispatchToProps"});
	return { storeData : function(id,action) {
		dispatch(redux_Action.map(action_async_LiveDataAccess.storeData(id,action)));
	}, select : function(id,data,comp,selectType) {
		if(id == null) {
			id = -1;
		}
		haxe_Log.trace("select:" + id + " selectType:" + selectType + (data != null ? data.toString() : "null"),{ fileName : "src/view/data/QC.hx", lineNumber : 128, className : "view.data.QC", methodName : "mapDispatchToProps"});
		if(id < 0) {
			haxe_Log.trace("nono...",{ fileName : "src/view/data/QC.hx", lineNumber : 130, className : "view.data.QC", methodName : "mapDispatchToProps"});
			return;
		}
		dispatch(redux_Action.map(action_async_LiveDataAccess.select({ id : id, data : data, match : comp.props.match, selectType : selectType})));
	}};
};
view_data_QC.mapStateToProps = function(aState) {
	if(aState.dataStore.contactsData != null && aState.dataStore.contactsData.keys().hasNext()) {
		haxe_Log.trace(aState.dataStore.contactsData.keys().next(),{ fileName : "src/view/data/QC.hx", lineNumber : 155, className : "view.data.QC", methodName : "mapStateToProps"});
	}
	if(aState.dataStore.contactsDbData != null) {
		var tmp = aState.dataStore.contactsDbData.dataRows[0];
		haxe_Log.trace(tmp == null ? "null" : haxe_ds_StringMap.stringify(tmp.h),{ fileName : "src/view/data/QC.hx", lineNumber : 157, className : "view.data.QC", methodName : "mapStateToProps"});
	} else {
		haxe_Log.trace(Reflect.fields(aState.dataStore),{ fileName : "src/view/data/QC.hx", lineNumber : 161, className : "view.data.QC", methodName : "mapStateToProps"});
	}
	var bState = { dataStore : aState.dataStore, userState : aState.userState, findBy : "lead_id"};
	return bState;
};
view_data_QC.__super__ = React_Component;
view_data_QC.prototype = $extend(React_Component.prototype,{
	dataDisplay: null
	,dataAccess: null
	,dbData: null
	,dbMetaData: null
	,parentState: null
	,componentDidCatch: function(error,info) {
		try {
			this.setState({ hasError : true});
		} catch( _g ) {
			var ex = haxe_Exception.caught(_g).unwrap();
			haxe_Log.trace(ex,{ fileName : "src/view/data/QC.hx", lineNumber : 112, className : "view.data.QC", methodName : "componentDidCatch"});
		}
		haxe_Log.trace(error,{ fileName : "src/view/data/QC.hx", lineNumber : 114, className : "view.data.QC", methodName : "componentDidCatch"});
		me_cunity_debug_Out.dumpStack(haxe_CallStack.callStack(),{ fileName : "src/view/data/QC.hx", lineNumber : 115, className : "view.data.QC", methodName : "componentDidCatch"});
	}
	,componentDidMount: function() {
		haxe_Log.trace(this.props.location.pathname + ":" + (this.state == null ? "" : this.state.uid),{ fileName : "src/view/data/QC.hx", lineNumber : 180, className : "view.data.QC", methodName : "componentDidMount"});
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.section + ":" + this.props.match.params.action,{ fileName : "src/view/data/QC.hx", lineNumber : 186, className : "view.data.QC", methodName : "render"});
		if(this.state == null) {
			return null;
		}
		switch(this.props.match.params.section) {
		case "Edit":
			return React.createElement(view_data_qc_Edit._renderWrapper,Object.assign({ },this.props,{ parentComponent : this, formApi : this.state.formApi, fullWidth : true, sideMenu : this.state.sideMenu}));
		case "List":
			return React.createElement(view_data_qc_List._renderWrapper,Object.assign({ },this.props,{ limit : 100, parentComponent : this, formApi : this.state.formApi, fullWidth : true, sideMenu : this.state.sideMenu}));
		default:
			return null;
		}
	}
	,setStateFromChild: function(cState) {
		this.setState(cState);
	}
	,shouldComponentUpdate: function(nextProps,nextState) {
		haxe_Log.trace("" + view_data_QC._c + " propsChanged:" + Std.string(nextProps != this.props) + " stateChanged:" + Std.string(nextState != this.state) + " returning:" + (nextProps != this.props || nextState != this.state ? "Y" : "N"),{ fileName : "src/view/data/QC.hx", lineNumber : 209, className : "view.data.QC", methodName : "shouldComponentUpdate"});
		if(nextProps == this.props) {
			return nextState != this.state;
		} else {
			return true;
		}
	}
	,__class__: view_data_QC
});
var view_data_accounts_Edit = function(props) {
	React_Component.call(this,props);
	haxe_Log.trace(props.match.params,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 70, className : "view.data.accounts.Edit", methodName : "new"});
	this.dataAccess = model_accounting_AccountsModel.dataAccess;
	this.initialState = null;
	if(props.match.params.id == null && new EReg("update(/)*$","").match(props.match.params.action)) {
		haxe_Log.trace("nothing selected - redirect",{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 81, className : "view.data.accounts.Edit", methodName : "new"});
		var baseUrl = props.match.path.split(":section")[0];
		props.history.push("" + baseUrl + "List/get");
		return;
	}
	this.fieldNames = [];
	var h = this.dataAccess.h["open"].view.h;
	var k_h = h;
	var k_keys = Object.keys(h);
	var k_length = k_keys.length;
	var k_current = 0;
	while(k_current < k_length) {
		var k = k_keys[k_current++];
		this.fieldNames.push(k);
	}
	this.dataDisplay = model_accounting_AccountsModel.dataDisplay;
	haxe_Log.trace("..." + Std.string(Reflect.fields(props)),{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 92, className : "view.data.accounts.Edit", methodName : "new"});
	this.formRef = React.createRef();
	this.state = App.initEState({ dbTable : [], initialState : this.initialState, loading : false, selectedRows : [], sideMenu : view_shared_io_FormApi.initSideMenu(this,{ dataClassPath : "data.Accounts", label : "Bearbeiten", section : "Edit", items : view_data_accounts_Edit.menuItems},{ section : props.match.params.section == null ? "Edit" : props.match.params.section, sameWidth : true}), values : new haxe_ds_StringMap()},this);
};
$hxClasses["view.data.accounts.Edit"] = view_data_accounts_Edit;
view_data_accounts_Edit.__name__ = "view.data.accounts.Edit";
view_data_accounts_Edit.mapStateToProps = function(aState) {
	haxe_Log.trace(aState,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 246, className : "view.data.accounts.Edit", methodName : "mapStateToProps"});
	return { userState : aState.userState};
};
view_data_accounts_Edit.__super__ = React_Component;
view_data_accounts_Edit.prototype = $extend(React_Component.prototype,{
	dataDisplay: null
	,dataAccess: null
	,dbData: null
	,dbMetaData: null
	,formRef: null
	,fieldNames: null
	,actualState: null
	,initialState: null
	,loadContactData: function(id) {
		haxe_Log.trace("loading:" + id,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 124, className : "view.data.accounts.Edit", methodName : "loadContactData"});
		return null;
	}
	,update: function() {
		if(this.state.actualState != null) {
			haxe_Log.trace("length:" + this.state.actualState.fieldsModified.length + ":" + this.state.actualState.fieldsModified.join("|"),{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 146, className : "view.data.accounts.Edit", methodName : "update"});
		}
		if(this.state.actualState == null || this.state.actualState.fieldsModified.length == 0) {
			haxe_Log.trace("no data 2 update at state.actualState",{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 148, className : "view.data.accounts.Edit", methodName : "update"});
			return;
		}
		var data2save = this.state.actualState.allModified();
		var doc = window.document;
		var aState = react_ReactUtil.copy(this.state.actualState);
		var dbaProps_action = "update";
		var dbaProps_classPath = "data.Accounts";
		var dbaProps_dataSource = null;
		var dbaProps_userState = this.props.userState;
		var dbQ = { classPath : "data.Accounts", action : "update", data : data2save, filter : { id : this.state.actualState.id, mandator : 1}, resolveMessage : { success : "Konto " + this.state.actualState.id + " wurde aktualisiert", failure : "Konto " + this.state.actualState.id + " konnte nicht aktualisiert werden"}, table : "accounts", dbUser : this.props.userState.dbUser, devIP : App.devIP};
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 179, className : "view.data.accounts.Edit", methodName : "update"});
		switch(this.props.match.params.action) {
		case "delete":case "get":
			var _g = new haxe_ds_StringMap();
			var _g1 = new haxe_ds_StringMap();
			_g1.h["filter"] = { id : this.state.initialData.id};
			_g.h["contacts"] = _g1;
			dbaProps_dataSource = _g;
			break;
		case "insert":
			var _g = 0;
			var _g1 = this.fieldNames;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				haxe_Log.trace("" + f + " =>" + Std.string(Reflect.field(aState,f)) + "<=",{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 186, className : "view.data.accounts.Edit", methodName : "update"});
				if(Reflect.field(aState,f) == "") {
					Reflect.deleteField(aState,f);
				}
			}
			break;
		case "update":
			haxe_Log.trace("" + Std.string(this.state.initialData.id) + " :: creation_date: " + Std.string(aState.creation_date) + " " + Std.string(this.state.initialData.creation_date),{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 206, className : "view.data.accounts.Edit", methodName : "update"});
			if(this.state.actualState != null) {
				haxe_Log.trace(Std.string(this.state.actualState.modified()) + (":" + Std.string(this.state.actualState.fieldsModified)),{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 210, className : "view.data.accounts.Edit", methodName : "update"});
			}
			haxe_Log.trace(this.state.actualState.id,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 222, className : "view.data.accounts.Edit", methodName : "update"});
			if(!this.state.actualState.modified()) {
				haxe_Log.trace("nothing modified",{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 226, className : "view.data.accounts.Edit", methodName : "update"});
				return;
			}
			haxe_Log.trace(this.state.actualState.allModified(),{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 229, className : "view.data.accounts.Edit", methodName : "update"});
			var _g = new haxe_ds_StringMap();
			var _g1 = new haxe_ds_StringMap();
			var value = this.state.actualState.allModified();
			_g1.h["data"] = value;
			_g1.h["filter"] = { id : this.state.actualState.id};
			_g.h["contacts"] = _g1;
			dbaProps_dataSource = _g;
			haxe_Log.trace(dbaProps_dataSource.h["contacts"].h["filter"],{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 236, className : "view.data.accounts.Edit", methodName : "update"});
			break;
		}
		App.store.dispatch(redux_Action.map(action_async_CRUD.update(dbQ)));
	}
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 254, className : "view.data.accounts.Edit", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
	}
	,componentDidMount: function() {
		var _gthis = this;
		window.addEventListener("beforeunload",$bind(this,this.sessionStore));
		var sessAccounts = window.sessionStorage.getItem("contacts");
		if(sessAccounts != null) {
			haxe_Log.trace(JSON.parse(sessAccounts),{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 264, className : "view.data.accounts.Edit", methodName : "componentDidMount"});
			this.actualState = JSON.parse(sessAccounts);
			haxe_Log.trace(this.actualState,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 266, className : "view.data.accounts.Edit", methodName : "componentDidMount"});
			this.forceUpdate();
		} else if(this.actualState == null) {
			this.actualState = react_ReactUtil.copy(this.initialState);
			haxe_Log.trace(this.actualState,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 286, className : "view.data.accounts.Edit", methodName : "componentDidMount"});
			this.actualState = view_shared_io_Observer.run(this.actualState,function(newState) {
				_gthis.actualState = newState;
				haxe_Log.trace(_gthis.actualState,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 289, className : "view.data.accounts.Edit", methodName : "componentDidMount"});
			});
			haxe_Log.trace(this.actualState,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 291, className : "view.data.accounts.Edit", methodName : "componentDidMount"});
		}
		if(react_ReactRef.get_current(this.formRef) != null) {
			react_ReactRef.get_current(this.formRef).addEventListener("keyup",$bind(this,this.handleChange));
			react_ReactRef.get_current(this.formRef).addEventListener("mouseup",function(ev) {
				haxe_Log.trace(ev.target.value,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 302, className : "view.data.accounts.Edit", methodName : "componentDidMount"});
			});
		}
		if(this.props.dataStore != null && this.actualState == null) {
			this.actualState = this.loadContactData(this.initialState.id);
			this.setState({ initialState : this.actualState, actualState : this.actualState});
		}
	}
	,shouldComponentUpdate: function(nextProps,nextState) {
		haxe_Log.trace("propsChanged:" + Std.string(nextProps != this.props),{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 317, className : "view.data.accounts.Edit", methodName : "shouldComponentUpdate"});
		haxe_Log.trace("stateChanged:" + Std.string(nextState != this.state),{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 318, className : "view.data.accounts.Edit", methodName : "shouldComponentUpdate"});
		if(nextState != this.state) {
			return true;
		}
		return nextProps != this.props;
	}
	,componentWillUnmount: function() {
		return;
	}
	,sessionStore: function() {
		haxe_Log.trace(this.actualState,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 336, className : "view.data.accounts.Edit", methodName : "sessionStore"});
		window.sessionStorage.setItem("contacts",JSON.stringify(this.actualState));
		window.removeEventListener("beforeunload",$bind(this,this.sessionStore));
	}
	,doChange: function(name,value) {
		haxe_Log.trace("" + name + ": " + value,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 342, className : "view.data.accounts.Edit", methodName : "doChange"});
		if(name != null && name != "") {
			this.actualState[name] = value;
		}
		this.setState({ initialState : this.actualState});
	}
	,handleChange: function(e) {
		var el = e.target;
		if(el.name != "" && el.name != null) {
			haxe_Log.trace(">>" + Std.string(el.name) + "=>" + Std.string(el.value) + "<<",{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 355, className : "view.data.accounts.Edit", methodName : "handleChange"});
			this.actualState[el.name] = el.value;
			haxe_Log.trace(this.actualState.last_name,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 358, className : "view.data.accounts.Edit", methodName : "handleChange"});
		}
	}
	,mHandlers: function(event) {
		event.preventDefault();
		haxe_Log.trace(this.state.initialState.id,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 373, className : "view.data.accounts.Edit", methodName : "mHandlers"});
		var doc = window.document;
		var formElement = js_Boot.__cast(doc.querySelector("form[name=\"contact\"]") , HTMLFormElement);
		var elements = formElement.elements;
		var h = this.dataAccess.h["update"].view.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			if(k == "id") {
				continue;
			}
			try {
				var item = elements.namedItem(k);
				var o = this.actualState;
				var field = item.name;
				var value;
				switch(item.type) {
				case "checkbox":
					value = item.checked ? 1 : 0;
					break;
				case "select-multiple":case "select-one":
					var sOpts = item.selectedOptions;
					if(sOpts.length > 1) {
						var _g = [];
						var _g1 = 0;
						var _g2 = sOpts.length;
						while(_g1 < _g2) {
							var o1 = _g1++;
							_g.push(sOpts[o1].value);
						}
						value = _g.join("|");
					} else {
						value = item.value;
					}
					break;
				default:
					value = item.value;
				}
				o[field] = value;
			} catch( _g3 ) {
				var ex = haxe_Exception.caught(_g3).unwrap();
				haxe_Log.trace(ex,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 408, className : "view.data.accounts.Edit", methodName : "mHandlers"});
			}
		}
		haxe_Log.trace(this.actualState,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 412, className : "view.data.accounts.Edit", methodName : "mHandlers"});
		this.go(this.actualState);
	}
	,go: function(aState) {
		haxe_Log.trace(Reflect.fields(aState),{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 419, className : "view.data.accounts.Edit", methodName : "go"});
		var dbaProps = { action : this.props.match.params.action, classPath : "data.Accounts", dataSource : null, table : "contacts", userState : this.props.userState};
		switch(this.props.match.params.action) {
		case "delete":case "get":
			var _g = new haxe_ds_StringMap();
			var _g1 = new haxe_ds_StringMap();
			_g1.h["filter"] = "id|" + Std.string(this.state.initialState.id);
			_g.h["contacts"] = _g1;
			dbaProps.dataSource = _g;
			break;
		case "insert":
			var _g = 0;
			var _g1 = this.fieldNames;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				haxe_Log.trace("" + f + " =>" + Std.string(Reflect.field(aState,f)) + "<=",{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 433, className : "view.data.accounts.Edit", methodName : "go"});
				if(Reflect.field(aState,f) == "") {
					Reflect.deleteField(aState,f);
				}
			}
			Reflect.deleteField(aState,"id");
			Reflect.deleteField(aState,"creation_date");
			var _g = new haxe_ds_StringMap();
			var _g1 = new haxe_ds_StringMap();
			_g1.h["data"] = aState;
			var value = Reflect.fields(aState).join(",");
			_g1.h["fields"] = value;
			_g.h["contacts"] = _g1;
			dbaProps.dataSource = _g;
			break;
		case "update":
			var _g = 0;
			var _g1 = this.fieldNames;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				if(Reflect.field(aState,f) == "") {
					Reflect.deleteField(aState,f);
				}
			}
			var _g = new haxe_ds_StringMap();
			var _g1 = new haxe_ds_StringMap();
			_g1.h["data"] = aState;
			_g1.h["filter"] = "id|" + Std.string(this.state.initialState.id);
			_g.h["contacts"] = _g1;
			dbaProps.dataSource = _g;
			break;
		}
		App.store.dispatch(redux_Action.map(action_async_DBAccess.execute(dbaProps)));
	}
	,renderResults: function() {
		switch(this.props.match.params.action) {
		case "insert":
			haxe_Log.trace(this.actualState,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 498, className : "view.data.accounts.Edit", methodName : "renderResults"});
			var tmp = this.state.formBuilder;
			var tmp1 = this.state.mHandlers;
			var _g = new haxe_ds_StringMap();
			var h = this.dataAccess.h["open"].view.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				_g.h[k] = this.dataAccess.h["open"].view.h[k];
			}
			return tmp.renderForm({ mHandlers : tmp1, fields : _g, model : "contact", formRef : this.formRef, title : "Kontakt - Neue Stammdaten"},this.actualState);
		case "update":
			haxe_Log.trace(this.actualState,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 481, className : "view.data.accounts.Edit", methodName : "renderResults"});
			var fields_h = Object.create(null);
			var h = this.dataAccess.h["update"].view.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				fields_h[k] = this.dataAccess.h["update"].view.h[k];
			}
			haxe_Log.trace(haxe_ds_StringMap.stringify(fields_h),{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 485, className : "view.data.accounts.Edit", methodName : "renderResults"});
			if(this.actualState == null) {
				return this.state.formApi.renderWait();
			} else {
				var tmp = this.state.formBuilder;
				var tmp1 = this.state.mHandlers;
				var _g = new haxe_ds_StringMap();
				var h = this.dataAccess.h["open"].view.h;
				var k_h = h;
				var k_keys = Object.keys(h);
				var k_length = k_keys.length;
				var k_current = 0;
				while(k_current < k_length) {
					var k = k_keys[k_current++];
					_g.h[k] = this.dataAccess.h["open"].view.h[k];
				}
				return tmp.renderForm({ mHandlers : tmp1, fields : _g, model : "contact", formRef : this.formRef, title : "Stammdaten"},this.actualState);
			}
			break;
		default:
			return null;
		}
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 515, className : "view.data.accounts.Edit", methodName : "render"});
		switch(this.props.match.params.action) {
		case "insert":
			return this.state.formApi.render(this.renderResults());
		case "update":
			return this.state.formApi.render(this.renderResults());
		default:
			return this.state.formApi.render(this.renderResults());
		}
	}
	,updateMenu: function(viewClassPath) {
		var sideMenu = this.state.sideMenu;
		haxe_Log.trace(sideMenu.section,{ fileName : "src/view/data/accounts/Edit.hx", lineNumber : 538, className : "view.data.accounts.Edit", methodName : "updateMenu"});
		var _g = 0;
		var _g1 = sideMenu.menuBlocks.h["Contact"].items;
		while(_g < _g1.length) {
			var mI = _g1[_g];
			++_g;
			var _g2 = mI.action;
			if(_g2 != null) {
				switch(_g2) {
				case "editTableFields":
					mI.disabled = this.state.selectedRows.length == 0;
					break;
				case "save":
					mI.disabled = this.state.clean;
					break;
				default:
				}
			}
		}
		return sideMenu;
	}
	,__class__: view_data_accounts_Edit
});
var view_data_accounts_List = function(props) {
	React_Component.call(this,props);
	this.dataDisplay = model_accounting_AccountsModel.dataGridDisplay;
	haxe_Log.trace("..." + Std.string(Reflect.fields(props)),{ fileName : "src/view/data/accounts/List.hx", lineNumber : 51, className : "view.data.accounts.List", methodName : "new"});
	this.state = App.initEState({ dbTable : [], loading : false, accountsData : new haxe_ds_IntMap(), selectedRows : [], sideMenu : view_shared_io_FormApi.initSideMenu(this,{ dataClassPath : "data.Accounts", label : "Liste", section : "List", items : view_data_accounts_List.menuItems},{ section : props.match.params.section == null ? "List" : props.match.params.section, sameWidth : true}), values : new haxe_ds_StringMap()},this);
	haxe_Log.trace(this.state.loading,{ fileName : "src/view/data/accounts/List.hx", lineNumber : 71, className : "view.data.accounts.List", methodName : "new"});
	if(props.match.params.action == null) {
		var baseUrl = props.match.path.split(":section")[0];
		haxe_Log.trace("redirecting to " + baseUrl + "List/get",{ fileName : "src/view/data/accounts/List.hx", lineNumber : 76, className : "view.data.accounts.List", methodName : "new"});
		props.history.push("" + baseUrl + "List/get");
		this.get(null);
	} else {
		haxe_Log.trace(props.match.params,{ fileName : "src/view/data/accounts/List.hx", lineNumber : 83, className : "view.data.accounts.List", methodName : "new"});
	}
	haxe_Log.trace(this.state.loading,{ fileName : "src/view/data/accounts/List.hx", lineNumber : 85, className : "view.data.accounts.List", methodName : "new"});
};
$hxClasses["view.data.accounts.List"] = view_data_accounts_List;
view_data_accounts_List.__name__ = "view.data.accounts.List";
view_data_accounts_List.mapDispatchToProps = function(dispatch) {
	return { load : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.read(param)));
	}};
};
view_data_accounts_List.mapStateToProps = function(aState) {
	haxe_Log.trace(aState.userState,{ fileName : "src/view/data/accounts/List.hx", lineNumber : 97, className : "view.data.accounts.List", methodName : "mapStateToProps"});
	return { userState : aState.userState};
};
view_data_accounts_List.__super__ = React_Component;
view_data_accounts_List.prototype = $extend(React_Component.prototype,{
	baseForm: null
	,dataDisplay: null
	,dataAccess: null
	,dbData: null
	,dbMetaData: null
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/data/accounts/List.hx", lineNumber : 105, className : "view.data.accounts.List", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
	}
	,get: function(ev) {
		var _gthis = this;
		haxe_Log.trace("hi :)",{ fileName : "src/view/data/accounts/List.hx", lineNumber : 111, className : "view.data.accounts.List", methodName : "get"});
		var offset = 0;
		this.state.loading = true;
		if(ev != null && ev.page != null) {
			offset = this.props.limit * ev.page | 0;
		}
		haxe_Log.trace(this.props.userState,{ fileName : "src/view/data/accounts/List.hx", lineNumber : 120, className : "view.data.accounts.List", methodName : "get"});
		var p = this.props.load({ classPath : "data.Accounts", action : "get", filter : this.props.match.params.id != null ? { id : this.props.match.params.id, mandator : "1"} : { mandator : "1"}, limit : this.props.limit, offset : offset > 0 ? offset : 0, table : "accounts", dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/data/accounts/List.hx", lineNumber : 134, className : "view.data.accounts.List", methodName : "get"});
			if(data.dataRows != null && data.dataRows.length > 0) {
				_gthis.setState({ loading : false, dbTable : data.dataRows, pageCount : Math.ceil(Std.parseInt(data.dataInfo.h["count"]) / _gthis.props.limit)});
			}
		});
	}
	,edit: function(ev) {
		haxe_Log.trace(ev,{ fileName : "src/view/data/accounts/List.hx", lineNumber : 142, className : "view.data.accounts.List", methodName : "edit"});
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/data/accounts/List.hx", lineNumber : 143, className : "view.data.accounts.List", methodName : "edit"});
		var selected = window.document.querySelector(".gridItem.selected");
		if(selected != null) {
			haxe_Log.trace(selected.dataset.id,{ fileName : "src/view/data/accounts/List.hx", lineNumber : 146, className : "view.data.accounts.List", methodName : "edit"});
		}
		var baseUrl = this.props.match.path.split(":section")[0];
		this.props.history.push("" + baseUrl + "Edit/update/" + selected.dataset.id);
	}
	,componentDidMount: function() {
		var _g = new haxe_ds_StringMap();
		var _g1 = new haxe_ds_StringMap();
		var value = new haxe_ds_StringMap();
		_g1.h["contacts"] = value;
		var value = { source : _g1, view : new haxe_ds_StringMap()};
		_g.h["get"] = value;
		this.dataAccess = _g;
		if(this.props.match.params.action != null) {
			var fun = Reflect.field(this,this.props.match.params.action);
			if(Reflect.isFunction(fun)) {
				fun.apply(this,null);
			}
		} else {
			this.setState({ loading : false});
		}
	}
	,renderResults: function() {
		haxe_Log.trace(this.props.match.params.section + ":" + Std.string(this.state.dbTable != null),{ fileName : "src/view/data/accounts/List.hx", lineNumber : 177, className : "view.data.accounts.List", methodName : "renderResults"});
		haxe_Log.trace(this.state.loading,{ fileName : "src/view/data/accounts/List.hx", lineNumber : 179, className : "view.data.accounts.List", methodName : "renderResults"});
		if(this.state.loading || this.state.dbTable == null || this.state.dbTable.length == 0) {
			return this.state.formApi.renderWait();
		}
		haxe_Log.trace("###########loading:" + Std.string(this.state.loading),{ fileName : "src/view/data/accounts/List.hx", lineNumber : 182, className : "view.data.accounts.List", methodName : "renderResults"});
		var tmp = this.state.dbTable[0];
		haxe_Log.trace(tmp == null ? "null" : haxe_ds_StringMap.stringify(tmp.h),{ fileName : "src/view/data/accounts/List.hx", lineNumber : 183, className : "view.data.accounts.List", methodName : "renderResults"});
		switch(this.props.match.params.action) {
		case "delete":
			return null;
		case "get":
			return React.createElement(view_grid_Grid._renderWrapper,Object.assign({ },this.props,{ id : "accountsList", data : this.state.dbTable, dataState : this.dataDisplay.h["accountsList"], parentComponent : this, className : "is-striped is-hoverable", fullWidth : true}));
		default:
			return null;
		}
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.section,{ fileName : "src/view/data/accounts/List.hx", lineNumber : 222, className : "view.data.accounts.List", methodName : "render"});
		var tmp = this.state.formApi;
		var tmp1 = react_ReactType.fromComp(React_Fragment);
		var tmp2 = react_ReactType.fromString("form");
		var tmp3 = this.renderResults();
		var tmp4 = React.createElement(tmp2,{ className : "tabComponentForm"},tmp3);
		return tmp.render(React.createElement(tmp1,{ },tmp4));
	}
	,updateMenu: function(viewClassPath) {
		var sideMenu = this.state.sideMenu;
		haxe_Log.trace(sideMenu.section,{ fileName : "src/view/data/accounts/List.hx", lineNumber : 234, className : "view.data.accounts.List", methodName : "updateMenu"});
		var _g = 0;
		var _g1 = sideMenu.menuBlocks.h["Contact"].items;
		while(_g < _g1.length) {
			var mI = _g1[_g];
			++_g;
			var _g2 = mI.action;
			if(_g2 != null) {
				switch(_g2) {
				case "editTableFields":
					mI.disabled = this.state.selectedRows.length == 0;
					break;
				case "save":
					mI.disabled = this.state.clean;
					break;
				default:
				}
			}
		}
		return sideMenu;
	}
	,__class__: view_data_accounts_List
});
var view_data_accounts_model_Accounts = function() { };
$hxClasses["view.data.accounts.model.Accounts"] = view_data_accounts_model_Accounts;
view_data_accounts_model_Accounts.__name__ = "view.data.accounts.model.Accounts";
var view_data_contacts_Accounts = function(props) {
	React_Component.call(this,props);
	this.dataDisplay = model_accounting_AccountsModel.dataGridDisplay;
	haxe_Log.trace("..." + Std.string(Reflect.fields(props)),{ fileName : "src/view/data/contacts/Accounts.hx", lineNumber : 50, className : "view.data.contacts.Accounts", methodName : "new"});
	this.state = App.initEState({ actualStates : new haxe_ds_IntMap(), dbTable : [], loading : true, model : "accounts", accountsData : new haxe_ds_IntMap(), selectedRows : [], sideMenu : null, values : new haxe_ds_StringMap()},this);
	haxe_Log.trace(this.state.loading,{ fileName : "src/view/data/contacts/Accounts.hx", lineNumber : 61, className : "view.data.contacts.Accounts", methodName : "new"});
	this.parentState = props.parentComponent.state;
};
$hxClasses["view.data.contacts.Accounts"] = view_data_contacts_Accounts;
view_data_contacts_Accounts.__name__ = "view.data.contacts.Accounts";
view_data_contacts_Accounts.mapDispatchToProps = function(dispatch) {
	return { load : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.read(param)));
	}, loadData : function(id,me) {
		if(id == null) {
			id = -1;
		}
		return me.loadData(id);
	}, save : function(me) {
		return me.update();
	}, select : function(id,me,pComp,sType) {
		if(id == null) {
			id = -1;
		}
		var c = js_Boot.getClass(me);
		var tmp = "select:" + id + " me:" + c.__name__ + " SelectType:" + sType + " parentComponent:";
		var c = js_Boot.getClass(pComp.props.parentComponent);
		haxe_Log.trace(tmp + c.__name__,{ fileName : "src/view/data/contacts/Accounts.hx", lineNumber : 73, className : "view.data.contacts.Accounts", methodName : "mapDispatchToProps"});
	}};
};
view_data_contacts_Accounts.mapStateToProps = function(aState) {
	return { userState : aState.userState};
};
view_data_contacts_Accounts.__super__ = React_Component;
view_data_contacts_Accounts.prototype = $extend(React_Component.prototype,{
	dataDisplay: null
	,dataAccess: null
	,dbData: null
	,dbMetaData: null
	,parentState: null
	,'delete': function(ev) {
		var data = this.state.formApi.selectedRowsMap(this.state);
	}
	,get: function() {
		var _gthis = this;
		var offset = 0;
		var p = this.props.load({ classPath : "data.Accounts", action : "get", filter : this.props.filter != null ? this.props.filter : { mandator : "1"}, limit : this.props.limit, offset : offset > 0 ? offset : 0, table : this.state.model, resolveMessage : { success : "Kontenliste wurde geladen", failure : "Kontenliste konnte nicht geladen werden"}, dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			_gthis.setState({ loading : false, dbTable : data.dataRows});
		});
	}
	,edit: function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/data/contacts/Accounts.hx", lineNumber : 127, className : "view.data.contacts.Accounts", methodName : "edit"});
	}
	,componentDidMount: function() {
		var _g = new haxe_ds_StringMap();
		var _g1 = new haxe_ds_StringMap();
		var value = new haxe_ds_StringMap();
		_g1.h["contacts"] = value;
		var value = { source : _g1, view : new haxe_ds_StringMap()};
		_g.h["get"] = value;
		this.dataAccess = _g;
		haxe_Log.trace("ok",{ fileName : "src/view/data/contacts/Accounts.hx", lineNumber : 140, className : "view.data.contacts.Accounts", methodName : "componentDidMount"});
		this.props.parentComponent.registerOrmRef(this);
		this.get();
		if(this.parentState.relDataComps != null) {
			var this1 = this.parentState.relDataComps;
			var c = js_Boot.getClass(this);
			var k = c.__name__;
			this1.h[k] = this;
		}
	}
	,loadData: function(id) {
		var _gthis = this;
		if(id == null) {
			return;
		}
		var p = this.props.load({ classPath : "data.Accounts", action : "get", filter : { id : id, mandator : 1}, resolveMessage : { success : "Konto " + id + " wurde geladen", failure : "Konto " + id + " konnte nicht geladen werden"}, table : "accounts", dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/data/contacts/Accounts.hx", lineNumber : 168, className : "view.data.contacts.Accounts", methodName : "loadData"});
			if(data.dataRows.length == 1) {
				var data1 = data.dataRows[0];
				var account = new model_Account(data1);
				haxe_Log.trace(account.id,{ fileName : "src/view/data/contacts/Accounts.hx", lineNumber : 175, className : "view.data.contacts.Accounts", methodName : "loadData"});
				_gthis.state.actualStates.h[account.id] = account;
				_gthis.state.loading = false;
				account.state.actualState = account;
				_gthis.props.parentComponent.registerORM("accounts",account);
			}
		});
	}
	,renderResults: function() {
		haxe_Log.trace(Std.string(this.state.loading) + ":" + this.props.action,{ fileName : "src/view/data/contacts/Accounts.hx", lineNumber : 188, className : "view.data.contacts.Accounts", methodName : "renderResults"});
		if(this.state.loading || this.state.dbTable == null || this.state.dbTable.length == 0) {
			return this.state.formApi.renderWait();
		}
		haxe_Log.trace("###########loading:" + this.props.action,{ fileName : "src/view/data/contacts/Accounts.hx", lineNumber : 191, className : "view.data.contacts.Accounts", methodName : "renderResults"});
		haxe_Log.trace(this.state.dbTable,{ fileName : "src/view/data/contacts/Accounts.hx", lineNumber : 192, className : "view.data.contacts.Accounts", methodName : "renderResults"});
		var _g = this.props.action;
		if(_g == null) {
			return null;
		} else {
			switch(_g) {
			case "delete":
				return null;
			case "get":
				return React.createElement(view_grid_Grid._renderWrapper,Object.assign({ },this.props,{ id : "accountsList", data : this.state.dbTable, dataState : this.dataDisplay.h["accountsList"], parentComponent : this, className : "is-striped is-hoverable", fullWidth : true}));
			case "insert":
				return React.createElement(view_grid_Grid._renderWrapper,Object.assign({ },this.props,{ id : "accountsList", data : this.state.dbTable, dataState : this.dataDisplay.h["accountsList"], className : "is-striped is-hoverable", fullWidth : true}));
			case "update":
				return React.createElement(view_grid_Grid._renderWrapper,Object.assign({ },this.props,{ id : "accountsList", data : this.state.dbTable, dataState : this.dataDisplay.h["accountsList"], className : "is-striped is-hoverable", fullWidth : true}));
			default:
				return null;
			}
		}
	}
	,render: function() {
		haxe_Log.trace(this.props.action,{ fileName : "src/view/data/contacts/Accounts.hx", lineNumber : 228, className : "view.data.contacts.Accounts", methodName : "render"});
		var tmp = react_ReactType.fromString("div");
		var tmp1 = react_ReactType.fromString("form");
		var tmp2 = this.renderResults();
		return React.createElement(tmp,{ className : "t_caption"},"Konten",React.createElement(tmp1,{ className : "tabComponentForm2", name : "accountsList"},tmp2));
	}
	,select: function(mEvOrID) {
		haxe_Log.trace(Reflect.fields(this.props),{ fileName : "src/view/data/contacts/Accounts.hx", lineNumber : 241, className : "view.data.contacts.Accounts", methodName : "select"});
		haxe_Log.trace(mEvOrID,{ fileName : "src/view/data/contacts/Accounts.hx", lineNumber : 242, className : "view.data.contacts.Accounts", methodName : "select"});
	}
	,update: function() {
		var _gthis = this;
		var changed = 0;
		try {
			var it = this.state.actualStates.iterator();
			while(it.hasNext()) {
				var account = it.next();
				if(account.fieldsModified.length > 0) {
					++changed;
					var data2save = account.allModified();
					var dbQ = { classPath : "data.Accounts", action : "update", data : data2save, filter : { id : account.id, mandator : 1}, resolveMessage : { success : "Konto " + account.id + " wurde aktualisiert", failure : "Konto " + account.id + " konnte nicht aktualisiert werden"}, table : "accounts", dbUser : this.props.userState.dbUser, devIP : App.devIP};
					var p = App.store.dispatch(redux_Action.map(action_async_CRUD.update(dbQ)));
					p.then(function(d) {
						haxe_Log.trace(d,{ fileName : "src/view/data/contacts/Accounts.hx", lineNumber : 271, className : "view.data.contacts.Accounts", methodName : "update"});
						_gthis.get();
					});
				}
			}
		} catch( _g ) {
			var ex = haxe_Exception.caught(_g);
			haxe_Log.trace($bind(ex,ex.details),{ fileName : "src/view/data/contacts/Accounts.hx", lineNumber : 278, className : "view.data.contacts.Accounts", methodName : "update"});
		}
	}
	,updateMenu: function(viewClassPath) {
		var sideMenu = this.state.sideMenu;
		haxe_Log.trace(sideMenu.section,{ fileName : "src/view/data/contacts/Accounts.hx", lineNumber : 285, className : "view.data.contacts.Accounts", methodName : "updateMenu"});
		var _g = 0;
		var _g1 = sideMenu.menuBlocks.h["Contact"].items;
		while(_g < _g1.length) {
			var mI = _g1[_g];
			++_g;
			var _g2 = mI.action;
			if(_g2 != null) {
				switch(_g2) {
				case "editTableFields":
					mI.disabled = this.state.selectedRows.length == 0;
					break;
				case "save":
					mI.disabled = this.state.clean;
					break;
				default:
				}
			}
		}
		return sideMenu;
	}
	,__class__: view_data_contacts_Accounts
});
var view_data_contacts_Deals = function(props) {
	React_Component.call(this,props);
	this.dataAccess = model_deals_DealsModel.dataAccess;
	this.fieldNames = view_shared_io_BaseForm.initFieldNames(new haxe_ds__$StringMap_StringMapKeyIterator(this.dataAccess.h["open"].view.h));
	this.dataDisplay = model_deals_DealsModel.dataGridDisplay;
	haxe_Log.trace("..." + Std.string(Reflect.fields(props)),{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 67, className : "view.data.contacts.Deals", methodName : "new"});
	this.state = App.initEState({ actualStates : new haxe_ds_IntMap(), dbTable : [], loading : false, dealsData : new haxe_ds_IntMap(), model : "deals", selectedRows : [], sideMenu : null, values : new haxe_ds_StringMap()},this);
	this.parentState = props.parentComponent.state;
};
$hxClasses["view.data.contacts.Deals"] = view_data_contacts_Deals;
view_data_contacts_Deals.__name__ = "view.data.contacts.Deals";
view_data_contacts_Deals.mapDispatchToProps = function(dispatch) {
	return { load : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.read(param)));
	}, loadData : function(id,me) {
		if(id == null) {
			id = -1;
		}
		return me.loadData(id);
	}, save : function(me) {
		return me.update();
	}, select : function(id,data,me,sType) {
		if(id == null) {
			id = -1;
		}
		var c = js_Boot.getClass(me);
		haxe_Log.trace("select:" + id + " me:" + c.__name__ + " SelectType:" + sType,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 92, className : "view.data.contacts.Deals", methodName : "mapDispatchToProps"});
	}};
};
view_data_contacts_Deals.mapStateToProps = function(aState) {
	haxe_Log.trace(Reflect.fields(aState),{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 102, className : "view.data.contacts.Deals", methodName : "mapStateToProps"});
	return { userState : aState.userState};
};
view_data_contacts_Deals.__super__ = React_Component;
view_data_contacts_Deals.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,dataDisplay: null
	,deal: null
	,formFields: null
	,fieldNames: null
	,dbData: null
	,dbMetaData: null
	,parentState: null
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 110, className : "view.data.contacts.Deals", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
	}
	,get: function() {
		var _gthis = this;
		var offset = 0;
		if(this.deal != null) {
			haxe_Log.trace(this.deal.id + ":" + this.deal.contact,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 123, className : "view.data.contacts.Deals", methodName : "get"});
		}
		var filter = this.deal != null ? { id : this.deal.id, contact : this.deal.contact, mandator : 1} : { mandator : "1"};
		if(this.props.filter != null) {
			filter = view_shared_io_BaseForm.copy(filter,this.props.filter);
		}
		haxe_Log.trace(filter,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 128, className : "view.data.contacts.Deals", methodName : "get"});
		this.state.loading = true;
		var p = this.props.load({ classPath : "data.Deals", action : "get", filter : filter, limit : this.props.limit, offset : offset > 0 ? offset : 0, table : this.state.model, resolveMessage : { success : "Spendenliste wurde geladen", failure : "Spendenliste konnte nicht geladen werden"}, dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 149, className : "view.data.contacts.Deals", methodName : "get"});
			if(data.dataRows.length > 0) {
				var tmp = data.dataRows[0];
				haxe_Log.trace(tmp == null ? "null" : haxe_ds_StringMap.stringify(tmp.h),{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 151, className : "view.data.contacts.Deals", methodName : "get"});
			}
			_gthis.setState({ loading : false, dbTable : data.dataRows, dataCount : Std.parseInt(data.dataInfo.h["count"]), pageCount : Math.ceil(Std.parseInt(data.dataInfo.h["count"]) / _gthis.props.limit)});
		});
	}
	,edit: function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 164, className : "view.data.contacts.Deals", methodName : "edit"});
	}
	,componentDidMount: function() {
		var _g = new haxe_ds_StringMap();
		var _g1 = new haxe_ds_StringMap();
		var value = new haxe_ds_StringMap();
		_g1.h["deals"] = value;
		var value = { source : _g1, view : new haxe_ds_StringMap()};
		_g.h["get"] = value;
		this.dataAccess = _g;
		haxe_Log.trace(this.props.action,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 197, className : "view.data.contacts.Deals", methodName : "componentDidMount"});
		if(this.props.userState.dbUser != null) {
			haxe_Log.trace("yeah: " + this.props.userState.dbUser.first_name,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 199, className : "view.data.contacts.Deals", methodName : "componentDidMount"});
		}
		var c = js_Boot.getClass(this.props.parentComponent);
		haxe_Log.trace(c.__name__,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 200, className : "view.data.contacts.Deals", methodName : "componentDidMount"});
		haxe_Log.trace(this.props.parentComponent.props.match,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 202, className : "view.data.contacts.Deals", methodName : "componentDidMount"});
		haxe_Log.trace(this.props.match,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 203, className : "view.data.contacts.Deals", methodName : "componentDidMount"});
		this.props.parentComponent.registerOrmRef(this);
		this.get();
		if(this.parentState.relDataComps != null) {
			var this1 = this.parentState.relDataComps;
			var c = js_Boot.getClass(this);
			var k = c.__name__;
			this1.h[k] = this;
		}
	}
	,loadData: function(id) {
		var _gthis = this;
		haxe_Log.trace("loading:" + id,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 214, className : "view.data.contacts.Deals", methodName : "loadData"});
		if(id == null) {
			return;
		}
		var p = this.props.load({ classPath : "data.Deals", action : "get", filter : { id : id, mandator : 1}, resolveMessage : { success : "Spende " + id + " wurde geladen", failure : "Spende " + id + " konnte nicht geladen werden"}, table : "deals", dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 232, className : "view.data.contacts.Deals", methodName : "loadData"});
			if(data.dataRows.length == 1) {
				var data1 = data.dataRows[0];
				haxe_Log.trace(data1 == null ? "null" : haxe_ds_StringMap.stringify(data1.h),{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 236, className : "view.data.contacts.Deals", methodName : "loadData"});
				_gthis.deal = new model_Deal(data1);
				haxe_Log.trace(_gthis.deal.id + ":" + _gthis.deal.contact,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 239, className : "view.data.contacts.Deals", methodName : "loadData"});
				_gthis.deal.state.actualState = _gthis.deal;
				_gthis.state.actualStates.h[_gthis.deal.id] = _gthis.deal;
				_gthis.props.parentComponent.registerORM("deals",_gthis.deal);
			}
		});
	}
	,renderForm: function() {
		haxe_Log.trace(Std.string(this.state.loading) + ":" + Std.string(this.props.parentComponent.props.match.params.action),{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 260, className : "view.data.contacts.Deals", methodName : "renderForm"});
		if(this.state.loading) {
			return this.state.formApi.renderWait();
		}
		haxe_Log.trace("###########loading:" + Std.string(this.state.loading),{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 263, className : "view.data.contacts.Deals", methodName : "renderForm"});
		switch(this.props.parentComponent.props.match.params.action) {
		case "open2":case "update2":
			haxe_Log.trace(this.state.actualState,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 268, className : "view.data.contacts.Deals", methodName : "renderForm"});
			if(this.state.actualState == null) {
				return this.state.formApi.renderWait();
			} else {
				var tmp = this.state.formBuilder;
				var tmp1 = this.state.mHandlers;
				var _g = new haxe_ds_StringMap();
				var h = this.dataAccess.h["open"].view.h;
				var k_h = h;
				var k_keys = Object.keys(h);
				var k_length = k_keys.length;
				var k_current = 0;
				while(k_current < k_length) {
					var k = k_keys[k_current++];
					_g.h[k] = this.dataAccess.h["open"].view.h[k];
				}
				return tmp.renderForm({ mHandlers : tmp1, fields : _g, model : "deal", title : "Bearbeite Spende"},this.state.actualState);
			}
			break;
		default:
			haxe_Log.trace(">>>" + Std.string(this.props.parentComponent.props.match.params.action) + "<<<",{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 283, className : "view.data.contacts.Deals", methodName : "renderForm"});
			return null;
		}
	}
	,renderResults: function() {
		if(this.state.loading || this.state.dbTable == null || this.state.dbTable.length == 0) {
			return this.state.formApi.renderWait();
		}
		haxe_Log.trace(this.props.action,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 297, className : "view.data.contacts.Deals", methodName : "renderResults"});
		var _g = this.props.action;
		if(_g == null) {
			return null;
		} else {
			switch(_g) {
			case "delete":
				return null;
			case "get":
				var tmp = react_ReactType.fromComp(React_Fragment);
				var tmp1 = React.createElement(view_grid_Grid._renderWrapper,Object.assign({ },this.props,{ id : "dealsList", data : this.state.dbTable, dataState : this.dataDisplay.h["dealsList"], parentComponent : this, className : "is-striped is-hoverable", fullWidth : true}));
				var tmp2 = this.renderForm();
				return React.createElement(tmp,{ },tmp1,tmp2);
			default:
				return null;
			}
		}
	}
	,render: function() {
		var tmp = react_ReactType.fromString("div");
		var tmp1 = react_ReactType.fromString("form");
		var tmp2 = { key : "dealsList", ref : this.props.formRef, className : "tabComponentForm2", name : "dealsList"};
		var tmp3 = this.renderResults();
		return React.createElement(tmp,{ className : "t_caption"},"Spenden",React.createElement(tmp1,tmp2,tmp3));
	}
	,update: function() {
		var changed = 0;
		try {
			var it = this.state.actualStates.iterator();
			while(it.hasNext()) {
				this.deal = js_Boot.__cast(it.next() , model_Deal);
				haxe_Log.trace(this.deal.id + ":" + this.deal.contact,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 340, className : "view.data.contacts.Deals", methodName : "update"});
				if(this.deal.fieldsModified.length > 0) {
					++changed;
					var data2save = this.deal.allModified();
					haxe_Log.trace(data2save[0],{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 344, className : "view.data.contacts.Deals", methodName : "update"});
					var dbQ = { classPath : "data.Deals", action : "update", data : data2save, filter : { id : this.deal.id, mandator : 1}, resolveMessage : { success : "Spende " + this.deal.id + " wurde aktualisiert", failure : "Spende " + this.deal.id + " konnte nicht aktualisiert werden"}, table : "deals", dbUser : this.props.userState.dbUser, devIP : App.devIP};
					var p = App.store.dispatch(redux_Action.map(action_async_CRUD.update(dbQ)));
					p.then(function(d) {
						haxe_Log.trace(d,{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 360, className : "view.data.contacts.Deals", methodName : "update"});
					});
				}
			}
		} catch( _g ) {
			var ex = haxe_Exception.caught(_g);
			haxe_Log.trace($bind(ex,ex.details),{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 367, className : "view.data.contacts.Deals", methodName : "update"});
		}
		if(changed == 0) {
			haxe_Log.trace("nothing to save",{ fileName : "src/view/data/contacts/Deals.hx", lineNumber : 370, className : "view.data.contacts.Deals", methodName : "update"});
		}
	}
	,__class__: view_data_contacts_Deals
});
var view_data_contacts_Edit = function(props) {
	this._trace = false;
	this.mounted = false;
	React_Component.call(this,props);
	this.ormRefs = new haxe_ds_StringMap();
	this._trace = true;
	this.accountsFormRef = React.createRef();
	this.dealsFormRef = React.createRef();
	this.formRef = React.createRef();
	this.historyFormRef = React.createRef();
	haxe_Log.trace(props.match.params,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 130, className : "view.data.contacts.Edit", methodName : "new"});
	if(props.dataStore.contactsData != null && props.match.params.id == null) {
		var tmp = props.dataStore.contactsData.keys().next();
		props.match.params.id = Std.string(tmp);
	}
	if(props.match.params.id == "null" && new EReg("open|update(/)*$","").match(props.match.params.action)) {
		haxe_Log.trace("nothing selected - redirect",{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 137, className : "view.data.contacts.Edit", methodName : "new"});
		var baseUrl = props.match.path.split(":section")[0];
		props.history.push("" + baseUrl + "List/get");
		return;
	}
	haxe_Log.trace(props.match.params.id + ":" + props.match.params.id == null && new EReg("open|update(/)*$","").match(props.match.params.action),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 142, className : "view.data.contacts.Edit", methodName : "new"});
	this.dataAccess = model_contacts_ContactsModel.dataAccess;
	this.fieldNames = view_shared_io_BaseForm.initFieldNames(new haxe_ds__$StringMap_StringMapKeyIterator(this.dataAccess.h["open"].view.h));
	this.dataDisplay = model_contacts_ContactsModel.dataDisplay;
	this.dealDataAccess = model_deals_DealsModel.dataAccess;
	this.dealFieldNames = view_shared_io_BaseForm.initFieldNames(new haxe_ds__$StringMap_StringMapKeyIterator(this.dealDataAccess.h["open"].view.h));
	this.dealDataDisplay = model_deals_DealsModel.dataDisplay;
	this.accountDataAccess = model_accounting_AccountsModel.dataAccess;
	this.accountFieldNames = view_shared_io_BaseForm.initFieldNames(new haxe_ds__$StringMap_StringMapKeyIterator(this.accountDataAccess.h["open"].view.h));
	this.accountDataDisplay = model_accounting_AccountsModel.dataDisplay;
	if(props.dataStore.contactsData != null) {
		haxe_Log.trace(props.dataStore.contactsData.keys().next(),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 156, className : "view.data.contacts.Edit", methodName : "new"});
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = view_data_contacts_Edit.menuItems;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		_g.push(Object.assign({ },v));
	}
	var _iMenuItems = _g;
	this.state = App.initEState({ actualState : null, initialData : null, mHandlers : _iMenuItems, loading : false, model : "contacts", ormRefs : new haxe_ds_StringMap(), relDataComps : new haxe_ds_StringMap(), selectedRows : [], sideMenu : view_shared_io_FormApi.initSideMenu(this,{ dataClassPath : "data.Contacts", label : "Bearbeiten", section : "Edit", items : _iMenuItems},{ section : props.match.params.section == null ? "Edit" : props.match.params.section, sameWidth : true}), values : new haxe_ds_StringMap()},this);
	haxe_Log.trace(this.state.initialData,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 186, className : "view.data.contacts.Edit", methodName : "new"});
};
$hxClasses["view.data.contacts.Edit"] = view_data_contacts_Edit;
view_data_contacts_Edit.__name__ = "view.data.contacts.Edit";
view_data_contacts_Edit.mapDispatchToProps = function(dispatch) {
	haxe_Log.trace("here we should be ready to load",{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 617, className : "view.data.contacts.Edit", methodName : "mapDispatchToProps"});
	return { load : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.read(param)));
	}};
};
view_data_contacts_Edit.mapStateToProps = function(aState) {
	return { userState : aState.userState};
};
view_data_contacts_Edit.__super__ = React_Component;
view_data_contacts_Edit.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,dataDisplay: null
	,dealsAreOpen: null
	,formApi: null
	,formBuilder: null
	,formFields: null
	,dealsFormRef: null
	,formRef: null
	,fieldNames: null
	,ormRefs: null
	,accountsFormRef: null
	,historyFormRef: null
	,baseForm: null
	,contact: null
	,dbData: null
	,dbMetaData: null
	,modals: null
	,mounted: null
	,_trace: null
	,dealDataAccess: null
	,dealFieldNames: null
	,dealDataDisplay: null
	,accountDataAccess: null
	,accountFieldNames: null
	,accountDataDisplay: null
	,close: function() {
		this.props.history.push("" + this.props.match.path.split(":section")[0] + "List/get");
	}
	,showSelectedAccounts: function(ev) {
		haxe_Log.trace("---" + Std.string(this.ormRefs.h["accounts"].compRef.state.dataGrid.state.selectedRows),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 199, className : "view.data.contacts.Edit", methodName : "showSelectedAccounts"});
		var sRows = this.ormRefs.h["accounts"].compRef.state.dataGrid.state.selectedRows;
		var k = sRows.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			this.ormRefs.h["accounts"].compRef.props.loadData(k1,this.ormRefs.h["accounts"].compRef);
		}
	}
	,showSelectedDeals: function(ev) {
		haxe_Log.trace("---" + Std.string(Type.typeof(this.state.relDataComps)),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 212, className : "view.data.contacts.Edit", methodName : "showSelectedDeals"});
		var h = this.state.relDataComps.h;
		var inlStringMapKeyIterator_h = h;
		var inlStringMapKeyIterator_keys = Object.keys(h);
		var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
		var inlStringMapKeyIterator_current = 0;
		haxe_Log.trace("---" + Std.string(inlStringMapKeyIterator_current < inlStringMapKeyIterator_length),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 214, className : "view.data.contacts.Edit", methodName : "showSelectedDeals"});
		var sRows = this.ormRefs.h["deals"].compRef.state.dataGrid.state.selectedRows;
		var k = sRows.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			this.ormRefs.h["deals"].compRef.props.loadData(k1,this.ormRefs.h["deals"].compRef);
		}
		haxe_Log.trace(react_ReactRef.get_current(this.dealsFormRef),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 223, className : "view.data.contacts.Edit", methodName : "showSelectedDeals"});
		haxe_Log.trace(react_ReactRef.get_current(this.dealsFormRef).querySelectorAll(".selected").length,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 224, className : "view.data.contacts.Edit", methodName : "showSelectedDeals"});
		if(ev != null) {
			var targetEl = js_Boot.__cast(ev.target , HTMLElement);
			haxe_Log.trace(Std.string(targetEl.dataset.id),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 227, className : "view.data.contacts.Edit", methodName : "showSelectedDeals"});
		}
	}
	,loadBookingHistory: function(id) {
	}
	,loadContactData: function(id) {
		var _gthis = this;
		haxe_Log.trace("loading:" + id,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 238, className : "view.data.contacts.Edit", methodName : "loadContactData"});
		if(id == null) {
			return;
		}
		var p = this.props.load({ classPath : "data.Contacts", action : "getDetails", filter : { id : id, mandator : 1}, resolveMessage : { success : "Kontakt " + id + " wurde geladen", failure : "Kontakt " + id + " konnte nicht geladen werden"}, table : "contacts", viciBoxDB : true, dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 258, className : "view.data.contacts.Edit", methodName : "loadContactData"});
			if(data.dataRows.length == 1) {
				var c_data = data.dataRows[0];
				if(Object.prototype.hasOwnProperty.call(data.dataInfo.h,"recordings")) {
					var _g = [];
					var _g1 = 0;
					var _g2 = view_data_contacts_Edit.menuItems;
					while(_g1 < _g2.length) {
						var v = _g2[_g1];
						++_g1;
						_g.push(Object.assign({ },v));
					}
					_gthis.state.mHandlers = _g;
					view_shared_io_BaseForm.addRecordings(_gthis.state,data.dataInfo.h["recordings"]);
				} else {
					haxe_Log.trace(haxe_ds_StringMap.stringify(data.dataInfo.h),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 274, className : "view.data.contacts.Edit", methodName : "loadContactData"});
				}
				var contact = new model_Contact(c_data);
				if(_gthis.mounted) {
					_gthis.setState({ loading : false, actualState : contact, initialData : react_ReactUtil.copy(contact)});
				}
				var _gthis1 = _gthis.props.history;
				var tmp = StringTools.replace(_gthis.props.location.pathname,"open","update");
				_gthis1.replace(tmp);
			}
		});
	}
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 291, className : "view.data.contacts.Edit", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
	}
	,update2: function() {
		var data2save = this.state.actualState.allModified();
	}
	,componentDidCatch: function(error,info) {
		try {
			this.setState({ hasError : true});
		} catch( _g ) {
			var ex = haxe_Exception.caught(_g).unwrap();
			if(this._trace) {
				haxe_Log.trace(ex,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 308, className : "view.data.contacts.Edit", methodName : "componentDidCatch"});
			}
		}
		if(this._trace) {
			haxe_Log.trace(error,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 310, className : "view.data.contacts.Edit", methodName : "componentDidCatch"});
		}
		me_cunity_debug_Out.dumpStack(haxe_CallStack.callStack(),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 311, className : "view.data.contacts.Edit", methodName : "componentDidCatch"});
	}
	,componentDidMount: function() {
		haxe_Log.trace("mounted:" + Std.string(this.mounted),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 316, className : "view.data.contacts.Edit", methodName : "componentDidMount"});
		this.mounted = true;
		haxe_Log.trace(this.props.children,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 318, className : "view.data.contacts.Edit", methodName : "componentDidMount"});
		if(this.props.match.params.id != null) {
			haxe_Log.trace(this.props.match.params,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 321, className : "view.data.contacts.Edit", methodName : "componentDidMount"});
			this.loadContactData(Std.parseInt(this.props.match.params.id));
		}
		haxe_Log.trace(this.props.children,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 324, className : "view.data.contacts.Edit", methodName : "componentDidMount"});
	}
	,componentWillUnmount: function() {
		return;
	}
	,registerRelDataComp: function(rDC) {
	}
	,registerOrmRef: function(ref) {
		var _g = Type.typeof(ref);
		switch(_g._hx_index) {
		case 0:
			break;
		case 4:
			haxe_Log.trace(Reflect.fields(ref),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 355, className : "view.data.contacts.Edit", methodName : "registerOrmRef"});
			haxe_Log.trace(js_Boot.getClass(ref),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 356, className : "view.data.contacts.Edit", methodName : "registerOrmRef"});
			var tmp = ref.props != null && ref.props.model != null;
			break;
		case 6:
			var func = _g.c;
			var cL = js_Boot.getClass(ref);
			if(cL != null) {
				try {
					if(ref.props != null && ref.props.model != null) {
						var this1 = this.ormRefs;
						var k = ref.props.model;
						var v = { compRef : ref, orms : new haxe_ds_IntMap()};
						this1.h[k] = v;
					}
				} catch( _g ) {
					var ex = haxe_Exception.caught(_g);
					haxe_Log.trace(ex,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 381, className : "view.data.contacts.Edit", methodName : "registerOrmRef"});
				}
			}
			break;
		default:
			haxe_Log.trace(ref,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 385, className : "view.data.contacts.Edit", methodName : "registerOrmRef"});
		}
	}
	,registerORM: function(refModel,orm) {
		if(Object.prototype.hasOwnProperty.call(this.ormRefs.h,refModel)) {
			this.ormRefs.h[refModel].orms.h[orm.id] = orm;
			haxe_Log.trace(refModel,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 392, className : "view.data.contacts.Edit", methodName : "registerORM"});
			this.setState({ ormRefs : this.ormRefs});
			haxe_Log.trace(Reflect.fields(this.state),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 396, className : "view.data.contacts.Edit", methodName : "registerORM"});
		} else {
			haxe_Log.trace("OrmRef " + refModel + " not found!",{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 400, className : "view.data.contacts.Edit", methodName : "registerORM"});
		}
	}
	,update: function() {
		var _gthis = this;
		var h = this.state.relDataComps.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g1_key = key;
			var _g1_value = _g_h[key];
			var k = _g1_key;
			var v = _g1_value;
			if(Reflect.field(v,"props") != null && Reflect.field(v.props,"save") != null) {
				haxe_Log.trace("save:" + k,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 408, className : "view.data.contacts.Edit", methodName : "update"});
				v.props.save(v);
			}
		}
		if(this.state.actualState != null) {
			haxe_Log.trace("length:" + this.state.actualState.fieldsModified.length + ":" + this.state.actualState.fieldsModified.join("|"),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 417, className : "view.data.contacts.Edit", methodName : "update"});
		}
		if(this.state.actualState == null || this.state.actualState.fieldsModified.length == 0) {
			return;
		}
		var data2save = this.state.actualState.allModified();
		var doc = window.document;
		var formElement = js_Boot.__cast(doc.querySelector("form[name=\"contact\"]") , HTMLFormElement);
		var elements = formElement.elements;
		var aState = react_ReactUtil.copy(this.state.actualState);
		var dbQ = { classPath : "data.Contacts", action : "update", data : data2save, filter : { id : this.state.actualState.id, mandator : 1}, resolveMessage : { success : "Kontakt " + this.state.actualState.id + " wurde aktualisiert", failure : "Kontakt " + this.state.actualState.id + " konnte nicht aktualisiert werden"}, table : "contacts", dbUser : this.props.userState.dbUser, devIP : App.devIP};
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 439, className : "view.data.contacts.Edit", methodName : "update"});
		switch(this.props.match.params.action) {
		case "delete":case "get":
			var _g = new haxe_ds_StringMap();
			var _g1 = new haxe_ds_StringMap();
			_g1.h["filter"] = { id : this.state.initialData.id};
			_g.h["contacts"] = _g1;
			dbQ.dataSource = _g;
			break;
		case "insert":
			var _g = 0;
			var _g1 = this.fieldNames;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				haxe_Log.trace("" + f + " =>" + Std.string(Reflect.field(aState,f)) + "<=",{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 445, className : "view.data.contacts.Edit", methodName : "update"});
				if(Reflect.field(aState,f) == "") {
					Reflect.deleteField(aState,f);
				}
			}
			break;
		case "update":
			haxe_Log.trace("" + Std.string(this.state.initialData.id) + " :: creation_date: " + Std.string(aState.creation_date) + " " + Std.string(this.state.initialData.creation_date),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 457, className : "view.data.contacts.Edit", methodName : "update"});
			if(this.state.actualState != null) {
				haxe_Log.trace(Std.string(this.state.actualState.modified()) + (":" + Std.string(this.state.actualState.fieldsModified)),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 461, className : "view.data.contacts.Edit", methodName : "update"});
			}
			haxe_Log.trace(this.state.actualState.id,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 463, className : "view.data.contacts.Edit", methodName : "update"});
			if(!this.state.actualState.modified()) {
				haxe_Log.trace("nothing modified",{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 467, className : "view.data.contacts.Edit", methodName : "update"});
				return;
			}
			haxe_Log.trace(this.state.actualState.allModified(),{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 470, className : "view.data.contacts.Edit", methodName : "update"});
			break;
		}
		var p = App.store.dispatch(redux_Action.map(action_async_CRUD.update(dbQ)));
		p.then(function(d) {
			haxe_Log.trace(d,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 483, className : "view.data.contacts.Edit", methodName : "update"});
			_gthis.loadContactData(_gthis.state.actualState.id);
		});
	}
	,renderResults: function() {
		switch(this.props.match.params.action) {
		case "insert":
			var tmp = this.state.formBuilder;
			var tmp1 = this.state.mHandlers;
			var _g = new haxe_ds_StringMap();
			var h = this.dataAccess.h["open"].view.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				_g.h[k] = this.dataAccess.h["open"].view.h[k];
			}
			return tmp.renderForm({ mHandlers : tmp1, fields : _g, model : "contact", ref : null, title : "Kontakt - Neue Stammdaten"},this.state.actualState);
		case "open":case "update":
			if(this.state.actualState == null) {
				return this.state.formApi.renderWait();
			} else {
				var tmp = react_ReactType.fromComp(React_Fragment);
				var tmp1 = react_ReactType.fromString("form");
				var tmp2 = { key : this.props.model, ref : this.props.formRef, name : this.props.model, className : "tabComponentForm formField"};
				var tmp3 = react_ReactType.fromString("div");
				var tmp4 = { key : this.props.model + "_grid_box", className : "grid_box", role : "table", 'aria-label' : "Destinations"};
				var tmp5 = React.createElement(react_ReactType.fromString("div"),{ key : this.props.model + "caption", className : "g_caption"},"Stammdaten - ",App.store.getState().dataStore.contactsData.keys().next());
				var tmp6 = this.state.formBuilder;
				var _g = new haxe_ds_StringMap();
				var h = this.dataAccess.h["open"].view.h;
				var k_h = h;
				var k_keys = Object.keys(h);
				var k_length = k_keys.length;
				var k_current = 0;
				while(k_current < k_length) {
					var k = k_keys[k_current++];
					_g.h[k] = this.dataAccess.h["open"].view.h[k];
				}
				var tmp7 = React.createElement(tmp1,tmp2,React.createElement(tmp3,tmp4,tmp5,tmp6.renderFormInputElements(_g,this.state.actualState)),React.createElement(react_ReactType.fromComp(view_accounting_directdebit_List),Object.assign({ },this.props,{ contact : this.props.id, action : "getHistory", limit : 100, fullWidth : true, sideMenu : { }})));
				var tmp1 = this.relData();
				var tmp2 = this.relDataLists();
				return React.createElement(tmp,{ },tmp7,tmp1,tmp2);
			}
			break;
		default:
			return null;
		}
	}
	,relData: function() {
		var _g = [];
		var model = "deals";
		if(Object.prototype.hasOwnProperty.call(this.ormRefs.h,model)) {
			var _g1 = 0;
			var _g2 = Lambda.array(this.ormRefs.h[model].orms);
			while(_g1 < _g2.length) {
				var orm = _g2[_g1];
				++_g1;
				var orm1 = orm.formBuilder;
				var tmp;
				if(model == "deals") {
					var _g3 = new haxe_ds_StringMap();
					var h = this.dealDataAccess.h["open"].view.h;
					var k_h = h;
					var k_keys = Object.keys(h);
					var k_length = k_keys.length;
					var k_current = 0;
					while(k_current < k_length) {
						var k = k_keys[k_current++];
						_g3.h[k] = this.dealDataAccess.h["open"].view.h[k];
					}
					tmp = _g3;
				} else {
					var _g4 = new haxe_ds_StringMap();
					var h1 = this.accountDataAccess.h["open"].view.h;
					var k_h1 = h1;
					var k_keys1 = Object.keys(h1);
					var k_length1 = k_keys1.length;
					var k_current1 = 0;
					while(k_current1 < k_length1) {
						var k1 = k_keys1[k_current1++];
						_g4.h[k1] = this.accountDataAccess.h["open"].view.h[k1];
					}
					tmp = _g4;
				}
				_g.push(orm1.renderForm({ fields : tmp, model : model, ref : null, title : model == "deals" ? "Spenden" : "Konten"},orm));
			}
		}
		var model = "accounts";
		if(Object.prototype.hasOwnProperty.call(this.ormRefs.h,model)) {
			var _g1 = 0;
			var _g2 = Lambda.array(this.ormRefs.h[model].orms);
			while(_g1 < _g2.length) {
				var orm = _g2[_g1];
				++_g1;
				var orm1 = orm.formBuilder;
				var tmp;
				if(model == "deals") {
					var _g3 = new haxe_ds_StringMap();
					var h = this.dealDataAccess.h["open"].view.h;
					var k_h = h;
					var k_keys = Object.keys(h);
					var k_length = k_keys.length;
					var k_current = 0;
					while(k_current < k_length) {
						var k = k_keys[k_current++];
						_g3.h[k] = this.dealDataAccess.h["open"].view.h[k];
					}
					tmp = _g3;
				} else {
					var _g4 = new haxe_ds_StringMap();
					var h1 = this.accountDataAccess.h["open"].view.h;
					var k_h1 = h1;
					var k_keys1 = Object.keys(h1);
					var k_length1 = k_keys1.length;
					var k_current1 = 0;
					while(k_current1 < k_length1) {
						var k1 = k_keys1[k_current1++];
						_g4.h[k1] = this.accountDataAccess.h["open"].view.h[k1];
					}
					tmp = _g4;
				}
				_g.push(orm1.renderForm({ fields : tmp, model : model, ref : null, title : model == "deals" ? "Spenden" : "Konten"},orm));
			}
		}
		return _g;
	}
	,relDataLists: function() {
		var tmp = react_ReactType.fromComp(React_Fragment);
		var tmp1 = React.createElement(view_data_contacts_Deals._renderWrapper,{ key : "deals", formRef : this.dealsFormRef, parentComponent : this, model : "deals", action : "get", onDoubleClick : $bind(this,this.showSelectedDeals), filter : { contact : this.props.match.params.id, mandator : "1"}});
		var tmp2 = React.createElement(view_data_contacts_Accounts._renderWrapper,{ key : "accounts", formRef : this.accountsFormRef, parentComponent : this, model : "accounts", action : "get", onDoubleClick : $bind(this,this.showSelectedAccounts), filter : { contact : this.props.match.params.id, mandator : "1"}});
		return React.createElement(tmp,{ },tmp1,tmp2);
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 584, className : "view.data.contacts.Edit", methodName : "render"});
		if(this.state == null || this.state.initialData == null) {
			return null;
		}
		switch(this.props.match.params.action) {
		case "insert":
			return this.state.formApi.render(this.renderResults());
		case "open":
			return this.state.formApi.render(this.renderResults());
		default:
			return this.state.formApi.render(this.renderResults());
		}
	}
	,select: function(id,data,match) {
		haxe_Log.trace(id,{ fileName : "src/view/data/contacts/Edit.hx", lineNumber : 613, className : "view.data.contacts.Edit", methodName : "select"});
	}
	,__class__: view_data_contacts_Edit
});
var view_data_contacts_List = function(props) {
	React_Component.call(this,props);
	this.dataDisplay = model_contacts_ContactsModel.dataGridDisplay;
	var tmp = new haxe_ds_IntMap();
	var _g = [];
	var _g1 = 0;
	var _g2 = view_data_contacts_List.menuItems;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		_g.push(Object.assign({ },v));
	}
	var _g1 = new haxe_ds_StringMap();
	_g1.h["ac"] = "ac.contact=co.id";
	var tmp1 = { alias : "co", dataClassPath : "data.Contacts", hasFindForm : true, isActive : true, label : "Liste", section : "List", items : _g, dbTableName : "contacts", dbTableJoins : _g1};
	var _g = [];
	var _g1 = 0;
	var _g2 = view_data_contacts_List.printItems;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		_g.push(Object.assign({ },v));
	}
	this.state = App.initEState({ dbTable : [], loading : true, contactData : tmp, selectedRows : [], sideMenu : view_shared_io_FormApi.initSideMenuMulti(this,[tmp1,{ hasFindForm : false, label : "Anschreiben", section : "List_", items : _g}],{ orm : model_Contact, section : props.match.params.section == null ? "List" : props.match.params.section, mBshowActive : true, sameWidth : true}), values : new haxe_ds_StringMap()},this);
	haxe_Log.trace(shared_Utils.sKeysList(new haxe_ds__$StringMap_StringMapKeyIterator(this.state.relDataComps.h)),{ fileName : "src/view/data/contacts/List.hx", lineNumber : 142, className : "view.data.contacts.List", methodName : "new"});
	if(props.match.params.section == null || props.match.params.action == null) {
		var baseUrl = props.match.path.split(":section")[0];
		haxe_Log.trace("redirecting to " + baseUrl + "List/get",{ fileName : "src/view/data/contacts/List.hx", lineNumber : 147, className : "view.data.contacts.List", methodName : "new"});
		props.history.push("" + baseUrl + "List/get");
		this.get(null);
	} else {
		haxe_Log.trace(props.match.params,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 154, className : "view.data.contacts.List", methodName : "new"});
	}
	haxe_Log.trace(this.state.loading,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 156, className : "view.data.contacts.List", methodName : "new"});
};
$hxClasses["view.data.contacts.List"] = view_data_contacts_List;
view_data_contacts_List.__name__ = "view.data.contacts.List";
view_data_contacts_List.mapStateToProps = function(aState) {
	return { userState : aState.userState};
};
view_data_contacts_List.mapDispatchToProps = function(dispatch) {
	return { load : function(param) {
		return dispatch(redux_Action.map(loader_ListLoader.load(param)));
	}};
};
view_data_contacts_List.__super__ = React_Component;
view_data_contacts_List.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,dataDisplay: null
	,formApi: null
	,formBuilder: null
	,formFields: null
	,fieldNames: null
	,baseForm: null
	,contact: null
	,dbData: null
	,dbMetaData: null
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 168, className : "view.data.contacts.List", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
	}
	,get: function(filter) {
		var _gthis = this;
		var offset = 0;
		if(filter != null && filter.page != null) {
			haxe_Log.trace(filter,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 177, className : "view.data.contacts.List", methodName : "get"});
			offset = this.props.limit * filter.page | 0;
			Reflect.deleteField(filter,"page");
			this.props.parentComponent.setState({ page : filter.page});
		}
		var dS = null;
		if(filter != null && filter.dataSource != null) {
			haxe_Log.trace(filter.dataSource,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 186, className : "view.data.contacts.List", methodName : "get"});
			dS = react_ReactUtil.copy(filter.dataSource);
			Reflect.deleteField(filter,"dataSource");
			haxe_Log.trace(dS == null ? "null" : haxe_ds_StringMap.stringify(dS.h),{ fileName : "src/view/data/contacts/List.hx", lineNumber : 189, className : "view.data.contacts.List", methodName : "get"});
		}
		filter = shared_Utils.extend(filter,this.props.match.params.id != null ? { id : this.props.match.params.id, mandator : this.props.userState.dbUser.mandator} : { mandator : this.props.userState.dbUser.mandator});
		haxe_Log.trace("hi " + Std.string(filter),{ fileName : "src/view/data/contacts/List.hx", lineNumber : 198, className : "view.data.contacts.List", methodName : "get"});
		haxe_Log.trace(this.props.match.params,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 200, className : "view.data.contacts.List", methodName : "get"});
		var p = this.props.load({ classPath : "data.Contacts", action : "get", dataSource : dS, filter : filter, limit : this.props.limit, offset : offset > 0 ? offset : 0, table : "contacts", resolveMessage : { success : "Kontaktliste wurde geladen", failure : "Kontaktliste konnte nicht geladen werden"}, dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 219, className : "view.data.contacts.List", methodName : "get"});
			if(data.dataRows.length < 5 && data.dataRows.length > 0) {
				haxe_Log.trace(data.dataRows,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 222, className : "view.data.contacts.List", methodName : "get"});
			}
			_gthis.setState({ loading : false, dbTable : data.dataRows, dataCount : Std.parseInt(data.dataInfo.h["count"]), pageCount : Math.ceil(Std.parseInt(data.dataInfo.h["count"]) / _gthis.props.limit)});
		});
	}
	,edit: function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 237, className : "view.data.contacts.List", methodName : "edit"});
		haxe_Log.trace(Reflect.fields(ev),{ fileName : "src/view/data/contacts/List.hx", lineNumber : 238, className : "view.data.contacts.List", methodName : "edit"});
	}
	,restore: function() {
		var _gthis = this;
		haxe_Log.trace(Reflect.fields(this.props.dataStore),{ fileName : "src/view/data/contacts/List.hx", lineNumber : 242, className : "view.data.contacts.List", methodName : "restore"});
		if(this.props.dataStore != null && this.props.dataStore.contactsDbData != null) {
			this.setState({ dbTable : this.props.dataStore.contactsDbData.dataRows, dataCount : Std.parseInt(this.props.dataStore.contactsDbData.dataInfo.h["count"]), pageCount : Math.ceil(Std.parseInt(this.props.dataStore.contactsDbData.dataInfo.h["count"]) / this.props.limit)},function() {
				haxe_Log.trace(_gthis.state.dbTable,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 252, className : "view.data.contacts.List", methodName : "restore"});
				_gthis.props.history.push("" + _gthis.props.match.path.split(":section")[0] + "List/get/" + (_gthis.props.match.params.id != null ? _gthis.props.match.params.id : ""));
			});
		} else {
			this.props.history.push("" + this.props.match.path.split(":section")[0] + "List/get/" + (this.props.match.params.id != null ? this.props.match.params.id : ""));
			this.get(null);
		}
	}
	,selectionClear: function() {
		var match = react_ReactUtil.copy(this.props.match);
		match.params.action = "get";
		haxe_Log.trace(this.state.dbTable.length,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 271, className : "view.data.contacts.List", methodName : "selectionClear"});
		this.props.parentComponent.props.select(null,null,this,"UnselectAll");
		var trs = window.document.querySelectorAll("#contactList .gridItem.selected");
		haxe_Log.trace(trs.length,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 277, className : "view.data.contacts.List", methodName : "selectionClear"});
		var _g = 0;
		var _g1 = trs.length;
		while(_g < _g1) {
			var i = _g++;
			var tre = js_Boot.__cast(trs.item(i) , HTMLDivElement);
			tre.classList.remove("selected");
		}
		window.document.querySelector("[class=\"formsContainer\"]").scrollTop = 0;
		this.state.sideMenuInstance.enableItems("List",["edit","delete","selectionClear"],false);
	}
	,componentDidMount: function() {
		var _g = new haxe_ds_StringMap();
		var _g1 = new haxe_ds_StringMap();
		var value = new haxe_ds_StringMap();
		_g1.h["contacts"] = value;
		var value = { source : _g1, view : new haxe_ds_StringMap()};
		_g.h["get"] = value;
		this.dataAccess = _g;
		if(this.props.userState != null) {
			haxe_Log.trace("yeah: " + this.props.userState.dbUser.first_name,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 323, className : "view.data.contacts.List", methodName : "componentDidMount"});
		}
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 324, className : "view.data.contacts.List", methodName : "componentDidMount"});
		this.state.formApi.doAction();
	}
	,renderResults: function() {
		var pState = this.props.parentComponent.state;
		haxe_Log.trace(this.state.dbTable.length,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 334, className : "view.data.contacts.List", methodName : "renderResults"});
		if(this.props.dataStore.contactsDbData != null) {
			var tmp = this.props.dataStore.contactsDbData.dataRows[0];
			haxe_Log.trace(tmp == null ? "null" : haxe_ds_StringMap.stringify(tmp.h),{ fileName : "src/view/data/contacts/List.hx", lineNumber : 336, className : "view.data.contacts.List", methodName : "renderResults"});
		} else {
			haxe_Log.trace(this.props.dataStore.contactsDbData,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 337, className : "view.data.contacts.List", methodName : "renderResults"});
		}
		if(this.state.dbTable.length == 0) {
			return this.state.formApi.renderWait();
		}
		if(this.props.match.params.action == "get") {
			return React.createElement(view_grid_Grid._renderWrapper,Object.assign({ },this.props,{ id : "contactList", data : this.state.dbTable, doubleClickAction : "update", dataState : this.dataDisplay.h["contactList"], parentComponent : this, className : "is-striped is-hoverable", fullWidth : true}));
		} else {
			return null;
		}
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.section,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 359, className : "view.data.contacts.List", methodName : "render"});
		var tmp = this.state.formApi;
		var tmp1 = react_ReactType.fromComp(React_Fragment);
		var tmp2 = react_ReactType.fromString("form");
		var tmp3 = this.renderResults();
		var tmp4 = React.createElement(tmp2,{ className : "tabComponentForm"},tmp3);
		return tmp.render(React.createElement(tmp1,{ },tmp4));
	}
	,printList: function() {
		var inputs = window.document.querySelectorAll("#printList");
		haxe_Log.trace(inputs.length,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 372, className : "view.data.contacts.List", methodName : "printList"});
		var inp = js_Boot.__cast(inputs.item(0) , HTMLInputElement);
		var prods = window.document.querySelectorAll("[name=product]:checked");
		if(prods.length == 0) {
			App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ text : "Bitte Produkt auswählen!"}))));
			return;
		}
		var productOpt = js_Boot.__cast(prods.item(0) , HTMLInputElement);
		haxe_Log.trace(productOpt.value,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 383, className : "view.data.contacts.List", methodName : "printList"});
		haxe_Log.trace(App.config.api,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 384, className : "view.data.contacts.List", methodName : "printList"});
		if(inp.value == "") {
			return;
		}
		var list = inp.value;
		App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ text : "Erzeugung der Daten zum Download gestarted"}))));
		var api = Std.string(App.config.baseUrl) + "/mailing.pl?action=PRINTLIST&list=" + encodeURIComponent(list) + ("&product=" + productOpt.value);
		haxe_Log.trace(api,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 397, className : "view.data.contacts.List", methodName : "printList"});
		var reqInit = { credentials : "include", mode : "cors"};
		var p = window.fetch(api,reqInit);
		p.then(function(res) {
			haxe_Log.trace(Std.string(res.headers.keys()),{ fileName : "src/view/data/contacts/List.hx", lineNumber : 407, className : "view.data.contacts.List", methodName : "printList"});
			var entry;
			var headers = res.headers.keys();
			var hLoop = true;
			while(hLoop) {
				entry = headers.next();
				if(entry.done) {
					haxe_Log.trace("done",{ fileName : "src/view/data/contacts/List.hx", lineNumber : 415, className : "view.data.contacts.List", methodName : "printList"});
					break;
				}
				haxe_Log.trace(Std.string(entry),{ fileName : "src/view/data/contacts/List.hx", lineNumber : 418, className : "view.data.contacts.List", methodName : "printList"});
			}
			res.blob().then(function(bl) {
				var url = URL.createObjectURL(bl);
				var a = window.document.createElement("a");
				a.href = url;
				var fName = js_Cookie.get("fileDownload");
				if(fName != null) {
					a.download = fName;
				} else {
					a.download = "Liste-Anschreiben-" + HxOverrides.substr(StringTools.replace(productOpt.value," ","_"),50,null) + ".pdf";
				}
				haxe_Log.trace(js_Cookie.get("fileDownload"),{ fileName : "src/view/data/contacts/List.hx", lineNumber : 430, className : "view.data.contacts.List", methodName : "printList"});
				a.click();
				App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ text : "Download abgeschlossen"}))));
			});
		});
	}
	,printNew: function() {
		var prods = window.document.querySelectorAll("[name=product]:checked");
		if(prods.length == 0) {
			App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ text : "Bitte Produkt auswählen!"}))));
			return;
		}
		var productOpt = js_Boot.__cast(prods.item(0) , HTMLInputElement);
		haxe_Log.trace(productOpt.value,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 452, className : "view.data.contacts.List", methodName : "printNew"});
		App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ text : "Erzeugung der Daten zum Download gestarted"}))));
		var api = Std.string(App.config.baseUrl) + "/mailing.pl?action=PRINTNEW" + ("&product=" + productOpt.value);
		haxe_Log.trace(api,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 460, className : "view.data.contacts.List", methodName : "printNew"});
		var reqInit = { credentials : "include", mode : "cors"};
		var p = window.fetch(api,reqInit);
		p.then(function(res) {
			haxe_Log.trace(res.status,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 467, className : "view.data.contacts.List", methodName : "printNew"});
			if(res.status == 206) {
				haxe_Log.trace(res.statusText,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 469, className : "view.data.contacts.List", methodName : "printNew"});
				res.text().then(function(t) {
					haxe_Log.trace(Reflect.fields(JSON.parse(t)).join("|"),{ fileName : "src/view/data/contacts/List.hx", lineNumber : 471, className : "view.data.contacts.List", methodName : "printNew"});
					haxe_Log.trace(JSON.parse(t),{ fileName : "src/view/data/contacts/List.hx", lineNumber : 472, className : "view.data.contacts.List", methodName : "printNew"});
				});
				App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ text : "Keine Neuen Anschreiben!"}))));
			} else {
				res.blob().then(function(bl) {
					var url = URL.createObjectURL(bl);
					var a = window.document.createElement("a");
					a.href = url;
					var fName = js_Cookie.get("fileDownload");
					if(fName != null) {
						a.download = fName;
					} else {
						a.download = "Neue-Anschreiben-" + StringTools.replace(StringTools.replace(HxOverrides.dateStr(new Date())," ","_"),":","-") + ".pdf";
					}
					haxe_Log.trace(js_Cookie.get("fileDownload"),{ fileName : "src/view/data/contacts/List.hx", lineNumber : 490, className : "view.data.contacts.List", methodName : "printNew"});
					a.click();
					App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ text : "Download abgeschlossen"}))));
				});
			}
		},function(error) {
			haxe_Log.trace(error,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 499, className : "view.data.contacts.List", methodName : "printNew"});
			App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ text : "..."}))));
		});
	}
	,updateMenu: function(viewClassPath) {
		var sideMenu = this.state.sideMenu;
		haxe_Log.trace(sideMenu.section,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 510, className : "view.data.contacts.List", methodName : "updateMenu"});
		var _g = 0;
		var _g1 = sideMenu.menuBlocks.h["List"].items;
		while(_g < _g1.length) {
			var mI = _g1[_g];
			++_g;
			var _g2 = mI.action;
			if(_g2 != null) {
				switch(_g2) {
				case "delete":case "update":
					mI.disabled = this.state.selectedRows.length == 0;
					break;
				default:
				}
			}
		}
		return sideMenu;
	}
	,__class__: view_data_contacts_List
});
var view_data_deals_Edit = function(props) {
	this.mounted = false;
	React_Component.call(this,props);
	haxe_Log.trace(props.match.params,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 96, className : "view.data.deals.Edit", methodName : "new"});
	haxe_Log.trace(Reflect.fields(props),{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 98, className : "view.data.deals.Edit", methodName : "new"});
	if(props.match.params.id == null && new EReg("update(/)*$","").match(props.match.params.action)) {
		haxe_Log.trace("nothing selected - redirect",{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 103, className : "view.data.deals.Edit", methodName : "new"});
		var baseUrl = props.match.path.split(":section")[0];
		props.history.push("" + baseUrl + "List/get");
		return;
	}
	this.dataAccess = model_deals_DealsModel.dataAccess;
	this.fieldNames = view_shared_io_BaseForm.initFieldNames(new haxe_ds__$StringMap_StringMapKeyIterator(this.dataAccess.h["open"].view.h));
	this.dataDisplay = model_deals_DealsModel.dataDisplay;
	if(props.dataStore.dealData != null) {
		haxe_Log.trace(props.dataStore.dealData.keys().next(),{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 113, className : "view.data.deals.Edit", methodName : "new"});
	}
	this.state = App.initEState({ actualState : null, initialData : null, loading : false, mHandlers : view_data_deals_Edit.menuItems, selectedRows : [], sideMenu : view_shared_io_FormApi.initSideMenu(this,{ dataClassPath : "data.Deals", label : "Bearbeiten", section : "Edit", items : view_data_deals_Edit.menuItems},{ section : props.match.params.section == null ? "Edit" : props.match.params.section, sameWidth : true}), values : new haxe_ds_StringMap()},this);
	haxe_Log.trace(this.state.initialData,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 139, className : "view.data.deals.Edit", methodName : "new"});
	haxe_Log.trace(this.state.loading,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 143, className : "view.data.deals.Edit", methodName : "new"});
};
$hxClasses["view.data.deals.Edit"] = view_data_deals_Edit;
view_data_deals_Edit.__name__ = "view.data.deals.Edit";
view_data_deals_Edit.mapDispatchToProps = function(dispatch) {
	haxe_Log.trace("here we should be ready to load",{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 147, className : "view.data.deals.Edit", methodName : "mapDispatchToProps"});
	return { load : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.read(param)));
	}};
};
view_data_deals_Edit.mapStateToProps = function(aState) {
	return { userState : aState.userState};
};
view_data_deals_Edit.__super__ = React_Component;
view_data_deals_Edit.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,dataDisplay: null
	,formApi: null
	,formBuilder: null
	,formFields: null
	,formRef: null
	,fieldNames: null
	,baseForm: null
	,deal: null
	,dbData: null
	,dbMetaData: null
	,mounted: null
	,close: function() {
		this.props.history.push("" + this.props.match.path.split(":section")[0] + "List/get");
	}
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 168, className : "view.data.deals.Edit", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
	}
	,get: function(ev) {
		haxe_Log.trace("hi :)",{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 174, className : "view.data.deals.Edit", methodName : "get"});
		this.state.formApi.requests.push(null);
	}
	,edit: function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 187, className : "view.data.deals.Edit", methodName : "edit"});
	}
	,update: function() {
		if(this.state.actualState != null) {
			haxe_Log.trace(this.state.actualState.fieldsModified.length,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 193, className : "view.data.deals.Edit", methodName : "update"});
		}
		if(this.state.actualState == null || this.state.actualState.fieldsModified.length == 0) {
			return;
		}
		var data2save = this.state.actualState.allModified();
		var doc = window.document;
		var aState = react_ReactUtil.copy(this.state.actualState);
		var dbQ = { classPath : "data.Deals", action : "update", data : data2save, filter : { id : this.state.actualState.id, mandator : 1}, resolveMessage : { success : "Spende " + this.state.actualState.id + " wurde aktualisiert", failure : "Spende " + this.state.actualState.id + " konnte nicht aktualisiert werden"}, table : "deals", dbUser : this.props.userState.dbUser, devIP : App.devIP};
		haxe_Log.trace("" + this.props.match.params.action + ": " + Std.string(this.state.initialData.id) + " :: creation_date: " + Std.string(aState.creation_date) + " " + Std.string(this.state.initialData.creation_date),{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 213, className : "view.data.deals.Edit", methodName : "update"});
		if(this.state.actualState != null) {
			haxe_Log.trace(Std.string(this.state.actualState.modified()) + (":" + Std.string(this.state.actualState.fieldsModified)),{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 216, className : "view.data.deals.Edit", methodName : "update"});
		}
		haxe_Log.trace(this.state.actualState.id,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 219, className : "view.data.deals.Edit", methodName : "update"});
		if(!this.state.actualState.modified()) {
			App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "", text : "Spende wurde nicht geändert"}))));
			haxe_Log.trace("nothing modified",{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 228, className : "view.data.deals.Edit", methodName : "update"});
			return;
		}
		haxe_Log.trace(this.state.actualState.allModified(),{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 231, className : "view.data.deals.Edit", methodName : "update"});
		App.store.dispatch(redux_Action.map(action_async_CRUD.update(dbQ)));
	}
	,initStateFromDataTable: function(dt) {
		var iS = { };
		var _g = 0;
		while(_g < dt.length) {
			var dR = dt[_g];
			++_g;
			var rS = { };
			var h = dR.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				haxe_Log.trace(k,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 243, className : "view.data.deals.Edit", methodName : "initStateFromDataTable"});
				if(this.dataDisplay.h["fieldsList"].columns.h[k].cellFormat == view_shared_Format.formatBool) {
					rS[k] = dR.h[k] == "Y";
				} else {
					rS[k] = dR.h[k];
				}
			}
			iS[dR.h["id"]] = rS;
		}
		haxe_Log.trace(iS,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 253, className : "view.data.deals.Edit", methodName : "initStateFromDataTable"});
		return iS;
	}
	,componentDidMount: function() {
		haxe_Log.trace("mounted:" + "true",{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 259, className : "view.data.deals.Edit", methodName : "componentDidMount"});
		this.loadDealData(Std.parseInt(this.props.match.params.id));
	}
	,loadDealData: function(id) {
		var _gthis = this;
		haxe_Log.trace("loading:" + id,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 289, className : "view.data.deals.Edit", methodName : "loadDealData"});
		if(id == null) {
			return;
		}
		var p = this.props.load({ classPath : "data.Deals", action : "get", filter : { id : id, mandator : 1}, resolveMessage : { success : "Spende " + id + " wurde geladen", failure : "Spende " + id + " konnte nicht geladen werden"}, table : "deals", dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 307, className : "view.data.deals.Edit", methodName : "loadDealData"});
			if(data.dataRows.length == 1) {
				var data1 = data.dataRows[0];
				haxe_Log.trace(data1 == null ? "null" : haxe_ds_StringMap.stringify(data1.h),{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 311, className : "view.data.deals.Edit", methodName : "loadDealData"});
				var deal = new model_Deal(data1);
				haxe_Log.trace(deal.id,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 314, className : "view.data.deals.Edit", methodName : "loadDealData"});
				_gthis.setState({ loading : false, actualState : deal, initialData : react_ReactUtil.copy(deal)});
				haxe_Log.trace(_gthis.state.actualState.id + ":" + _gthis.state.actualState.fieldsInitalized.join(","),{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 316, className : "view.data.deals.Edit", methodName : "loadDealData"});
				haxe_Log.trace(_gthis.props.location.pathname + ":" + _gthis.state.actualState.amount,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 318, className : "view.data.deals.Edit", methodName : "loadDealData"});
				var _gthis1 = _gthis.props.history;
				var tmp = StringTools.replace(_gthis.props.location.pathname,"open","update");
				_gthis1.replace(tmp);
			}
		});
	}
	,renderResults: function() {
		haxe_Log.trace(this.props.match.params.section + ":" + Std.string(this.state.dbTable != null),{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 326, className : "view.data.deals.Edit", methodName : "renderResults"});
		haxe_Log.trace(Std.string(this.state.loading) + ":" + this.props.match.params.action,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 328, className : "view.data.deals.Edit", methodName : "renderResults"});
		if(this.state.loading) {
			return this.state.formApi.renderWait();
		}
		haxe_Log.trace("###########loading:" + Std.string(this.state.loading),{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 331, className : "view.data.deals.Edit", methodName : "renderResults"});
		switch(this.props.match.params.action) {
		case "delete":
			return null;
		case "insert":
			haxe_Log.trace(this.dataDisplay.h["fieldsList"],{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 357, className : "view.data.deals.Edit", methodName : "renderResults"});
			haxe_Log.trace(Std.string(this.state.dbTable[29].h["id"]) + "<<<",{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 358, className : "view.data.deals.Edit", methodName : "renderResults"});
			return React.createElement(react_ReactType.fromComp(view_table_Table),Object.assign({ },this.props,{ id : "fieldsList", data : this.state.dbTable, dataState : this.dataDisplay.h["fieldsList"], className : "is-striped is-hoverable", fullWidth : true}));
		case "open":case "update":
			haxe_Log.trace(this.state.actualState,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 341, className : "view.data.deals.Edit", methodName : "renderResults"});
			if(this.state.actualState == null) {
				return this.state.formApi.renderWait();
			} else {
				var tmp = this.state.formBuilder;
				var tmp1 = this.state.mHandlers;
				var _g = new haxe_ds_StringMap();
				var h = this.dataAccess.h["open"].view.h;
				var k_h = h;
				var k_keys = Object.keys(h);
				var k_length = k_keys.length;
				var k_current = 0;
				while(k_current < k_length) {
					var k = k_keys[k_current++];
					_g.h[k] = this.dataAccess.h["open"].view.h[k];
				}
				return tmp.renderForm({ mHandlers : tmp1, fields : _g, model : "deals", title : "Bearbeite Spende"},this.state.actualState);
			}
			break;
		default:
			return null;
		}
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.section,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 375, className : "view.data.deals.Edit", methodName : "render"});
		var tmp = this.state.formApi;
		var tmp1 = react_ReactType.fromComp(React_Fragment);
		var tmp2 = react_ReactType.fromString("div");
		var tmp3 = this.renderResults();
		var tmp4 = React.createElement(tmp2,{ className : "tabComponentForm"},tmp3);
		return tmp.render(React.createElement(tmp1,{ },tmp4));
	}
	,updateMenu: function(viewClassPath) {
		var sideMenu = this.state.sideMenu;
		haxe_Log.trace(sideMenu.section,{ fileName : "src/view/data/deals/Edit.hx", lineNumber : 387, className : "view.data.deals.Edit", methodName : "updateMenu"});
		var _g = 0;
		var _g1 = sideMenu.menuBlocks.h["Contact"].items;
		while(_g < _g1.length) {
			var mI = _g1[_g];
			++_g;
			var _g2 = mI.action;
			if(_g2 != null) {
				switch(_g2) {
				case "editTableFields":
					mI.disabled = this.state.selectedRows.length == 0;
					break;
				case "save":
					mI.disabled = this.state.clean;
					break;
				default:
				}
			}
		}
		return sideMenu;
	}
	,__class__: view_data_deals_Edit
});
var view_data_deals_List = function(props) {
	React_Component.call(this,props);
	this.dataDisplay = model_deals_DealsModel.dataGridDisplay;
	haxe_Log.trace("..." + Std.string(Reflect.fields(props)),{ fileName : "src/view/data/deals/List.hx", lineNumber : 60, className : "view.data.deals.List", methodName : "new"});
	this.state = App.initEState({ dbTable : [], loading : true, dealsData : new haxe_ds_IntMap(), selectedRows : [], sideMenu : view_shared_io_FormApi.initSideMenu(this,{ dataClassPath : "data.Deals", label : "Liste", section : "List", items : view_data_deals_List.menuItems},{ section : props.match.params.section == null ? "List" : props.match.params.section, sameWidth : true}), values : new haxe_ds_StringMap()},this);
	if(props.match.params.action == null) {
		var baseUrl = props.match.path.split(":section")[0];
		haxe_Log.trace("redirecting to " + baseUrl + "List/get",{ fileName : "src/view/data/deals/List.hx", lineNumber : 84, className : "view.data.deals.List", methodName : "new"});
		props.history.push("" + baseUrl + "List/get");
	} else {
		haxe_Log.trace(props.match.params,{ fileName : "src/view/data/deals/List.hx", lineNumber : 91, className : "view.data.deals.List", methodName : "new"});
	}
	haxe_Log.trace(this.state.loading,{ fileName : "src/view/data/deals/List.hx", lineNumber : 93, className : "view.data.deals.List", methodName : "new"});
};
$hxClasses["view.data.deals.List"] = view_data_deals_List;
view_data_deals_List.__name__ = "view.data.deals.List";
view_data_deals_List.mapDispatchToProps = function(dispatch) {
	return { load : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.read(param)));
	}};
};
view_data_deals_List.mapStateToProps = function(aState) {
	return { userState : aState.userState};
};
view_data_deals_List.__super__ = React_Component;
view_data_deals_List.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,dataDisplay: null
	,formFields: null
	,fieldNames: null
	,baseForm: null
	,dbData: null
	,dbMetaData: null
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/data/deals/List.hx", lineNumber : 111, className : "view.data.deals.List", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
	}
	,get: function(ev) {
		var _gthis = this;
		haxe_Log.trace("hi " + Std.string(ev),{ fileName : "src/view/data/deals/List.hx", lineNumber : 117, className : "view.data.deals.List", methodName : "get"});
		var offset = 0;
		if(ev != null && ev.page != null) {
			offset = this.props.limit * ev.page | 0;
		}
		var p = this.props.load({ classPath : "data.Deals", action : "get", filter : this.props.match.params.id != null ? { id : this.props.match.params.id, mandator : "1"} : { mandator : "1"}, limit : this.props.limit, offset : offset > 0 ? offset : 0, table : "deals", resolveMessage : { success : "Spendenliste wurde geladen", failure : "Spendenliste konnte nicht geladen werden"}, dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/data/deals/List.hx", lineNumber : 141, className : "view.data.deals.List", methodName : "get"});
			_gthis.setState({ loading : false, dbTable : data.dataRows, dataCount : Std.parseInt(data.dataInfo.h["count"]), pageCount : Math.ceil(Std.parseInt(data.dataInfo.h["count"]) / _gthis.props.limit)});
		});
	}
	,edit: function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/data/deals/List.hx", lineNumber : 154, className : "view.data.deals.List", methodName : "edit"});
	}
	,selectionClear: function() {
		var match = react_ReactUtil.copy(this.props.match);
		match.params.action = "get";
		haxe_Log.trace(this.state.dbTable.length,{ fileName : "src/view/data/deals/List.hx", lineNumber : 160, className : "view.data.deals.List", methodName : "selectionClear"});
		this.props.select(1,null,match,"UnselectAll");
		var trs = window.document.querySelectorAll(".tabComponentForm tr");
		haxe_Log.trace(trs.length,{ fileName : "src/view/data/deals/List.hx", lineNumber : 165, className : "view.data.deals.List", methodName : "selectionClear"});
		var _g = 0;
		var _g1 = trs.length;
		while(_g < _g1) {
			var i = _g++;
			var tre = js_Boot.__cast(trs.item(i) , HTMLTableRowElement);
			if(tre.classList.contains("is-selected")) {
				haxe_Log.trace("unselect:" + tre.dataset.id,{ fileName : "src/view/data/deals/List.hx", lineNumber : 169, className : "view.data.deals.List", methodName : "selectionClear"});
				tre.classList.remove("is-selected");
			}
		}
		window.document.querySelector("[class=\"grid-container-inner\"]").scrollTop = 0;
	}
	,componentDidMount: function() {
		var _g = new haxe_ds_StringMap();
		var _g1 = new haxe_ds_StringMap();
		var value = new haxe_ds_StringMap();
		_g1.h["deals"] = value;
		var value = { source : _g1, view : new haxe_ds_StringMap()};
		_g.h["get"] = value;
		this.dataAccess = _g;
		if(this.props.userState.dbUser != null) {
			haxe_Log.trace("yeah: " + this.props.userState.dbUser.first_name,{ fileName : "src/view/data/deals/List.hx", lineNumber : 188, className : "view.data.deals.List", methodName : "componentDidMount"});
		}
		this.state.formApi.doAction();
	}
	,renderPager: function() {
		return view_shared_io_BaseForm.renderPager(this);
	}
	,renderResults: function() {
		haxe_Log.trace(this.props.match.params.section + ":" + Std.string(this.state.dbTable != null),{ fileName : "src/view/data/deals/List.hx", lineNumber : 199, className : "view.data.deals.List", methodName : "renderResults"});
		haxe_Log.trace(this.dataDisplay.h["dealsList"],{ fileName : "src/view/data/deals/List.hx", lineNumber : 200, className : "view.data.deals.List", methodName : "renderResults"});
		haxe_Log.trace(this.state.loading,{ fileName : "src/view/data/deals/List.hx", lineNumber : 201, className : "view.data.deals.List", methodName : "renderResults"});
		if(this.state.loading || this.state.dbTable == null || this.state.dbTable.length == 0) {
			return this.state.formApi.renderWait();
		}
		haxe_Log.trace("###########loading:" + this.state.dbTable.length,{ fileName : "src/view/data/deals/List.hx", lineNumber : 204, className : "view.data.deals.List", methodName : "renderResults"});
		switch(this.props.match.params.action) {
		case "delete":
			return null;
		case "get":
			return React.createElement(view_grid_Grid._renderWrapper,Object.assign({ },this.props,{ id : "dealsList", data : this.state.dbTable, dataState : this.dataDisplay.h["dealsList"], parentComponent : this, className : "is-striped is-hoverable", fullWidth : true}));
		default:
			return null;
		}
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.section,{ fileName : "src/view/data/deals/List.hx", lineNumber : 224, className : "view.data.deals.List", methodName : "render"});
		var tmp = this.state.formApi;
		var tmp1 = react_ReactType.fromComp(React_Fragment);
		var tmp2 = react_ReactType.fromString("form");
		var tmp3 = this.renderResults();
		var tmp4 = React.createElement(tmp2,{ className : "tabComponentForm"},tmp3);
		return tmp.render(React.createElement(tmp1,{ },tmp4));
	}
	,updateMenu: function(viewClassPath) {
		var sideMenu = this.state.sideMenu;
		haxe_Log.trace(sideMenu.section,{ fileName : "src/view/data/deals/List.hx", lineNumber : 237, className : "view.data.deals.List", methodName : "updateMenu"});
		var _g = 0;
		var _g1 = sideMenu.menuBlocks.h["List"].items;
		while(_g < _g1.length) {
			var mI = _g1[_g];
			++_g;
			var _g2 = mI.action;
			if(_g2 != null) {
				switch(_g2) {
				case "editTableFields":
					mI.disabled = this.state.selectedRows.length == 0;
					break;
				case "save":
					mI.disabled = this.state.clean;
					break;
				default:
				}
			}
		}
		return sideMenu;
	}
	,__class__: view_data_deals_List
});
var view_data_qc_Edit = function(props) {
	this._trace = false;
	this.mounted = false;
	React_Component.call(this,props);
	this.ormRefs = new haxe_ds_StringMap();
	this._trace = true;
	this.accountsFormRef = React.createRef();
	this.dealsFormRef = React.createRef();
	this.formRef = React.createRef();
	this.historyFormRef = React.createRef();
	haxe_Log.trace(props.match.params,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 137, className : "view.data.qc.Edit", methodName : "new"});
	if(props.match.params.id == null) {
		if(props.dataStore.qcActData != null && props.dataStore.qcActData.keys().hasNext()) {
			var tmp = props.dataStore.qcActData.keys().next();
			props.match.params.id = Std.string(tmp);
		}
	}
	if(Lambda.has(Reflect.fields(props),"dataStore") && props.dataStore.qcData != null) {
		this.qcData = props.dataStore.qcData.h[Std.parseInt(props.match.params.id)];
		if(this.qcData != null) {
			haxe_Log.trace(this.qcData.h["lead_id"],{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 148, className : "view.data.qc.Edit", methodName : "new"});
		}
	}
	if(props.match.params.id == null && new EReg("update(/)*$","").match(props.match.params.action)) {
		haxe_Log.trace("nothing selected - redirect",{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 154, className : "view.data.qc.Edit", methodName : "new"});
		var baseUrl = props.match.path.split(":section")[0];
		props.history.push("" + baseUrl + "List/get");
		return;
	}
	this.dataAccess = model_qc_QCModel.dataAccess;
	this.fieldNames = view_shared_io_BaseForm.initFieldNames(new haxe_ds__$StringMap_StringMapKeyIterator(this.dataAccess.h["open"].view.h));
	haxe_Log.trace(this.fieldNames.join("|"),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 161, className : "view.data.qc.Edit", methodName : "new"});
	this.dataDisplay = model_qc_QCModel.dataDisplay;
	this.dealDataAccess = model_deals_DealsModel.dataAccess;
	this.dealFieldNames = view_shared_io_BaseForm.initFieldNames(new haxe_ds__$StringMap_StringMapKeyIterator(this.dealDataAccess.h["open"].view.h));
	this.accountDataAccess = model_accounting_AccountsModel.dataAccess;
	this.accountFieldNames = view_shared_io_BaseForm.initFieldNames(new haxe_ds__$StringMap_StringMapKeyIterator(this.accountDataAccess.h["open"].view.h));
	this.accountDataDisplay = model_accounting_AccountsModel.dataDisplay;
	if(props.dataStore.contactsData != null) {
		haxe_Log.trace(props.dataStore.contactsData.keys().next(),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 173, className : "view.data.qc.Edit", methodName : "new"});
	}
	var _g = 0;
	var _g1 = view_data_qc_Edit.menuItems;
	while(_g < _g1.length) {
		var mI = _g1[_g];
		++_g;
		if(new EReg("qc_*","").match(mI.action)) {
			mI.handler = $bind(this,this.doQC);
		}
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = view_data_qc_Edit.menuItems;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		_g.push(Object.assign({ },v));
	}
	var tmp = _g;
	var tmp1 = new haxe_ds_StringMap();
	var tmp2 = new haxe_ds_StringMap();
	var _g = [];
	var _g1 = 0;
	var _g2 = view_data_qc_Edit.menuItems;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		_g.push(Object.assign({ },v));
	}
	this.state = App.initEState({ actualState : null, initialData : null, mHandlers : tmp, loading : false, model : "contacts", ormRefs : tmp1, relDataComps : tmp2, selectedRows : [], sideMenu : view_shared_io_FormApi.initSideMenu(this,{ dataClassPath : "data.Deals", label : "Bearbeiten", section : "Edit", items : _g},{ section : props.match.params.section == null ? "Edit" : props.match.params.section, sameWidth : true}), values : new haxe_ds_StringMap()},this);
	if(view_data_qc_Edit._c == null) {
		view_data_qc_Edit._c = 1;
	} else {
		view_data_qc_Edit._c++;
	}
	haxe_Log.trace(view_data_qc_Edit._c,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 210, className : "view.data.qc.Edit", methodName : "new"});
	haxe_Log.trace(this.state.initialData,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 212, className : "view.data.qc.Edit", methodName : "new"});
};
$hxClasses["view.data.qc.Edit"] = view_data_qc_Edit;
view_data_qc_Edit.__name__ = "view.data.qc.Edit";
view_data_qc_Edit.mapDispatchToProps = function(dispatch) {
	haxe_Log.trace("here we should be ready to load",{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 608, className : "view.data.qc.Edit", methodName : "mapDispatchToProps"});
	return { load : function(param) {
		return dispatch(redux_Action.map(action_async_CRUD.read(param)));
	}};
};
view_data_qc_Edit.mapStateToProps = function(aState) {
	haxe_Log.trace(Reflect.fields(aState),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 617, className : "view.data.qc.Edit", methodName : "mapStateToProps"});
	if(aState.dataStore.qcData != null) {
		haxe_Log.trace(Std.string(aState.dataStore.qcData.keys().next()),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 619, className : "view.data.qc.Edit", methodName : "mapStateToProps"});
	}
	if(aState.dataStore.contactsDbData != null) {
		var tmp = aState.dataStore.contactsDbData.dataRows[0];
		haxe_Log.trace(tmp == null ? "null" : haxe_ds_StringMap.stringify(tmp.h),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 621, className : "view.data.qc.Edit", methodName : "mapStateToProps"});
	} else {
		haxe_Log.trace(Reflect.fields(aState.dataStore),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 625, className : "view.data.qc.Edit", methodName : "mapStateToProps"});
	}
	haxe_Log.trace(App.store.getState().dataStore.contactsDbData,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 627, className : "view.data.qc.Edit", methodName : "mapStateToProps"});
	var bState = { dataStore : aState.dataStore, userState : aState.userState};
	haxe_Log.trace(bState.dataStore.contactsData,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 634, className : "view.data.qc.Edit", methodName : "mapStateToProps"});
	return bState;
};
view_data_qc_Edit.__super__ = React_Component;
view_data_qc_Edit.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,dataDisplay: null
	,dealsAreOpen: null
	,formApi: null
	,formBuilder: null
	,formFields: null
	,dealsFormRef: null
	,formRef: null
	,fieldNames: null
	,ormRefs: null
	,accountsFormRef: null
	,historyFormRef: null
	,baseForm: null
	,contact: null
	,dbData: null
	,dbMetaData: null
	,modals: null
	,mounted: null
	,_trace: null
	,dealDataAccess: null
	,dealFieldNames: null
	,qcData: null
	,accountDataAccess: null
	,accountFieldNames: null
	,accountDataDisplay: null
	,close: function() {
		this.props.history.push("" + this.props.match.path.split(":section")[0] + "List/get");
	}
	,showSelectedAccounts: function(ev) {
		haxe_Log.trace("---" + Std.string(this.ormRefs.h["accounts"].compRef.state.dataGrid.state.selectedRows),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 225, className : "view.data.qc.Edit", methodName : "showSelectedAccounts"});
		var sRows = this.ormRefs.h["accounts"].compRef.state.dataGrid.state.selectedRows;
		var k = sRows.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			this.ormRefs.h["accounts"].compRef.props.loadData(k1,this.ormRefs.h["accounts"].compRef);
		}
	}
	,showSelectedDeals: function(ev) {
		haxe_Log.trace("---" + Std.string(Type.typeof(this.state.relDataComps)),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 238, className : "view.data.qc.Edit", methodName : "showSelectedDeals"});
		var h = this.state.relDataComps.h;
		var inlStringMapKeyIterator_h = h;
		var inlStringMapKeyIterator_keys = Object.keys(h);
		var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
		var inlStringMapKeyIterator_current = 0;
		haxe_Log.trace("---" + Std.string(inlStringMapKeyIterator_current < inlStringMapKeyIterator_length),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 240, className : "view.data.qc.Edit", methodName : "showSelectedDeals"});
		var sRows = this.ormRefs.h["deals"].compRef.state.dataGrid.state.selectedRows;
		var k = sRows.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			this.ormRefs.h["deals"].compRef.props.loadData(k1,this.ormRefs.h["deals"].compRef);
		}
		haxe_Log.trace(react_ReactRef.get_current(this.dealsFormRef),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 247, className : "view.data.qc.Edit", methodName : "showSelectedDeals"});
		haxe_Log.trace(react_ReactRef.get_current(this.dealsFormRef).querySelectorAll(".selected").length,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 248, className : "view.data.qc.Edit", methodName : "showSelectedDeals"});
		if(ev != null) {
			var targetEl = js_Boot.__cast(ev.target , HTMLElement);
			haxe_Log.trace(Std.string(targetEl.dataset.id),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 251, className : "view.data.qc.Edit", methodName : "showSelectedDeals"});
		}
	}
	,loadQC: function() {
		var _gthis = this;
		if(this.qcData == null) {
			return;
		}
		haxe_Log.trace("loading:" + Std.string(this.qcData.h["lead_id"]),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 259, className : "view.data.qc.Edit", methodName : "loadQC"});
		var p = this.props.load({ classPath : "data.Deals", action : "loadQC", filter : { lead_id : this.qcData.h["lead_id"], entry_list_id : this.qcData.h["entry_list_id"], mandator : 1}, resolveMessage : { success : "QC " + Std.string(this.qcData.h["lead_id"]) + " wurde geladen", failure : "QC " + Std.string(this.qcData.h["lead_id"]) + " konnte nicht geladen werden"}, table : "contacts", viciBoxDB : true, dbUser : this.props.userState.dbUser, devIP : App.devIP});
		p.then(function(data) {
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 277, className : "view.data.qc.Edit", methodName : "loadQC"});
			if(data.dataRows.length == 1) {
				var qcd = data.dataRows[0];
				var v = qcd.h["lead_id"];
				qcd.h["id"] = v;
				haxe_Log.trace(qcd == null ? "null" : haxe_ds_StringMap.stringify(qcd.h),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 283, className : "view.data.qc.Edit", methodName : "loadQC"});
				if(Object.prototype.hasOwnProperty.call(data.dataInfo.h,"recordings")) {
					haxe_Log.trace(data.dataInfo.h["recordings"],{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 285, className : "view.data.qc.Edit", methodName : "loadQC"});
					var _g = [];
					var _g1 = 0;
					var _g2 = view_data_qc_Edit.menuItems;
					while(_g1 < _g2.length) {
						var v = _g2[_g1];
						++_g1;
						_g.push(Object.assign({ },v));
					}
					_gthis.state.mHandlers = _g;
					view_shared_io_BaseForm.addRecordings(_gthis.state,data.dataInfo.h["recordings"]);
				}
				var qc = new model_QC(qcd);
				haxe_Log.trace(qcd == null ? "null" : haxe_ds_StringMap.stringify(qcd.h),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 291, className : "view.data.qc.Edit", methodName : "loadQC"});
				haxe_Log.trace(qc.period,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 292, className : "view.data.qc.Edit", methodName : "loadQC"});
				if(_gthis.mounted) {
					_gthis.setState({ loading : false, actualState : qc, initialData : react_ReactUtil.copy(qc)});
				}
				haxe_Log.trace("" + Std.string(_gthis.mounted) + " " + qc.id + " " + qc.lead_id + " " + qc.entry_list_id,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 296, className : "view.data.qc.Edit", methodName : "loadQC"});
				if(_gthis.state.actualState != null) {
					haxe_Log.trace(_gthis.state.actualState.id + ":" + _gthis.state.actualState.fieldsInitalized.join(","),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 298, className : "view.data.qc.Edit", methodName : "loadQC"});
					haxe_Log.trace(_gthis.props.location.pathname + ":" + _gthis.state.actualState.date_of_birth,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 300, className : "view.data.qc.Edit", methodName : "loadQC"});
				}
				var _gthis1 = _gthis.props.history;
				var tmp = StringTools.replace(_gthis.props.location.pathname,"open","update");
				_gthis1.replace(tmp);
			}
		},function(data) {
			haxe_Log.trace(data,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 305, className : "view.data.qc.Edit", methodName : "loadQC"});
		});
	}
	,addRecordings1: function(recs) {
		var recItems = [];
		var _g = 0;
		while(_g < recs.length) {
			var rec = recs[_g];
			++_g;
			recItems.push({ label : rec.h["start_time"], formField : { src : rec.h["location"].indexOf("85.25.93.167") != -1 ? StringTools.replace(rec.h["location"],"85.25.93.167","pbx.pitverwaltung.de") : rec.h["location"], type : "Audio"}});
		}
		this.state.mHandlers = view_data_qc_Edit.menuItems.concat(recItems);
		haxe_Log.trace(this.state.mHandlers.toString(),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 325, className : "view.data.qc.Edit", methodName : "addRecordings1"});
	}
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 332, className : "view.data.qc.Edit", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
	}
	,componentDidCatch: function(error,info) {
		try {
			this.setState({ hasError : true});
		} catch( _g ) {
			var ex = haxe_Exception.caught(_g).unwrap();
			if(this._trace) {
				haxe_Log.trace(ex,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 343, className : "view.data.qc.Edit", methodName : "componentDidCatch"});
			}
		}
		if(this._trace) {
			haxe_Log.trace(error,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 345, className : "view.data.qc.Edit", methodName : "componentDidCatch"});
		}
		me_cunity_debug_Out.dumpStack(haxe_CallStack.callStack(),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 346, className : "view.data.qc.Edit", methodName : "componentDidCatch"});
	}
	,componentDidMount: function() {
		haxe_Log.trace("" + view_data_qc_Edit._c + " mounted:" + Std.string(this.mounted),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 351, className : "view.data.qc.Edit", methodName : "componentDidMount"});
		this.mounted = true;
		if(this.props.match.params.id != null) {
			haxe_Log.trace(this.props.match.params,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 356, className : "view.data.qc.Edit", methodName : "componentDidMount"});
			this.loadQC();
		}
	}
	,shouldComponentUpdate: function(nextProps,nextState) {
		haxe_Log.trace("" + view_data_qc_Edit._c + " propsChanged:" + Std.string(nextProps != this.props) + " stateChanged:" + Std.string(nextState != this.state) + " returning:" + (nextProps != this.props || nextState != this.state ? "Y" : "N"),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 363, className : "view.data.qc.Edit", methodName : "shouldComponentUpdate"});
		if(nextState == this.state) {
			return nextProps != this.props;
		} else {
			return true;
		}
	}
	,componentWillUnmount: function() {
		return;
	}
	,registerRelDataComp: function(rDC) {
	}
	,registerOrmRef: function(ref) {
		var _g = Type.typeof(ref);
		switch(_g._hx_index) {
		case 0:
			break;
		case 4:
			haxe_Log.trace(Reflect.fields(ref),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 399, className : "view.data.qc.Edit", methodName : "registerOrmRef"});
			haxe_Log.trace(js_Boot.getClass(ref),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 400, className : "view.data.qc.Edit", methodName : "registerOrmRef"});
			var tmp = ref.props != null && ref.props.model != null;
			break;
		case 6:
			var func = _g.c;
			var cL = js_Boot.getClass(ref);
			if(cL != null) {
				try {
					if(ref.props != null && ref.props.model != null) {
						var this1 = this.ormRefs;
						var k = ref.props.model;
						var v = { compRef : ref, orms : new haxe_ds_IntMap()};
						this1.h[k] = v;
					}
				} catch( _g ) {
					var ex = haxe_Exception.caught(_g);
					haxe_Log.trace(ex,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 425, className : "view.data.qc.Edit", methodName : "registerOrmRef"});
				}
			}
			break;
		default:
			haxe_Log.trace(ref,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 429, className : "view.data.qc.Edit", methodName : "registerOrmRef"});
		}
	}
	,registerORM: function(refModel,orm) {
		if(Object.prototype.hasOwnProperty.call(this.ormRefs.h,refModel)) {
			this.ormRefs.h[refModel].orms.h[orm.id] = orm;
			haxe_Log.trace(refModel,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 436, className : "view.data.qc.Edit", methodName : "registerORM"});
			this.setState({ ormRefs : this.ormRefs});
			haxe_Log.trace(Reflect.fields(this.state),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 440, className : "view.data.qc.Edit", methodName : "registerORM"});
		} else {
			haxe_Log.trace("OrmRef " + refModel + " not found!",{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 444, className : "view.data.qc.Edit", methodName : "registerORM"});
		}
	}
	,update: function() {
		haxe_Log.trace("ok",{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 457, className : "view.data.qc.Edit", methodName : "update"});
	}
	,doQC: function(e) {
		var _gthis = this;
		haxe_Log.trace(Reflect.fields(e),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 462, className : "view.data.qc.Edit", methodName : "doQC"});
		e.preventDefault();
		var action = (js_Boot.__cast(e.target , HTMLButtonElement)).getAttribute("data-action");
		haxe_Log.trace(action,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 465, className : "view.data.qc.Edit", methodName : "doQC"});
		var data2save = this.state.actualState.allModified();
		haxe_Log.trace(data2save,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 473, className : "view.data.qc.Edit", methodName : "doQC"});
		var aState = react_ReactUtil.copy(this.state.actualState);
		var dbQ = { classPath : "data.Deals", action : action, data : data2save, filter : { id : this.state.actualState.id, mandator : 1, entry_list_id : this.state.initialData.entry_list_id}, resolveMessage : { success : "QC lead " + this.state.actualState.id + " wurde aktualisiert", failure : "QC lead " + this.state.actualState.id + " konnte nicht aktualisiert werden"}, viciBoxDB : true, dbUser : this.props.userState.dbUser, devIP : App.devIP};
		haxe_Log.trace("" + Std.string(this.state.initialData.id) + " :: creation_date: " + Std.string(aState.creation_date) + " " + Std.string(this.state.initialData.creation_date),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 489, className : "view.data.qc.Edit", methodName : "doQC"});
		if(this.state.actualState != null) {
			haxe_Log.trace(Std.string(this.state.actualState.modified()) + (":" + Std.string(this.state.actualState.fieldsModified)),{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 493, className : "view.data.qc.Edit", methodName : "doQC"});
		}
		var p = action_async_LivePBXSync.query(dbQ);
		p.then(function(d) {
			if(d.dataInfo != null && Object.prototype.hasOwnProperty.call(d.dataInfo.h,"count")) {
				haxe_Log.trace(d.dataInfo.h["count"],{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 502, className : "view.data.qc.Edit", methodName : "doQC"});
				App.store.dispatch(redux_Action.map(action_AppAction.Status(action_StatusAction.Update({ className : "Edit", text : "QC lead gespeichert"}))));
				if(action == "qc_ok" || action == "qc_bad") {
					_gthis.close();
				}
			}
		},function(d) {
			haxe_Log.trace(d,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 513, className : "view.data.qc.Edit", methodName : "doQC"});
		});
	}
	,renderResults: function() {
		haxe_Log.trace("########### action:" + this.props.match.params.action,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 521, className : "view.data.qc.Edit", methodName : "renderResults"});
		switch(this.props.match.params.action) {
		case "insert":
			var tmp = this.state.formBuilder;
			var tmp1 = this.state.mHandlers;
			var _g = new haxe_ds_StringMap();
			var h = this.dataAccess.h["open"].view.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				_g.h[k] = this.dataAccess.h["open"].view.h[k];
			}
			return tmp.renderForm({ mHandlers : tmp1, fields : _g, model : "qc", ref : null, title : "QC - Neue Daten"},this.state.actualState);
		case "open":case "update":
			if(this.state.actualState == null) {
				return this.state.formApi.renderWait();
			} else {
				var tmp = react_ReactType.fromComp(React_Fragment);
				var tmp1 = this.state.formBuilder;
				var tmp2 = this.state.mHandlers;
				var _g = new haxe_ds_StringMap();
				var h = this.dataAccess.h["open"].view.h;
				var k_h = h;
				var k_keys = Object.keys(h);
				var k_length = k_keys.length;
				var k_current = 0;
				while(k_current < k_length) {
					var k = k_keys[k_current++];
					_g.h[k] = this.dataAccess.h["open"].view.h[k];
				}
				var tmp3 = tmp1.renderForm({ mHandlers : tmp2, fields : _g, model : "qc", ref : null, title : "Daten QC"},this.state.actualState);
				return React.createElement(tmp,{ },tmp3);
			}
			break;
		default:
			return null;
		}
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 573, className : "view.data.qc.Edit", methodName : "render"});
		if(this.state == null || this.state.initialData == null) {
			haxe_Log.trace("stateOrInitialData is null",{ fileName : "src/view/data/qc/Edit.hx", lineNumber : 576, className : "view.data.qc.Edit", methodName : "render"});
			return null;
		}
		switch(this.props.match.params.action) {
		case "insert":
			return this.state.formApi.render(this.renderResults());
		case "open":
			return this.state.formApi.render(this.renderResults());
		default:
			return this.state.formApi.render(this.renderResults());
		}
	}
	,__class__: view_data_qc_Edit
});
var view_data_qc_List = function(props) {
	React_Component.call(this,props);
	this.dataDisplay = model_contacts_ContactsModel.qcListDisplay;
	haxe_Log.trace("..." + Std.string(Reflect.fields(props)),{ fileName : "src/view/data/qc/List.hx", lineNumber : 66, className : "view.data.qc.List", methodName : "new"});
	this.state = App.initEState({ dbTable : [], loading : false, contactData : new haxe_ds_IntMap(), selectedRows : [], sideMenu : view_shared_io_FormApi.initSideMenu(this,{ dataClassPath : "data.Deals", label : "Liste", section : "List", items : view_data_qc_List.menuItems},{ section : props.match.params.section == null ? "List" : props.match.params.section, sameWidth : true}), values : new haxe_ds_StringMap()},this);
	if(props.match.params.action == null) {
		var baseUrl = props.match.path.split(":section")[0];
		haxe_Log.trace("redirecting to " + baseUrl + "List/get",{ fileName : "src/view/data/qc/List.hx", lineNumber : 89, className : "view.data.qc.List", methodName : "new"});
		props.history.push("" + baseUrl + "List/get");
	} else {
		haxe_Log.trace(props.match.params,{ fileName : "src/view/data/qc/List.hx", lineNumber : 96, className : "view.data.qc.List", methodName : "new"});
	}
	haxe_Log.trace(this.state.loading,{ fileName : "src/view/data/qc/List.hx", lineNumber : 98, className : "view.data.qc.List", methodName : "new"});
};
$hxClasses["view.data.qc.List"] = view_data_qc_List;
view_data_qc_List.__name__ = "view.data.qc.List";
view_data_qc_List.mapStateToProps = function(aState) {
	haxe_Log.trace(aState.dataStore.qcData.keys().next(),{ fileName : "src/view/data/qc/List.hx", lineNumber : 105, className : "view.data.qc.List", methodName : "mapStateToProps"});
	var ks = aState.dataStore.qcData.keys();
	var _g = [];
	while(ks.hasNext()) _g.push(ks.next());
	haxe_Log.trace("aState.dataStore.qcData.keys:" + _g.join("|"),{ fileName : "src/view/data/qc/List.hx", lineNumber : 107, className : "view.data.qc.List", methodName : "mapStateToProps"});
	return { dataStore : aState.dataStore, userState : aState.userState};
};
view_data_qc_List.__super__ = React_Component;
view_data_qc_List.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,dataDisplay: null
	,formApi: null
	,formBuilder: null
	,formFields: null
	,fieldNames: null
	,baseForm: null
	,contact: null
	,dbData: null
	,dbMetaData: null
	,'delete': function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/data/qc/List.hx", lineNumber : 121, className : "view.data.qc.List", methodName : "delete"});
		var data = this.state.formApi.selectedRowsMap(this.state);
	}
	,get: function(filter) {
		var _gthis = this;
		var offset = 0;
		if(filter != null && filter.page != null) {
			haxe_Log.trace(filter,{ fileName : "src/view/data/qc/List.hx", lineNumber : 130, className : "view.data.qc.List", methodName : "get"});
			offset = this.props.limit * filter.page | 0;
			Reflect.deleteField(filter,"page");
		}
		filter = shared_Utils.extend(filter,this.props.match.params.id != null ? { id : this.props.match.params.id, mandator : this.props.userState.dbUser.mandator} : { mandator : this.props.userState.dbUser.mandator});
		haxe_Log.trace("hi " + Std.string(filter),{ fileName : "src/view/data/qc/List.hx", lineNumber : 139, className : "view.data.qc.List", methodName : "get"});
		loader_BinaryLoader.create("" + Std.string(App.config.api),{ id : this.props.userState.dbUser.id, jwt : this.props.userState.dbUser.jwt, classPath : "data.Deals", action : "getQC", viciBoxDB : true, filter : filter, dbUser : this.props.userState.dbUser, devIP : App.devIP, limit : this.props.limit, offset : offset > 0 ? offset : 0, order : "last_local_call_time", table : "vicidial_list"},function(data) {
			haxe_Log.trace(data.dataInfo == null ? "null" : haxe_ds_StringMap.stringify(data.dataInfo.h),{ fileName : "src/view/data/qc/List.hx", lineNumber : 159, className : "view.data.qc.List", methodName : "get"});
			haxe_Log.trace(data.dataParams == null ? "null" : haxe_ds_StringMap.stringify(data.dataParams.h),{ fileName : "src/view/data/qc/List.hx", lineNumber : 160, className : "view.data.qc.List", methodName : "get"});
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/data/qc/List.hx", lineNumber : 161, className : "view.data.qc.List", methodName : "get"});
			if(data.dataRows.length > 0) {
				var h = data.dataErrors.h;
				var inlStringMapKeyIterator_h = h;
				var inlStringMapKeyIterator_keys = Object.keys(h);
				var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
				var inlStringMapKeyIterator_current = 0;
				haxe_Log.trace(inlStringMapKeyIterator_current >= inlStringMapKeyIterator_length ? "Y" : "N",{ fileName : "src/view/data/qc/List.hx", lineNumber : 164, className : "view.data.qc.List", methodName : "get"});
				var h = data.dataErrors.h;
				var inlStringMapKeyIterator_h = h;
				var inlStringMapKeyIterator_keys = Object.keys(h);
				var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
				var inlStringMapKeyIterator_current = 0;
				if(inlStringMapKeyIterator_current >= inlStringMapKeyIterator_length) {
					_gthis.setState({ dbTable : data.dataRows, dataCount : Std.parseInt(data.dataInfo.h["count"]), pageCount : Math.ceil(Std.parseInt(data.dataInfo.h["count"]) / _gthis.props.limit)});
					var p = App.store.dispatch(redux_Action.map(action_DataAction.QCsLoaded(data)));
				} else {
					var _gthis1 = _gthis;
					var _g = new haxe_ds_StringMap();
					_g.h["loadResult"] = "Kein Ergebnis";
					_g.h["closeAfter"] = -1;
					_gthis1.setState({ values : _g});
				}
			}
		});
	}
	,edit: function(ev) {
		haxe_Log.trace(this.state.selectedRows.length,{ fileName : "src/view/data/qc/List.hx", lineNumber : 188, className : "view.data.qc.List", methodName : "edit"});
		haxe_Log.trace(Reflect.fields(ev),{ fileName : "src/view/data/qc/List.hx", lineNumber : 189, className : "view.data.qc.List", methodName : "edit"});
	}
	,restore: function() {
		var _gthis = this;
		haxe_Log.trace(Reflect.fields(this.props.dataStore),{ fileName : "src/view/data/qc/List.hx", lineNumber : 193, className : "view.data.qc.List", methodName : "restore"});
		if(this.props.dataStore != null && this.props.dataStore.contactsDbData != null) {
			this.setState({ dbTable : this.props.dataStore.contactsDbData.dataRows, dataCount : Std.parseInt(this.props.dataStore.contactsDbData.dataInfo.h["count"]), pageCount : Math.ceil(Std.parseInt(this.props.dataStore.contactsDbData.dataInfo.h["count"]) / this.props.limit)},function() {
				haxe_Log.trace(_gthis.state.dbTable,{ fileName : "src/view/data/qc/List.hx", lineNumber : 203, className : "view.data.qc.List", methodName : "restore"});
				_gthis.props.history.push("" + _gthis.props.match.path.split(":section")[0] + "List/get/" + (_gthis.props.match.params.id != null ? _gthis.props.match.params.id : ""));
			});
		} else {
			this.props.history.push("" + this.props.match.path.split(":section")[0] + "List/get/" + (this.props.match.params.id != null ? this.props.match.params.id : ""));
		}
	}
	,selectionClear: function() {
		var match = react_ReactUtil.copy(this.props.match);
		match.params.action = "get";
		haxe_Log.trace(this.state.dbTable.length,{ fileName : "src/view/data/qc/List.hx", lineNumber : 224, className : "view.data.qc.List", methodName : "selectionClear"});
		this.props.select(0,null,this,"UnselectAll");
		var s_cells = window.document.querySelectorAll(".tabComponentForm .gridItem.selected");
		haxe_Log.trace(s_cells.length,{ fileName : "src/view/data/qc/List.hx", lineNumber : 227, className : "view.data.qc.List", methodName : "selectionClear"});
		var _g = 0;
		var _g1 = s_cells.length;
		while(_g < _g1) {
			var i = _g++;
			var s_cell = js_Boot.__cast(s_cells.item(i) , HTMLDivElement);
			if(s_cell.classList.contains("selected")) {
				haxe_Log.trace("unselect:" + s_cell.dataset.id,{ fileName : "src/view/data/qc/List.hx", lineNumber : 231, className : "view.data.qc.List", methodName : "selectionClear"});
				s_cell.classList.remove("selected");
			}
		}
	}
	,componentDidMount: function() {
		var _g = new haxe_ds_StringMap();
		var _g1 = new haxe_ds_StringMap();
		var value = new haxe_ds_StringMap();
		_g1.h["contacts"] = value;
		var value = { source : _g1, view : new haxe_ds_StringMap()};
		_g.h["get"] = value;
		this.dataAccess = _g;
		this.get();
		haxe_Log.trace(this.state.uid,{ fileName : "src/view/data/qc/List.hx", lineNumber : 253, className : "view.data.qc.List", methodName : "componentDidMount"});
	}
	,renderResults: function() {
		haxe_Log.trace(this.props.match.params.section + (":" + this.props.match.params.action + "::") + Std.string(this.state.dbTable != null),{ fileName : "src/view/data/qc/List.hx", lineNumber : 271, className : "view.data.qc.List", methodName : "renderResults"});
		var pState = this.props.parentComponent.state;
		haxe_Log.trace(this.state.dbTable.length,{ fileName : "src/view/data/qc/List.hx", lineNumber : 274, className : "view.data.qc.List", methodName : "renderResults"});
		haxe_Log.trace(this.state.loading,{ fileName : "src/view/data/qc/List.hx", lineNumber : 278, className : "view.data.qc.List", methodName : "renderResults"});
		if(this.state.dbTable.length == 0) {
			return this.state.formApi.renderWait();
		}
		if(this.props.match.params.action == "get") {
			return React.createElement(view_grid_Grid._renderWrapper,Object.assign({ },this.props,{ id : "contactListQC", data : this.state.dbTable, findBy : "lead_id", doubleClickAction : "update", dataState : this.dataDisplay.h["qcList"], parentComponent : this, className : "is-striped is-hoverable", fullWidth : true}));
		} else {
			return null;
		}
	}
	,getCellData: function(cP) {
		haxe_Log.trace(cP,{ fileName : "src/view/data/qc/List.hx", lineNumber : 298, className : "view.data.qc.List", methodName : "getCellData"});
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.section,{ fileName : "src/view/data/qc/List.hx", lineNumber : 304, className : "view.data.qc.List", methodName : "render"});
		var tmp = this.state.formApi;
		var tmp1 = react_ReactType.fromString("form");
		var tmp2 = this.renderResults();
		return tmp.render(React.createElement(tmp1,{ className : "tabComponentForm"},tmp2));
	}
	,componentWillUnmount: function() {
		haxe_Log.trace("...",{ fileName : "src/view/data/qc/List.hx", lineNumber : 313, className : "view.data.qc.List", methodName : "componentWillUnmount"});
	}
	,updateMenu: function(viewClassPath) {
		var sideMenu = this.state.sideMenu;
		haxe_Log.trace(sideMenu.section,{ fileName : "src/view/data/qc/List.hx", lineNumber : 319, className : "view.data.qc.List", methodName : "updateMenu"});
		var _g = 0;
		var _g1 = sideMenu.menuBlocks.h["List"].items;
		while(_g < _g1.length) {
			var mI = _g1[_g];
			++_g;
			var _g2 = mI.action;
			if(_g2 != null) {
				switch(_g2) {
				case "delete":case "update":
					mI.disabled = this.state.selectedRows.length == 0;
					break;
				default:
				}
			}
		}
		return sideMenu;
	}
	,__class__: view_data_qc_List
});
var view_grid_Grid = function(props) {
	React_Component.call(this,props);
	this.headerUpdated = false;
	this.gridRef = React.createRef();
	this.headerRef = React.createRef();
	this.visibleColumns = 0;
	this.fieldNames = [];
	var h = props.dataState.columns.h;
	var k_h = h;
	var k_keys = Object.keys(h);
	var k_length = k_keys.length;
	var k_current = 0;
	while(k_current < k_length) {
		var k = k_keys[k_current++];
		this.fieldNames.push(k);
	}
	this.state = { _prevent : false, _selecting : false, selectedRow : null, selectedRows : new haxe_ds_IntMap(), _rowCells : [], _selectedCells : []};
};
$hxClasses["view.grid.Grid"] = view_grid_Grid;
view_grid_Grid.__name__ = "view.grid.Grid";
view_grid_Grid.__super__ = React_Component;
view_grid_Grid.prototype = $extend(React_Component.prototype,{
	fieldNames: null
	,gridRef: null
	,headerRef: null
	,gridStyle: null
	,visibleColumns: null
	,headerUpdated: null
	,render: function() {
		if(this.props.data == null || this.props.data.length == 0) {
			var tmp = react_ReactType.fromString("section");
			var tmp1 = react_ReactType.fromString("div");
			return React.createElement(tmp,{ className : "hero is-alt"},React.createElement(tmp1,{ className : "hero-body"},React.createElement(react_ReactType.fromString("div"),{ className : "loader", style : { width : "3rem", height : "3rem", margin : "auto", borderWidth : "0.58rem"}})));
		}
		var headerRows = this.renderHeaderDisplay();
		if(this.props.scrollHeight > 0) {
			var tmp = react_ReactType.fromString("div");
			var tmp1 = react_ReactType.fromString("div");
			var tmp2 = React.createElement(react_ReactType.fromString("div"),{ key : "caption", className : "g_caption", style : null},this.props.title);
			var tmp3 = react_ReactType.fromString("div");
			var tmp4 = { key : "grid_list" + this.props.id, ref : this.gridRef, className : "grid_scroll_box grid" + this.visibleColumns + "c", id : this.props.id};
			var tmp5 = this.renderRows();
			var tmp6 = React.createElement(tmp1,{ className : "rounded_box"},tmp2,React.createElement(tmp3,tmp4,headerRows,tmp5));
			var tmp1 = this.renderPager(this.props.parentComponent);
			return React.createElement(tmp,{ className : "grid_container"},tmp6,tmp1);
		} else {
			var tmp = react_ReactType.fromString("div");
			var tmp1 = React.createElement(react_ReactType.fromString("div"),{ key : "grid_list" + this.props.id, ref : this.gridRef, className : "grid_box grid" + this.visibleColumns + "c", id : this.props.id},this.renderTitle(this.visibleColumns),headerRows,this.renderRows());
			var tmp2 = this.renderPager(this.props.parentComponent);
			return React.createElement(tmp,{ className : "grid_container"},tmp1,tmp2);
		}
	}
	,renderPager: function(comp) {
		var f = comp.state.pageCount;
		if(isNaN(f) || comp.state.pageCount < 2) {
			return null;
		}
		var tmp = react_ReactType.fromString("div");
		var tmp1 = react_ReactType.fromString("nav");
		return React.createElement(tmp,{ id : "pct", className : "paginationContainer"},React.createElement(tmp1,{ },React.createElement(react_ReactType.fromComp(react_ReactPaginate),{ previousLabel : "<", breakLinkClassName : "pagination-link", pageLinkClassName : "pagination-link", nextLinkClassName : "pagination-next", previousLinkClassName : "pagination-previous", nextLabel : ">", breakLabel : "...", breakClassName : "break-me", pageCount : comp.state.pageCount, marginPagesDisplayed : 2, pageRangeDisplayed : 5, onPageChange : function(data) {
			haxe_Log.trace("" + Std.string(comp.props.match.params.action) + "  " + data.selected,{ fileName : "src/view/grid/Grid.hx", lineNumber : 149, className : "view.grid.Grid", methodName : "renderPager"});
			var fun = Reflect.field(comp,comp.props.match.params.action);
			if(Reflect.isFunction(fun)) {
				fun.apply(comp,[{ page : data.selected}]);
			}
		}, containerClassName : "pagination is-small", subContainerClassName : "pages pagination", activeLinkClassName : "is-current"})));
	}
	,renderTitle: function(vcol) {
		if(vcol == null) {
			vcol = 2;
		}
		if(this.props.title == null) {
			return null;
		}
		++vcol;
		return React.createElement(react_ReactType.fromString("div"),{ key : "caption", className : "g_caption", style : { gridColumn : "1/" + vcol}},this.props.title);
	}
	,renderHeaderDisplay: function() {
		if(this.props.dataState == null) {
			return null;
		}
		var headerRow = [];
		this.visibleColumns = 0;
		this.gridStyle = "";
		var h = this.props.dataState.columns.h;
		var field_h = h;
		var field_keys = Object.keys(h);
		var field_length = field_keys.length;
		var field_current = 0;
		while(field_current < field_length) {
			var field = field_keys[field_current++];
			var hC = this.props.dataState.columns.h[field];
			if(hC.show == false) {
				continue;
			}
			this.visibleColumns++;
			this.gridStyle += hC.flexGrow != null ? " " + hC.flexGrow + "fr" : " max-content";
			headerRow.push(React.createElement(react_ReactType.fromString("span"),{ key : field + "header", className : "gridHeadItem " + (hC.headerClassName != null ? hC.headerClassName : hC.className != null ? hC.className : "")},hC.label != null ? hC.label : hC.name,React.createElement(react_ReactType.fromString("span"),{ className : "sort-box fa fa-sort"})));
		}
		haxe_Log.trace("" + this.visibleColumns + " " + this.gridStyle,{ fileName : "src/view/grid/Grid.hx", lineNumber : 195, className : "view.grid.Grid", methodName : "renderHeaderDisplay"});
		return headerRow;
	}
	,map2DataCell: function(rdMap,fN,column,row,rowClass) {
		var columnDataState = this.props.dataState.columns.h[fN];
		if(rdMap.h[fN] == "") {
			var v = null;
			rdMap.h[fN] = v;
		}
		return { cellFormat : columnDataState.cellFormat, className : columnDataState.className == null ? rowClass : Std.string(columnDataState.className) + " " + rowClass, data : rdMap.h[fN], dataDisplay : columnDataState.cellFormat != null ? columnDataState.cellFormat(rdMap.h[fN]) : rdMap.h[fN], id : rdMap.h["id"] == null && this.props.findBy != null ? rdMap.h[this.props.findBy] : rdMap.h["id"], name : fN, pos : { column : column, row : row}, show : columnDataState.show != false, title : rdMap.h["title"]};
	}
	,renderCells: function(rdMap,row) {
		var _gthis = this;
		var column = 0;
		var id = this.props.findBy != null && this.props.findBy.length > 0 ? this.props.findBy : "id";
		var rowClass = row % 2 == 0 ? "gridItem even" : "gridItem odd";
		if(this.state.selectedRows.h.hasOwnProperty(rdMap.h[id])) {
			rowClass += " selected";
		}
		var _this = this.fieldNames;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = _gthis.map2DataCell(rdMap,_this[i],column++,row,rowClass);
		}
		var cells = result;
		var rCs = [];
		var _g = 0;
		while(_g < cells.length) {
			var cD = cells[_g];
			++_g;
			if(this.props.dataState.titleMap != null) {
				var h = this.props.dataState.titleMap.h;
				var _g_h = h;
				var _g_keys = Object.keys(h);
				var _g_length = _g_keys.length;
				var _g_current = 0;
				while(_g_current < _g_length) {
					var key = _g_keys[_g_current++];
					var _g1_key = key;
					var _g1_value = _g_h[key];
					var key1 = _g1_key;
					var val = _g1_value;
					if(cD.name == val && Object.prototype.hasOwnProperty.call(rdMap.h,key1)) {
						cD.title = rdMap.h[key1];
					}
				}
			}
		}
		var _g = 0;
		while(_g < cells.length) {
			var cD = cells[_g];
			++_g;
			if(cD.show) {
				rCs.push(!this.props.readOnly ? React.createElement(react_ReactType.fromString("div"),{ key : cD.id + "_" + cD.name, className : cD.className, 'data-value' : cD.data, 'data-id' : cD.id, 'data-name' : cD.name, title : cD.title, 'data-gridpos' : cD.pos.row + "_" + cD.pos.column, onClick : $bind(this,this.select), onDoubleClick : $bind(this,this.editRow)},cD.dataDisplay == null || cD.dataDisplay == "" ? React.createElement(react_ReactType.fromString("span"),{ }," ") : cD.dataDisplay) : React.createElement(react_ReactType.fromString("div"),{ key : cD.id + "_" + cD.name, className : cD.className, 'data-value' : cD.data, 'data-id' : cD.id, 'data-name' : cD.name, title : cD.title, 'data-gridpos' : cD.pos.row + "_" + cD.pos.column},cD.dataDisplay == null || cD.dataDisplay == "" ? React.createElement(react_ReactType.fromString("span"),{ }," ") : cD.dataDisplay));
			}
		}
		return rCs;
	}
	,renderRows: function(dRows) {
		if(dRows == null) {
			dRows = this.props.data;
		}
		var dRs = [];
		var row = 0;
		var _g = 0;
		while(_g < dRows.length) {
			var dR = dRows[_g];
			++_g;
			dRs.push(this.renderCells(dR,row++));
		}
		return dRs;
	}
	,componentDidMount: function() {
		if(this.gridRef == null || react_ReactRef.get_current(this.gridRef) == null) {
			var c = js_Boot.getClass(this.props.parentComponent);
			haxe_Log.trace(c.__name__,{ fileName : "src/view/grid/Grid.hx", lineNumber : 291, className : "view.grid.Grid", methodName : "componentDidMount"});
			return;
		}
		this.props.parentComponent.state.dataGrid = this;
		var grid = react_ReactRef.get_current(this.gridRef);
		grid.style.setProperty("grid-template-columns",this.gridStyle);
	}
	,componentDidUpdate: function(prevProps,prevState) {
		haxe_Log.trace(Std.string(this.headerUpdated) + ":" + Std.string(this.headerRef) + " cmp state:" + (prevState == this.state ? "Y" : "N"),{ fileName : "src/view/grid/Grid.hx", lineNumber : 302, className : "view.grid.Grid", methodName : "componentDidUpdate"});
	}
	,editRow: function(ev) {
		var _gthis = this;
		haxe_Log.trace(ev.target.nodeName,{ fileName : "src/view/grid/Grid.hx", lineNumber : 306, className : "view.grid.Grid", methodName : "editRow"});
		this.state.selectTimer.stop();
		this.state._prevent = true;
		var el = js_Boot.__cast(ev.target , HTMLElement);
		if(!el.classList.contains("selected")) {
			this.highLightRow(ev);
		}
		haxe_Timer.delay(function() {
			_gthis.state._prevent = false;
		},view_grid_Grid.clickDelay * 2);
		haxe_Log.trace(this.props.onDoubleClick,{ fileName : "src/view/grid/Grid.hx", lineNumber : 315, className : "view.grid.Grid", methodName : "editRow"});
		haxe_Log.trace("here we go :) " + this.getUrl(el.dataset.action,"Edit"),{ fileName : "src/view/grid/Grid.hx", lineNumber : 316, className : "view.grid.Grid", methodName : "editRow"});
		if(this.props.onDoubleClick != null) {
			this.props.onDoubleClick(ev);
		} else {
			var tmp = this.props.history;
			var tmp1 = this.getUrl(el.dataset.action,"Edit");
			tmp.push(tmp1,this.props.location.state);
		}
	}
	,getUrl: function(action,targetSection) {
		var match = this.props.match;
		haxe_Log.trace(match,{ fileName : "src/view/grid/Grid.hx", lineNumber : 332, className : "view.grid.Grid", methodName : "getUrl"});
		var c = js_Boot.getClass(this.props.parentComponent);
		haxe_Log.trace(c.__name__,{ fileName : "src/view/grid/Grid.hx", lineNumber : 335, className : "view.grid.Grid", methodName : "getUrl"});
		var baseUrl = match.path.split(":section")[0];
		var section = match.params.section;
		if(action == null || action == "") {
			action = this.props.doubleClickAction;
		}
		if(this.props.parentComponent.state.selectedData != null) {
			haxe_Log.trace(this.props.parentComponent.state.selectedData.toString(),{ fileName : "src/view/grid/Grid.hx", lineNumber : 343, className : "view.grid.Grid", methodName : "getUrl"});
		}
		var id = this.props.parentComponent.state.selectedData == null || action == "insert" ? "" : "/" + shared_Utils.keysList(this.props.parentComponent.state.selectedData.keys())[0];
		haxe_Log.trace(">>" + id + "<<",{ fileName : "src/view/grid/Grid.hx", lineNumber : 346, className : "view.grid.Grid", methodName : "getUrl"});
		if(id == "/undefined") {
			id = "";
		}
		return "" + baseUrl + (targetSection == null ? section : targetSection) + "/" + action + id;
	}
	,select: function(e) {
		var _gthis = this;
		haxe_Log.trace(e.target.nodeName + ":" + Std.string(this.state._prevent),{ fileName : "src/view/grid/Grid.hx", lineNumber : 354, className : "view.grid.Grid", methodName : "select"});
		e.persist();
		this.state.selectTimer = haxe_Timer.delay(function() {
			if(!_gthis.state._prevent) {
				_gthis.highLightRow(e);
			}
		},view_grid_Grid.clickDelay);
	}
	,highLightRow: function(evtOrId) {
		haxe_Log.trace("evtOrId",{ fileName : "src/view/grid/Grid.hx", lineNumber : 364, className : "view.grid.Grid", methodName : "highLightRow"});
		if(this.state._selecting) {
			return;
		}
		this.state._selecting = true;
		var el = typeof(evtOrId) == "number" && ((evtOrId | 0) === evtOrId) ? window.document.querySelector(".gridItem[data-id=\"" + Std.string(evtOrId) + "\"]") : js_Boot.__cast(evtOrId._targetInst.stateNode , HTMLElement);
		var rN = Std.parseInt(el.dataset.id);
		var rowCells = window.document.querySelectorAll(".gridItem[data-id=\"" + el.dataset.id + "\"]");
		var rowEls = Array.from(rowCells);
		var selectedNow = this.state.selectedRows.copy();
		haxe_Log.trace(el.dataset.id + ":" + Std.string(this.state._selecting) + " ctrlKey:" + Std.string(evtOrId.ctrlKey),{ fileName : "src/view/grid/Grid.hx", lineNumber : 376, className : "view.grid.Grid", methodName : "highLightRow"});
		if(!evtOrId.ctrlKey && !evtOrId.shiftKey) {
			if(selectedNow.h.hasOwnProperty(rN)) {
				this.setState({ selectedRows : new haxe_ds_IntMap()});
				this.state._selecting = false;
				var tmp = this.props.parentComponent.props.select;
				var el1 = el.dataset.id;
				var _g = new haxe_ds_StringMap();
				var key = el.dataset.id;
				var value = this.getRowData(rowEls);
				_g.h[key] = value;
				tmp(el1,_g,this.props.parentComponent,"Unselect");
				return;
			} else {
				var _g = new haxe_ds_IntMap();
				_g.h[rN] = true;
				selectedNow = _g;
				haxe_Log.trace(selectedNow,{ fileName : "src/view/grid/Grid.hx", lineNumber : 390, className : "view.grid.Grid", methodName : "highLightRow"});
			}
		}
		this.setState({ selectedRows : selectedNow});
		haxe_Log.trace(this.props.parentComponent.state.uid,{ fileName : "src/view/grid/Grid.hx", lineNumber : 398, className : "view.grid.Grid", methodName : "highLightRow"});
		var match = react_router_ReactRouter.matchPath($global.location.pathname,{ });
		var c = js_Boot.getClass(this.props.parentComponent);
		haxe_Log.trace(c.__name__,{ fileName : "src/view/grid/Grid.hx", lineNumber : 401, className : "view.grid.Grid", methodName : "highLightRow"});
		var tmp = this.props.parentComponent.props.select;
		var el1 = el.dataset.id;
		var _g = new haxe_ds_StringMap();
		var key = el.dataset.id;
		var value = this.getRowData(rowEls);
		_g.h[key] = value;
		tmp(el1,_g,this.props.parentComponent,"One");
		this.state._selecting = false;
	}
	,showDims: function(ref) {
		var i = 0;
		var s = 0;
		var cells = ref.current != null ? ref.current.cells : ref.cells;
		var _g = 0;
		while(_g < cells.length) {
			var cell = cells[_g];
			++_g;
			haxe_Log.trace(cell.getBoundingClientRect().toJSON(),{ fileName : "src/view/grid/Grid.hx", lineNumber : 415, className : "view.grid.Grid", methodName : "showDims"});
			s += cell.getBoundingClientRect().width;
		}
		haxe_Log.trace(" sum:" + s,{ fileName : "src/view/grid/Grid.hx", lineNumber : 418, className : "view.grid.Grid", methodName : "showDims"});
	}
	,nodeDims: function(n) {
		var i = 0;
		var s = 0;
		var cells = n.childNodes;
		var _g = 0;
		while(_g < cells.length) {
			var cell = cells[_g];
			++_g;
			var dRect = (js_Boot.__cast(cell , HTMLElement)).getBoundingClientRect().toJSON();
			haxe_Log.trace(dRect,{ fileName : "src/view/grid/Grid.hx", lineNumber : 429, className : "view.grid.Grid", methodName : "nodeDims"});
			s += (js_Boot.__cast(cell , HTMLElement)).getBoundingClientRect().width;
		}
		haxe_Log.trace(" sum:" + s,{ fileName : "src/view/grid/Grid.hx", lineNumber : 433, className : "view.grid.Grid", methodName : "nodeDims"});
	}
	,getRowData: function(rCs) {
		if(rCs.length == 0) {
			return null;
		}
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < rCs.length) {
			var el = rCs[_g1];
			++_g1;
			_g.h[el.dataset.name] = el.dataset.value;
		}
		return _g;
	}
	,__class__: view_grid_Grid
});
var view_shared_DateTime = function(props,context) {
	React_Component.call(this,props,context);
};
$hxClasses["view.shared.DateTime"] = view_shared_DateTime;
view_shared_DateTime.__name__ = "view.shared.DateTime";
view_shared_DateTime.__super__ = React_Component;
view_shared_DateTime.prototype = $extend(React_Component.prototype,{
	render: function() {
		return React.createElement(react_ReactType.fromFunctionWithProps($bind(this,this.DateDisplay)),{ className : "column flex-end", intl : this.props.intl, year : "numeric", month : "numeric", day : "numeric", hour : "numeric", minute : "numeric"});
	}
	,DateDisplay: function(props) {
		var now = props.intl.formatDate(new Date(),{ year : props.year, month : props.month, day : props.day, hour : props.hour, minute : props.minute});
		now = StringTools.replace(now,",","");
		return React.createElement(react_ReactType.fromString("span"),{ className : "column flex-end"},now);
	}
	,__class__: view_shared_DateTime
});
var view_shared_Format = function() { };
$hxClasses["view.shared.Format"] = view_shared_Format;
view_shared_Format.__name__ = "view.shared.Format";
view_shared_Format.formatBool = function(v) {
	if(v) {
		return "Y";
	} else {
		return "N";
	}
};
view_shared_Format.formatElementSelection = function(v) {
	if(v) {
		return "Y";
	} else {
		return "N";
	}
};
view_shared_Format.formatPhone = function(v) {
	if(new EReg("^(+|0)","").match(v)) {
		return v;
	} else {
		return "0" + v;
	}
};
var view_shared_Menu = function(props) {
	React_Component.call(this,props);
	haxe_Log.trace(Reflect.fields(props),{ fileName : "src/view/shared/Menu.hx", lineNumber : 119, className : "view.shared.Menu", methodName : "new"});
	var h = props.menuBlocks.h;
	var inlStringMapValueIterator_h = h;
	var inlStringMapValueIterator_keys = Object.keys(h);
	var inlStringMapValueIterator_length = inlStringMapValueIterator_keys.length;
	var inlStringMapValueIterator_current = 0;
	haxe_Log.trace(Reflect.fields(inlStringMapValueIterator_h[inlStringMapValueIterator_keys[inlStringMapValueIterator_current++]]),{ fileName : "src/view/shared/Menu.hx", lineNumber : 121, className : "view.shared.Menu", methodName : "new"});
	var mbs = new haxe_ds__$StringMap_StringMapValueIterator(props.menuBlocks.h);
	while(mbs.hasNext()) haxe_Log.trace(mbs.next().label,{ fileName : "src/view/shared/Menu.hx", lineNumber : 124, className : "view.shared.Menu", methodName : "new"});
	var items = props.menuBlocks.h[props.section].items;
	props.parentComponent.state.sideMenuInstance = this;
	this.menuRef = React.createRef();
	this.hasFindForm = false;
	this.state = { hidden : props.hidden, items : new haxe_ds_StringMap(), menuBlockActive : this.getMBA(mbs)};
};
$hxClasses["view.shared.Menu"] = view_shared_Menu;
view_shared_Menu.__name__ = "view.shared.Menu";
view_shared_Menu.printProps = function(props) {
	var dump = "";
	var _g = 0;
	var _g1 = Reflect.fields(props);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		if(f == "parentComponent") {
			var o = props.parentComponent;
			dump += "parentComponent.props.match.url:" + o.props.match.url + "\n";
		} else {
			dump += f + ":" + Std.string(Reflect.field(props,f)) + "\n";
		}
	}
	return dump;
};
view_shared_Menu.mapDispatchToProps = function(dispatch) {
	return { switchSection : function(url) {
		haxe_Log.trace(url,{ fileName : "src/view/shared/Menu.hx", lineNumber : 86, className : "view.shared.Menu", methodName : "mapDispatchToProps"});
		dispatch(redux_Action.map(action_LocationAction.Push(url)));
	}};
};
view_shared_Menu.mapStateToProps = function(state) {
	haxe_Log.trace(Reflect.fields(state).join("|"),{ fileName : "src/view/shared/Menu.hx", lineNumber : 96, className : "view.shared.Menu", methodName : "mapStateToProps"});
	return { };
};
view_shared_Menu.__super__ = React_Component;
view_shared_Menu.prototype = $extend(React_Component.prototype,{
	menuRef: null
	,aW: null
	,hasFindForm: null
	,getMBA: function(mbs) {
		var mB = null;
		while(mbs.hasNext()) {
			mB = mbs.next();
			if(mB.isActive) {
				return mB.label;
			}
		}
		return this.props.section;
	}
	,enableItems: function(section,ids,enable) {
		if(enable == null) {
			enable = true;
		}
		haxe_Log.trace(section + ":" + ids.join("|"),{ fileName : "src/view/shared/Menu.hx", lineNumber : 155, className : "view.shared.Menu", methodName : "enableItems"});
		if(Object.prototype.hasOwnProperty.call(this.props.menuBlocks.h,section)) {
			var mB = this.props.menuBlocks.h[section];
			var _g = 0;
			var _g1 = mB.items;
			while(_g < _g1.length) {
				var mI = _g1[_g];
				++_g;
				var _g2 = 0;
				while(_g2 < ids.length) {
					var id = ids[_g2];
					++_g2;
					if(mI.id == id) {
						this.enableBlockItem(section,id,enable);
					}
				}
			}
		}
	}
	,enableBlockItem: function(block,id,enable) {
		if(enable == null) {
			enable = true;
		}
		if(!Object.prototype.hasOwnProperty.call(this.props.menuBlocks.h,block) || !Object.prototype.hasOwnProperty.call(this.state.items.h,id)) {
			return null;
		}
		var item = shared_Utils.getByKey(this.props.menuBlocks.h[block].items,id);
		if(item == null) {
			return null;
		}
		if(item.formField != null && item.formField.submit != null) {
			var submit = window.document.querySelector("#" + (item.id + "_submit"));
			if(enable) {
				submit.removeAttribute("disabled");
				submit.addEventListener("click",item.handler);
			} else {
				submit.setAttribute("disabled",enable ? "false" : "true");
			}
		}
		item.disabled = !enable;
		return !item.disabled;
	}
	,enableItem: function(id,enable) {
		if(enable == null) {
			enable = true;
		}
		haxe_Log.trace("" + id + " " + (enable == null ? "null" : "" + enable),{ fileName : "src/view/shared/Menu.hx", lineNumber : 199, className : "view.shared.Menu", methodName : "enableItem"});
		if(!Object.prototype.hasOwnProperty.call(this.state.items.h,id)) {
			return null;
		}
		var item = this.state.items.h[id];
		if(item.formField != null && item.formField.submit != null) {
			haxe_Log.trace("looking4:#" + (item.id + "_submit"),{ fileName : "src/view/shared/Menu.hx", lineNumber : 204, className : "view.shared.Menu", methodName : "enableItem"});
			var submit = window.document.querySelector("#" + (item.id + "_submit"));
			if(enable) {
				submit.removeAttribute("disabled");
				submit.addEventListener("click",item.handler);
			} else {
				submit.setAttribute("disabled",enable ? "false" : "true");
			}
			haxe_Log.trace(item.handler,{ fileName : "src/view/shared/Menu.hx", lineNumber : 212, className : "view.shared.Menu", methodName : "enableItem"});
		}
		item.disabled = !enable;
		haxe_Log.trace("" + id + ": " + (item.disabled == null ? "null" : "" + item.disabled),{ fileName : "src/view/shared/Menu.hx", lineNumber : 216, className : "view.shared.Menu", methodName : "enableItem"});
		return !item.disabled;
	}
	,clear: function(evt) {
		evt.preventDefault();
		var form = evt.target.form;
		form.reset();
	}
	,find: function(evt) {
		evt.preventDefault();
		haxe_Log.trace(this.props.menuBlocks.h[this.props.section].dataClassPath,{ fileName : "src/view/shared/Menu.hx", lineNumber : 247, className : "view.shared.Menu", methodName : "find"});
		haxe_Log.trace(this.props.menuBlocks.h[this.props.section],{ fileName : "src/view/shared/Menu.hx", lineNumber : 248, className : "view.shared.Menu", methodName : "find"});
		var form = evt.target.form;
		haxe_Log.trace(form.dataset,{ fileName : "src/view/shared/Menu.hx", lineNumber : 256, className : "view.shared.Menu", methodName : "find"});
		haxe_Log.trace(Reflect.fields(form.dataset).join("|"),{ fileName : "src/view/shared/Menu.hx", lineNumber : 257, className : "view.shared.Menu", methodName : "find"});
		var fD = new FormData(form);
		if(Reflect.isFunction(Reflect.field(this.props.parentComponent,"find"))) {
			return this.props.parentComponent.find(fD);
		}
		fD.forEach(function(d) {
			haxe_Log.trace(d,{ fileName : "src/view/shared/Menu.hx", lineNumber : 265, className : "view.shared.Menu", methodName : "find"});
		});
		var inputs = window.document.querySelectorAll(".formRow input");
		haxe_Log.trace(inputs.length,{ fileName : "src/view/shared/Menu.hx", lineNumber : 269, className : "view.shared.Menu", methodName : "find"});
		var el;
		var param = { };
		var _g = 0;
		var _g1 = inputs.length;
		while(_g < _g1) {
			var i = _g++;
			el = js_Boot.__cast(inputs[i] , HTMLInputElement);
			haxe_Log.trace(i + ":" + el.name + "::" + el.value,{ fileName : "src/view/shared/Menu.hx", lineNumber : 275, className : "view.shared.Menu", methodName : "find"});
			if(el.value != "") {
				el.value = this.findFormat(el.name,el.value);
			}
			if(StringTools.trim(el.value) != "") {
				param[el.name] = this.matchFormat(el.name,el.value);
			}
		}
		return this.props.parentComponent.get(this.buildDataSource(view_shared_io_BaseForm.filter(this.props.parentComponent.props,param)));
	}
	,buildDataSource: function(param) {
		var _g = new haxe_ds_StringMap();
		var key = this.props.menuBlocks.h[this.props.section].dbTableName;
		var _g1 = new haxe_ds_StringMap();
		_g1.h["alias"] = this.props.menuBlocks.h[this.props.section].alias;
		_g1.h["fields"] = "";
		_g.h[key] = _g1;
		var dS = _g;
		var _g = 0;
		var _g1 = this.props.menuBlocks.h[this.props.section].items;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			if(item.formField != null) {
				if(item.formField.dbTableName != null) {
					if(Object.prototype.hasOwnProperty.call(dS.h,item.formField.dbTableName)) {
						var v = Std.string(dS.h[item.formField.dbTableName].h["fields"]) + "," + item.formField.name;
						dS.h[item.formField.dbTableName].h["fields"] = v;
					} else {
						var key = item.formField.dbTableName;
						var _g2 = new haxe_ds_StringMap();
						_g2.h["alias"] = item.formField.alias;
						_g2.h["fields"] = item.formField.name;
						dS.h[key] = _g2;
					}
				} else {
					var v1 = dS.h[this.props.menuBlocks.h[this.props.section].dbTableName].h["fields"] == "" ? item.formField.name : Std.string(dS.h[this.props.menuBlocks.h[this.props.section].dbTableName].h["fields"]) + "," + item.formField.name;
					dS.h[this.props.menuBlocks.h[this.props.section].dbTableName].h["fields"] = v1;
				}
			}
		}
		return view_shared_io_BaseForm.copy(param,{ dataSource : dS});
	}
	,fieldAlias: function(name) {
		if(name.indexOf(".") > -1) {
			return name;
		}
		var _g = 0;
		var _g1 = this.props.menuBlocks.h[this.props.section].items;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			if(item.formField.name == name) {
				return (item.formField.alias == null ? this.props.menuBlocks.h[this.props.section].alias : item.formField.alias) + ("." + name);
			}
		}
		return this.props.menuBlocks.h[this.props.section].alias + ("." + name);
	}
	,findFormat: function(name,v) {
		var items = this.props.menuBlocks.h[this.props.section].items;
		if(items == null) {
			haxe_Log.trace(name,{ fileName : "src/view/shared/Menu.hx", lineNumber : 333, className : "view.shared.Menu", methodName : "findFormat"});
			return v;
		}
		var _g = 0;
		while(_g < items.length) {
			var item = items[_g];
			++_g;
			if(item.formField != null && item.formField.findFormat != null && item.formField.name == name) {
				haxe_Log.trace("" + name + ".findFormat returned:" + Std.string(item.formField.findFormat(v)),{ fileName : "src/view/shared/Menu.hx", lineNumber : 339, className : "view.shared.Menu", methodName : "findFormat"});
				return item.formField.findFormat(v);
			}
		}
		return v;
	}
	,matchFormat: function(name,v) {
		var items = this.props.menuBlocks.h[this.props.section].items;
		if(items == null) {
			haxe_Log.trace(name,{ fileName : "src/view/shared/Menu.hx", lineNumber : 351, className : "view.shared.Menu", methodName : "matchFormat"});
			return v;
		}
		var _g = 0;
		while(_g < items.length) {
			var item = items[_g];
			++_g;
			if(item.formField != null && item.formField.matchFormat != null && item.formField.name == name) {
				haxe_Log.trace("" + name + ".matchFormat returned:" + Std.string(item.formField.matchFormat(v)),{ fileName : "src/view/shared/Menu.hx", lineNumber : 357, className : "view.shared.Menu", methodName : "matchFormat"});
				return item.formField.matchFormat(v);
			}
		}
		return v;
	}
	,renderHeader: function() {
		var _gthis = this;
		if(Lambda.empty(this.props.menuBlocks)) {
			return null;
		}
		var header = [];
		var i = 1;
		haxe_Log.trace(this.props.section,{ fileName : "src/view/shared/Menu.hx", lineNumber : 372, className : "view.shared.Menu", methodName : "renderHeader"});
		Lambda.iter(this.props.menuBlocks,function(block) {
			var header1 = header;
			var tmp = react_ReactType.fromString("input");
			var i1 = i;
			i += 1;
			header1.push(React.createElement(tmp,{ key : i1, type : "radio", value : block.section, id : "sMenuPanel-" + (i - 1), name : "accordion-select", checked : _gthis.state.menuBlockActive == block.section, onChange : $bind(_gthis,_gthis.switchContent), 'data-section' : block.section}));
		});
		return header;
	}
	,renderPanels: function() {
		var _gthis = this;
		if(Lambda.empty(this.props.menuBlocks)) {
			return null;
		}
		var style = null;
		style = { minWidth : App.config.sidebarDims.minWidth, maxWidth : App.config.sidebarDims.maxWidth};
		style = null;
		var tmp = this.props.sameWidth && this.state.sameWidth > 0;
		var i = 1;
		var panels = [];
		Lambda.iter(this.props.menuBlocks,function(block) {
			var panels1 = panels;
			var tmp = react_ReactType.fromString("div");
			var tmp1 = { key : "pa" + i, className : "panel", style : style};
			var tmp2 = "sMenuPanel-" + i;
			var tmp3 = React.createElement(react_ReactType.fromString("label"),{ className : "panel-heading", htmlFor : tmp2},block.label);
			var tmp2 = react_ReactType.fromString("div");
			var tmp4 = "pblock" + i;
			i += 1;
			panels1.push(React.createElement(tmp,tmp1,tmp3,React.createElement(tmp2,{ id : tmp4, className : "panel-block body-" + (i - 1), children : _gthis.renderBlock(block,i)})));
		});
		return panels;
	}
	,renderBlock: function(block,i) {
		var items = this.renderItems(block);
		if(block.hasFindForm) {
			var blockData = "";
			if(block.dbTableName != null) {
				blockData = "data-tableName=" + block.dbTableName + " data-alias=" + block.alias;
			}
			return React.createElement(react_ReactType.fromString("form"),{ key : "f_" + i, 'data-db-table-name' : block.dbTableName, 'data-alias' : block.alias, name : block.dataClassPath},items);
		} else {
			return React.createElement(react_ReactType.fromComp(React_Fragment),{ },items);
		}
	}
	,renderItemForm: function(formFields) {
		var formFieldElements = [];
		var i = 0;
		var _g = 0;
		while(_g < formFields.length) {
			var fF = formFields[_g];
			++_g;
			haxe_Log.trace(fF.type,{ fileName : "src/view/shared/Menu.hx", lineNumber : 437, className : "view.shared.Menu", methodName : "renderItemForm"});
			var _g1 = fF.type;
			var tmp;
			if(_g1 == null) {
				tmp = null;
			} else {
				switch(_g1) {
				case "Checkbox":
					tmp = React.createElement(react_ReactType.fromString("span"),{ key : "l_" + i++},fF.label,React.createElement(react_ReactType.fromString("input"),{ type : "checkbox", name : fF.name}));
					break;
				case "Radio":
					var o = 0;
					var _g2 = [];
					var h = fF.options.h;
					var _g1_h = h;
					var _g1_keys = Object.keys(h);
					var _g1_length = _g1_keys.length;
					var _g1_current = 0;
					while(_g1_current < _g1_length) {
						var key = _g1_keys[_g1_current++];
						var _g2_key = key;
						var _g2_value = _g1_h[key];
						var k = _g2_key;
						var v = _g2_value;
						_g2.push(React.createElement(react_ReactType.fromString("span"),{ key : "o_" + o++},v," ",React.createElement(react_ReactType.fromString("input"),{ type : "radio", name : fF.name, value : v})));
					}
					var options = _g2;
					var tmp1 = react_ReactType.fromString("div");
					var tmp2 = i++;
					var tmp3 = React.createElement(react_ReactType.fromString("label"),{ key : "l_" + i},fF.label);
					tmp = React.createElement(tmp1,{ key : "fr_" + tmp2, className : "formRow"},tmp3,React.createElement(react_ReactType.fromString("div"),{ key : "opt_" + i, className : "formRow2"},options));
					break;
				default:
					tmp = null;
				}
			}
			formFieldElements.push(tmp);
		}
		return formFieldElements;
	}
	,renderItems: function(block) {
		var _gthis = this;
		var items = block.items;
		if(items == null || items.length == 0) {
			return null;
		}
		var B = react_ReactType.fromComp(bulma_$components_Button);
		var i = 1;
		var result = new Array(items.length);
		var _g = 0;
		var _g1 = items.length;
		while(_g < _g1) {
			var i1 = _g++;
			var item = items[i1];
			if(item.id != null && !Object.prototype.hasOwnProperty.call(_gthis.state.items.h,item.id)) {
				_gthis.state.items.h[item.id] = item;
			} else if(item.id == null && item.action != null && !Object.prototype.hasOwnProperty.call(_gthis.state.items.h,item.action)) {
				item.id = item.action;
				_gthis.state.items.h[item.id] = item;
			}
			var tmp;
			if(item.separator) {
				tmp = React.createElement(react_ReactType.fromString("hr"),{ key : "s_" + i++, className : "menuSeparator"});
			} else {
				var type = item.formField == null ? "Button" : item.formField.type == null ? "Text" : item.formField.type;
				var dis = !(item.disabled == null || item.disabled == false);
				var itemData = "";
				var itemFormField = item.formField;
				if(itemFormField != null && itemFormField.dbTableName != null) {
					itemData = "data-tableName=" + itemFormField.dbTableName + " data-alias=" + itemFormField.alias;
					haxe_Log.trace(itemFormField,{ fileName : "src/view/shared/Menu.hx", lineNumber : 493, className : "view.shared.Menu", methodName : "renderItems"});
				}
				switch(type) {
				case "Audio":
					var tmp1 = react_ReactType.fromString("div");
					var tmp2 = i++;
					var tmp3 = React.createElement(react_ReactType.fromString("div"),{ key : "l_" + i},item.label);
					var tmp4 = react_ReactType.fromString("audio");
					tmp = React.createElement(tmp1,{ key : "uf" + tmp2, id : "findForm_" + i, className : "formRow1"},tmp3,React.createElement(tmp4,{ key : "a_" + i, id : "aud_" + i, controls : "1", preload : "metadata"},React.createElement(react_ReactType.fromString("source"),{ src : item.formField.src, type : "audio/mpeg"})));
					break;
				case "Radio":
					var o = 0;
					var _g2 = [];
					var h = item.formField.options.h;
					var _g1_h = h;
					var _g1_keys = Object.keys(h);
					var _g1_length = _g1_keys.length;
					var _g1_current = 0;
					while(_g1_current < _g1_length) {
						var key = _g1_keys[_g1_current++];
						var _g2_key = key;
						var _g2_value = _g1_h[key];
						var k = _g2_key;
						var v = _g2_value;
						_g2.push(React.createElement(react_ReactType.fromString("span"),{ key : "o_" + o++},v," ",React.createElement(react_ReactType.fromString("input"),{ type : "radio", name : item.formField.name, value : v})));
					}
					var options = _g2;
					if(item.className == "formNoLabel") {
						tmp = React.createElement(react_ReactType.fromString("div"),{ key : "fr_" + i++, className : "formNoLabel"},React.createElement(react_ReactType.fromString("div"),{ },options));
					} else {
						var tmp5 = react_ReactType.fromString("div");
						var tmp6 = i++;
						var tmp7 = React.createElement(react_ReactType.fromString("label"),{ key : "l_" + i},item.label);
						tmp = React.createElement(tmp5,{ key : "fr_" + tmp6, className : "formRow"},tmp7,React.createElement(react_ReactType.fromString("div"),{ key : "opt_" + i, className : "formRow2"},options));
					}
					break;
				case "Text":
					var tmp8 = react_ReactType.fromString("div");
					var tmp9 = i++;
					var tmp10 = item.className == null ? "formRow" : item.className;
					var tmp11 = React.createElement(react_ReactType.fromString("label"),{ key : "l_" + i, htmlFor : item.formField.name},item.label);
					tmp = React.createElement(tmp8,{ key : "uf" + tmp9, id : "findForm_" + i, className : tmp10},tmp11,React.createElement(react_ReactType.fromString("input"),{ key : "i_" + i, 'data-alias' : itemFormField.alias, 'data-db-table-name' : itemFormField.dbTableName, id : item.formField.name, type : "text", name : item.formField.name, onChange : item.formField.handleChange, onKeyPress : function(e) {
						if(e.charCode == 13) {
							_gthis.find(e);
						}
					}, className : "input"}));
					break;
				case "Upload":
					haxe_Log.trace(item.handler,{ fileName : "src/view/shared/Menu.hx", lineNumber : 535, className : "view.shared.Menu", methodName : "renderItems"});
					if(item.options != null && item.options.length == 1 && item.options[0].multiple) {
						var tmp12 = react_ReactType.fromString("div");
						var tmp13 = React.createElement(react_ReactType.fromString("input"),{ id : item.formField.name, type : "file", name : item.formField.name, onChange : item.formField.handleChange, className : "fileinput", multiple : true});
						var tmp14 = React.createElement(react_ReactType.fromString("label"),{ htmlFor : item.formField.name, className : "button"},item.label);
						var item1 = item.handler;
						var item2 = item.action;
						var tmp15 = item.id + "_submit";
						tmp = React.createElement(tmp12,{ key : "up" + i++, id : "uploadForm", className : "uploadBox"},tmp13,tmp14,React.createElement(react_ReactType.fromString("button"),{ onClick : item1, 'data-action' : item2, id : tmp15, className : "act", 'data-section' : item.section, disabled : dis},item.formField.submit));
					} else {
						var tmp16 = react_ReactType.fromString("div");
						var tmp17 = React.createElement(react_ReactType.fromString("input"),{ id : item.formField.name, type : "file", name : item.formField.name, onChange : item.formField.handleChange, className : "fileinput", $multi : true});
						var tmp18 = React.createElement(react_ReactType.fromString("label"),{ htmlFor : item.formField.name, className : "button"},item.label);
						tmp = React.createElement(tmp16,{ key : "up" + i++, id : "uploadForm", className : "uploadBox"},tmp17,tmp18,React.createElement(B,{ onClick : item.handler, 'data-action' : item.action, 'data-section' : item.section, disabled : dis},item.formField.submit));
					}
					break;
				default:
					tmp = item.options != null && item.options.length > 0 ? React.createElement(react_ReactType.fromString("form"),{ key : "bu" + i++, name : item.action},_gthis.renderItemForm(item.options),React.createElement(B,{ key : "bu" + i++, onClick : item.handler == null ? _gthis.props.itemHandler : item.handler, 'data-action' : item.action, 'data-then' : item.then, 'data-section' : item.section, disabled : dis},item.label)) : React.createElement(B,{ key : "bu" + i++, onClick : item.handler == null ? _gthis.props.itemHandler : item.handler, 'data-action' : item.action, 'data-then' : item.then, 'data-section' : item.section, disabled : dis},item.label);
				}
			}
			result[i1] = tmp;
		}
		var rItems = result;
		if(block.hasFindForm) {
			rItems.push(React.createElement(B,{ key : "bu" + i++, onClick : $bind(this,this.find), 'data-action' : "find", 'data-then' : null},"Finden"));
			rItems.push(React.createElement(B,{ key : "bu" + i++, onClick : $bind(this,this.clear), 'data-action' : "clear", 'data-then' : null},"Zurücksetzen"));
		}
		return rItems;
	}
	,render: function() {
		if(this.props.menuBlocks == null) {
			return null;
		}
		var style = null;
		if(this.props.sameWidth && this.state.sameWidth == null) {
			style = { visibility : "hidden"};
		}
		style = { width : App.config.sidebarDims.maxWidth};
		var tmp = react_ReactType.fromString("div");
		var tmp1 = react_ReactType.fromString("aside");
		var tmp2 = { ref : this.menuRef, className : "menu"};
		var tmp3 = this.renderHeader();
		var tmp4 = this.renderPanels();
		return React.createElement(tmp,{ className : "sidebar is-right", style : style},React.createElement(tmp1,tmp2,tmp3,tmp4));
	}
	,switchContent: function(reactEventSource) {
		var switchSection = reactEventSource.target.getAttribute("data-section");
		var sPat = new EReg("(" + this.props.section + "_*)$","");
		if(!sPat.match(switchSection)) {
			var basePath = this.props.match.path.split("/:")[0];
			this.props.history.push("" + basePath + "/" + switchSection);
		} else {
			var mP = this.props.parentComponent.state.sideMenu;
			var this1 = mP.menuBlocks;
			var key = sPat.matched(0);
			haxe_Log.trace(this1.h[key].isActive,{ fileName : "src/view/shared/Menu.hx", lineNumber : 636, className : "view.shared.Menu", methodName : "switchContent"});
			haxe_Log.trace(sPat.matched(0),{ fileName : "src/view/shared/Menu.hx", lineNumber : 638, className : "view.shared.Menu", methodName : "switchContent"});
			var this1 = mP.menuBlocks;
			var key = sPat.matched(0);
			this1.h[key].isActive = true;
			this.setState({ menuBlockActive : switchSection});
		}
	}
	,layout: function() {
		var i = 0;
		var activePanel = null;
		this.aW = react_ReactRef.get_current(this.menuRef).getElementsByClassName("panel").item(0).offsetWidth;
		haxe_Log.trace(this.aW,{ fileName : "src/view/shared/Menu.hx", lineNumber : 653, className : "view.shared.Menu", methodName : "layout"});
	}
	,componentDidMount: function() {
		if(this.props.parentComponent.state.sideMenu == null) {
			return;
		}
		this.props.parentComponent.state.sideMenu.instance = this;
		var tmp = this.props.sameWidth && this.state.sameWidth == null;
	}
	,componentDidUpdate: function(prevProps,prevState) {
	}
	,__class__: view_shared_Menu
});
var view_shared_OneOf = {};
view_shared_OneOf.fromA = function(a) {
	return haxe_ds_Either.Left(a);
};
view_shared_OneOf.fromB = function(b) {
	return haxe_ds_Either.Right(b);
};
view_shared_OneOf.toA = function(this1) {
	if(this1._hx_index == 0) {
		var a = this1.v;
		return a;
	} else {
		return null;
	}
};
view_shared_OneOf.toB = function(this1) {
	if(this1._hx_index == 1) {
		var b = this1.v;
		return b;
	} else {
		return null;
	}
};
var view_shared_SLink = function(props) {
	React_Component.call(this,props);
};
$hxClasses["view.shared.SLink"] = view_shared_SLink;
view_shared_SLink.__name__ = "view.shared.SLink";
view_shared_SLink.mapStateToProps = function(state) {
	return { };
};
view_shared_SLink.__super__ = React_Component;
view_shared_SLink.prototype = $extend(React_Component.prototype,{
	handleClick: function(event) {
		if(event.button != null && event.button != 0 || event.metaKey || event.altKey || event.ctrlKey || event.shiftKey || event.defaultPrevented) {
			return;
		}
		event.preventDefault();
		if(this.props.onClick != null) {
			this.props.onClick(event);
		}
		haxe_Log.trace("to: " + this.props.to,{ fileName : "src/view/shared/SLink.hx", lineNumber : 51, className : "view.shared.SLink", methodName : "handleClick"});
		this.props.dispatch(redux_Action.map(action_LocationAction.Push(this.props.to)));
	}
	,render: function() {
		return React.createElement(react_ReactType.fromString("a"),{ href : this.props.to, onClick : $bind(this,this.handleClick)},this.props.children);
	}
	,__class__: view_shared_SLink
});
var view_shared_TabLink = function(props,context) {
	React_Component.call(this,props,context);
};
$hxClasses["view.shared.TabLink"] = view_shared_TabLink;
view_shared_TabLink.__name__ = "view.shared.TabLink";
view_shared_TabLink.__super__ = React_Component;
view_shared_TabLink.prototype = $extend(React_Component.prototype,{
	render: function() {
		var toCheck = Type.typeof(this.props.to) == ValueType.TObject ? this.props.to.pathname : this.props.to;
		return React.createElement(react_ReactType.fromString("li"),{ className : this.props.location.pathname.indexOf(toCheck) == 0 ? "is-active" : ""},React.createElement(react_ReactType.fromComp(react_router_NavLink),{ to : this.props.to},this.props.children));
	}
	,__class__: view_shared_TabLink
});
var view_shared_io_Bookmarks = function(props) {
	React_Component.call(this,props);
	var sideMenu = this.updateMenu("bookmarks");
	this.state = { clean : true, hasError : false, mounted : false, loading : true, sideMenu : sideMenu};
};
$hxClasses["view.shared.io.Bookmarks"] = view_shared_io_Bookmarks;
view_shared_io_Bookmarks.__name__ = "view.shared.io.Bookmarks";
view_shared_io_Bookmarks.__super__ = React_Component;
view_shared_io_Bookmarks.prototype = $extend(React_Component.prototype,{
	componentDidCatch: function(error,info) {
		if(this.state.mounted) {
			this.setState({ hasError : true});
		}
		haxe_Log.trace(error,{ fileName : "src/view/shared/io/Bookmarks.hx", lineNumber : 40, className : "view.shared.io.Bookmarks", methodName : "componentDidCatch"});
		haxe_Log.trace(info,{ fileName : "src/view/shared/io/Bookmarks.hx", lineNumber : 41, className : "view.shared.io.Bookmarks", methodName : "componentDidCatch"});
	}
	,add: function(ev) {
	}
	,'delete': function(ev) {
	}
	,edit: function(ev) {
		var _gthis = this;
		haxe_Log.trace("hi :)",{ fileName : "src/view/shared/io/Bookmarks.hx", lineNumber : 56, className : "view.shared.io.Bookmarks", methodName : "edit"});
		this.props.formApi.requests.push(haxe_ds_Either.Left(loader_AjaxLoader.load("" + Std.string(App.config.api),{ id : this.props.userState.dbUser.id, jwt : this.props.userState.dbUser.jwt, classPath : "auth.User", action : "update", filter : "id|" + this.props.userState.dbUser.id, dataSource : haxe_Serializer.run(null)},function(data) {
			if(data.rows == null) {
				return;
			}
			haxe_Log.trace(data.rows.length,{ fileName : "src/view/shared/io/Bookmarks.hx", lineNumber : 71, className : "view.shared.io.Bookmarks", methodName : "edit"});
			var dataRows = data.rows;
			haxe_Log.trace(Reflect.fields(dataRows[0]),{ fileName : "src/view/shared/io/Bookmarks.hx", lineNumber : 73, className : "view.shared.io.Bookmarks", methodName : "edit"});
			haxe_Log.trace(dataRows[0].active,{ fileName : "src/view/shared/io/Bookmarks.hx", lineNumber : 74, className : "view.shared.io.Bookmarks", methodName : "edit"});
			var _gthis1 = _gthis;
			var _g = new haxe_ds_StringMap();
			_g.h["accountData"] = dataRows;
			_gthis1.setState({ data : _g, loading : false});
		})));
		this.setState({ dataClassPath : "auth.User.edit"});
	}
	,save: function(ev) {
	}
	,no: function(ev) {
	}
	,render: function() {
		haxe_Log.trace(this.state,{ fileName : "src/view/shared/io/Bookmarks.hx", lineNumber : 117, className : "view.shared.io.Bookmarks", methodName : "render"});
		haxe_Log.trace(this.props.match.params,{ fileName : "src/view/shared/io/Bookmarks.hx", lineNumber : 120, className : "view.shared.io.Bookmarks", methodName : "render"});
		return React.createElement(react_ReactType.fromString("div"),{ className : "tabComponentForm"},"bookmarks dummy");
	}
	,updateMenu: function(viewClassPath) {
		if(this.state == null) {
			haxe_Log.trace(this.state,{ fileName : "src/view/shared/io/Bookmarks.hx", lineNumber : 140, className : "view.shared.io.Bookmarks", methodName : "updateMenu"});
			return null;
		}
		var sideMenu = this.state.sideMenu;
		sideMenu.menuBlocks.h["bookmarks"].isActive = true;
		sideMenu.menuBlocks.h["bookmarks"].label = "Lesezeichen";
		var _g = 0;
		var _g1 = sideMenu.menuBlocks.h["bookmarks"].items;
		while(_g < _g1.length) {
			var mI = _g1[_g];
			++_g;
			var _g2 = mI.action;
			if(_g2 != null) {
				switch(_g2) {
				case "save":
					mI.disabled = this.state.clean;
					break;
				case "update":
					mI.disabled = this.state.selectedRows.length == 0;
					break;
				default:
				}
			}
		}
		return sideMenu;
	}
	,getRow: function(row) {
		return { one : row.one, two : row.two, three : row.three};
	}
	,__class__: view_shared_io_Bookmarks
});
var view_shared_io_Design = function(props) {
	React_Component.call(this,props);
	this.state = { clean : true, hasError : false, mounted : false, loading : true, sideMenu : { }};
	haxe_Log.trace(this.props,{ fileName : "src/view/shared/io/Design.hx", lineNumber : 68, className : "view.shared.io.Design", methodName : "new"});
};
$hxClasses["view.shared.io.Design"] = view_shared_io_Design;
view_shared_io_Design.__name__ = "view.shared.io.Design";
view_shared_io_Design.__super__ = React_Component;
view_shared_io_Design.prototype = $extend(React_Component.prototype,{
	edit: function(ev) {
		var _gthis = this;
		haxe_Log.trace("hi :)",{ fileName : "src/view/shared/io/Design.hx", lineNumber : 31, className : "view.shared.io.Design", methodName : "edit"});
		this.props.formApi.requests.push(haxe_ds_Either.Left(loader_AjaxLoader.load("" + Std.string(App.config.api),{ id : this.props.userState.dbUser.id, jwt : this.props.userState.dbUser.jwt, classPath : "auth.User", action : "update", filter : "id|" + this.props.userState.dbUser.id},function(data) {
			if(data.rows == null) {
				return;
			}
			haxe_Log.trace(data.rows.length,{ fileName : "src/view/shared/io/Design.hx", lineNumber : 46, className : "view.shared.io.Design", methodName : "edit"});
			var dataRows = data.rows;
			haxe_Log.trace(Reflect.fields(dataRows[0]),{ fileName : "src/view/shared/io/Design.hx", lineNumber : 48, className : "view.shared.io.Design", methodName : "edit"});
			haxe_Log.trace(dataRows[0].active,{ fileName : "src/view/shared/io/Design.hx", lineNumber : 49, className : "view.shared.io.Design", methodName : "edit"});
			var _gthis1 = _gthis;
			var _g = new haxe_ds_StringMap();
			_g.h["accountData"] = dataRows;
			_gthis1.setState({ data : _g, loading : false});
		})));
		this.setState({ dataClassPath : "auth.User.edit"});
	}
	,render: function() {
		return React.createElement(react_ReactType.fromString("div"),{ });
	}
	,__class__: view_shared_io_Design
});
var view_shared_io_Loader = function(cb,p,r) {
	this.cB = cb;
	this.params = p;
	this.post = p != null;
	this.req = r;
};
$hxClasses["view.shared.io.Loader"] = view_shared_io_Loader;
view_shared_io_Loader.__name__ = "view.shared.io.Loader";
view_shared_io_Loader.load = function(url,params,cB) {
	var req = new haxe_http_HttpJs(url);
	if(params != null) {
		var _g = 0;
		var _g1 = Reflect.fields(params);
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			req.addParameter(k,Reflect.field(params,k));
		}
	}
	req.addHeader("Access-Control-Allow-Methods","PUT, GET, POST, DELETE, OPTIONS");
	req.addHeader("Access-Control-Allow-Origin","*");
	var loader = new view_shared_io_Loader(cB,params,req);
	req.onData = $bind(loader,loader._onData);
	req.onError = function(err) {
		haxe_Log.trace(err,{ fileName : "src/view/shared/io/Loader.hx", lineNumber : 35, className : "view.shared.io.Loader", methodName : "load"});
	};
	haxe_Log.trace("POST? " + Std.string(params) != null,{ fileName : "src/view/shared/io/Loader.hx", lineNumber : 36, className : "view.shared.io.Loader", methodName : "load"});
	req.withCredentials = true;
	req.request(params != null);
	return req;
};
view_shared_io_Loader.loadData = function(url,params,cB) {
	var loader = view_shared_io_Loader.queue(url,params,cB);
	view_shared_io_Loader.rqs.push(loader.req);
	if(view_shared_io_Loader.rqs.length == 1) {
		view_shared_io_Loader.rqs.shift().request(loader.post);
	}
	return loader.req;
};
view_shared_io_Loader.queue = function(url,params,cB) {
	var req = new haxe_http_HttpJs(url);
	if(params != null) {
		var _g = 0;
		var _g1 = Reflect.fields(params);
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			req.addParameter(k,Reflect.field(params,k));
		}
	}
	req.addHeader("Access-Control-Allow-Methods","PUT, GET, POST, DELETE, OPTIONS");
	req.addHeader("Access-Control-Allow-Origin","*");
	var loader = new view_shared_io_Loader(cB,params,req);
	loader.url = url;
	req.onData = $bind(loader,loader._onQueueData);
	req.onError = function(err) {
		haxe_Log.trace(err,{ fileName : "src/view/shared/io/Loader.hx", lineNumber : 134, className : "view.shared.io.Loader", methodName : "queue"});
	};
	haxe_Log.trace("POST? " + Std.string(params) != null,{ fileName : "src/view/shared/io/Loader.hx", lineNumber : 135, className : "view.shared.io.Loader", methodName : "queue"});
	req.withCredentials = true;
	return loader;
};
view_shared_io_Loader.prototype = {
	cB: null
	,params: null
	,post: null
	,req: null
	,url: null
	,_onData: function(response) {
		if(response.length > 0) {
			haxe_Log.trace(response,{ fileName : "src/view/shared/io/Loader.hx", lineNumber : 60, className : "view.shared.io.Loader", methodName : "_onData"});
			var dataObj = null;
			try {
				dataObj = haxe_Unserializer.run(response);
			} catch( _g ) {
				var ex = haxe_Exception.caught(_g).unwrap();
				haxe_Log.trace(ex,{ fileName : "src/view/shared/io/Loader.hx", lineNumber : 67, className : "view.shared.io.Loader", methodName : "_onData"});
				return;
			}
			if(Object.prototype.hasOwnProperty.call(dataObj.h,"ERROR")) {
				haxe_Log.trace(dataObj.h["ERROR"],{ fileName : "src/view/shared/io/Loader.hx", lineNumber : 72, className : "view.shared.io.Loader", methodName : "_onData"});
				return;
			}
			if(this.cB != null) {
				this.cB(dataObj);
			}
		}
	}
	,_onError: function(err) {
		haxe_Log.trace(err,{ fileName : "src/view/shared/io/Loader.hx", lineNumber : 82, className : "view.shared.io.Loader", methodName : "_onError"});
	}
	,_onQueueData: function(response) {
		haxe_Log.trace(response,{ fileName : "src/view/shared/io/Loader.hx", lineNumber : 87, className : "view.shared.io.Loader", methodName : "_onQueueData"});
		if(response.length > 0) {
			var dataObj = null;
			try {
				dataObj = haxe_Unserializer.run(response);
				haxe_Log.trace(dataObj,{ fileName : "src/view/shared/io/Loader.hx", lineNumber : 93, className : "view.shared.io.Loader", methodName : "_onQueueData"});
			} catch( _g ) {
				var ex = haxe_Exception.caught(_g).unwrap();
				haxe_Log.trace(ex,{ fileName : "src/view/shared/io/Loader.hx", lineNumber : 97, className : "view.shared.io.Loader", methodName : "_onQueueData"});
				return;
			}
			if(response.indexOf("ERROR") > -1) {
				haxe_Log.trace(response,{ fileName : "src/view/shared/io/Loader.hx", lineNumber : 102, className : "view.shared.io.Loader", methodName : "_onQueueData"});
			} else if(this.cB != null) {
				this.cB(dataObj);
			}
			if(view_shared_io_Loader.rqs.length > 0) {
				view_shared_io_Loader.rqs.shift().request(this.post);
			}
		}
	}
	,__class__: view_shared_io_Loader
};
var view_shared_io_Observer = function() { };
$hxClasses["view.shared.io.Observer"] = view_shared_io_Observer;
view_shared_io_Observer.__name__ = "view.shared.io.Observer";
view_shared_io_Observer.run = function(obj,cb) {
	view_shared_io_Observer.handler = { get : function(target,property,receiver) {
		haxe_Log.trace(property,{ fileName : "src/view/shared/io/Observer.hx", lineNumber : 13, className : "view.shared.io.Observer", methodName : "run"});
		return Reflect.getProperty(target,property);
	}, set : function(target,property,value,receiver) {
		try {
			if(property == "care_of") {
				haxe_Log.trace("" + (value == null ? "null" : Std.string(value)) + " " + Std.string(Reflect.getProperty(receiver,property)),{ fileName : "src/view/shared/io/Observer.hx", lineNumber : 20, className : "view.shared.io.Observer", methodName : "run"});
				haxe_Log.trace("" + (value == null ? "null" : Std.string(value)) + " " + Std.string(Reflect.getProperty(target,property)),{ fileName : "src/view/shared/io/Observer.hx", lineNumber : 21, className : "view.shared.io.Observer", methodName : "run"});
			}
			target[property] = value;
			return true;
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			haxe_Log.trace(e,{ fileName : "src/view/shared/io/Observer.hx", lineNumber : 31, className : "view.shared.io.Observer", methodName : "run"});
			return false;
		}
	}};
	return new Proxy(obj,view_shared_io_Observer.handler);
};
var view_shared_io_Tooltip = function(el,tProps) {
	this.el = el;
	if(tProps.classes != null) {
		if(!Lambda.has(tProps.classes,"tooltip")) {
			HxOverrides.remove(tProps.classes,"tooltip");
		}
		this.classes = tProps.classes;
		var _this = this.classes;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			el.classList.add("is-tooltip-" + _this[i]);
			result[i] = null;
		}
	}
	el.classList.add("tooltip");
	el.dataset.tooltip = tProps.data;
};
$hxClasses["view.shared.io.Tooltip"] = view_shared_io_Tooltip;
view_shared_io_Tooltip.__name__ = "view.shared.io.Tooltip";
view_shared_io_Tooltip.prototype = {
	classes: null
	,el: null
	,clear: function() {
		var _gthis = this;
		this.el.classList.remove("tooltip");
		var _this = this.classes;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			_gthis.el.classList.remove("is-tooltip-" + _this[i]);
			result[i] = null;
		}
		this.el.removeAttribute("data-tooltip");
	}
	,__class__: view_shared_io_Tooltip
};
var view_shared_io_User = function(props) {
	React_Component.call(this,props);
	var _g = new haxe_ds_StringMap();
	var _g1 = new haxe_ds_StringMap();
	var _g2 = new haxe_ds_StringMap();
	_g2.h["fields"] = "id,change_pass_required,password";
	_g1.h["users"] = _g2;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["id"] = { type : "Hidden"};
	_g2.h["pass"] = { type : "Password"};
	_g2.h["new_pass"] = { type : "Password"};
	_g.h["changePassword"] = { source : _g1, view : _g2};
	var _g1 = new haxe_ds_StringMap();
	var _g2 = new haxe_ds_StringMap();
	_g2.h["alias"] = "us";
	_g2.h["fields"] = "id,last_login,change_pass_required,password";
	_g1.h["users"] = _g2;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["alias"] = "co";
	_g2.h["fields"] = "first_name,last_name,email";
	_g2.h["jCond"] = "contact=co.id";
	_g1.h["contacts"] = _g2;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["id"] = { label : "UserID", disabled : true, type : "Hidden"};
	_g2.h["pass"] = { label : "Passwort", type : "Hidden"};
	_g2.h["first_name"] = { label : "Vorname"};
	_g2.h["last_name"] = { label : "Name"};
	_g2.h["email"] = { label : "Email"};
	var value = { label : "Letze Anmeldung", disabled : true, displayFormat : view_shared_io_FormApi.localDate()};
	_g2.h["last_login"] = value;
	_g.h["update"] = { source : _g1, view : _g2};
	_g.h["save"] = { source : null, view : null};
	this.dataAccess = _g;
};
$hxClasses["view.shared.io.User"] = view_shared_io_User;
view_shared_io_User.__name__ = "view.shared.io.User";
view_shared_io_User.__super__ = React_Component;
view_shared_io_User.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,autoFocus: null
	,dataDisplay: null
	,componentDidMount: function() {
		haxe_Log.trace(this.props,{ fileName : "src/view/shared/io/User.hx", lineNumber : 108, className : "view.shared.io.User", methodName : "componentDidMount"});
	}
	,componentDidUpdate: function(prevProps,prevState) {
		haxe_Log.trace(App.store.getState().userState.dbUser.first_name,{ fileName : "src/view/shared/io/User.hx", lineNumber : 116, className : "view.shared.io.User", methodName : "componentDidUpdate"});
		if(this.autoFocus != null) {
			react_ReactRef.get_current(this.autoFocus).focus();
		}
	}
	,changePassword: function(ev) {
		haxe_Log.trace(this.state.values == null ? "null" : haxe_ds_StringMap.stringify(this.state.values.h),{ fileName : "src/view/shared/io/User.hx", lineNumber : 124, className : "view.shared.io.User", methodName : "changePassword"});
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/shared/io/User.hx", lineNumber : 125, className : "view.shared.io.User", methodName : "changePassword"});
		if(this.props.match.params.action != "changePassword") {
			this.updateMenu("changePassword");
			this.props.history.push(this.props.location.pathname + ("/user/changePassword/" + this.props.userState.dbUser.id));
			this.setState({ action : "changePassword"});
			return;
		} else if(!(this.state.values.h["pass"].length > 7 && this.state.values.h["new_pass"].length > 7)) {
			var _g = new haxe_ds_StringMap();
			_g.h["changePassword"] = "Die Passwörter müssen mindestens 8 Zeichen habe!";
			this.setState({ errors : _g});
			return;
		}
		if(this.state.values.h["new_pass"] != this.state.values.h["new_pass_confirm"]) {
			var _g = new haxe_ds_StringMap();
			_g.h["changePassword"] = "Die Passwörter stimmen nicht überein!";
			this.setState({ errors : _g});
			return;
		}
		if(this.state.values.h["new_pass"] == this.state.values.h["pass"] && this.state.values.h["new_pass"] != "" && this.state.values.h["new_pass"] != null) {
			var _g = new haxe_ds_StringMap();
			_g.h["changePassword"] = "Das Passwort muss geändert werden!";
			this.setState({ errors : _g});
			return;
		}
		haxe_Log.trace(App.store.getState().userState,{ fileName : "src/view/shared/io/User.hx", lineNumber : 141, className : "view.shared.io.User", methodName : "changePassword"});
	}
	,edit: function(ev) {
		var _gthis = this;
		haxe_Log.trace("hi :)",{ fileName : "src/view/shared/io/User.hx", lineNumber : 147, className : "view.shared.io.User", methodName : "edit"});
		this.props.formApi.requests.push(haxe_ds_Either.Left(view_shared_io_Loader.loadData("" + Std.string(App.config.api),{ id : this.props.userState.dbUser.id, jwt : this.props.userState.dbUser.jwt, classPath : "auth.User", action : "update", filter : "id|" + this.props.userState.dbUser.id, dataSource : haxe_Serializer.run(this.dataAccess.h["update"].source)},function(data) {
			haxe_Log.trace(data,{ fileName : "src/view/shared/io/User.hx", lineNumber : 160, className : "view.shared.io.User", methodName : "edit"});
			if(data == null) {
				return;
			}
			if(Object.prototype.hasOwnProperty.call(data[0].h,"ERROR")) {
				haxe_Log.trace(data[0].h["ERROR"],{ fileName : "src/view/shared/io/User.hx", lineNumber : 165, className : "view.shared.io.User", methodName : "edit"});
				return;
			}
			_gthis.setState({ fields : _gthis.dataAccess.h["update"].view, values : _gthis.props.formApi.createStateValues(data[0],_gthis.dataAccess.h["update"].view), loading : false});
		})));
	}
	,save: function(evt) {
		evt.preventDefault();
		haxe_Log.trace(this.state.data == null ? "null" : haxe_ds_StringMap.stringify(this.state.data.h),{ fileName : "src/view/shared/io/User.hx", lineNumber : 182, className : "view.shared.io.User", methodName : "save"});
		haxe_Log.trace(this.state.values == null ? "null" : haxe_ds_StringMap.stringify(this.state.values.h),{ fileName : "src/view/shared/io/User.hx", lineNumber : 183, className : "view.shared.io.User", methodName : "save"});
		var skeys = [];
		var h = this.dataAccess.h["update"].view.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			if(!this.dataAccess.h["update"].view.h[k].disabled) {
				skeys.push(k);
			}
		}
		var tmp = view_shared_io_FormApi.filterMap(this.state.values,skeys);
		haxe_Log.trace(tmp == null ? "null" : haxe_ds_StringMap.stringify(tmp.h),{ fileName : "src/view/shared/io/User.hx", lineNumber : 194, className : "view.shared.io.User", methodName : "save"});
		haxe_Log.trace(skeys.toString(),{ fileName : "src/view/shared/io/User.hx", lineNumber : 195, className : "view.shared.io.User", methodName : "save"});
		var tmp = this.dataAccess.h["update"].source;
		haxe_Log.trace(tmp == null ? "null" : haxe_ds_StringMap.stringify(tmp.h),{ fileName : "src/view/shared/io/User.hx", lineNumber : 196, className : "view.shared.io.User", methodName : "save"});
		this.props.formApi.requests.push(haxe_ds_Either.Left(view_shared_io_Loader.load("" + Std.string(App.config.api),{ id : this.props.userState.dbUser.id, jwt : this.props.userState.dbUser.jwt, classPath : "auth.User", action : "save", filter : "id|" + this.props.userState.dbUser.id, dataSource : haxe_Serializer.run(this.dataAccess.h["update"].source)},function(data) {
			haxe_Log.trace(data,{ fileName : "src/view/shared/io/User.hx", lineNumber : 210, className : "view.shared.io.User", methodName : "save"});
		})));
	}
	,updateMenu: function(viewClassPath) {
		var sideMenu = this.state.sideMenu;
		sideMenu.menuBlocks.h["users"].isActive = true;
		var _g = 0;
		var _g1 = sideMenu.menuBlocks.h["users"].items;
		while(_g < _g1.length) {
			var mI = _g1[_g];
			++_g;
			var _g2 = mI.action;
			if(_g2 != null) {
				switch(_g2) {
				case "editTableFields":
					mI.disabled = this.state.selectedRows.length == 0;
					break;
				case "save":
					mI.disabled = this.state.clean;
					break;
				default:
				}
			}
		}
		return sideMenu;
	}
	,renderContent: function() {
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/shared/io/User.hx", lineNumber : 239, className : "view.shared.io.User", methodName : "renderContent"});
		switch(this.props.match.params.action) {
		case "changePassword":
			var tmp = react_ReactType.fromComp(React_Fragment);
			var tmp1 = this.renderErrors("changePassword");
			var tmp2 = react_ReactType.fromString("div");
			var tmp3 = React.createElement(react_ReactType.fromString("label"),{ className : "required"},"Aktuelles Passwort");
			var tmp4 = React.createElement(tmp2,{ className : "formField"},tmp3,React.createElement(react_ReactType.fromString("input"),{ ref : this.autoFocus, name : "pass", type : "password", onChange : this.state.handleChange, autoFocus : "true"}));
			var tmp2 = react_ReactType.fromString("div");
			var tmp3 = React.createElement(react_ReactType.fromString("label"),{ className : "required"},"Neues Passwort");
			var tmp5 = React.createElement(tmp2,{ className : "formField"},tmp3,React.createElement(react_ReactType.fromString("input"),{ name : "new_pass", type : "password", onChange : this.state.handleChange}));
			var tmp2 = react_ReactType.fromString("div");
			var tmp3 = React.createElement(react_ReactType.fromString("label"),{ className : "required"},"Neues Passwort bestätigen");
			var tmp6 = React.createElement(tmp2,{ className : "formField"},tmp3,React.createElement(react_ReactType.fromString("input"),{ name : "new_pass_confirm", type : "password", onChange : this.state.handleChange}));
			return React.createElement(tmp,{ },tmp1,tmp4,tmp5,tmp6);
		case "edit":
			return this.props.formApi.renderElements(this.state);
		default:
			return null;
		}
	}
	,renderErrors: function(name) {
		haxe_Log.trace(name + ":" + Std.string(Object.prototype.hasOwnProperty.call(this.state.errors.h,name)),{ fileName : "src/view/shared/io/User.hx", lineNumber : 269, className : "view.shared.io.User", methodName : "renderErrors"});
		if(Object.prototype.hasOwnProperty.call(this.state.errors.h,name)) {
			var tmp = this.state.errors.h[name];
			return React.createElement(react_ReactType.fromString("div"),{ className : "formField"},tmp);
		}
		return null;
	}
	,render: function() {
		if(this.state.values != null) {
			haxe_Log.trace(this.state.values == null ? "null" : haxe_ds_StringMap.stringify(this.state.values.h),{ fileName : "src/view/shared/io/User.hx", lineNumber : 282, className : "view.shared.io.User", methodName : "render"});
		}
		var tmp = react_ReactType.fromString("div");
		var tmp1 = react_ReactType.fromString("form");
		var tmp2 = this.renderContent();
		return React.createElement(tmp,{ className : "tabComponentForm"},React.createElement(tmp1,{ className : "form60"},tmp2));
	}
	,__class__: view_shared_io_User
});
var view_shared_io_Users = function(props) {
	React_Component.call(this,props);
	haxe_Log.trace(this.props,{ fileName : "src/view/shared/io/Users.hx", lineNumber : 47, className : "view.shared.io.Users", methodName : "new"});
};
$hxClasses["view.shared.io.Users"] = view_shared_io_Users;
view_shared_io_Users.__name__ = "view.shared.io.Users";
view_shared_io_Users.__super__ = React_Component;
view_shared_io_Users.prototype = $extend(React_Component.prototype,{
	dataDisplay: null
	,dataAccess: null
	,render: function() {
		return React.createElement(react_ReactType.fromString("div"),{ });
	}
	,renderResults: function() {
		if(this.state.dbTable != null) {
			if(this.props.match.params.action == "userList") {
				return React.createElement(react_ReactType.fromComp(view_table_Table),Object.assign({ },this.props,{ id : "userList", data : this.state.dbTable == null ? null : this.state.dbTable, dataState : this.dataDisplay.h["userList"], className : "is-striped is-hoverable", fullWidth : true}));
			} else {
				return null;
			}
		}
		return null;
	}
	,__class__: view_shared_io_Users
});
var view_stats_History = function(props) {
	React_Component.call(this,props);
	haxe_Log.trace("..." + Std.string(Reflect.fields(props)),{ fileName : "src/view/stats/History.hx", lineNumber : 59, className : "view.stats.History", methodName : "new"});
	haxe_Log.trace(props.match.params,{ fileName : "src/view/stats/History.hx", lineNumber : 60, className : "view.stats.History", methodName : "new"});
	if(props.match.params.section == null) {
		haxe_Log.trace("reme",{ fileName : "src/view/stats/History.hx", lineNumber : 64, className : "view.stats.History", methodName : "new"});
		var baseUrl = props.match.path.split(":section")[0];
		haxe_Log.trace("pushing2: " + baseUrl + "Charts/get",{ fileName : "src/view/stats/History.hx", lineNumber : 67, className : "view.stats.History", methodName : "new"});
		props.history.push("" + baseUrl + "Charts/get");
	}
	this.state = App.initEState({ dbTable : [], loading : false, values : new haxe_ds_StringMap()},this);
};
$hxClasses["view.stats.History"] = view_stats_History;
view_stats_History.__name__ = "view.stats.History";
view_stats_History.mapDispatchToProps = function(dispatch) {
	haxe_Log.trace("ok",{ fileName : "src/view/stats/History.hx", lineNumber : 101, className : "view.stats.History", methodName : "mapDispatchToProps"});
	return { };
};
view_stats_History.mapStateToProps = function(aState) {
	haxe_Log.trace(Reflect.fields(aState),{ fileName : "src/view/stats/History.hx", lineNumber : 110, className : "view.stats.History", methodName : "mapStateToProps"});
	if(aState.dataStore.contactsData != null) {
		haxe_Log.trace(aState.dataStore.contactsData.keys().next(),{ fileName : "src/view/stats/History.hx", lineNumber : 112, className : "view.stats.History", methodName : "mapStateToProps"});
	}
	if(aState.dataStore.contactsDbData != null) {
		var tmp = aState.dataStore.contactsDbData.dataRows[0];
		haxe_Log.trace(tmp == null ? "null" : haxe_ds_StringMap.stringify(tmp.h),{ fileName : "src/view/stats/History.hx", lineNumber : 114, className : "view.stats.History", methodName : "mapStateToProps"});
	} else {
		haxe_Log.trace(aState.dataStore,{ fileName : "src/view/stats/History.hx", lineNumber : 117, className : "view.stats.History", methodName : "mapStateToProps"});
		haxe_Log.trace(Reflect.fields(aState.dataStore),{ fileName : "src/view/stats/History.hx", lineNumber : 118, className : "view.stats.History", methodName : "mapStateToProps"});
	}
	haxe_Log.trace(App.store.getState().dataStore.contactsDbData,{ fileName : "src/view/stats/History.hx", lineNumber : 120, className : "view.stats.History", methodName : "mapStateToProps"});
	var bState = { dataStore : aState.dataStore, userState : aState.userState};
	haxe_Log.trace(bState.dataStore.contactsData,{ fileName : "src/view/stats/History.hx", lineNumber : 127, className : "view.stats.History", methodName : "mapStateToProps"});
	return bState;
};
view_stats_History.__super__ = React_Component;
view_stats_History.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,dbData: null
	,componentDidCatch: function(error,info) {
		try {
			this.setState({ hasError : true});
		} catch( _g ) {
			var ex = haxe_Exception.caught(_g).unwrap();
			haxe_Log.trace(ex,{ fileName : "src/view/stats/History.hx", lineNumber : 85, className : "view.stats.History", methodName : "componentDidCatch"});
		}
		haxe_Log.trace(error,{ fileName : "src/view/stats/History.hx", lineNumber : 87, className : "view.stats.History", methodName : "componentDidCatch"});
	}
	,componentDidMount: function() {
		haxe_Log.trace(this.props.location.pathname,{ fileName : "src/view/stats/History.hx", lineNumber : 133, className : "view.stats.History", methodName : "componentDidMount"});
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/stats/History.hx", lineNumber : 144, className : "view.stats.History", methodName : "render"});
		if(this.props.match.params.section == "Charts") {
			return React.createElement(react_ReactType.fromComp(view_stats_history_Charts),Object.assign({ },this.props,{ limit : 100, parentComponent : this, formApi : this.state.formApi, fullWidth : true, sideMenu : this.state.sideMenu}));
		} else {
			return null;
		}
	}
	,__class__: view_stats_History
});
var view_stats_Performance = function(props,context) {
	React_Component.call(this,props,context);
};
$hxClasses["view.stats.Performance"] = view_stats_Performance;
view_stats_Performance.__name__ = "view.stats.Performance";
view_stats_Performance.__super__ = React_Component;
view_stats_Performance.prototype = $extend(React_Component.prototype,{
	render: function() {
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/stats/Performance.hx", lineNumber : 26, className : "view.stats.Performance", methodName : "render"});
		if(this.props.match.params.section == "Charts") {
			return React.createElement(react_ReactType.fromComp(view_stats_history_Charts),Object.assign({ },this.props,{ limit : 100, parentComponent : this, formApi : this.state.formApi, fullWidth : true, sideMenu : this.state.sideMenu}));
		} else {
			return null;
		}
	}
	,__class__: view_stats_Performance
});
var view_stats_Preview = function(props,context) {
	React_Component.call(this,props,context);
};
$hxClasses["view.stats.Preview"] = view_stats_Preview;
view_stats_Preview.__name__ = "view.stats.Preview";
view_stats_Preview.__super__ = React_Component;
view_stats_Preview.prototype = $extend(React_Component.prototype,{
	render: function() {
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/stats/Preview.hx", lineNumber : 49, className : "view.stats.Preview", methodName : "render"});
		if(this.props.match.params.section == "Charts") {
			return React.createElement(react_ReactType.fromComp(view_stats_history_Charts),Object.assign({ },this.props,{ limit : 100, parentComponent : this, formApi : this.state.formApi, fullWidth : true, sideMenu : this.state.sideMenu}));
		} else {
			return null;
		}
	}
	,__class__: view_stats_Preview
});
var view_stats_history_Charts = function(props) {
	React_Component.call(this,props);
	this.dataDisplay = model_stats_HistoryModel.dataDisplay;
	haxe_Log.trace("..." + Std.string(Reflect.fields(props)),{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 133, className : "view.stats.history.Charts", methodName : "new"});
	this.state = App.initEState({ dbTable : [], loading : false, selectedRows : [], sideMenu : view_shared_io_FormApi.initSideMenu(this,{ dataClassPath : "reports.History", label : "Charts", section : "Charts", items : view_stats_history_Charts.menuItems},{ section : props.match.params.section == null ? "Chart" : props.match.params.section, sameWidth : true}), values : new haxe_ds_StringMap()},this);
	if(props.match.params.section == null || props.match.params.action == null) {
		var baseUrl = props.match.path.split(":section")[0];
		haxe_Log.trace("redirecting to " + baseUrl + "Charts/get",{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 156, className : "view.stats.history.Charts", methodName : "new"});
		props.history.push("" + baseUrl + "Charts/get");
		this.get(null);
	} else {
		this.state.formApi.doAction();
	}
	haxe_Log.trace(this.state.loading,{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 164, className : "view.stats.history.Charts", methodName : "new"});
};
$hxClasses["view.stats.history.Charts"] = view_stats_history_Charts;
view_stats_history_Charts.__name__ = "view.stats.history.Charts";
view_stats_history_Charts.mapStateToProps = function(aState) {
	haxe_Log.trace("never",{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 169, className : "view.stats.history.Charts", methodName : "mapStateToProps"});
	return { userState : aState.userState};
};
view_stats_history_Charts.__super__ = React_Component;
view_stats_history_Charts.prototype = $extend(React_Component.prototype,{
	dataAccess: null
	,dataDisplay: null
	,formFields: null
	,formRef: null
	,fieldNames: null
	,baseForm: null
	,dbData: null
	,dbMetaData: null
	,chartBox: null
	,svg: null
	,get: function(ev) {
		var _gthis = this;
		haxe_Log.trace("hi " + Std.string(ev),{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 177, className : "view.stats.history.Charts", methodName : "get"});
		var offset = 0;
		if(ev != null && ev.page != null) {
			offset = this.props.limit * ev.page | 0;
		}
		var params = { dbUser : this.props.userState.dbUser, classPath : "stats.History", action : "get", filter : this.props.filter == null ? "termin<date_trunc('month', CURRENT_DATE)" : this.props.filter, devIP : App.devIP, limit : this.props.limit, offset : offset > 0 ? offset : 0, order : "termin", table : "booking_requests"};
		loader_BinaryLoader.dbQuery("" + Std.string(App.config.api),params,function(data) {
			haxe_Log.trace(data.dataInfo == null ? "null" : haxe_ds_StringMap.stringify(data.dataInfo.h),{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 199, className : "view.stats.history.Charts", methodName : "get"});
			haxe_Log.trace(data.dataParams == null ? "null" : haxe_ds_StringMap.stringify(data.dataParams.h),{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 200, className : "view.stats.history.Charts", methodName : "get"});
			haxe_Log.trace(data.dataRows.length,{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 201, className : "view.stats.history.Charts", methodName : "get"});
			if(data.dataRows.length > 0) {
				var h = data.dataErrors.h;
				var inlStringMapKeyIterator_h = h;
				var inlStringMapKeyIterator_keys = Object.keys(h);
				var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
				var inlStringMapKeyIterator_current = 0;
				if(inlStringMapKeyIterator_current >= inlStringMapKeyIterator_length) {
					_gthis.setState({ dbTable : data.dataRows, dataCount : Std.parseInt(data.dataInfo.h["count"])});
					if(_gthis.chartBox == null) {
						_gthis.chartBox = window.document.querySelector(".chartBox");
					}
					haxe_Log.trace(_gthis.chartBox,{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 216, className : "view.stats.history.Charts", methodName : "get"});
					if(_gthis.chartBox != null) {
						_gthis.draw();
					}
				} else {
					var _gthis1 = _gthis;
					var _g = new haxe_ds_StringMap();
					_g.h["loadResult"] = "Kein Ergebnis";
					_g.h["closeAfter"] = -1;
					_gthis1.setState({ values : _g});
				}
			}
		});
	}
	,componentDidMount: function() {
		var _g = new haxe_ds_StringMap();
		var _g1 = new haxe_ds_StringMap();
		var value = new haxe_ds_StringMap();
		_g1.h["contacts"] = value;
		var value = { source : _g1, view : new haxe_ds_StringMap()};
		_g.h["get"] = value;
		this.dataAccess = _g;
		if(this.props.userState.dbUser != null) {
			haxe_Log.trace("yeah: " + this.props.userState.dbUser.first_name,{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 239, className : "view.stats.history.Charts", methodName : "componentDidMount"});
		}
		haxe_Log.trace(this.props.match.params.action,{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 240, className : "view.stats.history.Charts", methodName : "componentDidMount"});
		if(this.chartBox == null) {
			this.chartBox = window.document.querySelector(".chartBox");
		}
		haxe_Log.trace(this.chartBox,{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 245, className : "view.stats.history.Charts", methodName : "componentDidMount"});
		if(this.chartBox != null) {
			this.draw();
		}
	}
	,draw: function() {
		if(this.state.dbTable != null && this.state.dbTable.length > 0) {
			haxe_Log.trace(this.chartBox.outerHTML,{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 253, className : "view.stats.history.Charts", methodName : "draw"});
			var cW = this.chartBox.offsetWidth;
			var iX = Math.floor(cW / this.state.dbTable.length);
			cW = iX * this.state.dbTable.length;
			this.chartBox.style.width = cW + "px";
			var cH = this.chartBox.offsetHeight - 1;
			var lH = cH * 0.064 > 24 ? Math.round(cH * 0.064) : 24;
			haxe_Log.trace("cH:" + cH + " cW:" + cW + " lH:" + lH,{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 260, className : "view.stats.history.Charts", methodName : "draw"});
			cH -= lH;
			var months = "Jan,Feb,Mar,Apr,Mai,Jun,Jul,Aug,Sep,Okt,Nov,Dez".split(",");
			var formatDate = function(dd) {
				var d = dd.get("date").split("-");
				return "" + months[Std.parseInt(d[1]) - 1] + " " + d[0];
			};
			var maxSum = shared_Utils.keyMax(this.state.dbTable,"sum");
			var maxCount = Math.round(shared_Utils.keyMax(this.state.dbTable,"count"));
			var cRatio = cH / maxCount;
			var sRatio = cH / maxSum;
			haxe_Log.trace("" + maxCount + " => " + maxSum + " " + cW + " / " + (cH + lH) + ": " + cRatio + " " + sRatio + " " + this.state.dbTable.length + " svg: " + Std.string(this.svg != null ? this.svg : null),{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 278, className : "view.stats.history.Charts", methodName : "draw"});
			var tmp = this.state.dbTable[0];
			haxe_Log.trace(tmp == null ? "null" : haxe_ds_StringMap.stringify(tmp.h),{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 279, className : "view.stats.history.Charts", methodName : "draw"});
			var iW = iX - 2;
			if(this.svg != null) {
				return;
			}
			var div = d3.select(".tabComponentForm").append("div").attr("class","tooltip").style("opacity",0);
			this.svg = d3.select(".chartBox").append("svg").attr("width",cW).attr("height",cH + lH);
			var svgDefs = this.svg.append("defs");
			var mainGradient = svgDefs.append("linearGradient").attr("x1","0").attr("y1","100%").attr("x2","0").attr("y2","0").attr("id","mainGradient").attr("gradientUnits","userSpaceOnUse");
			mainGradient.append("stop").attr("class","stop-bottom").attr("offset","0");
			mainGradient.append("stop").attr("class","stop-top").attr("offset","1");
			var stop1 = mainGradient.selectAll("stop").node();
			haxe_Log.trace(stop1.classList.value,{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 310, className : "view.stats.history.Charts", methodName : "draw"});
			haxe_Log.trace(stop1.nextElementSibling.classList.value,{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 311, className : "view.stats.history.Charts", methodName : "draw"});
			haxe_Log.trace(this.svg,{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 319, className : "view.stats.history.Charts", methodName : "draw"});
			this.svg.selectAll(null).data(this.state.dbTable).enter().append("rect").attr("x",function(d,i) {
				return i * iX;
			}).attr("y",function(d,i) {
				return Math.floor(cH - sRatio * parseFloat(d.get("sum")));
			}).attr("width",iW).attr("height",function(d,i) {
				return Math.ceil(parseFloat(d.get("sum")) * sRatio);
			}).attr("class","gblue").on("mouseover",function(d) {
				var dSum = Std.parseInt(d.get("sum"));
				var dCount = Std.parseInt(d.get("count"));
				var dCount = d.get("count");
				haxe_Log.trace(d.get("count") + ":" + dCount,{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 330, className : "view.stats.history.Charts", methodName : "draw"});
				var avg = StringTools.replace(App.sprintf("%.2f",dSum / dCount),".",",");
				div.transition().duration(200).style("opacity",.9);
				div.html(formatDate(d) + "<br/>" + dSum + ("&thinsp;€<br>" + dCount + " Spenden") + ("<br>" + avg + " €/Spende")).style("left",d3.event.pageX + "px").style("top",d3.event.pageY - 28 + "px");
			}).on("mouseout",function(d) {
				div.transition().duration(500).style("opacity",0);
			});
			this.drawLegend(cH,lH,cW,iW,iX);
		}
	}
	,drawLegend: function(top,h,lW,iW,iX) {
		haxe_Log.trace(this.svg,{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 353, className : "view.stats.history.Charts", methodName : "drawLegend"});
		haxe_Log.trace("top:" + top + " height:" + h + " width:" + lW,{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 354, className : "view.stats.history.Charts", methodName : "drawLegend"});
		var legend = this.svg.append("g").attr("x",0).attr("transform","translate(0 " + top + ")").attr("id","legend").attr("width",lW).attr("height",h).style("fill","rgba(0,0,0,0)");
		var _this = this.state.dbTable;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = _this[i].h["date"].split("-")[0];
		}
		var years = result;
		var actYear = years[0];
		var yearX = 0.0;
		var i = 0;
		var iYear = "";
		var _g = 0;
		while(_g < years.length) {
			var iYear1 = years[_g];
			++_g;
			if(actYear != iYear1) {
				var svg = legend.append("svg").attr("y",0).attr("x",yearX).attr("width",i * iX - 2 - yearX).attr("height",h).attr("viewBox","0 0 " + (i * iX - 2 - yearX) + " " + h);
				svg.append("rect").attr("x",0.0).attr("y",2).attr("width",i * iX - 2 - yearX).attr("height",h - 4).attr("fill","#fff");
				svg.append("text").text(actYear).attr("text-anchor","middle").attr("fill","#33a").attr("y","64%").attr("x","50%").style("alignment-baseline","central");
				actYear = iYear1;
				yearX = i * iX;
			}
			++i;
		}
		if(actYear != iYear) {
			var svg = legend.append("svg").attr("y",0).attr("x",yearX).attr("width",i * iX - 2 - yearX).attr("height",h).attr("viewBox","0 0 " + (i * iX - 2 - yearX) + " " + h);
			svg.append("rect").attr("x",0.0).attr("y",2).attr("width",i * iX - 2 - yearX).attr("height",h - 4).attr("fill","#fff");
			svg.append("text").text(actYear).attr("y","64%").attr("text-anchor","middle").attr("fill","#33a").attr("x","50%").style("alignment-baseline","central");
			actYear = iYear;
			yearX = i * iX;
		}
	}
	,renderResults: function() {
		haxe_Log.trace(this.props.match.params.section + (":" + this.props.match.params.action + "::") + Std.string(this.state.dbTable != null),{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 425, className : "view.stats.history.Charts", methodName : "renderResults"});
		if(this.state.dbTable.length == 0) {
			return this.state.formApi.renderWait();
		}
		if(this.props.match.params.action == "get") {
			return React.createElement(react_ReactType.fromString("form"),{ className : "tabComponentForm"},React.createElement(react_ReactType.fromString("div"),{ className : "chartBox"}));
		} else {
			return null;
		}
	}
	,getCellData: function(cP) {
		haxe_Log.trace(cP,{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 445, className : "view.stats.history.Charts", methodName : "getCellData"});
	}
	,render: function() {
		haxe_Log.trace(this.props.match.params.section,{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 452, className : "view.stats.history.Charts", methodName : "render"});
		return this.state.formApi.render(this.renderResults());
	}
	,componentWillUnmount: function() {
		haxe_Log.trace("...",{ fileName : "src/view/stats/history/Charts.hx", lineNumber : 459, className : "view.stats.history.Charts", methodName : "componentWillUnmount"});
	}
	,__class__: view_stats_history_Charts
});
var view_table_Table = function(props) {
	React_Component.call(this,props);
	this.set_headerUpdated(false);
	this.fieldNames = [];
	this.trs = [];
	this._trace = true;
	this.id = "id";
	if(props.dataState != null) {
		var h = props.dataState.columns.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			if(props.dataState.columns.h[k].useAsIndex) {
				this.id = k;
			}
			this.fieldNames.push(k);
		}
	}
	if(this._trace) {
		haxe_Log.trace(props.parentComponent.props.id,{ fileName : "src/view/table/Table.hx", lineNumber : 145, className : "view.table.Table", methodName : "new"});
	}
	this.state = { selectedRows : []};
	this.tableRef = React.createRef();
	this.fixedHeader = React.createRef();
	this.tHeadRef = React.createRef();
	this.firstRowRef = React.createRef();
};
$hxClasses["view.table.Table"] = view_table_Table;
view_table_Table.__name__ = "view.table.Table";
view_table_Table.__super__ = React_Component;
view_table_Table.prototype = $extend(React_Component.prototype,{
	fieldNames: null
	,tableRef: null
	,fixedHeader: null
	,firstRowRef: null
	,id: null
	,tHeadRef: null
	,visibleColumns: null
	,headerUpdated: null
	,_timer: null
	,_trace: null
	,trs: null
	,set_headerUpdated: function(hU) {
		haxe_Log.trace(hU,{ fileName : "src/view/table/Table.hx", lineNumber : 157, className : "view.table.Table", methodName : "set_headerUpdated"});
		return this.headerUpdated = hU;
	}
	,render: function() {
		if(this._trace && this.props.data != null) {
			haxe_Log.trace(this.props.data.length,{ fileName : "src/view/table/Table.hx", lineNumber : 166, className : "view.table.Table", methodName : "render"});
		}
		if(this.props.renderPager != null) {
			this.props.renderPager();
		}
		if(this.props.data == null || this.props.data.length == 0) {
			if(this.state.loading) {
				return React.createElement(react_ReactType.fromString("section"),{ className : "hero is-alt", style : { flexGrow : css_CSSNumber.fromNumber(1)}},React.createElement(react_ReactType.fromString("div"),{ className : "loader-box"},React.createElement(react_ReactType.fromString("div"),{ className : "loader", style : { width : "6rem", height : "6rem", margin : "auto", borderWidth : "0.64rem"}})));
			} else {
				return null;
			}
		}
		var tmp = react_ReactType.fromString("div");
		var tmp1 = react_ReactType.fromString("div");
		var tmp2 = react_ReactType.fromString("table");
		var tmp3 = react_ReactType.fromString("thead");
		var tmp4 = react_ReactType.fromString("tr");
		var tmp5 = { ref : this.fixedHeader};
		var tmp6 = this.renderHeaderDisplay();
		var tmp7 = React.createElement(tmp1,{ className : "header-background"},React.createElement(tmp2,{ className : "tableHead head"},React.createElement(tmp3,{ },React.createElement(tmp4,tmp5,tmp6))));
		var tmp1 = react_ReactType.fromString("div");
		var tmp2 = react_ReactType.fromString("table");
		var tmp3 = { ref : this.tableRef, id : this.props.id, className : "table " + this.props.className};
		var tmp4 = react_ReactType.fromString("thead");
		var tmp5 = react_ReactType.fromString("tr");
		var tmp6 = { ref : this.tHeadRef};
		var tmp8 = this.renderHeaderRow();
		var tmp9 = React.createElement(tmp4,{ },React.createElement(tmp5,tmp6,tmp8));
		var tmp4 = react_ReactType.fromString("tbody");
		var tmp5 = this.renderRows();
		var tmp6 = React.createElement(tmp1,{ className : "grid-container-inner"},React.createElement(tmp2,tmp3,tmp9,React.createElement(tmp4,{ },tmp5)));
		var tmp1 = this.renderPager(this.props.parentComponent);
		return React.createElement(tmp,{ className : "fixed-grid-container"},tmp7,tmp6,tmp1);
	}
	,renderPager: function(comp) {
		haxe_Log.trace("pageCount=" + Std.string(comp.state.pageCount),{ fileName : "src/view/table/Table.hx", lineNumber : 214, className : "view.table.Table", methodName : "renderPager"});
		var f = comp.state.pageCount;
		if(isNaN(f) || comp.state.pageCount < 2) {
			return null;
		}
		var tmp = react_ReactType.fromString("div");
		var tmp1 = react_ReactType.fromString("nav");
		return React.createElement(tmp,{ id : "pct", className : "paginationContainer"},React.createElement(tmp1,{ },React.createElement(react_ReactType.fromComp(react_ReactPaginate),{ previousLabel : "<", breakLinkClassName : "pagination-link", pageLinkClassName : "pagination-link", nextLinkClassName : "pagination-next", previousLinkClassName : "pagination-previous", nextLabel : ">", breakLabel : "...", breakClassName : "break-me", pageCount : comp.state.pageCount, marginPagesDisplayed : 2, pageRangeDisplayed : 5, onPageChange : function(data) {
			haxe_Log.trace("" + Std.string(comp.props.match.params.action) + "  " + data.selected,{ fileName : "src/view/table/Table.hx", lineNumber : 234, className : "view.table.Table", methodName : "renderPager"});
			var fun = Reflect.field(comp,comp.props.match.params.action);
			if(Reflect.isFunction(fun)) {
				fun.apply(comp,[{ page : data.selected}]);
			}
		}, containerClassName : "pagination is-small", subContainerClassName : "pages pagination", activeLinkClassName : "is-current"})));
	}
	,renderHeaderRow: function() {
		if(this.props.dataState == null) {
			return null;
		}
		var headerRow = [];
		var h = this.props.dataState.columns.h;
		var field_h = h;
		var field_keys = Object.keys(h);
		var field_length = field_keys.length;
		var field_current = 0;
		while(field_current < field_length) {
			var field = field_keys[field_current++];
			var hC = this.props.dataState.columns.h[field];
			if(hC.show == false) {
				continue;
			}
			var tmp = react_ReactType.fromString("th");
			var tmp1 = react_ReactType.fromString("div");
			headerRow.push(React.createElement(tmp,{ key : field},React.createElement(tmp1,{ className : hC.headerClassName},hC.label != null ? hC.label : hC.name,React.createElement(react_ReactType.fromString("span"),{ className : "sort-box fa fa-sort"}))));
		}
		if(this._trace) {
			haxe_Log.trace(headerRow.length,{ fileName : "src/view/table/Table.hx", lineNumber : 282, className : "view.table.Table", methodName : "renderHeaderRow"});
		}
		return headerRow;
	}
	,renderHeaderDisplay: function() {
		if(this.props.dataState == null) {
			return null;
		}
		if(this._trace) {
			haxe_Log.trace(new haxe_ds__$StringMap_StringMapKeyIterator(this.props.dataState.columns.h),{ fileName : "src/view/table/Table.hx", lineNumber : 290, className : "view.table.Table", methodName : "renderHeaderDisplay"});
		}
		var headerRow = [];
		var h = this.props.dataState.columns.h;
		var field_h = h;
		var field_keys = Object.keys(h);
		var field_length = field_keys.length;
		var field_current = 0;
		while(field_current < field_length) {
			var field = field_keys[field_current++];
			var hC = this.props.dataState.columns.h[field];
			if(hC.show == false) {
				continue;
			}
			this.visibleColumns++;
			var sortClass;
			var _g = hC.search;
			if(_g == null) {
				sortClass = "fa-sort";
			} else {
				switch(_g) {
				case "ASC":
					sortClass = "fa-sort-up";
					break;
				case "DESC":
					sortClass = "fa-sort-down";
					break;
				default:
					sortClass = "fa-sort";
				}
			}
			var tmp = react_ReactType.fromString("th");
			var tmp1 = react_ReactType.fromString("div");
			headerRow.push(React.createElement(tmp,{ key : field},React.createElement(tmp1,{ className : "th-box " + (hC.headerClassName != null ? hC.headerClassName : hC.className)},hC.label != null ? hC.label : hC.name,React.createElement(react_ReactType.fromString("span"),{ className : "sort-box fa " + sortClass}))));
		}
		return headerRow;
	}
	,renderRows: function(dRows) {
		if(dRows == null) {
			dRows = this.props.data;
		}
		var dRs = [];
		var row = 0;
		var primary = this.props.primary != null && this.props.primary.length > 0 ? this.props.primary : "id";
		var _g = 0;
		while(_g < dRows.length) {
			var dR = dRows[_g];
			++_g;
			var fRRef = row == 0 ? this.firstRowRef : null;
			if(row == 0) {
				haxe_Log.trace("" + this.id + " key=" + (dR == null ? "null" : haxe_ds_StringMap.stringify(dR.h)),{ fileName : "src/view/table/Table.hx", lineNumber : 326, className : "view.table.Table", methodName : "renderRows"});
			}
			dRs.push(React.createElement(react_ReactType.fromComp(view_table_Tr),{ key : dR.h["id"], columns : this.props.dataState.columns, data : dR, firstTableRow : fRRef, fieldNames : this.fieldNames, selectAble : this.props.selectAble != false, row : row++, parentComponent : this.props.parentComponent}));
		}
		if(this._trace) {
			haxe_Log.trace(dRs.length,{ fileName : "src/view/table/Table.hx", lineNumber : 331, className : "view.table.Table", methodName : "renderRows"});
		}
		return dRs;
	}
	,select: function(mEv,tr) {
		if(this._trace) {
			haxe_Log.trace(mEv.altKey,{ fileName : "src/view/table/Table.hx", lineNumber : 337, className : "view.table.Table", methodName : "select"});
		}
		if(this._trace) {
			haxe_Log.trace(mEv.currentTarget,{ fileName : "src/view/table/Table.hx", lineNumber : 338, className : "view.table.Table", methodName : "select"});
		}
		var htRow = js_Boot.__cast(mEv.currentTarget , HTMLTableRowElement);
		var rows = htRow.parentElement.children;
		if(mEv.altKey) {
			this.selectAltGroup(this.props.dataState.altGroupPos,htRow);
		} else if(mEv.ctrlKey) {
			var _g = 0;
			while(_g < rows.length) {
				var r = rows[_g];
				++_g;
				r.classList.toggle("is-selected");
			}
		} else {
			htRow.classList.toggle("is-selected");
		}
		var selRows = [];
		var _g = 0;
		while(_g < rows.length) {
			var r = rows[_g];
			++_g;
			if(r.classList.contains("is-selected")) {
				selRows.push(r);
			}
		}
		this.setState({ selectedRows : selRows});
	}
	,selectAltGroup: function(altGroupPos,cRow) {
		var groupName = cRow.cells.item(altGroupPos).textContent;
		var tEl = cRow.parentElement;
		var _g = 0;
		var _g1 = tEl.children.length;
		while(_g < _g1) {
			var i = _g++;
			var row = tEl.children.item(i);
			if(this._trace) {
				haxe_Log.trace(row.cells.item(altGroupPos).nodeValue + "==" + groupName,{ fileName : "src/view/table/Table.hx", lineNumber : 396, className : "view.table.Table", methodName : "selectAltGroup"});
			}
			if(row.cells.item(altGroupPos).textContent == groupName) {
				row.classList.toggle("is-selected");
			}
		}
	}
	,selectedRowsMap: function() {
		var _g = [];
		var _g1 = 0;
		var _g2 = this.state.selectedRows;
		while(_g1 < _g2.length) {
			var r = _g2[_g1];
			++_g1;
			_g.push(this.selectedRowMap(r));
		}
		return _g;
	}
	,selectedRowMap: function(row) {
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		var _g2 = row.cells;
		while(_g1 < _g2.length) {
			var c = _g2[_g1];
			++_g1;
			_g.h[c.dataset.name] = c.innerHTML;
		}
		var rM = _g;
		var v = row.dataset.id;
		rM.h["id"] = v;
		return rM;
	}
	,layOut: function() {
		var _gthis = this;
		if(this._trace) {
			haxe_Log.trace("firstCall: " + (this.props.id + " " + Std.string(this.props.fullWidth)) + " " + Std.string(this.headerUpdated) + " " + Std.string(this.tHeadRef) + ": " + Std.string(this.tHeadRef != null && react_ReactRef.get_current(this.tHeadRef) != null),{ fileName : "src/view/table/Table.hx", lineNumber : 434, className : "view.table.Table", methodName : "layOut"});
		}
		var freeWidth = 0;
		if(this.tHeadRef == null || react_ReactRef.get_current(this.tHeadRef) == null) {
			if(this._trace) {
				haxe_Log.trace("" + Std.string(this.tHeadRef) + ": " + Std.string(this.tHeadRef != null && react_ReactRef.get_current(this.tHeadRef) != null),{ fileName : "src/view/table/Table.hx", lineNumber : 440, className : "view.table.Table", methodName : "layOut"});
			}
			if(this._timer != null) {
				return;
			}
			var _max = 13;
			this._timer = App.await(250,function() {
				_max -= 1;
				if(_max + 1 < 0) {
					return -1;
				}
				if(_gthis._trace) {
					haxe_Log.trace(_max,{ fileName : "src/view/table/Table.hx", lineNumber : 449, className : "view.table.Table", methodName : "layOut"});
				}
				if(_gthis.tHeadRef != null) {
					return react_ReactRef.get_current(_gthis.tHeadRef) != null;
				} else {
					return false;
				}
			},$bind(this,this.layOut));
			return;
		}
		this.set_headerUpdated(true);
		var scrollBarWidth = App.config.getScrollbarWidth(true);
		var hasScrollbar = false;
		freeWidth = react_ReactRef.get_current(this.tableRef).parentElement.offsetWidth - react_ReactRef.get_current(this.tableRef).offsetWidth - (hasScrollbar ? scrollBarWidth : 0);
		freeWidth = react_ReactRef.get_current(this.tableRef).parentElement.offsetWidth - react_ReactRef.get_current(this.tableRef).offsetWidth;
		if(this._trace) {
			haxe_Log.trace("firstRowRef.current.offsetWidth:" + react_ReactRef.get_current(this.firstRowRef).offsetWidth + " scrollBarWidth:" + scrollBarWidth,{ fileName : "src/view/table/Table.hx", lineNumber : 466, className : "view.table.Table", methodName : "layOut"});
		}
		react_ReactRef.get_current(this.tableRef).setAttribute("style","margin-top:" + react_ReactRef.get_current(this.tHeadRef).offsetHeight * -1 + "px");
		var i = 0;
		var grow = [];
		if(this.props.fullWidth) {
			var _g = 0;
			var _g1 = react_ReactRef.get_current(this.firstRowRef).children;
			while(_g < _g1.length) {
				var cell = _g1[_g];
				++_g;
				var cGrow = cell.getAttribute("data-grow");
				if(cGrow != null) {
					grow[i] = Std.parseInt(cGrow);
				}
				++i;
			}
			var growSum = 0;
			Lambda.iter(grow,function(el) {
				growSum += el == null ? 0 : el;
			});
			if(growSum > 0) {
				var growUnit = Math.ceil(freeWidth / growSum);
				var _g = 0;
				var _g1 = grow.length;
				while(_g < _g1) {
					var i1 = _g++;
					if(grow[i1] != null && grow[i1] != 0) {
						react_ReactRef.get_current(this.firstRowRef).children.item(i1).setAttribute("width",Std.string(grow[i1] * growUnit + react_ReactRef.get_current(this.firstRowRef).children.item(i1).offsetWidth) + "px");
					}
				}
			}
			i = 0;
			var _g = 0;
			var _g1 = react_ReactRef.get_current(this.tHeadRef).children;
			while(_g < _g1.length) {
				var cell = _g1[_g];
				++_g;
				var w = cell.offsetWidth;
				var fixedHeaderCell = js_Boot.__cast(react_ReactRef.get_current(this.fixedHeader).childNodes[i] , HTMLElement);
				fixedHeaderCell.setAttribute("style","width:" + (i == 0 ? w + 1 : w) + "px");
				++i;
			}
		}
		var firstSelectedRow = react_ReactRef.get_current(this.firstRowRef).parentElement.querySelector("[class=\"is-selected\"]");
		if(firstSelectedRow != null) {
			if(this._trace) {
				haxe_Log.trace(firstSelectedRow.offsetTop,{ fileName : "src/view/table/Table.hx", lineNumber : 517, className : "view.table.Table", methodName : "layOut"});
			}
			firstSelectedRow.scrollIntoView();
		}
	}
	,componentDidMount: function() {
		var _gthis = this;
		if(this._trace && this.props.parentComponent.props.formRef != null && this.props.parentComponent.props.formRef.current != null) {
			haxe_Log.trace(this.props.parentComponent.props.formRef.current.name,{ fileName : "src/view/table/Table.hx", lineNumber : 526, className : "view.table.Table", methodName : "componentDidMount"});
		}
		if(this._trace && this.props.data != null && this.props.data[0] != null) {
			haxe_Log.trace(this.props.data[0].h["id"],{ fileName : "src/view/table/Table.hx", lineNumber : 528, className : "view.table.Table", methodName : "componentDidMount"});
		}
		window.requestAnimationFrame(function(t) {
			if(_gthis._trace) {
				haxe_Log.trace(t,{ fileName : "src/view/table/Table.hx", lineNumber : 532, className : "view.table.Table", methodName : "componentDidMount"});
			}
			_gthis.layOut();
		});
	}
	,componentDidUpdate: function(prevProps,prevState) {
		if(this._trace) {
			haxe_Log.trace(Std.string(this.headerUpdated) + ":" + Std.string(this.tHeadRef),{ fileName : "src/view/table/Table.hx", lineNumber : 539, className : "view.table.Table", methodName : "componentDidUpdate"});
		}
		if(this.tHeadRef != null) {
			this.layOut();
		}
	}
	,componentWillUnmount: function() {
		if(this._trace) {
			haxe_Log.trace("leaving...",{ fileName : "src/view/table/Table.hx", lineNumber : 553, className : "view.table.Table", methodName : "componentWillUnmount"});
		}
		if(this._timer != null) {
			this._timer.stop();
		}
	}
	,shouldComponentUpdate: function(nextProps,nextState) {
		return true;
	}
	,showDims: function(ref) {
		var i = 0;
		var s = 0;
		var cells = ref.current != null ? ref.current.cells : ref.cells;
		var _g = 0;
		while(_g < cells.length) {
			var cell = cells[_g];
			++_g;
			if(this._trace) {
				haxe_Log.trace(cell.getBoundingClientRect().toJSON(),{ fileName : "src/view/table/Table.hx", lineNumber : 573, className : "view.table.Table", methodName : "showDims"});
			}
			s += cell.getBoundingClientRect().width;
		}
		if(this._trace) {
			haxe_Log.trace(" sum:" + s,{ fileName : "src/view/table/Table.hx", lineNumber : 576, className : "view.table.Table", methodName : "showDims"});
		}
	}
	,nodeDims: function(n) {
		var i = 0;
		var s = 0;
		var cells = n.childNodes;
		var _g = 0;
		while(_g < cells.length) {
			var cell = cells[_g];
			++_g;
			var dRect = (js_Boot.__cast(cell , HTMLElement)).getBoundingClientRect().toJSON();
			if(this._trace) {
				haxe_Log.trace(dRect,{ fileName : "src/view/table/Table.hx", lineNumber : 587, className : "view.table.Table", methodName : "nodeDims"});
			}
			s += (js_Boot.__cast(cell , HTMLElement)).getBoundingClientRect().width;
		}
		if(this._trace) {
			haxe_Log.trace(" sum:" + s,{ fileName : "src/view/table/Table.hx", lineNumber : 591, className : "view.table.Table", methodName : "nodeDims"});
		}
	}
	,__class__: view_table_Table
	,__properties__: {set_headerUpdated:"set_headerUpdated"}
});
var view_table_Tr = function(props) {
	React_Component.call(this,props);
	this.ref = React.createRef();
	var match = props.parentComponent.props.match;
	this.id = props.data != null ? props.data.h["id"] : "";
	this.state = { cells : [], selected : props.parentComponent.props.selectAble && match != null && match.params.id != null && match.params.id.indexOf(this.id) > -1};
	if(match != null && match.params.id != null && match.params.id.indexOf(this.id) > -1) {
		this.select({ select : true});
	}
	if(props.parentComponent.props.location != null && props.parentComponent.props.location.hash.indexOf(this.id) > -1) {
		this.select({ select : true});
	}
};
$hxClasses["view.table.Tr"] = view_table_Tr;
view_table_Tr.__name__ = "view.table.Tr";
view_table_Tr.__super__ = React_Component;
view_table_Tr.prototype = $extend(React_Component.prototype,{
	me: null
	,id: null
	,ref: null
	,componentDidMount: function() {
	}
	,renderCells: function(rdMap) {
		var _gthis = this;
		if(this.props.data == null) {
			haxe_Log.trace("oops...",{ fileName : "src/view/table/Tr.hx", lineNumber : 104, className : "view.table.Tr", methodName : "renderCells"});
			return null;
		}
		var tmp = this.props.row == 1;
		var column = 0;
		var reported = false;
		var _this = this.props.fieldNames;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			var fN = _this[i];
			var columnDataState = _gthis.props.columns.h[fN];
			if(columnDataState == null && !reported) {
				haxe_Log.trace(fN,{ fileName : "src/view/table/Tr.hx", lineNumber : 118, className : "view.table.Tr", methodName : "renderCells"});
				reported = true;
			}
			var cD = columnDataState == null ? { show : false} : { cellFormat : columnDataState.cellFormat, className : columnDataState.className, data : rdMap.h[fN], dataDisplay : columnDataState.cellFormat != null ? columnDataState.cellFormat(rdMap.h[fN]) : rdMap.h[fN], flexGrow : columnDataState.flexGrow, name : fN, pos : { column : column++, row : _gthis.props.row}, show : columnDataState.show != false};
			result[i] = cD;
		}
		var cells = result;
		var rCs = [];
		var _g = 0;
		while(_g < cells.length) {
			var cD = cells[_g];
			++_g;
			if(!cD.show) {
				continue;
			}
			var tmp = "r" + cD.pos.row + "c" + cD.pos.column;
			rCs.push(React.createElement(react_ReactType.fromString("td"),{ key : tmp, className : cD.className, 'data-name' : cD.name, 'data-grow' : cD.flexGrow},cD.dataDisplay));
		}
		return rCs;
	}
	,render: function() {
		if(this.props.row == 0) {
			this.ref = this.props.firstTableRow;
		}
		var cl = this.state.selected ? "is-selected" : "";
		if(this.props.data == null) {
			return null;
		}
		if(this.props.row == 0) {
			haxe_Log.trace(this.props.data == null ? "null" : haxe_ds_StringMap.stringify(this.props.data.h),{ fileName : "src/view/table/Tr.hx", lineNumber : 167, className : "view.table.Tr", methodName : "render"});
		}
		return React.createElement(react_ReactType.fromString("tr"),{ key : this.props.row, ref : this.ref, className : cl, 'data-id' : this.props.data.h["id"], 'data-row' : this.props.row, title : this.props.data.h["id"], onClick : $bind(this,this.select)},this.renderCells(this.props.data));
	}
	,select: function(mEvOrID) {
		haxe_Log.trace("" + Std.string(this.props.data.h["id"]) + " selected:" + Std.string(this.state.selected),{ fileName : "src/view/table/Tr.hx", lineNumber : 184, className : "view.table.Tr", methodName : "select"});
		if(!this.props.selectAble) {
			return;
		}
		haxe_Log.trace(Reflect.fields(this.props),{ fileName : "src/view/table/Tr.hx", lineNumber : 187, className : "view.table.Tr", methodName : "select"});
		if(mEvOrID.select == null) {
			try {
				var evt = mEvOrID;
				var tEl = js_Boot.__cast(mEvOrID.target , HTMLElement);
				haxe_Log.trace(tEl.closest("table"),{ fileName : "src/view/table/Tr.hx", lineNumber : 195, className : "view.table.Tr", methodName : "select"});
			} catch( _g ) {
				var ex = haxe_Exception.caught(_g).unwrap();
				haxe_Log.trace(ex,{ fileName : "src/view/table/Tr.hx", lineNumber : 206, className : "view.table.Tr", methodName : "select"});
			}
		}
		if(this.props.parentComponent != null && this.props.parentComponent.props.select != null) {
			if(!this.state.selected) {
				var c = js_Boot.getClass(this.props.parentComponent);
				haxe_Log.trace(Std.string(this.props.data.h["id"]) + ":" + c.__name__,{ fileName : "src/view/table/Tr.hx", lineNumber : 215, className : "view.table.Tr", methodName : "select"});
				if(this.props.parentComponent.props.match == null) {
					this.props.parentComponent.props.select(this.props.data.h["id"],this.props.parentComponent);
				} else {
					var _g = new haxe_ds_StringMap();
					_g.h[this.props.data.h["id"]] = this.props.data;
					var data = _g;
					this.props.parentComponent.props.select(this.props.data.h["id"],data,this.props.parentComponent.props.match);
				}
			} else {
				haxe_Log.trace("unselect",{ fileName : "src/view/table/Tr.hx", lineNumber : 229, className : "view.table.Tr", methodName : "select"});
				if(this.props.parentComponent.props.match == null) {
					this.props.parentComponent.props.select(this.props.data.h["id"],this.props.parentComponent,"Unselect");
				} else {
					this.props.parentComponent.props.select(this.props.data.h["id"],null,this.props.parentComponent.props.match,"Unselect");
				}
			}
		}
		if(this.props.selectAble) {
			this.state = react_ReactUtil.copy(this.state,{ selected : mEvOrID.select ? true : !this.state.selected});
		}
		haxe_Log.trace("selected:" + Std.string(this.state.selected),{ fileName : "src/view/table/Tr.hx", lineNumber : 242, className : "view.table.Tr", methodName : "select"});
		var c = js_Boot.getClass(this.props.parentComponent);
		haxe_Log.trace("props.parentComponent.props.classPath:" + c.__name__,{ fileName : "src/view/table/Tr.hx", lineNumber : 244, className : "view.table.Tr", methodName : "select"});
	}
	,__class__: view_table_Tr
});
function $iterator(o) { if( o instanceof Array ) return function() { return new haxe_iterators_ArrayIterator(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
function $getIterator(o) { if( o instanceof Array ) return new haxe_iterators_ArrayIterator(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
js_Boot.__toStr = ({ }).toString;
var JQueryDefined = typeof($) != "undefined";
if(JQueryDefined && $.fn != null) {
	$.fn.elements = function() {
		return new js_jquery_JqEltsIterator(this);
	};
}
var JQueryDefined = typeof($) != "undefined";
if(JQueryDefined && $.fn != null) {
	$.fn.iterator = function() {
		return new js_jquery_JqIterator(this);
	};
}
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl;
}
App.STYLES = require("App.scss");
App.ConfigData = require("./config.json");
App.config = require("config.js").config;
App.devIP = __devIP__ == "X" ? "" : __devIP__;
App.devPassword = "";
App.devUser = __user_name__ == "X" ? "" : __user_name__;
App.flatpickr = require("flatpickr");
App.German = require("flatpickr/dist/l10n/de.js");
App.flat = require("flatpickr/dist/flatpickr.min.css");
App.sprintf = require("sprintf-js").sprintf;
App.modalBox = React.createRef();
App.onResizeComponents = new haxe_ds_List();
App.defaultUrl = "/Data/Contacts/List/get";
App.mandator = 1;
App.maxLoginAttempts = 8;
App.displayName = "App";
DateTools.DAY_SHORT_NAMES = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];
DateTools.DAY_NAMES = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
DateTools.MONTH_SHORT_NAMES = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
DateTools.MONTH_NAMES = ["January","February","March","April","May","June","July","August","September","October","November","December"];
DateTools.DAYS_OF_MONTH = [31,28,31,30,31,30,31,31,30,31,30,31];
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
bulma_$components_Footer.displayName = "Footer";
css_FlexFlow.Row = "row";
css_FlexFlow.RowReverse = "row-reverse";
css_FlexFlow.Column = "column";
css_FlexFlow.ColumnReverse = "column-reverse";
css_FlexFlow.NoWrap = "nowrap";
css_FlexFlow.Wrap = "wrap";
css_FlexFlow.WrapReverse = "wrap-reverse";
css_GlobalValue.Inherit = "inherit";
css_GlobalValue.Initial = "initial";
css_GlobalValue.Unset = "unset";
css_OverflowCompo.Visible = "visible";
css_OverflowCompo.Hidden = "hidden";
css_OverflowCompo.Scroll = "scroll";
css_OverflowCompo.Auto = "auto";
css_TextOverflow.Clip = "clip";
css_TextOverflow.Ellipsis = "ellipsis";
css_VerticalAlign.Baseline = "baseline";
css_VerticalAlign.Sub = "sub";
css_VerticalAlign.Super = "super";
css_VerticalAlign.TextTop = "text-top";
css_VerticalAlign.TextBottom = "text-bottom";
css_VerticalAlign.Middle = "middle";
css_VerticalAlign.Top = "top";
css_VerticalAlign.Bottom = "bottom";
hxbit_Serializer.UID = 0;
hxbit_Serializer.SEQ = 0;
hxbit_Serializer.SEQ_BITS = 8;
hxbit_Serializer.SEQ_MASK = 16777215;
hxbit_Serializer.CLASSES = [];
hxbit_Serializer.ENUM_CLASSES = new haxe_ds_StringMap();
db_DbQuery.__clid = hxbit_Serializer.registerClass(db_DbQuery);
db_DbRelation.__clid = hxbit_Serializer.registerClass(db_DbRelation);
db_DbUser.__clid = hxbit_Serializer.registerClass(db_DbUser);
haxe_Int32._mul = Math.imul != null ? Math.imul : function(a,b) {
	return a * (b & 65535) + (a * (b >>> 16) << 16 | 0) | 0;
};
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_io_Bytes.bi = 0;
me_cunity_debug_Out.suspended = false;
me_cunity_debug_Out.skipFields = [];
me_cunity_debug_Out.skipFunctions = true;
me_cunity_debug_Out.traceToConsole = false;
me_cunity_debug_Out.traceTarget = me_cunity_debug_DebugOutput.NATIVE;
me_cunity_debug_Out.aStack = haxe_CallStack.callStack;
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	h.h["lt"] = "<";
	h.h["gt"] = ">";
	h.h["amp"] = "&";
	h.h["quot"] = "\"";
	h.h["apos"] = "'";
	$r = h;
	return $r;
}(this));
hxbit_Convert.convFuns = new haxe_ds_StringMap();
hxbit_Macros.IN_ENUM_SER = false;
hxbit_Schema.__clid = hxbit_Serializer.registerClass(hxbit_Schema);
js_d3__$D3_InitPriority.important = "important";
loader_AjaxLoader.rqs = [];
loader_BinaryLoader.qi = 0;
model_ORM.__meta__ = { fields : { id : { dataType : ["bigint"]}}};
model_ORM.__rtti = "<class path=\"model.ORM\" params=\"\">\n\t<dsep expr=\"&quot;,&quot;\" line=\"31\" static=\"1\">\n\t\t<c path=\"String\"/>\n\t\t<meta><m n=\":value\"><e>\",\"</e></m></meta>\n\t</dsep>\n\t<tableName public=\"1\" static=\"1\"><c path=\"String\"/></tableName>\n\t<id public=\"1\" set=\"null\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</id>\n\t<set_id set=\"method\" line=\"23\"><f a=\"id\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_id>\n\t<fieldsInitalized public=\"1\" set=\"null\"><c path=\"Array\"><c path=\"String\"/></c></fieldsInitalized>\n\t<fieldsModified public=\"1\" set=\"null\"><c path=\"Array\"><c path=\"String\"/></c></fieldsModified>\n\t<fieldFormat public=\"1\"><t path=\"Map\">\n\t<c path=\"String\"/>\n\t<x path=\"haxe.Function\"/>\n</t></fieldFormat>\n\t<formBuilder public=\"1\"><c path=\"view.shared.FormBuilder\"/></formBuilder>\n\t<propertyNames public=\"1\"><c path=\"Array\"><c path=\"String\"/></c></propertyNames>\n\t<state public=\"1\"><d/></state>\n\t<fields><d><d><c path=\"Array\"><d/></c></d></d></fields>\n\t<allModified public=\"1\" set=\"method\" line=\"77\"><f a=\"\"><d/></f></allModified>\n\t<initFields public=\"1\" set=\"method\" line=\"107\"><f a=\"\"><x path=\"Void\"/></f></initFields>\n\t<initialized public=\"1\" set=\"method\" line=\"133\"><f a=\"?attName\">\n\t<c path=\"String\"/>\n\t<x path=\"Bool\"/>\n</f></initialized>\n\t<modified public=\"1\" set=\"method\" line=\"143\"><f a=\"?attName\">\n\t<c path=\"String\"/>\n\t<x path=\"Bool\"/>\n</f></modified>\n\t<reset public=\"1\" set=\"method\" line=\"153\"><f a=\"?attName\">\n\t<c path=\"String\"/>\n\t<x path=\"Int\"/>\n</f></reset>\n\t<save public=\"1\" set=\"method\" line=\"165\"><f a=\"\"><x path=\"Void\"/></f></save>\n\t<new public=\"1\" set=\"method\" line=\"43\"><f a=\"data\">\n\t<t path=\"Map\">\n\t\t<c path=\"String\"/>\n\t\t<d/>\n\t</t>\n\t<x path=\"Void\"/>\n</f></new>\n\t<meta>\n\t\t<m n=\":directlyUsed\"/>\n\t\t<m n=\":build\"><e>react.jsx.JsxStaticMacro.build()</e></m>\n\t\t<m n=\":keep\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
model_ORM.dsep = ",";
model_Account.__meta__ = { fields : { contact : { dataType : ["bigint"]}, bank_name : { dataType : ["character varying(64)"]}, bic : { dataType : ["character varying(11)"]}, account : { dataType : ["character varying(32)"]}, iban : { dataType : ["character varying(32)"]}, account_holder : { dataType : ["text"]}, sign_date : { dataType : ["date"]}, status : { dataType : ["accounts_state"]}, creation_date : { dataType : ["timestamp with time zone"]}, edited_by : { dataType : ["bigint"]}, last_updated : { dataType : ["timestamp with time zone"]}, mandator : { dataType : ["bigint"]}}};
model_Account.__rtti = "<class path=\"model.Account\" params=\"\">\n\t<extends path=\"model.ORM\"/>\n\t<tableName public=\"1\" expr=\"&quot;accounts&quot;\" line=\"8\" static=\"1\">\n\t\t<c path=\"String\"/>\n\t\t<meta><m n=\":value\"><e>\"accounts\"</e></m></meta>\n\t</tableName>\n\t<contact public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</contact>\n\t<set_contact set=\"method\" line=\"17\"><f a=\"contact\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_contact>\n\t<bank_name public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(64)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</bank_name>\n\t<set_bank_name set=\"method\" line=\"27\"><f a=\"bank_name\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_bank_name>\n\t<bic public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(11)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</bic>\n\t<set_bic set=\"method\" line=\"37\"><f a=\"bic\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_bic>\n\t<account public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(32)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</account>\n\t<set_account set=\"method\" line=\"47\"><f a=\"account\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_account>\n\t<iban public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(32)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</iban>\n\t<set_iban set=\"method\" line=\"57\"><f a=\"iban\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_iban>\n\t<account_holder public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"text\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</account_holder>\n\t<set_account_holder set=\"method\" line=\"67\"><f a=\"account_holder\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_account_holder>\n\t<sign_date public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"date\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</sign_date>\n\t<set_sign_date set=\"method\" line=\"77\"><f a=\"sign_date\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_sign_date>\n\t<status public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"accounts_state\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</status>\n\t<set_status set=\"method\" line=\"87\"><f a=\"status\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_status>\n\t<creation_date public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"timestamp with time zone\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</creation_date>\n\t<set_creation_date set=\"method\" line=\"97\"><f a=\"creation_date\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_creation_date>\n\t<edited_by public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</edited_by>\n\t<set_edited_by set=\"method\" line=\"107\"><f a=\"edited_by\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_edited_by>\n\t<last_updated public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"timestamp with time zone\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</last_updated>\n\t<set_last_updated set=\"method\" line=\"117\"><f a=\"last_updated\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_last_updated>\n\t<mandator public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</mandator>\n\t<set_mandator set=\"method\" line=\"127\"><f a=\"mandator\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_mandator>\n\t<new public=\"1\" set=\"method\" line=\"10\"><f a=\"data\">\n\t<t path=\"Map\">\n\t\t<c path=\"String\"/>\n\t\t<c path=\"String\"/>\n\t</t>\n\t<x path=\"Void\"/>\n</f></new>\n\t<meta>\n\t\t<m n=\":directlyUsed\"/>\n\t\t<m n=\":build\"><e>react.jsx.JsxStaticMacro.build()</e></m>\n\t\t<m n=\":keep\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
model_Account.tableName = "accounts";
model_Contact.__meta__ = { fields : { mandator : { dataType : ["bigint"]}, creation_date : { dataType : ["timestamp(0) without time zone"]}, status : { dataType : ["character varying(64)"]}, use_email : { dataType : ["boolean"]}, company_name : { dataType : ["character varying(64)"]}, care_of : { dataType : ["character varying(100)"]}, phone_code : { dataType : ["character varying(10)"]}, phone_number : { dataType : ["character varying(18)"]}, fax : { dataType : ["character varying(18)"]}, title : { dataType : ["character varying(64)"]}, first_name : { dataType : ["character varying(32)"]}, last_name : { dataType : ["character varying(32)"]}, address1 : { dataType : ["character varying(64)"]}, address2 : { dataType : ["character varying(64)"]}, city : { dataType : ["character varying(50)"]}, postal_code : { dataType : ["character varying(10)"]}, country_code : { dataType : ["character varying(3)"]}, gender : { dataType : ["character varying(64)"]}, date_of_birth : { dataType : ["date"]}, mobile : { dataType : ["character varying(19)"]}, email : { dataType : ["character varying(64)"]}, comments : { dataType : ["character varying(4096)"]}, edited_by : { dataType : ["bigint"]}, merged : { dataType : ["bigint[]"]}, last_updated : { dataType : ["timestamp(0) without time zone"]}, owner : { dataType : ["bigint"]}, title_pro : { dataType : ["character varying(80)"]}}};
model_Contact.__rtti = "<class path=\"model.Contact\" params=\"\">\n\t<extends path=\"model.ORM\"/>\n\t<tableName public=\"1\" expr=\"&quot;contacts&quot;\" line=\"8\" static=\"1\">\n\t\t<c path=\"String\"/>\n\t\t<meta><m n=\":value\"><e>\"contacts\"</e></m></meta>\n\t</tableName>\n\t<mandator public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</mandator>\n\t<set_mandator set=\"method\" line=\"17\"><f a=\"mandator\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_mandator>\n\t<creation_date public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"timestamp(0) without time zone\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</creation_date>\n\t<set_creation_date set=\"method\" line=\"27\"><f a=\"creation_date\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_creation_date>\n\t<status public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(64)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</status>\n\t<set_status set=\"method\" line=\"37\"><f a=\"status\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_status>\n\t<use_email public=\"1\" set=\"accessor\">\n\t\t<x path=\"Bool\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"boolean\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</use_email>\n\t<set_use_email set=\"method\" line=\"47\"><f a=\"use_email\">\n\t<x path=\"Bool\"/>\n\t<x path=\"Bool\"/>\n</f></set_use_email>\n\t<company_name public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(64)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</company_name>\n\t<set_company_name set=\"method\" line=\"57\"><f a=\"company_name\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_company_name>\n\t<care_of public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(100)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</care_of>\n\t<set_care_of set=\"method\" line=\"67\"><f a=\"care_of\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_care_of>\n\t<phone_code public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(10)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</phone_code>\n\t<set_phone_code set=\"method\" line=\"77\"><f a=\"phone_code\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_phone_code>\n\t<phone_number public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(18)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</phone_number>\n\t<set_phone_number set=\"method\" line=\"87\"><f a=\"phone_number\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_phone_number>\n\t<fax public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(18)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</fax>\n\t<set_fax set=\"method\" line=\"97\"><f a=\"fax\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_fax>\n\t<title public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(64)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</title>\n\t<set_title set=\"method\" line=\"107\"><f a=\"title\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_title>\n\t<first_name public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(32)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</first_name>\n\t<set_first_name set=\"method\" line=\"117\"><f a=\"first_name\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_first_name>\n\t<last_name public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(32)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</last_name>\n\t<set_last_name set=\"method\" line=\"127\"><f a=\"last_name\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_last_name>\n\t<address1 public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(64)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</address1>\n\t<set_address1 set=\"method\" line=\"137\"><f a=\"address1\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_address1>\n\t<address2 public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(64)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</address2>\n\t<set_address2 set=\"method\" line=\"147\"><f a=\"address2\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_address2>\n\t<city public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(50)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</city>\n\t<set_city set=\"method\" line=\"157\"><f a=\"city\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_city>\n\t<postal_code public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(10)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</postal_code>\n\t<set_postal_code set=\"method\" line=\"167\"><f a=\"postal_code\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_postal_code>\n\t<country_code public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(3)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</country_code>\n\t<set_country_code set=\"method\" line=\"177\"><f a=\"country_code\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_country_code>\n\t<gender public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(64)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</gender>\n\t<set_gender set=\"method\" line=\"187\"><f a=\"gender\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_gender>\n\t<date_of_birth public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"date\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</date_of_birth>\n\t<set_date_of_birth set=\"method\" line=\"197\"><f a=\"date_of_birth\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_date_of_birth>\n\t<mobile public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(19)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</mobile>\n\t<set_mobile set=\"method\" line=\"207\"><f a=\"mobile\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_mobile>\n\t<email public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(64)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</email>\n\t<set_email set=\"method\" line=\"217\"><f a=\"email\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_email>\n\t<comments public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(4096)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</comments>\n\t<set_comments set=\"method\" line=\"227\"><f a=\"comments\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_comments>\n\t<edited_by public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</edited_by>\n\t<set_edited_by set=\"method\" line=\"237\"><f a=\"edited_by\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_edited_by>\n\t<merged public=\"1\" set=\"accessor\">\n\t\t<c path=\"Array\"><x path=\"Int\"/></c>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint[]\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</merged>\n\t<set_merged set=\"method\" line=\"247\"><f a=\"merged\">\n\t<c path=\"Array\"><x path=\"Int\"/></c>\n\t<c path=\"Array\"><x path=\"Int\"/></c>\n</f></set_merged>\n\t<last_updated public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"timestamp(0) without time zone\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</last_updated>\n\t<set_last_updated set=\"method\" line=\"257\"><f a=\"last_updated\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_last_updated>\n\t<owner public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</owner>\n\t<set_owner set=\"method\" line=\"267\"><f a=\"owner\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_owner>\n\t<title_pro public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(80)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</title_pro>\n\t<set_title_pro set=\"method\" line=\"277\"><f a=\"title_pro\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_title_pro>\n\t<new public=\"1\" set=\"method\" line=\"10\"><f a=\"data\">\n\t<t path=\"Map\">\n\t\t<c path=\"String\"/>\n\t\t<c path=\"String\"/>\n\t</t>\n\t<x path=\"Void\"/>\n</f></new>\n\t<meta>\n\t\t<m n=\":directlyUsed\"/>\n\t\t<m n=\":build\"><e>react.jsx.JsxStaticMacro.build()</e></m>\n\t\t<m n=\":keep\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
model_Contact.tableName = "contacts";
model_Deal.__meta__ = { fields : { contact : { dataType : ["bigint"]}, creation_date : { dataType : ["timestamp(0) without time zone"]}, account : { dataType : ["bigint"]}, target_account : { dataType : ["bigint"]}, booking_run : { dataType : ["booking_runs"]}, start_date : { dataType : ["date"]}, cycle : { dataType : ["deals_cycle"]}, amount : { dataType : ["numeric(10,2)"]}, product : { dataType : ["bigint"]}, agent : { dataType : ["bigint"]}, project : { dataType : ["bigint"]}, active : { dataType : ["boolean"]}, pay_method : { dataType : ["pay_methods"]}, end_date : { dataType : ["date"]}, end_reason : { dataType : ["bigint"]}, repeat_date : { dataType : ["date"]}, edited_by : { dataType : ["bigint"]}, mandator : { dataType : ["bigint"]}, old_active : { dataType : ["boolean"]}, cycle_start_date : { dataType : ["date"]}, last_updated : { dataType : ["timestamp(0) without time zone"]}, booking_day : { dataType : ["character varying"]}, lead_id : { dataType : ["bigint"]}}};
model_Deal.__rtti = "<class path=\"model.Deal\" params=\"\">\n\t<extends path=\"model.ORM\"/>\n\t<tableName public=\"1\" expr=\"&quot;deals&quot;\" line=\"8\" static=\"1\">\n\t\t<c path=\"String\"/>\n\t\t<meta><m n=\":value\"><e>\"deals\"</e></m></meta>\n\t</tableName>\n\t<contact public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</contact>\n\t<set_contact set=\"method\" line=\"17\"><f a=\"contact\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_contact>\n\t<creation_date public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"timestamp(0) without time zone\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</creation_date>\n\t<set_creation_date set=\"method\" line=\"27\"><f a=\"creation_date\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_creation_date>\n\t<account public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</account>\n\t<set_account set=\"method\" line=\"37\"><f a=\"account\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_account>\n\t<target_account public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</target_account>\n\t<set_target_account set=\"method\" line=\"47\"><f a=\"target_account\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_target_account>\n\t<booking_run public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"booking_runs\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</booking_run>\n\t<set_booking_run set=\"method\" line=\"57\"><f a=\"booking_run\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_booking_run>\n\t<start_date public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"date\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</start_date>\n\t<set_start_date set=\"method\" line=\"67\"><f a=\"start_date\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_start_date>\n\t<cycle public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"deals_cycle\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</cycle>\n\t<set_cycle set=\"method\" line=\"77\"><f a=\"cycle\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_cycle>\n\t<amount public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"numeric(10,2)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</amount>\n\t<set_amount set=\"method\" line=\"87\"><f a=\"amount\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_amount>\n\t<product public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</product>\n\t<set_product set=\"method\" line=\"97\"><f a=\"product\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_product>\n\t<agent public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</agent>\n\t<set_agent set=\"method\" line=\"107\"><f a=\"agent\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_agent>\n\t<project public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</project>\n\t<set_project set=\"method\" line=\"117\"><f a=\"project\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_project>\n\t<active public=\"1\" set=\"accessor\">\n\t\t<x path=\"Bool\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"boolean\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</active>\n\t<set_active set=\"method\" line=\"127\"><f a=\"active\">\n\t<x path=\"Bool\"/>\n\t<x path=\"Bool\"/>\n</f></set_active>\n\t<pay_method public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"pay_methods\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</pay_method>\n\t<set_pay_method set=\"method\" line=\"137\"><f a=\"pay_method\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_pay_method>\n\t<end_date public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"date\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</end_date>\n\t<set_end_date set=\"method\" line=\"147\"><f a=\"end_date\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_end_date>\n\t<end_reason public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</end_reason>\n\t<set_end_reason set=\"method\" line=\"157\"><f a=\"end_reason\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_end_reason>\n\t<repeat_date public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"date\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</repeat_date>\n\t<set_repeat_date set=\"method\" line=\"167\"><f a=\"repeat_date\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_repeat_date>\n\t<edited_by public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</edited_by>\n\t<set_edited_by set=\"method\" line=\"177\"><f a=\"edited_by\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_edited_by>\n\t<mandator public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</mandator>\n\t<set_mandator set=\"method\" line=\"187\"><f a=\"mandator\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_mandator>\n\t<old_active public=\"1\" set=\"accessor\">\n\t\t<x path=\"Bool\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"boolean\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</old_active>\n\t<set_old_active set=\"method\" line=\"197\"><f a=\"old_active\">\n\t<x path=\"Bool\"/>\n\t<x path=\"Bool\"/>\n</f></set_old_active>\n\t<cycle_start_date public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"date\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</cycle_start_date>\n\t<set_cycle_start_date set=\"method\" line=\"207\"><f a=\"cycle_start_date\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_cycle_start_date>\n\t<last_updated public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"timestamp(0) without time zone\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</last_updated>\n\t<set_last_updated set=\"method\" line=\"217\"><f a=\"last_updated\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_last_updated>\n\t<booking_day public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</booking_day>\n\t<set_booking_day set=\"method\" line=\"227\"><f a=\"booking_day\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_booking_day>\n\t<lead_id public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</lead_id>\n\t<set_lead_id set=\"method\" line=\"237\"><f a=\"lead_id\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_lead_id>\n\t<new public=\"1\" set=\"method\" line=\"10\"><f a=\"data\">\n\t<t path=\"Map\">\n\t\t<c path=\"String\"/>\n\t\t<c path=\"String\"/>\n\t</t>\n\t<x path=\"Void\"/>\n</f></new>\n\t<meta>\n\t\t<m n=\":directlyUsed\"/>\n\t\t<m n=\":build\"><e>react.jsx.JsxStaticMacro.build()</e></m>\n\t\t<m n=\":keep\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
model_Deal.tableName = "deals";
model_QC.__meta__ = { fields : { mandator : { dataType : ["bigint"]}, creation_date : { dataType : ["timestamp(0) without time zone"]}, status : { dataType : ["character varying(64)"]}, use_email : { dataType : ["boolean"]}, company_name : { dataType : ["character varying(64)"]}, co_field : { dataType : ["character varying(100)"]}, phone_code : { dataType : ["character varying(10)"]}, phone_number : { dataType : ["character varying(18)"]}, fax : { dataType : ["character varying(18)"]}, title : { dataType : ["character varying(64)"]}, first_name : { dataType : ["character varying(32)"]}, last_name : { dataType : ["character varying(32)"]}, address1 : { dataType : ["character varying(64)"]}, address2 : { dataType : ["character varying(64)"]}, city : { dataType : ["character varying(50)"]}, postal_code : { dataType : ["character varying(10)"]}, country_code : { dataType : ["character varying(3)"]}, gender : { dataType : ["character varying(64)"]}, date_of_birth : { dataType : ["date"]}, mobile : { dataType : ["character varying(19)"]}, email : { dataType : ["character varying(64)"]}, comments : { dataType : ["character varying(4096)"]}, edited_by : { dataType : ["bigint"]}, merged : { dataType : ["bigint[]"]}, last_updated : { dataType : ["timestamp(0) without time zone"]}, owner : { dataType : ["bigint"]}, title_pro : { dataType : ["character varying(80)"]}, lead_id : { dataType : ["bigint"]}, period : { dataType : ["text"]}, anrede : { dataType : ["text"]}, account : { dataType : ["text"]}, blz : { dataType : ["text"]}, iban : { dataType : ["character varying(32)"]}, bank_name : { dataType : ["text"]}, spenden_hoehe : { dataType : ["text"]}, start_monat : { dataType : ["text"]}, buchungs_tag : { dataType : ["text"]}, buchungs_zeitpunkt : { dataType : ["text"]}, mailing : { dataType : ["text"]}, client_status : { dataType : ["text"]}, entry_list_id : { dataType : ["bigint"]}, entry_date : { dataType : ["timestamp without time zone"]}}};
model_QC.__rtti = "<class path=\"model.QC\" params=\"\">\n\t<extends path=\"model.ORM\"/>\n\t<tableName public=\"1\" expr=\"&quot;qcs&quot;\" line=\"8\" static=\"1\">\n\t\t<c path=\"String\"/>\n\t\t<meta><m n=\":value\"><e>\"qcs\"</e></m></meta>\n\t</tableName>\n\t<mandator public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</mandator>\n\t<set_mandator set=\"method\" line=\"17\"><f a=\"mandator\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_mandator>\n\t<creation_date public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"timestamp(0) without time zone\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</creation_date>\n\t<set_creation_date set=\"method\" line=\"27\"><f a=\"creation_date\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_creation_date>\n\t<status public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(64)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</status>\n\t<set_status set=\"method\" line=\"37\"><f a=\"status\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_status>\n\t<use_email public=\"1\" set=\"accessor\">\n\t\t<x path=\"Bool\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"boolean\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</use_email>\n\t<set_use_email set=\"method\" line=\"47\"><f a=\"use_email\">\n\t<x path=\"Bool\"/>\n\t<x path=\"Bool\"/>\n</f></set_use_email>\n\t<company_name public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(64)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</company_name>\n\t<set_company_name set=\"method\" line=\"57\"><f a=\"company_name\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_company_name>\n\t<co_field public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(100)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</co_field>\n\t<set_co_field set=\"method\" line=\"67\"><f a=\"co_field\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_co_field>\n\t<phone_code public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(10)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</phone_code>\n\t<set_phone_code set=\"method\" line=\"77\"><f a=\"phone_code\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_phone_code>\n\t<phone_number public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(18)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</phone_number>\n\t<set_phone_number set=\"method\" line=\"87\"><f a=\"phone_number\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_phone_number>\n\t<fax public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(18)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</fax>\n\t<set_fax set=\"method\" line=\"97\"><f a=\"fax\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_fax>\n\t<title public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(64)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</title>\n\t<set_title set=\"method\" line=\"107\"><f a=\"title\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_title>\n\t<first_name public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(32)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</first_name>\n\t<set_first_name set=\"method\" line=\"117\"><f a=\"first_name\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_first_name>\n\t<last_name public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(32)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</last_name>\n\t<set_last_name set=\"method\" line=\"127\"><f a=\"last_name\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_last_name>\n\t<address1 public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(64)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</address1>\n\t<set_address1 set=\"method\" line=\"137\"><f a=\"address1\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_address1>\n\t<address2 public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(64)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</address2>\n\t<set_address2 set=\"method\" line=\"147\"><f a=\"address2\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_address2>\n\t<city public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(50)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</city>\n\t<set_city set=\"method\" line=\"157\"><f a=\"city\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_city>\n\t<postal_code public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(10)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</postal_code>\n\t<set_postal_code set=\"method\" line=\"167\"><f a=\"postal_code\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_postal_code>\n\t<country_code public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(3)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</country_code>\n\t<set_country_code set=\"method\" line=\"177\"><f a=\"country_code\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_country_code>\n\t<gender public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(64)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</gender>\n\t<set_gender set=\"method\" line=\"187\"><f a=\"gender\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_gender>\n\t<date_of_birth public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"date\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</date_of_birth>\n\t<set_date_of_birth set=\"method\" line=\"197\"><f a=\"date_of_birth\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_date_of_birth>\n\t<mobile public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(19)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</mobile>\n\t<set_mobile set=\"method\" line=\"207\"><f a=\"mobile\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_mobile>\n\t<email public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(64)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</email>\n\t<set_email set=\"method\" line=\"217\"><f a=\"email\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_email>\n\t<comments public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(4096)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</comments>\n\t<set_comments set=\"method\" line=\"227\"><f a=\"comments\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_comments>\n\t<edited_by public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</edited_by>\n\t<set_edited_by set=\"method\" line=\"237\"><f a=\"edited_by\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_edited_by>\n\t<merged public=\"1\" set=\"accessor\">\n\t\t<c path=\"Array\"><x path=\"Int\"/></c>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint[]\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</merged>\n\t<set_merged set=\"method\" line=\"247\"><f a=\"merged\">\n\t<c path=\"Array\"><x path=\"Int\"/></c>\n\t<c path=\"Array\"><x path=\"Int\"/></c>\n</f></set_merged>\n\t<last_updated public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"timestamp(0) without time zone\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</last_updated>\n\t<set_last_updated set=\"method\" line=\"257\"><f a=\"last_updated\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_last_updated>\n\t<owner public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</owner>\n\t<set_owner set=\"method\" line=\"267\"><f a=\"owner\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_owner>\n\t<title_pro public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(80)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</title_pro>\n\t<set_title_pro set=\"method\" line=\"277\"><f a=\"title_pro\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_title_pro>\n\t<lead_id public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</lead_id>\n\t<set_lead_id set=\"method\" line=\"287\"><f a=\"lead_id\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_lead_id>\n\t<period public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"text\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</period>\n\t<set_period set=\"method\" line=\"297\"><f a=\"period\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_period>\n\t<anrede public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"text\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</anrede>\n\t<set_anrede set=\"method\" line=\"307\"><f a=\"anrede\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_anrede>\n\t<account public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"text\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</account>\n\t<set_account set=\"method\" line=\"317\"><f a=\"account\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_account>\n\t<blz public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"text\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</blz>\n\t<set_blz set=\"method\" line=\"327\"><f a=\"blz\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_blz>\n\t<iban public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"character varying(32)\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</iban>\n\t<set_iban set=\"method\" line=\"337\"><f a=\"iban\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_iban>\n\t<bank_name public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"text\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</bank_name>\n\t<set_bank_name set=\"method\" line=\"347\"><f a=\"bank_name\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_bank_name>\n\t<spenden_hoehe public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"text\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</spenden_hoehe>\n\t<set_spenden_hoehe set=\"method\" line=\"357\"><f a=\"spenden_hoehe\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_spenden_hoehe>\n\t<start_monat public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"text\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</start_monat>\n\t<set_start_monat set=\"method\" line=\"367\"><f a=\"start_monat\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_start_monat>\n\t<buchungs_tag public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"text\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</buchungs_tag>\n\t<set_buchungs_tag set=\"method\" line=\"377\"><f a=\"buchungs_tag\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_buchungs_tag>\n\t<buchungs_zeitpunkt public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"text\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</buchungs_zeitpunkt>\n\t<set_buchungs_zeitpunkt set=\"method\" line=\"387\"><f a=\"buchungs_zeitpunkt\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_buchungs_zeitpunkt>\n\t<mailing public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"text\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</mailing>\n\t<set_mailing set=\"method\" line=\"397\"><f a=\"mailing\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_mailing>\n\t<client_status public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"text\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</client_status>\n\t<set_client_status set=\"method\" line=\"407\"><f a=\"client_status\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_client_status>\n\t<entry_list_id public=\"1\" set=\"accessor\">\n\t\t<x path=\"Int\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"bigint\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</entry_list_id>\n\t<set_entry_list_id set=\"method\" line=\"417\"><f a=\"entry_list_id\">\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n</f></set_entry_list_id>\n\t<entry_date public=\"1\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta>\n\t\t\t<m n=\"dataType\"><e>\"timestamp without time zone\"</e></m>\n\t\t\t<m n=\":isVar\"/>\n\t\t</meta>\n\t</entry_date>\n\t<set_entry_date set=\"method\" line=\"427\"><f a=\"entry_date\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_entry_date>\n\t<new public=\"1\" set=\"method\" line=\"10\"><f a=\"data\">\n\t<t path=\"Map\">\n\t\t<c path=\"String\"/>\n\t\t<c path=\"String\"/>\n\t</t>\n\t<x path=\"Void\"/>\n</f></new>\n\t<meta>\n\t\t<m n=\":directlyUsed\"/>\n\t\t<m n=\":build\"><e>react.jsx.JsxStaticMacro.build()</e></m>\n\t\t<m n=\":keep\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
model_QC.tableName = "qcs";
model_accounting_AccountsModel.dataAccess = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var _g1 = new haxe_ds_StringMap();
		var _g2 = new haxe_ds_StringMap();
		_g2.h["filter"] = "id";
		_g1.h["accounts"] = _g2;
		var _g2 = new haxe_ds_StringMap();
		_g2.h["account_holder"] = { label : "Kontoinhaber", type : "Text"};
		_g2.h["creation_date"] = { label : "Erstellt", type : "Hidden", displayFormat : "d.m.Y", disabled : true};
		_g2.h["sign_date"] = { label : "Erteilt", type : "DatePicker", displayFormat : "d.m.Y"};
		_g2.h["bank_name"] = { label : "Bank", type : "Text"};
		_g2.h["iban"] = { label : "IBAN", type : "Text", className : "tableNums"};
		var _g3 = new haxe_ds_StringMap();
		_g3.h["active"] = "Aktiv";
		_g3.h["passive"] = "Passiv";
		_g3.h["new"] = "Neu";
		_g2.h["status"] = { label : "Status", type : "Select", options : _g3};
		_g2.h["id"] = { type : "Hidden"};
		_g2.h["edited_by"] = { type : "Hidden"};
		_g2.h["mandator"] = { type : "Hidden"};
		_g.h["open"] = { source : _g1, view : _g2};
	}
	$r = _g;
	return $r;
}(this));
model_accounting_AccountsModel.gridColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["id"] = { label : "ID", show : false, useAsIndex : true};
	_g.h["account_holder"] = { flexGrow : 1, label : "Inhaber", cellFormat : function(v) {
		var n = v.split(",");
		n.reverse();
		return n.join(" ");
	}};
	_g.h["contact"] = { label : "ID", className : "tableNums"};
	_g.h["sign_date"] = { label : "Erteilt", cellFormat : function(v) {
		if(v != null) {
			return DateTools.format(HxOverrides.strDate(v),"%d.%m.%Y");
		} else {
			return "";
		}
	}};
	_g.h["iban"] = { label : "IBAN", className : "tableNums"};
	_g.h["status"] = { label : "Status", className : "tCenter", cellFormat : function(v) {
		var className = v == "active" ? "active fas fa-user" : "passive far fa-user";
		return React.createElement(react_ReactType.fromString("span"),{ className : className});
	}};
	$r = _g;
	return $r;
}(this));
model_accounting_AccountsModel.listColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["id"] = { label : "ID", show : false, useAsIndex : true};
	_g.h["contact"] = { label : "Kontakt", show : false, useAsIndex : false};
	_g.h["bank_name"] = { label : "Bankname"};
	_g.h["iban"] = { label : "IBAN"};
	_g.h["status"] = { label : "Aktiv", className : "tCenter", cellFormat : function(v) {
		var className = v == "active" ? "active fas fa-user" : "passive far fa-user";
		return React.createElement(react_ReactType.fromString("span"),{ className : className});
	}};
	$r = _g;
	return $r;
}(this));
model_accounting_AccountsModel.dataDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["accountsList"] = { columns : model_accounting_AccountsModel.listColumns};
	$r = _g;
	return $r;
}(this));
model_accounting_AccountsModel.dataGridDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["accountsList"] = { columns : model_accounting_AccountsModel.gridColumns};
	$r = _g;
	return $r;
}(this));
model_accounting_DebitModel.dataAccess = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var _g1 = new haxe_ds_StringMap();
		var _g2 = new haxe_ds_StringMap();
		_g2.h["filter"] = "id";
		_g1.h["booking_requests"] = _g2;
		var _g2 = new haxe_ds_StringMap();
		_g2.h["id"] = { type : "Hidden"};
		_g2.h["edited_by"] = { type : "Hidden"};
		_g2.h["mandator"] = { type : "Hidden"};
		_g2.h["zahlpfl_name"] = { type : "Text"};
		_g.h["open"] = { source : _g1, view : _g2};
	}
	$r = _g;
	return $r;
}(this));
model_accounting_DebitModel.gridColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["zahlpfl_name"] = { className : "tLeft", label : "Name", flexGrow : 1};
	_g.h["vwz1"] = { label : "SpenderIn", flexGrow : 0, className : "tableNums"};
	_g.h["betrag"] = { label : "Betrag", cellFormat : function(v) {
		if(v == null) {
			v = 0;
		}
		return App.sprintf("%01.2f €",v).replace(".",",");
	}, className : "tableNums"};
	_g.h["cycle"] = { label : "Turnus", cellFormat : function(v) {
		var options_h = Object.create(null);
		options_h["once"] = "Einmal";
		options_h["monthly"] = "Monatlich";
		options_h["quarterly"] = "Vierteljährlich";
		options_h["semiannual"] = "Halbjährlich";
		options_h["annual"] = "Jährlich";
		return options_h[v];
	}};
	_g.h["zahlpfl_name_kto_or_iban"] = { label : "Iban", className : "tableNums"};
	_g.h["id"] = { label : "Buchungsanforderung ID", show : false};
	$r = _g;
	return $r;
}(this));
model_accounting_DebitModel.historyColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["termin"] = { label : "Datum", cellFormat : function(v) {
		if(v == null) {
			return null;
		}
		return DateTools.format(HxOverrides.strDate(v),"%d.%m.%Y");
	}};
	_g.h["amount"] = { label : "Betrag", cellFormat : function(v) {
		if(v == null) {
			v = 0;
		}
		return App.sprintf("%01.2f €",v).replace(".",",");
	}, className : "tableNums"};
	_g.h["info"] = { label : "Info", cellFormat : function(v) {
		if(v == null) {
			v = "";
		}
		if(v == "") {
			return "";
		}
		return v;
	}};
	$r = _g;
	return $r;
}(this));
model_accounting_DebitModel.dataGridDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["rDebitList"] = { columns : model_accounting_DebitModel.gridColumns};
	_g.h["historyList"] = { columns : model_accounting_DebitModel.historyColumns};
	$r = _g;
	return $r;
}(this));
model_accounting_ReturnDebitModel.dataAccess = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var _g1 = new haxe_ds_StringMap();
		var _g2 = new haxe_ds_StringMap();
		_g2.h["filter"] = "id";
		_g1.h["debit_return_statements"] = _g2;
		var _g2 = new haxe_ds_StringMap();
		_g2.h["id"] = { type : "Hidden"};
		_g2.h["edited_by"] = { type : "Hidden"};
		_g2.h["mandator"] = { type : "Hidden"};
		_g2.h["merged"] = { type : "Hidden"};
		_g.h["open"] = { source : _g1, view : _g2};
	}
	$r = _g;
	return $r;
}(this));
model_accounting_ReturnDebitModel.listReturnDebitColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["zahlpfl_name"] = { label : "Name", flexGrow : 0, className : "tLeft"};
	_g.h["value_date"] = { label : "Wertstellung", cellFormat : function(v) {
		if(v == null) {
			return null;
		}
		return DateTools.format(HxOverrides.strDate(v),"%d.%m.%Y");
	}};
	_g.h["sepa_code"] = { label : "Sepa Code"};
	_g.h["iban"] = { label : "Iban", className : "tableNums", flexGrow : 1, headerClassName : "tRight"};
	_g.h["mandat_id"] = { label : "SpendenID", className : "tableNums"};
	_g.h["id"] = { label : "Buchungsanforderung ID", className : "tableNums"};
	_g.h["amount"] = { label : "Betrag", className : "euro", headerClassName : "tRight"};
	$r = _g;
	return $r;
}(this));
model_accounting_ReturnDebitModel.listReturnDebitJoins = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["zahlpfl_name"] = { label : "Name"};
	var _g1 = new haxe_ds_StringMap();
	_g1.h["value_date"] = { label : "Wertstellung", cellFormat : function(v) {
		if(v == null) {
			return null;
		}
		haxe_Log.trace(v,{ fileName : "src/model/accounting/ReturnDebitModel.hx", lineNumber : 72, className : "model.accounting.ReturnDebitModel", methodName : "listReturnDebitJoins"});
		return DateTools.format(HxOverrides.strDate(v),"%d.%m.%Y");
	}};
	_g1.h["sepa_code"] = { label : "Sepa Code"};
	_g1.h["deal_id"] = { label : "SpendenID", className : "tableNums"};
	_g1.h["id"] = { label : "Buchungsanforderung ID", className : "tableNums"};
	_g1.h["amount"] = { label : "Betrag", className : "euro", headerClassName : "tRight"};
	$r = [{ alias : "drs", columns : _g, jCond : "", table : "debit_return_statements"},{ alias : "br", columns : _g1, jCond : "", table : "booking_requests"}];
	return $r;
}(this));
model_accounting_ReturnDebitModel.base = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["ag_name"] = { label : "Name", flexGrow : 0, className : "tLeft"};
	_g.h["value_date"] = { label : "Wertstellung", cellFormat : function(v) {
		if(v == null) {
			return null;
		}
		haxe_Log.trace(v,{ fileName : "src/model/accounting/ReturnDebitModel.hx", lineNumber : 95, className : "model.accounting.ReturnDebitModel", methodName : "base"});
		return DateTools.format(HxOverrides.strDate(v),"%d.%m.%Y");
	}};
	_g.h["sepa_code"] = { label : "Sepa Code"};
	_g.h["iban"] = { label : "Iban", className : "tableNums", flexGrow : 0};
	_g.h["deal_id"] = { label : "SpendenID", className : "tableNums"};
	_g.h["id"] = { label : "Buchungsanforderung ID", className : "tableNums"};
	_g.h["amount"] = { label : "Betrag", className : "euro", headerClassName : "tRight"};
	$r = _g;
	return $r;
}(this));
model_accounting_ReturnDebitModel.gridColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["value_date"] = { label : "Wertstellung", cellFormat : function(v) {
		if(v == null) {
			return null;
		}
		haxe_Log.trace(v,{ fileName : "src/model/accounting/ReturnDebitModel.hx", lineNumber : 112, className : "model.accounting.ReturnDebitModel", methodName : "gridColumns"});
		return DateTools.format(HxOverrides.strDate(v),"%d.%m.%Y");
	}};
	_g.h["sepa_code"] = { label : "Sepa Code"};
	_g.h["amount"] = { label : "Betrag", className : "euro", headerClassName : "tRight"};
	_g.h["iban"] = { label : "Iban", className : "tableNums", headerClassName : "tRight"};
	_g.h["deal_id"] = { label : "SpendenID", className : "tableNums"};
	_g.h["ba_id"] = { label : "Buchungsanforderung ID", className : "tableNums"};
	$r = _g;
	return $r;
}(this));
model_accounting_ReturnDebitModel.dataGridDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["rDebitList"] = { columns : model_accounting_ReturnDebitModel.gridColumns};
	_g.h["rDebitData"] = { columns : model_accounting_ReturnDebitModel.base, joins : null, table : "debit_return_statements", tableAlias : "drs"};
	$r = _g;
	return $r;
}(this));
model_accounting_ReturnDebitModel.listReturnDebitsDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["rDebitList"] = { columns : model_accounting_ReturnDebitModel.listReturnDebitColumns};
	{
		var value = model_accounting_ReturnDebitModel.listReturnDebitColumns;
		var _g1 = new haxe_ds_StringMap();
		_g1.h["description"] = "sepa_code";
		_g.h["rDebitData"] = { columns : value, joins : null, table : "debit_return_statements", tableAlias : "drs", titleMap : _g1};
	}
	$r = _g;
	return $r;
}(this));
model_contacts_ContactsModel.dataAccess = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var _g1 = new haxe_ds_StringMap();
		var _g2 = new haxe_ds_StringMap();
		_g2.h["filter"] = "id";
		_g1.h["contacts"] = _g2;
		var _g2 = new haxe_ds_StringMap();
		var _g3 = new haxe_ds_StringMap();
		_g3.h["active"] = "Aktiv";
		_g3.h["passive"] = "Passiv";
		_g3.h["blocked"] = "Gesperrt";
		_g2.h["status"] = { label : "Status", type : "Select", options : _g3};
		_g2.h["title_pro"] = { label : "Titel"};
		_g2.h["first_name"] = { label : "Vorname"};
		_g2.h["last_name"] = { label : "Name"};
		_g2.h["email"] = { label : "Email"};
		_g2.h["phone_code"] = { label : "Landesvorwahl"};
		_g2.h["phone_number"] = { label : "Telefon"};
		_g2.h["mobile"] = { label : "Mobil"};
		_g2.h["fax"] = { label : "Fax"};
		_g2.h["company_name"] = { label : "Firmenname"};
		_g2.h["address1"] = { label : "Straße"};
		_g2.h["address2"] = { label : "Hausnummer"};
		_g2.h["postal_code"] = { label : "PLZ"};
		_g2.h["city"] = { label : "Ort"};
		var _g3 = new haxe_ds_StringMap();
		_g3.h[""] = "?";
		_g3.h["Herr"] = "Herr";
		_g3.h["Frau"] = "Frau";
		_g3.h["Familie"] = "Familie";
		_g3.h["Firma"] = "Firma";
		_g2.h["title"] = { label : "Anrede", type : "Select", options : _g3};
		_g2.h["country_code"] = { label : "Land"};
		_g2.h["care_of"] = { label : "Adresszusatz"};
		_g2.h["creation_date"] = { label : "Hinzugefügt", type : "DateTimePicker", disabled : true, displayFormat : "d.m.Y H:i:S"};
		_g2.h["date_of_birth"] = { label : "Geburtsdatum", type : "DatePicker", displayFormat : "d.m.Y"};
		var _g3 = new haxe_ds_StringMap();
		_g3.h[""] = "?";
		_g3.h["M"] = "Männlich";
		_g3.h["F"] = "Weiblich";
		_g2.h["gender"] = { label : "Geschlecht", type : "Select", options : _g3};
		_g2.h["use_email"] = { label : "Post per Email", type : "Checkbox"};
		_g2.h["id"] = { type : "Hidden"};
		_g2.h["edited_by"] = { type : "Hidden"};
		_g2.h["mandator"] = { type : "Hidden"};
		_g2.h["merged"] = { type : "Hidden"};
		_g.h["open"] = { source : _g1, view : _g2};
	}
	$r = _g;
	return $r;
}(this));
model_contacts_ContactsModel.qcColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["first_name"] = { label : "Vorname", flexGrow : 0};
	_g.h["last_name"] = { label : "Name", flexGrow : 0};
	_g.h["phone_number"] = { label : "Telefon"};
	_g.h["address1"] = { label : "Straße", showSearch : false};
	_g.h["address2"] = { label : "Nr.", showSearch : false};
	_g.h["postal_code"] = { label : "PLZ"};
	_g.h["city"] = { label : "Ort"};
	_g.h["id"] = { label : "Kontakt ID", show : false};
	_g.h["list_id"] = { show : false};
	_g.h["entry_list_id"] = { show : false};
	_g.h["lead_id"] = { show : false};
	_g.h["last_local_call_time"] = { label : "Datum", cellFormat : function(v) {
		if(v != null) {
			return DateTools.format(HxOverrides.strDate(v),"%d.%m.%Y");
		} else {
			return "";
		}
	}};
	$r = _g;
	return $r;
}(this));
model_contacts_ContactsModel.gridColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["first_name"] = { label : "Vorname", flexGrow : 0};
	_g.h["last_name"] = { label : "Name", flexGrow : 0};
	_g.h["phone_number"] = { label : "Telefon"};
	_g.h["address1"] = { label : "Straße", showSearch : false};
	_g.h["address2"] = { label : "Nr.", showSearch : false};
	_g.h["care_of"] = { label : "Adresszusatz", flexGrow : 1, showSearch : false};
	_g.h["postal_code"] = { label : "PLZ"};
	_g.h["city"] = { label : "Ort"};
	_g.h["status"] = { label : "Status", className : "tCenter", cellFormat : function(v) {
		var uState = v == "active" ? "user" : "user-slash";
		return React.createElement(react_ReactType.fromString("span"),{ className : "fa fa-" + uState});
	}};
	_g.h["id"] = { label : "Kontakt ID", show : true};
	$r = _g;
	return $r;
}(this));
model_contacts_ContactsModel.listColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["first_name"] = { label : "Vorname", flexGrow : 0};
	_g.h["last_name"] = { label : "Name", flexGrow : 0};
	_g.h["phone_number"] = { label : "Telefon"};
	_g.h["address"] = { label : "Straße"};
	_g.h["address_2"] = { label : "Hausnummer"};
	_g.h["care_of"] = { label : "Adresszusatz", flexGrow : 1};
	_g.h["postal_code"] = { label : "PLZ"};
	_g.h["city"] = { label : "Ort"};
	_g.h["state"] = { label : "Status", className : "tCenter", cellFormat : function(v) {
		var uState = v == "active" ? "user" : "user-slash";
		return React.createElement(react_ReactType.fromString("span"),{ className : "fa fa-" + uState});
	}};
	_g.h["id"] = { show : false};
	$r = _g;
	return $r;
}(this));
model_contacts_ContactsModel.dataDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["contactList"] = { columns : model_contacts_ContactsModel.listColumns};
	$r = _g;
	return $r;
}(this));
model_contacts_ContactsModel.dataGridDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["contactList"] = { columns : model_contacts_ContactsModel.gridColumns};
	$r = _g;
	return $r;
}(this));
model_contacts_ContactsModel.qcListDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["qcList"] = { columns : model_contacts_ContactsModel.qcColumns};
	$r = _g;
	return $r;
}(this));
model_deals_DealsModel._initialized = false;
model_deals_DealsModel.dataAccess = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var _g1 = new haxe_ds_StringMap();
		var _g2 = new haxe_ds_StringMap();
		_g2.h["filter"] = "id";
		_g2.h["title"] = "id";
		_g1.h["deals"] = _g2;
		var _g2 = new haxe_ds_StringMap();
		_g2.h["creation_date"] = { label : "Erstellt", type : "DatePicker", displayFormat : "d.m.Y", disabled : true};
		_g2.h["start_date"] = { label : "Start", type : "DatePicker", displayFormat : "d.m.Y"};
		var _g3 = new haxe_ds_StringMap();
		_g3.h["start"] = "Monatsanfang";
		_g3.h["middle"] = "Monatsmitte";
		_g2.h["booking_run"] = { label : "Buchungslauf", type : "Radio", options : _g3};
		var _g3 = new haxe_ds_StringMap();
		_g3.h["once"] = "Einmal";
		_g3.h["monthly"] = "Monatlich";
		_g3.h["quarterly"] = "Vierteljährlich";
		_g3.h["semiannual"] = "Halbjährlich";
		_g3.h["annual"] = "Jährlich";
		_g2.h["cycle"] = { label : "Turnus", type : "Radio", options : _g3};
		_g2.h["amount"] = { label : "Betrag", type : "NFormat"};
		var _g3 = new haxe_ds_StringMap();
		_g3.h["2"] = "Kinderhilfe";
		_g3.h["3"] = "Tierhilfe";
		_g2.h["product"] = { label : "Produkt", type : "Select", options : _g3};
		_g2.h["end_date"] = { label : "Beendet zum", type : "DatePicker", displayFormat : "d.m.Y"};
		_g2.h["cycle_start_date"] = { label : "Turnus Startdatum", type : "DatePicker", displayFormat : "d.m.Y"};
		var _g3 = new haxe_ds_StringMap();
		_g3.h["XXX"] = "";
		_g3.h["AC01"] = "Fehlerhafte/ungültige Kontonummer (IBAN fehlerhaft)";
		_g3.h["AC04"] = "Konto erloschen (Konto aufgelöst)";
		_g3.h["AC06"] = "Keine Angabe des Grundes (Konto gesperrt)";
		_g3.h["AG01"] = "Zahlungsart für Konto unzulässig (Zahlungsart für KTO unzulässig)";
		_g3.h["AM04"] = "Keine Deckung (Rückgabe mangels Deckung)";
		_g3.h["AM05"] = "Doppeleinreichung";
		_g3.h["BE05"] = "Gläubiger-ID ungültig";
		_g3.h["MD01"] = "Kein gültiges Mandat";
		_g3.h["MD02"] = "Mandatsinfo fehlt";
		_g3.h["MD06"] = "Widerspruch durch Zahlungspflichtigen";
		_g3.h["MD07"] = "Kontoinhaber verstorben";
		_g3.h["MS02"] = "Keine Angabe, Rückgabe durch Kunden (sonstige Gründe)";
		_g3.h["MS03"] = "Keine Angabe, Rückgabe durch Institut (sonstige Gründe)";
		_g3.h["RR01"] = "Ablehnung aufgrund von aufsichtsrechtlichen Vorschriften: Konto/ID Zahler fehlt";
		_g3.h["RR02"] = "Ablehnung aufgrund von aufsichtsrechtlichen Vorschriften: Name/Adresse Zahler fehlt";
		_g3.h["RR03"] = "Ablehnung aufgrund von aufsichtsrechtlichen Vorschriften: Name/Adresse Empfänger fehlt";
		_g3.h["RR04"] = "Ablehnung aufgrund von aufsichtsrechtlichen Vorschriften: Aufsichtsrechtliche Gründe";
		_g3.h["SL01"] = "Rückgabe aufgrund spezifischer Dienstleistung der Zahlstellen";
		_g2.h["sepa_code"] = { className : "max50", label : "Rückgabegrund", type : "Select", options : _g3};
		_g2.h["id"] = { type : "Hidden"};
		_g2.h["edited_by"] = { type : "Hidden"};
		_g2.h["mandator"] = { type : "Hidden"};
		_g.h["open"] = { source : _g1, view : _g2};
	}
	$r = _g;
	return $r;
}(this));
model_deals_DealsModel.gridColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["id"] = { label : "ID", show : false};
	_g.h["start_date"] = { label : "Seit", cellFormat : function(v) {
		return DateTools.format(HxOverrides.strDate(v),"%d.%m.%Y");
	}, className : "tableNums"};
	_g.h["end_date"] = { label : "Bis", cellFormat : function(v) {
		if(v == null) {
			return null;
		}
		return DateTools.format(HxOverrides.strDate(v),"%d.%m.%Y");
	}};
	_g.h["product"] = { label : "Produkt", flexGrow : 1, cellFormat : function(v) {
		switch(v) {
		case 2:
			return "Kinderhilfe";
		case 3:
			return "Tierhilfe";
		default:
			return "Kinderhilfe";
		}
	}};
	_g.h["cycle"] = { label : "Turnus"};
	_g.h["amount"] = { label : "Betrag", cellFormat : function(v) {
		return App.sprintf("%01.2f €",v).replace(".",",");
	}, className : "tRight tableNums"};
	_g.h["active"] = { label : "Status", className : "tCenter", cellFormat : function(v) {
		var className = v ? "active fas fa-user" : "passive far fa-user";
		return React.createElement(react_ReactType.fromString("span"),{ className : className});
	}};
	$r = _g;
	return $r;
}(this));
model_deals_DealsModel.listColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["id"] = { label : "ID", show : false};
	_g.h["start_date"] = { label : "Seit", cellFormat : function(v) {
		return DateTools.format(HxOverrides.strDate(v),"%d.%m.%Y");
	}};
	_g.h["end_date"] = { label : "Bis", cellFormat : function(v) {
		return DateTools.format(HxOverrides.strDate(v),"%d.%m.%Y");
	}};
	_g.h["active"] = { label : "Aktiv", className : "tCenter", cellFormat : function(v) {
		var className = v ? "active fas fa-user" : "passive far fa-user";
		return React.createElement(react_ReactType.fromString("span"),{ className : className});
	}};
	_g.h["cycle"] = { label : "Turnus"};
	_g.h["amount"] = { label : "Betrag", cellFormat : function(v) {
		return App.sprintf("%01.2f €",v).replace(".",",");
	}, className : "tRight"};
	$r = _g;
	return $r;
}(this));
model_deals_DealsModel.dataDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["dealsFull"] = { columns : model_deals_DealsModel.listColumns};
	$r = _g;
	return $r;
}(this));
model_deals_DealsModel.dataGridDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["dealsList"] = { columns : model_deals_DealsModel.gridColumns};
	$r = _g;
	return $r;
}(this));
model_qc_QCModel.dataAccess = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var _g1 = new haxe_ds_StringMap();
		var _g2 = new haxe_ds_StringMap();
		_g2.h["filter"] = "id";
		_g1.h["contacts"] = _g2;
		var _g2 = new haxe_ds_StringMap();
		var _g3 = new haxe_ds_StringMap();
		_g3.h[""] = "?";
		_g3.h["Herr"] = "Herr";
		_g3.h["Frau"] = "Frau";
		_g3.h["Familie"] = "Familie";
		_g3.h["Firma"] = "Firma";
		_g2.h["anrede"] = { label : "Anrede", type : "Select", options : _g3};
		_g2.h["title"] = { label : "Titel"};
		_g2.h["first_name"] = { label : "Vorname"};
		_g2.h["last_name"] = { label : "Name"};
		_g2.h["email"] = { label : "Email"};
		_g2.h["use_email"] = { label : "Post per Email", type : "Checkbox"};
		_g2.h["phone_number"] = { label : "Telefon"};
		_g2.h["mobile"] = { label : "Mobil"};
		_g2.h["company_name"] = { label : "Firmenname"};
		_g2.h["address1"] = { label : "Straße"};
		_g2.h["address2"] = { label : "Hausnummer"};
		_g2.h["postal_code"] = { label : "PLZ"};
		_g2.h["city"] = { label : "Ort"};
		_g2.h["co_field"] = { label : "Adresszusatz"};
		_g2.h["country_code"] = { label : "Land"};
		_g2.h["creation_date"] = { label : "Hinzugefügt", type : "Hidden", disabled : true, displayFormat : "d.m.Y H:i:S"};
		_g2.h["geburts_datum"] = { label : "Geburtsdatum", type : "DatePicker", displayFormat : "d.m.Y"};
		var _g3 = new haxe_ds_StringMap();
		_g3.h[""] = "?";
		_g3.h["M"] = "Männlich";
		_g3.h["F"] = "Weiblich";
		_g2.h["gender"] = { label : "Geschlecht", type : "Select", options : _g3};
		_g2.h["owner"] = { label : "Agent", cellFormat : function(v) {
			haxe_Log.trace("App.pbxUserData " + Std.string(App.pbxUserData != null),{ fileName : "src/model/qc/QCModel.hx", lineNumber : 57, className : "model.qc.QCModel", methodName : "dataAccess"});
			if(App.pbxUserData != null) {
				haxe_Log.trace(" && exists(" + v + "): " + Std.string(Object.prototype.hasOwnProperty.call(App.pbxUserData.h,v)),{ fileName : "src/model/qc/QCModel.hx", lineNumber : 59, className : "model.qc.QCModel", methodName : "dataAccess"});
			}
			if(App.pbxUserData != null && Object.prototype.hasOwnProperty.call(App.pbxUserData.h,v)) {
				return App.pbxUserData.h[v].h["full_name"];
			}
			return v;
		}, disabled : true};
		_g2.h["comments"] = { label : "Kommentar", type : "TextArea"};
		var _g3 = new haxe_ds_StringMap();
		_g3.h["Januar"] = "Januar";
		_g3.h["Februar"] = "Februar";
		_g3.h["März"] = "März";
		_g3.h["April"] = "April";
		_g3.h["Mai"] = "Mai";
		_g3.h["Juni"] = "Juni";
		_g3.h["Juli"] = "Juli";
		_g3.h["August"] = "August";
		_g3.h["September"] = "September";
		_g3.h["Oktober"] = "Oktober";
		_g3.h["November"] = "November";
		_g3.h["Dezember"] = "Dezember";
		_g2.h["start_monat"] = { label : "Ab", type : "Select", options : _g3};
		var _g3 = new haxe_ds_StringMap();
		_g3.h["Monatlich"] = "Mtl.";
		_g3.h["Vierteljährlich"] = "Vtl.";
		_g3.h["Halbjährlich"] = "Halbj.";
		_g3.h["Jährlich"] = "Jährl.";
		_g3.h["Einmalspende"] = "1x";
		_g2.h["period"] = { label : "Zahlweise", type : "Radio", options : _g3};
		_g2.h["spenden_hoehe"] = { label : "Betrag"};
		_g2.h["buchungs_tag"] = { label : "Buchungstag"};
		var _g3 = new haxe_ds_StringMap();
		_g3.h["1"] = "Monatsanfang";
		_g3.h["15"] = "Monatsmitte";
		_g2.h["buchungs_zeitpunkt"] = { label : "Buchung zum 1. oder 15. ", type : "Radio", options : _g3};
		_g2.h["account"] = { label : "Kontonummer"};
		_g2.h["blz"] = { label : "Bankleitzahl (BLZ)"};
		_g2.h["iban"] = { label : "IBAN"};
		_g2.h["bank_name"] = { label : "Bankinstitut"};
		var _g3 = new haxe_ds_StringMap();
		_g3.h["info_brief"] = "InfoBrief schicken";
		_g3.h["info_mail"] = "InfoMail senden";
		_g3.h["no_info"] = "Keine Info gewünscht";
		_g2.h["mailing"] = { label : "InfoBrief", type : "Radio", options : _g3};
		_g2.h["entry_date"] = { label : "Verkauf", type : "DatePicker", displayFormat : "d.m.Y"};
		_g2.h["edited_by"] = { type : "Hidden"};
		_g2.h["id"] = { type : "Hidden"};
		_g2.h["mandator"] = { type : "Hidden"};
		_g2.h["merged"] = { type : "Hidden"};
		_g.h["open"] = { source : _g1, view : _g2};
	}
	$r = _g;
	return $r;
}(this));
model_qc_QCModel.qcColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["first_name"] = { label : "Vorname", flexGrow : 0};
	_g.h["last_name"] = { label : "Name", flexGrow : 0};
	_g.h["phone_number"] = { label : "Telefon"};
	_g.h["address1"] = { label : "Straße", showSearch : false};
	_g.h["address2"] = { label : "Nr.", showSearch : false};
	_g.h["postal_code"] = { label : "PLZ"};
	_g.h["city"] = { label : "Ort"};
	_g.h["id"] = { label : "Kontakt ID", show : false};
	_g.h["list_id"] = { show : false};
	_g.h["entry_list_id"] = { show : false};
	_g.h["lead_id"] = { show : false};
	_g.h["last_local_call_time"] = { label : "Datum", cellFormat : function(v) {
		haxe_Log.trace(v,{ fileName : "src/model/qc/QCModel.hx", lineNumber : 133, className : "model.qc.QCModel", methodName : "qcColumns"});
		if(v != null) {
			return DateTools.format(HxOverrides.strDate(v),"%d.%m.%Y");
		} else {
			return "";
		}
	}};
	$r = _g;
	return $r;
}(this));
model_qc_QCModel.gridColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["first_name"] = { label : "Vorname", flexGrow : 0};
	_g.h["last_name"] = { label : "Name", flexGrow : 0};
	_g.h["phone_number"] = { label : "Telefon"};
	_g.h["address"] = { label : "Straße", showSearch : false};
	_g.h["address_2"] = { label : "Nr.", showSearch : false};
	_g.h["care_of"] = { label : "Adresszusatz", flexGrow : 1, showSearch : false};
	_g.h["postal_code"] = { label : "PLZ"};
	_g.h["city"] = { label : "Ort"};
	_g.h["status"] = { label : "Status", className : "tCenter", cellFormat : function(v) {
		var uState = v == "active" ? "user" : "user-slash";
		return React.createElement(react_ReactType.fromString("span"),{ className : "fa fa-" + uState});
	}};
	_g.h["id"] = { label : "Kontakt ID", show : true};
	$r = _g;
	return $r;
}(this));
model_qc_QCModel.listColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["first_name"] = { label : "Vorname", flexGrow : 0};
	_g.h["last_name"] = { label : "Name", flexGrow : 0};
	_g.h["phone_number"] = { label : "Telefon"};
	_g.h["address"] = { label : "Straße"};
	_g.h["address_2"] = { label : "Hausnummer"};
	_g.h["care_of"] = { label : "Adresszusatz", flexGrow : 1};
	_g.h["postal_code"] = { label : "PLZ"};
	_g.h["city"] = { label : "Ort"};
	_g.h["state"] = { label : "Status", className : "tCenter", cellFormat : function(v) {
		var uState = v == "active" ? "user" : "user-slash";
		haxe_Log.trace(v,{ fileName : "src/model/qc/QCModel.hx", lineNumber : 173, className : "model.qc.QCModel", methodName : "listColumns"});
		return React.createElement(react_ReactType.fromString("span"),{ className : "fa fa-" + uState});
	}};
	_g.h["id"] = { show : false};
	$r = _g;
	return $r;
}(this));
model_qc_QCModel.dataDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["contactList"] = { columns : model_qc_QCModel.listColumns};
	$r = _g;
	return $r;
}(this));
model_qc_QCModel.dataGridDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["contactList"] = { columns : model_qc_QCModel.gridColumns};
	$r = _g;
	return $r;
}(this));
model_qc_QCModel.qcListDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["qcList"] = { columns : model_qc_QCModel.qcColumns};
	$r = _g;
	return $r;
}(this));
model_stats_HistoryModel.dataAccess = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var _g1 = new haxe_ds_StringMap();
		var _g2 = new haxe_ds_StringMap();
		_g2.h["filter"] = "id";
		_g1.h["contacts"] = _g2;
		var _g2 = new haxe_ds_StringMap();
		var _g3 = new haxe_ds_StringMap();
		_g3.h[""] = "?";
		_g3.h["Herr"] = "Herr";
		_g3.h["Frau"] = "Frau";
		_g3.h["Familie"] = "Familie";
		_g3.h["Firma"] = "Firma";
		_g2.h["title"] = { label : "Anrede", type : "Select", options : _g3};
		_g2.h["title_pro"] = { label : "Titel"};
		_g2.h["first_name"] = { label : "Vorname"};
		_g2.h["last_name"] = { label : "Name"};
		_g2.h["email"] = { label : "Email"};
		_g2.h["phone_code"] = { label : "Landesvorwahl"};
		_g2.h["phone_number"] = { label : "Telefon"};
		_g2.h["mobile"] = { label : "Mobil"};
		_g2.h["fax"] = { label : "Fax"};
		_g2.h["company_name"] = { label : "Firmenname"};
		_g2.h["address"] = { label : "Strasse"};
		_g2.h["address_2"] = { label : "Hausnummer"};
		_g2.h["postal_code"] = { label : "PLZ"};
		_g2.h["city"] = { label : "Ort"};
		var _g3 = new haxe_ds_StringMap();
		_g3.h["active"] = "Aktiv";
		_g3.h["passive"] = "Passiv";
		_g3.h["blocked"] = "Gesperrt";
		_g2.h["state"] = { label : "Status", type : "Select", options : _g3};
		_g2.h["country_code"] = { label : "Land"};
		_g2.h["care_of"] = { label : "Adresszusatz"};
		_g2.h["creation_date"] = { label : "Hinzugefügt", type : "DateTimePicker", disabled : true, displayFormat : "d.m.Y H:i:S"};
		_g2.h["date_of_birth"] = { label : "Geburtsdatum", type : "DatePicker", displayFormat : "d.m.Y"};
		var _g3 = new haxe_ds_StringMap();
		_g3.h[""] = "?";
		_g3.h["M"] = "Männlich";
		_g3.h["F"] = "Weiblich";
		_g2.h["gender"] = { label : "Geschlecht", type : "Select", options : _g3};
		_g2.h["comments"] = { label : "Kommentar"};
		_g2.h["use_email"] = { label : "Post per Email", type : "Checkbox"};
		_g2.h["id"] = { type : "Hidden"};
		_g2.h["edited_by"] = { type : "Hidden"};
		_g2.h["mandator"] = { type : "Hidden"};
		_g.h["update"] = { source : _g1, view : _g2};
	}
	$r = _g;
	return $r;
}(this));
model_stats_HistoryModel.listColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["first_name"] = { label : "Vorname", flexGrow : 0};
	_g.h["last_name"] = { label : "Name", flexGrow : 0};
	_g.h["email"] = { label : "Email"};
	_g.h["phone_number"] = { label : "Telefon"};
	_g.h["address"] = { label : "Straße"};
	_g.h["address_2"] = { label : "Hausnummer"};
	_g.h["care_of"] = { label : "Adresszusatz", flexGrow : 1};
	_g.h["postal_code"] = { label : "PLZ"};
	_g.h["city"] = { label : "Ort"};
	_g.h["state"] = { label : "Status", className : "tCenter", cellFormat : function(v) {
		var uState = v == "active" ? "user" : "user-slash";
		return React.createElement(react_ReactType.fromString("span"),{ className : "fa fa-" + uState});
	}};
	_g.h["id"] = { show : false};
	$r = _g;
	return $r;
}(this));
model_stats_HistoryModel.dataDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["contactList"] = { columns : model_stats_HistoryModel.listColumns};
	$r = _g;
	return $r;
}(this));
react_DateControl.displayName = "DateControl";
react_DateTimeControl.displayName = "DateTimeControl";
react_ReactDateTimeClock.displayName = "ReactDateTimeClock";
redux_react_Provider.childContextTypes = { store : PropTypes.object.isRequired};
redux_react_Provider.propTypes = { children : PropTypes.element.isRequired};
redux_react_Provider.displayName = "Provider";
shared_DbData.__clid = hxbit_Serializer.registerClass(shared_DbData);
shared_Utils.kIndex = 0;
tink_core_Callback.depth = 0;
tink_core_Callback.MAX_DEPTH = 500;
tink_core_AlreadyDisposed.INST = new tink_core_AlreadyDisposed();
tink_core_Future.NOISE = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(null));
tink_core_Future.NULL = tink_core_Future.NOISE;
tink_core_Future.NEVER = new tink_core__$Future_NeverFuture();
tink_core_Lazy.NOISE = new tink_core__$Lazy_LazyConst(null);
tink_core_Lazy.NULL = tink_core_Lazy.NOISE;
tink_core_Noise.Noise = null;
tink_core_Promise.NOISE = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(null)));
tink_core_Promise.NULL = tink_core_Promise.NOISE;
tink_core_Promise.NEVER = tink_core_Future.NEVER;
tink_core__$Signal_Disposed.INST = new tink_core__$Signal_Disposed();
uuid_Uuid.DNS = "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
uuid_Uuid.URL = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
uuid_Uuid.ISO_OID = "6ba7b812-9dad-11d1-80b4-00c04fd430c8";
uuid_Uuid.X500_DN = "6ba7b814-9dad-11d1-80b4-00c04fd430c8";
uuid_Uuid.NIL = "00000000-0000-0000-0000-000000000000";
uuid_Uuid.LOWERCASE_BASE26 = "abcdefghijklmnopqrstuvwxyz";
uuid_Uuid.UPPERCASE_BASE26 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
uuid_Uuid.NO_LOOK_ALIKES_BASE51 = "2346789ABCDEFGHJKLMNPQRTUVWXYZabcdefghijkmnpqrtwxyz";
uuid_Uuid.FLICKR_BASE58 = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ";
uuid_Uuid.BASE_70 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-+!@#$^";
uuid_Uuid.COOKIE_BASE90 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&'()*+-./:<=>?@[]^_`{|}~";
uuid_Uuid.NANO_ID_ALPHABET = "_-0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
uuid_Uuid.NUMBERS_BIN = "01";
uuid_Uuid.NUMBERS_OCT = "01234567";
uuid_Uuid.NUMBERS_DEC = "0123456789";
uuid_Uuid.NUMBERS_HEX = "0123456789abcdef";
uuid_Uuid.lastMSecs = 0;
uuid_Uuid.lastNSecs = 0;
uuid_Uuid.clockSequenceBuffer = -1;
uuid_Uuid.regexp = new EReg("^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$","i");
uuid_Uuid.rndSeed = HxOverrides.now() / 1000 * 1000 | 0;
uuid_Uuid.state0 = uuid_Uuid.splitmix64_seed(uuid_Uuid.rndSeed);
uuid_Uuid.state1 = uuid_Uuid.splitmix64_seed(uuid_Uuid.rndSeed + 1);
view_Accounting.displayName = "Accounting";
view_Accounting._renderWrapper = (redux_react_ReactRedux.connect(view_Accounting.mapStateToProps,view_Accounting.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_Accounting));
view_Accounting.__jsxStatic = view_Accounting._renderWrapper;
view_DashBoard.displayName = "DashBoard";
view_DashBoard._renderWrapper = (redux_react_ReactRedux.connect(view_DashBoard.mapStateToProps,view_DashBoard.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_DashBoard));
view_DashBoard.__jsxStatic = view_DashBoard._renderWrapper;
view_Data.displayName = "Data";
view_Data._renderWrapper = (redux_react_ReactRedux.connect(null,view_Data.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_Data));
view_Data.__jsxStatic = view_Data._renderWrapper;
view_LoginForm.displayName = "LoginForm";
view_LoginForm._renderWrapper = (redux_react_ReactRedux.connect(view_LoginForm.mapStateToProps,view_LoginForm.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_LoginForm));
view_LoginForm.__jsxStatic = view_LoginForm._renderWrapper;
view_NavTabs.tabsRendered = 0;
view_NavTabs.displayName = "NavTabs";
view_NavTabs._renderWrapper = react_router_ReactRouter.withRouter(react_ReactType.fromComp(view_NavTabs));
view_NavTabs.__jsxStatic = view_NavTabs._renderWrapper;
view_RedirectBox.displayName = "RedirectBox";
view_Reports.displayName = "Reports";
view_Reports._renderWrapper = (redux_react_ReactRedux.connect(view_Reports.mapStateToProps))(react_ReactTypeOf.fromComp(view_Reports));
view_Reports.__jsxStatic = view_Reports._renderWrapper;
view_StatusBar.displayName = "StatusBar";
view_StatusBar._renderWrapper = (redux_react_ReactRedux.connect(view_StatusBar.mapStateToProps))(react_ReactTypeOf.fromComp(view_StatusBar));
view_StatusBar.__jsxStatic = view_StatusBar._renderWrapper;
view_UiView.displayName = "UiView";
view_UiView._renderWrapper = (redux_react_ReactRedux.connect(view_UiView.mapStateToProps))(react_ReactTypeOf.fromComp(view_UiView));
view_UiView.__jsxStatic = view_UiView._renderWrapper;
view_accounting_Accounts.displayName = "Accounts";
view_accounting_DirectDebits.displayName = "DirectDebits";
view_accounting_DirectDebits._renderWrapper = (redux_react_ReactRedux.connect(view_accounting_DirectDebits.mapStateToProps))(react_ReactTypeOf.fromComp(view_accounting_DirectDebits));
view_accounting_DirectDebits.__jsxStatic = view_accounting_DirectDebits._renderWrapper;
view_accounting_ReturnDebits.displayName = "ReturnDebits";
view_accounting_ReturnDebits._renderWrapper = (redux_react_ReactRedux.connect(view_accounting_ReturnDebits.mapStateToProps,view_accounting_ReturnDebits.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_accounting_ReturnDebits));
view_accounting_ReturnDebits.__jsxStatic = view_accounting_ReturnDebits._renderWrapper;
view_accounting_directdebit_Edit.menuItems = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["1"] = "1";
	_g.h["15"] = "15";
	$r = [{ label : "Neu Erstellen", action : "create", options : [{ label : "Buchungstag", name : "booking_day", type : "Radio", options : _g}]},{ label : "Anzeigen", action : "get", disabled : true},{ label : "Download", action : "download", disabled : true},{ label : "Bearbeiten", action : "edit", disabled : true}];
	return $r;
}(this));
view_accounting_directdebit_Edit.displayName = "Edit";
view_accounting_directdebit_Edit._renderWrapper = (redux_react_ReactRedux.connect(view_accounting_directdebit_Edit.mapStateToProps,view_accounting_directdebit_Edit.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_accounting_directdebit_Edit));
view_accounting_directdebit_Edit.__jsxStatic = view_accounting_directdebit_Edit._renderWrapper;
view_accounting_directdebit_List.menuItems = [];
view_accounting_directdebit_List.displayName = "List";
view_accounting_returndebit_AccountForm.classPath = view_accounting_Accounts.__name__;
view_accounting_returndebit_AccountForm.displayName = "AccountForm";
view_accounting_returndebit_AccountForm._renderWrapper = (redux_react_ReactRedux.connect(view_accounting_returndebit_AccountForm.mapStateToProps,view_accounting_returndebit_AccountForm.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_accounting_returndebit_AccountForm));
view_accounting_returndebit_AccountForm.__jsxStatic = view_accounting_returndebit_AccountForm._renderWrapper;
view_accounting_returndebit_ContactForm.classPath = view_accounting_returndebit_ContactForm.__name__;
view_accounting_returndebit_ContactForm.displayName = "ContactForm";
view_accounting_returndebit_ContactForm._renderWrapper = (redux_react_ReactRedux.connect(view_accounting_returndebit_ContactForm.mapStateToProps,view_accounting_returndebit_ContactForm.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_accounting_returndebit_ContactForm));
view_accounting_returndebit_ContactForm.__jsxStatic = view_accounting_returndebit_ContactForm._renderWrapper;
view_accounting_returndebit_DealForm.classPath = model_Deal.__name__;
view_accounting_returndebit_DealForm.displayName = "DealForm";
view_accounting_returndebit_DealForm._renderWrapper = (redux_react_ReactRedux.connect(view_accounting_returndebit_DealForm.mapStateToProps,view_accounting_returndebit_DealForm.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_accounting_returndebit_DealForm));
view_accounting_returndebit_DealForm.__jsxStatic = view_accounting_returndebit_DealForm._renderWrapper;
view_shared_io_LiveData.forms = new haxe_ds_StringMap();
view_accounting_returndebit_Files.menuItems = [{ id : "returnDebitFile", label : "Auswahl", action : "importReturnDebit", disabled : true, options : [{ multiple : true}], formField : { name : "returnDebitData", submit : "Importieren", type : "Upload", handleChange : function(evt) {
	evt.preventDefault();
	view_accounting_returndebit_Files._instance.parseCamt(evt.target.files);
}}, handler : function(e) {
	haxe_Log.trace(e,{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 97, className : "view.accounting.returndebit.Files", methodName : "menuItems"});
	e.preventDefault();
	var finput = window.document.getElementById("returnDebitFile");
	haxe_Log.trace(finput.files,{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 102, className : "view.accounting.returndebit.Files", methodName : "menuItems"});
	haxe_Log.trace(Reflect.fields(finput),{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 103, className : "view.accounting.returndebit.Files", methodName : "menuItems"});
	console.log(finput.files["returnDebitFile"]);
	haxe_Log.trace(finput.value,{ fileName : "src/view/accounting/returndebit/Files.hx", lineNumber : 105, className : "view.accounting.returndebit.Files", methodName : "menuItems"});
}}];
view_accounting_returndebit_Files.displayName = "Files";
view_accounting_returndebit_Files._renderWrapper = (redux_react_ReactRedux.connect(null,view_accounting_returndebit_Files.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_accounting_returndebit_Files));
view_accounting_returndebit_Files.__jsxStatic = view_accounting_returndebit_Files._renderWrapper;
view_accounting_returndebit_List.menuItems = [];
view_accounting_returndebit_List.displayName = "List";
view_accounting_returndebit_List._renderWrapper = (redux_react_ReactRedux.connect(view_accounting_returndebit_List.mapStateToProps,view_accounting_returndebit_List.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_accounting_returndebit_List));
view_accounting_returndebit_List.__jsxStatic = view_accounting_returndebit_List._renderWrapper;
view_dashboard_DB.menuItems = [{ label : "getView", action : "getView"},{ label : "setView", action : "setView"},{ label : "Formulare", action : "listForms"},{ label : "Bearbeiten", action : "edit"},{ label : "Speichern", action : "save"},{ label : "Löschen", action : "delete"}];
view_dashboard_DB.displayName = "DB";
view_dashboard_DB._renderWrapper = (redux_react_ReactRedux.connect(view_dashboard_DB.mapStateToProps))(react_ReactTypeOf.fromComp(view_dashboard_DB));
view_dashboard_DB.__jsxStatic = view_dashboard_DB._renderWrapper;
view_dashboard_DBSync.menuItems = [{ label : "Import Alle Rücklastschriften", action : "getAllExternalDebitReturnBookings", disabled : true},{ label : "Import Neue Rücklastschriften", action : "getMissingExternalDebitReturnBookings"},{ label : "BuchungsAnforderungen ", action : "checkBookingRequests"},{ label : "Kontakt Daten ", action : "checkContacts"},{ label : "Spenden Daten ", action : "checkDeals"},{ label : "Konto Daten ", action : "checkAccounts"},{ label : "Reset QC Test Daten ", action : "syncQC"}];
view_dashboard_DBSync.displayName = "DBSync";
view_dashboard_DBSync._renderWrapper = (redux_react_ReactRedux.connect(view_dashboard_DBSync.mapStateToProps,view_dashboard_DBSync.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_dashboard_DBSync));
view_dashboard_DBSync.__jsxStatic = view_dashboard_DBSync._renderWrapper;
view_dashboard_Roles.displayName = "Roles";
view_dashboard_Roles._renderWrapper = (redux_react_ReactRedux.connect(view_dashboard_Roles.mapStateToProps))(react_ReactTypeOf.fromComp(view_dashboard_Roles));
view_dashboard_Roles.__jsxStatic = view_dashboard_Roles._renderWrapper;
view_dashboard_Settings.displayName = "Settings";
view_dashboard_Setup.displayName = "Setup";
view_dashboard_model_DBFormsModel.fieldsListColumns = new haxe_ds_StringMap();
view_dashboard_model_DBFormsModel.dataDisplay = new haxe_ds_StringMap();
view_dashboard_model_DBSyncModel.clientListColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["client_id"] = { label : "ID", show : true};
	_g.h["first_name"] = { label : "Vorname", editable : true};
	_g.h["last_name"] = { label : "Name", editable : true};
	_g.h["phone"] = { label : "Telefon"};
	$r = _g;
	return $r;
}(this));
view_dashboard_model_DBSyncModel.userListColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["user_id"] = { label : "ID", show : true};
	_g.h["user"] = { label : "User", editable : false};
	_g.h["full_name"] = { label : "Name", editable : true, flexGrow : 1};
	_g.h["phone_login"] = { label : "Nebenstelle", editable : true, className : "tRight"};
	_g.h["user_group"] = { label : "Gruppe", editable : true};
	$r = _g;
	return $r;
}(this));
view_dashboard_model_DBSyncModel.dataDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["userList"] = { altGroupPos : 0, columns : view_dashboard_model_DBSyncModel.userListColumns};
	_g.h["clientList"] = { altGroupPos : 0, columns : view_dashboard_model_DBSyncModel.clientListColumns};
	$r = _g;
	return $r;
}(this));
view_dashboard_model_RolesFormModel.userListColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["id"] = { label : "Benutzer"};
	_g.h["first_name"] = { label : "Vorname", flexGrow : 0};
	_g.h["last_name"] = { label : "Name", flexGrow : 0};
	_g.h["email"] = { label : "Email"};
	_g.h["name"] = { label : "UserGroup", flexGrow : 1};
	_g.h["active"] = { label : "Aktiv", className : "cRight", cellFormat : function(v) {
		if(v) {
			return "J";
		} else {
			return "N";
		}
	}};
	_g.h["user_id"] = { show : false};
	$r = _g;
	return $r;
}(this));
view_dashboard_model_RolesFormModel.dataDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["userList"] = { columns : view_dashboard_model_RolesFormModel.userListColumns};
	{
		var _g1 = new haxe_ds_StringMap();
		_g1.h["user_group"] = { label : "UserGroup", flexGrow : 0};
		_g1.h["group_name"] = { label : "Beschreibung", flexGrow : 1};
		_g1.h["allowed_campaigns"] = { label : "Kampagnen", flexGrow : 1};
		_g.h["userGroups"] = { columns : _g1};
	}
	$r = _g;
	return $r;
}(this));
view_data_Accounts.displayName = "Accounts";
view_data_Accounts._renderWrapper = (redux_react_ReactRedux.connect(null,view_data_Accounts.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_data_Accounts));
view_data_Accounts.__jsxStatic = view_data_Accounts._renderWrapper;
view_data_Contacts.displayName = "Contacts";
view_data_Contacts._renderWrapper = (redux_react_ReactRedux.connect(view_data_Contacts.mapStateToProps,view_data_Contacts.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_data_Contacts));
view_data_Contacts.__jsxStatic = view_data_Contacts._renderWrapper;
view_data_Deals.displayName = "Deals";
view_data_Deals._renderWrapper = (redux_react_ReactRedux.connect(view_data_Deals.mapStateToProps,view_data_Deals.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_data_Deals));
view_data_Deals.__jsxStatic = view_data_Deals._renderWrapper;
view_data_QC.displayName = "QC";
view_data_QC._renderWrapper = (redux_react_ReactRedux.connect(view_data_QC.mapStateToProps,view_data_QC.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_data_QC));
view_data_QC.__jsxStatic = view_data_QC._renderWrapper;
view_data_accounts_Edit.menuItems = [{ label : "Auswahl", action : "get", section : "List"},{ label : "Bearbeiten", action : "update"},{ label : "Neu", action : "insert"},{ label : "Löschen", action : "delete"}];
view_data_accounts_Edit.displayName = "Edit";
view_data_accounts_List.menuItems = [{ label : "Anzeigen", action : "get"},{ label : "Bearbeiten", action : "edit"},{ label : "Neu", action : "insert"},{ label : "Löschen", action : "delete"}];
view_data_accounts_List.displayName = "List";
view_data_accounts_List._renderWrapper = (redux_react_ReactRedux.connect(view_data_accounts_List.mapStateToProps,view_data_accounts_List.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_data_accounts_List));
view_data_accounts_List.__jsxStatic = view_data_accounts_List._renderWrapper;
view_data_accounts_model_Accounts.listColumns = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["contact"] = { label : "Kontakt", show : false};
	_g.h["account_holder"] = { label : "Kontoinhaber", flexGrow : 1};
	_g.h["bank_name"] = { label : "Bankname", flexGrow : 1};
	_g.h["blz"] = { label : "BLZ"};
	_g.h["iban"] = { label : "IBAN"};
	_g.h["sign_date"] = { label : "Erteilt am", className : "tCenter"};
	_g.h["status"] = { label : "Aktiv", className : "tCenter", cellFormat : function(v) {
		var aState = v == "active" ? "fa-user" : "passive fa-user";
		return React.createElement(react_ReactType.fromString("span"),{ className : "fa " + aState});
	}};
	_g.h["id"] = { show : false};
	$r = _g;
	return $r;
}(this));
view_data_accounts_model_Accounts.dataDisplay = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["accountsList"] = { columns : view_data_accounts_model_Accounts.listColumns};
	$r = _g;
	return $r;
}(this));
view_data_contacts_Accounts.classPath = view_data_contacts_Accounts.__name__;
view_data_contacts_Accounts.displayName = "Accounts";
view_data_contacts_Accounts._renderWrapper = (redux_react_ReactRedux.connect(view_data_contacts_Accounts.mapStateToProps,view_data_contacts_Accounts.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_data_contacts_Accounts));
view_data_contacts_Accounts.__jsxStatic = view_data_contacts_Accounts._renderWrapper;
view_data_contacts_Deals.classPath = view_data_contacts_Deals.__name__;
view_data_contacts_Deals.displayName = "Deals";
view_data_contacts_Deals._renderWrapper = (redux_react_ReactRedux.connect(view_data_contacts_Deals.mapStateToProps,view_data_contacts_Deals.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_data_contacts_Deals));
view_data_contacts_Deals.__jsxStatic = view_data_contacts_Deals._renderWrapper;
view_data_contacts_Edit.menuItems = [{ label : "Schließen", action : "close"},{ label : "Speichern", action : "update"},{ label : "Zurücksetzen", action : "reset"},{ separator : true}];
view_data_contacts_Edit.classPath = view_data_contacts_Edit.__name__;
view_data_contacts_Edit.displayName = "Edit";
view_data_contacts_Edit._renderWrapper = (redux_react_ReactRedux.connect(view_data_contacts_Edit.mapStateToProps,view_data_contacts_Edit.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_data_contacts_Edit));
view_data_contacts_Edit.__jsxStatic = view_data_contacts_Edit._renderWrapper;
view_data_contacts_List.menuItems = [{ label : "Bearbeiten", action : "update", disabled : true, id : "edit", section : "Edit"},{ label : "Neu", action : "insert", section : "Edit"},{ label : "Löschen", action : "delete", disabled : true},{ label : "Auswahl aufheben", action : "selectionClear", disabled : true},{ separator : true},{ label : "ID", formField : { name : "id", findFormat : function(v) {
	haxe_Log.trace(v,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 69, className : "view.data.contacts.List", methodName : "menuItems"});
	return v;
}}},{ label : "Vorname", formField : { name : "first_name", matchFormat : shared_FindFields.iLike}},{ label : "Nachname", formField : { name : "last_name", matchFormat : shared_FindFields.iLike}},{ label : "Telefon", formField : { name : "phone_number", findFormat : function(v) {
	var _this_r = new RegExp("^0+","".split("u").join(""));
	v = v.replace(_this_r,"");
	haxe_Log.trace(v,{ fileName : "src/view/data/contacts/List.hx", lineNumber : 76, className : "view.data.contacts.List", methodName : "menuItems"});
	return v;
}}},{ label : "Ort", formField : { name : "city", matchFormat : shared_FindFields.iLike}},{ label : "Straße", formField : { name : "address1", matchFormat : shared_FindFields.iLike}},{ label : "IBAN", formField : { name : "iban", matchFormat : shared_FindFields.iLike, dbTableName : "accounts", alias : "ac"}}];
view_data_contacts_List.printItems = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["2"] = "Kinderhilfe";
	_g.h["3"] = "Tierhilfe";
	$r = [{ className : "formNoLabel", formField : { name : "product", type : "Radio", options : _g}},{ className : "cblock", label : "Mitgliedsnummern (Leerzeichen getrennt)", disabled : false, formField : { name : "printList"}},{ label : "Drucken", action : "printList", disabled : false},{ label : "Alle neuen Anschreiben Drucken", action : "printNew"}];
	return $r;
}(this));
view_data_contacts_List.displayName = "List";
view_data_contacts_List._renderWrapper = (redux_react_ReactRedux.connect(view_data_contacts_List.mapStateToProps,view_data_contacts_List.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_data_contacts_List));
view_data_contacts_List.__jsxStatic = view_data_contacts_List._renderWrapper;
view_data_deals_Edit.menuItems = [{ label : "Schließen", action : "close"},{ label : "Speichern", action : "update"},{ label : "Zurücksetzen", action : "reset", onlySm : false}];
view_data_deals_Edit.displayName = "Edit";
view_data_deals_Edit._renderWrapper = (redux_react_ReactRedux.connect(view_data_deals_Edit.mapStateToProps,view_data_deals_Edit.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_data_deals_Edit));
view_data_deals_Edit.__jsxStatic = view_data_deals_Edit._renderWrapper;
view_data_deals_List.menuItems = [{ label : "Bearbeiten", action : "open", section : "Edit"},{ label : "Löschen", action : "delete"},{ label : "Auswahl aufheben", action : "selectionClear"}];
view_data_deals_List.displayName = "List";
view_data_deals_List._renderWrapper = (redux_react_ReactRedux.connect(view_data_deals_List.mapStateToProps,view_data_deals_List.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_data_deals_List));
view_data_deals_List.__jsxStatic = view_data_deals_List._renderWrapper;
view_data_qc_Edit.menuItems = [{ label : "Schließen", action : "close"},{ label : "Speichern", action : "qc_save"},{ label : "Zurücksetzen", action : "loadQC"},{ label : "QC OK", action : "qc_ok"},{ label : "QC NEGATIV", action : "qc_bad"},{ separator : true}];
view_data_qc_Edit.classPath = view_data_qc_Edit.__name__;
view_data_qc_Edit.displayName = "Edit";
view_data_qc_Edit._renderWrapper = (redux_react_ReactRedux.connect(view_data_qc_Edit.mapStateToProps,view_data_qc_Edit.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_data_qc_Edit));
view_data_qc_Edit.__jsxStatic = view_data_qc_Edit._renderWrapper;
view_data_qc_List.menuItems = [{ label : "Bearbeiten", action : "update", section : "Edit"},{ label : "Löschen", action : "delete"},{ label : "Auswahl aufheben", action : "selectionClear"}];
view_data_qc_List.displayName = "List";
view_data_qc_List._renderWrapper = (redux_react_ReactRedux.connect(view_data_qc_List.mapStateToProps))(react_ReactTypeOf.fromComp(view_data_qc_List));
view_data_qc_List.__jsxStatic = view_data_qc_List._renderWrapper;
view_grid_Grid.clickDelay = 200;
view_grid_Grid.displayName = "Grid";
view_grid_Grid._renderWrapper = react_router_ReactRouter.withRouter(react_ReactType.fromComp(view_grid_Grid));
view_grid_Grid.__jsxStatic = view_grid_Grid._renderWrapper;
view_shared_DateTime.displayName = "DateTime";
view_shared_DateTime._renderWrapper = react_intl_ReactIntl.injectIntl(react_ReactType.fromComp(view_shared_DateTime));
view_shared_DateTime.__jsxStatic = view_shared_DateTime._renderWrapper;
view_shared_Menu.displayName = "Menu";
view_shared_Menu._renderWrapper = react_router_ReactRouter.withRouter(react_ReactType.fromComp(view_shared_Menu));
view_shared_Menu.__jsxStatic = view_shared_Menu._renderWrapper;
view_shared_SLink.displayName = "SLink";
view_shared_SLink._renderWrapper = (redux_react_ReactRedux.connect(view_shared_SLink.mapStateToProps))(react_ReactTypeOf.fromComp(view_shared_SLink));
view_shared_SLink.__jsxStatic = view_shared_SLink._renderWrapper;
view_shared_TabLink.displayName = "TabLink";
view_shared_io_Bookmarks.menuItems = [{ label : "Neu", action : "insert"},{ label : "Bearbeiten", action : "update"},{ label : "Speichern", action : "save"},{ label : "Löschen", action : "delete"}];
view_shared_io_Bookmarks.displayName = "Bookmarks";
view_shared_io_Bookmarks._renderWrapper = (redux_react_ReactRedux.connect())(react_ReactTypeOf.fromComp(view_shared_io_Bookmarks));
view_shared_io_Bookmarks.__jsxStatic = view_shared_io_Bookmarks._renderWrapper;
view_shared_io_Design.menuItems = [{ label : "Neu", action : "insert"},{ label : "Bearbeiten", action : "update"},{ label : "Speichern", action : "save"},{ label : "Löschen", action : "delete"}];
view_shared_io_Design.displayName = "Design";
view_shared_io_Loader.rqs = [];
view_shared_io_User.menuItems = [{ label : "Neu", action : "insert"},{ label : "Bearbeiten", action : "update"},{ label : "Speichern", action : "save"},{ label : "Löschen", action : "delete"}];
view_shared_io_User.displayName = "User";
view_shared_io_Users.menuItems = [{ label : "Liste", action : "get"},{ label : "Neu", action : "insert"},{ label : "Bearbeiten", action : "update"},{ label : "Speichern", action : "save"},{ label : "Löschen", action : "delete"}];
view_shared_io_Users.displayName = "Users";
view_stats_History.displayName = "History";
view_stats_History._renderWrapper = (redux_react_ReactRedux.connect(view_stats_History.mapStateToProps,view_stats_History.mapDispatchToProps))(react_ReactTypeOf.fromComp(view_stats_History));
view_stats_History.__jsxStatic = view_stats_History._renderWrapper;
view_stats_Performance.displayName = "Performance";
view_stats_Preview.displayName = "Preview";
view_stats_history_Charts.menuItems = [{ label : "Einstellung", action : "setup", section : "Charts"}];
view_stats_history_Charts.displayName = "Charts";
view_table_Table.displayName = "Table";
view_table_Tr.displayName = "Tr";
Go.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=app.js.map