<?php
/**
 * Generated by Haxe 4.1.1
 * Haxe source file: /opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Macros.hx
 */

namespace hxbit;

use \php\Boot;
use \php\_Boot\HxEnum;

class RpcMode extends HxEnum {
	/**
	 * @return RpcMode
	 */
	static public function All () {
		static $inst = null;
		if (!$inst) $inst = new RpcMode('All', 0, []);
		return $inst;
	}

	/**
	 * @return RpcMode
	 */
	static public function Clients () {
		static $inst = null;
		if (!$inst) $inst = new RpcMode('Clients', 1, []);
		return $inst;
	}

	/**
	 * @return RpcMode
	 */
	static public function Immediate () {
		static $inst = null;
		if (!$inst) $inst = new RpcMode('Immediate', 4, []);
		return $inst;
	}

	/**
	 * @return RpcMode
	 */
	static public function Owner () {
		static $inst = null;
		if (!$inst) $inst = new RpcMode('Owner', 3, []);
		return $inst;
	}

	/**
	 * @return RpcMode
	 */
	static public function Server () {
		static $inst = null;
		if (!$inst) $inst = new RpcMode('Server', 2, []);
		return $inst;
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			0 => 'All',
			1 => 'Clients',
			4 => 'Immediate',
			3 => 'Owner',
			2 => 'Server',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'All' => 0,
			'Clients' => 0,
			'Immediate' => 0,
			'Owner' => 0,
			'Server' => 0,
		];
	}
}

Boot::registerClass(RpcMode::class, 'hxbit.RpcMode');
