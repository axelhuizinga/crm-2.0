<?php
/**
 * Generated by Haxe 4.1.1
 * Haxe source file: src/model/admin/CreateUsers.hx
 */

namespace model\admin;

use \php\_Boot\HxDynamicStr;
use \php\_Boot\HxAnon;
use \php\Boot;
use \haxe\Log;
use \haxe\Json;
use \sys\Http;
use \haxe\ds\StringMap;

/**
 * ...
 * @author axel@bi4.me
 */
class CreateUsers extends \Model {
	/**
	 * @param StringMap $param
	 * 
	 * @return void
	 */
	public static function _create ($param) {
		#src/model/admin/CreateUsers.hx:29: characters 3-49
		$self = new CreateUsers($param);
		#src/model/admin/CreateUsers.hx:30: characters 3-12
		$self->go();
	}

	/**
	 * @param StringMap $param
	 * 
	 * @return void
	 */
	public function __construct ($param = null) {
		#src/model/admin/CreateUsers.hx:25: lines 25-215
		parent::__construct($param);
	}

	/**
	 * @param mixed $contact
	 * 
	 * @return int
	 */
	public function addContact ($contact) {
		#src/model/admin/CreateUsers.hx:47: characters 3-8
		(Log::$trace)(Boot::dynamicField($contact, 'user'), new HxAnon([
			"fileName" => "src/model/admin/CreateUsers.hx",
			"lineNumber" => 47,
			"className" => "model.admin.CreateUsers",
			"methodName" => "addContact",
		]));
		#src/model/admin/CreateUsers.hx:48: characters 3-94
		$name = (Boot::dynamicField($contact, 'full_name') !== null ? HxDynamicStr::wrap(Boot::dynamicField($contact, 'full_name'))->split(" ") : \Array_hx::wrap([
			"",
			"",
		]));
		#src/model/admin/CreateUsers.hx:49: lines 49-50
		if ($name->length === 1) {
			#src/model/admin/CreateUsers.hx:50: characters 4-20
			$name->length = array_unshift($name->arr, "");
		}
		#src/model/admin/CreateUsers.hx:51: lines 51-58
		$sql = "\x0A" . "WITH new_contact AS (\x0A" . "\x09INSERT INTO crm.contacts (mandator,phone_number,first_name,last_name,edited_by)\x0A" . ("\x09VALUES (1, '" . (\Std::string(Boot::dynamicField($contact, 'phone_number'))??'null') . "', '" . (($name->arr[0] ?? null)??'null') . "', '" . (($name->arr[1] ?? null)??'null') . "', 100)\x0A") . "\x09ON CONFLICT DO NOTHING\x0A" . "\x09returning id)\x0A" . "\x09select id from new_contact;\x0A" . "";
		#src/model/admin/CreateUsers.hx:59: characters 3-8
		(Log::$trace)($sql, new HxAnon([
			"fileName" => "src/model/admin/CreateUsers.hx",
			"lineNumber" => 59,
			"className" => "model.admin.CreateUsers",
			"methodName" => "addContact",
		]));
		#src/model/admin/CreateUsers.hx:60: characters 3-59
		$res = \S::$dbh->query($sql, \PDO::FETCH_ASSOC);
		#src/model/admin/CreateUsers.hx:61: lines 61-65
		if ($res === false) {
			#src/model/admin/CreateUsers.hx:63: characters 4-9
			(Log::$trace)(\S::$dbh->errorInfo(), new HxAnon([
				"fileName" => "src/model/admin/CreateUsers.hx",
				"lineNumber" => 63,
				"className" => "model.admin.CreateUsers",
				"methodName" => "addContact",
			]));
			#src/model/admin/CreateUsers.hx:64: characters 4-26
			\S::exit(new HxAnon(["data" => "error"]));
		}
		#src/model/admin/CreateUsers.hx:66: characters 3-8
		(Log::$trace)("Inserted ? " . ($res->rowCount()??'null'), new HxAnon([
			"fileName" => "src/model/admin/CreateUsers.hx",
			"lineNumber" => 66,
			"className" => "model.admin.CreateUsers",
			"methodName" => "addContact",
		]));
		#src/model/admin/CreateUsers.hx:67: characters 3-8
		(Log::$trace)("Inserted " . (\Std::string(Boot::dynamicField($contact, 'full_name'))??'null') . ": " . ($res->rowCount()??'null'), new HxAnon([
			"fileName" => "src/model/admin/CreateUsers.hx",
			"lineNumber" => 67,
			"className" => "model.admin.CreateUsers",
			"methodName" => "addContact",
		]));
		#src/model/admin/CreateUsers.hx:68: lines 68-74
		if ($res->rowCount() === 1) {
			#src/model/admin/CreateUsers.hx:71: characters 4-7
			$added = $res->fetch();
			#src/model/admin/CreateUsers.hx:72: characters 4-9
			(Log::$trace)($added, new HxAnon([
				"fileName" => "src/model/admin/CreateUsers.hx",
				"lineNumber" => 72,
				"className" => "model.admin.CreateUsers",
				"methodName" => "addContact",
			]));
			#src/model/admin/CreateUsers.hx:73: characters 4-22
			return $added["id"];
		}
		#src/model/admin/CreateUsers.hx:75: characters 3-34
		$sql = "\x0A" . ("SELECT id FROM contacts WHERE phone_number='" . (\Std::string(Boot::dynamicField($contact, 'phone_number'))??'null') . "' AND first_name='" . (($name->arr[0] ?? null)??'null') . "' AND last_name='" . (($name->arr[1] ?? null)??'null') . "'\x0A") . "";
		#src/model/admin/CreateUsers.hx:78: characters 3-42
		$res = \S::$dbh->query($sql, \PDO::FETCH_ASSOC);
		#src/model/admin/CreateUsers.hx:79: lines 79-85
		if ($res->rowCount() === 1) {
			#src/model/admin/CreateUsers.hx:82: characters 4-7
			$found = $res->fetch();
			#src/model/admin/CreateUsers.hx:83: characters 4-9
			(Log::$trace)($found, new HxAnon([
				"fileName" => "src/model/admin/CreateUsers.hx",
				"lineNumber" => 83,
				"className" => "model.admin.CreateUsers",
				"methodName" => "addContact",
			]));
			#src/model/admin/CreateUsers.hx:84: characters 4-22
			return $found["id"];
		}
		#src/model/admin/CreateUsers.hx:86: characters 3-8
		(Log::$trace)(($sql??'null') . ":" . (\Std::string(\S::$dbh->errorInfo())??'null'), new HxAnon([
			"fileName" => "src/model/admin/CreateUsers.hx",
			"lineNumber" => 86,
			"className" => "model.admin.CreateUsers",
			"methodName" => "addContact",
		]));
		#src/model/admin/CreateUsers.hx:87: characters 3-14
		return null;
	}

	/**
	 * @return void
	 */
	public function fromViciDial () {
		#src/model/admin/CreateUsers.hx:112: characters 3-53
		$rows = $this->getViciDialUserGroups();
		#src/model/admin/CreateUsers.hx:113: characters 3-22
		\S::exit(new HxAnon(["rows" => $rows]));
	}

	/**
	 * @return \Array_hx
	 */
	public function getViciDialUserGroups () {
		#src/model/admin/CreateUsers.hx:92: characters 3-43
		$ini = (\S::$conf->data["ini"] ?? null);
		#src/model/admin/CreateUsers.hx:93: characters 3-40
		$vD = $ini["vicidial"];
		#src/model/admin/CreateUsers.hx:95: characters 3-8
		(Log::$trace)($vD, new HxAnon([
			"fileName" => "src/model/admin/CreateUsers.hx",
			"lineNumber" => 95,
			"className" => "model.admin.CreateUsers",
			"methodName" => "getViciDialUserGroups",
		]));
		#src/model/admin/CreateUsers.hx:96: characters 3-8
		(Log::$trace)(\S::$vicidialUser, new HxAnon([
			"fileName" => "src/model/admin/CreateUsers.hx",
			"lineNumber" => 96,
			"className" => "model.admin.CreateUsers",
			"methodName" => "getViciDialUserGroups",
		]));
		#src/model/admin/CreateUsers.hx:97: characters 3-63
		$url = $ini['vicidial']['url'];
		#src/model/admin/CreateUsers.hx:98: characters 3-8
		(Log::$trace)(($url??'null') . ("?className=AdminApi&action=vicidial_user_groups&user=" . (\Std::string(($this->param->data["user_name"] ?? null))??'null') . "&pass=xxx"), new HxAnon([
			"fileName" => "src/model/admin/CreateUsers.hx",
			"lineNumber" => 98,
			"className" => "model.admin.CreateUsers",
			"methodName" => "getViciDialUserGroups",
		]));
		#src/model/admin/CreateUsers.hx:99: lines 99-100
		$vUserGroups = Json::phpJsonDecode(Http::requestUrl("" . ($url??'null') . "?className=AdminApi&action=vicidial_user_groups&user=" . (\Std::string(($this->param->data["user_name"] ?? null))??'null') . "}&pass=" . (\Std::string(($this->param->data["pass"] ?? null))??'null')));
		#src/model/admin/CreateUsers.hx:101: characters 3-26
		return Boot::dynamicField($vUserGroups, 'rows');
	}

	/**
	 * @return void
	 */
	public function getViciDialUsers () {
		#src/model/admin/CreateUsers.hx:106: characters 3-45
		$rows = $this->vicidialUsers();
		#src/model/admin/CreateUsers.hx:107: characters 3-22
		\S::exit(new HxAnon(["rows" => $rows]));
	}

	/**
	 * @return \Array_hx
	 */
	public function get_end_reasons () {
		#src/model/admin/CreateUsers.hx:118: characters 3-43
		$ini = (\S::$conf->data["ini"] ?? null);
		#src/model/admin/CreateUsers.hx:119: characters 3-40
		$vD = $ini["vicidial"];
		#src/model/admin/CreateUsers.hx:121: characters 3-8
		(Log::$trace)(\S::$vicidialUser, new HxAnon([
			"fileName" => "src/model/admin/CreateUsers.hx",
			"lineNumber" => 121,
			"className" => "model.admin.CreateUsers",
			"methodName" => "get_end_reasons",
		]));
		#src/model/admin/CreateUsers.hx:122: characters 3-14
		return null;
	}

	/**
	 * @return void
	 */
	public function go () {
		#src/model/admin/CreateUsers.hx:36: characters 3-8
		(Log::$trace)($this->action, new HxAnon([
			"fileName" => "src/model/admin/CreateUsers.hx",
			"lineNumber" => 36,
			"className" => "model.admin.CreateUsers",
			"methodName" => "go",
		]));
		#src/model/admin/CreateUsers.hx:37: characters 10-16
		if ($this->action === "run") {
			#src/model/admin/CreateUsers.hx:39: characters 5-10
			$this->run();
		}
	}

	/**
	 * @return void
	 */
	public function importExternal () {
		#src/model/admin/CreateUsers.hx:133: characters 3-24
		$mandator = 1;
		#src/model/admin/CreateUsers.hx:134: characters 3-26
		$sysadmin = 100;
		#src/model/admin/CreateUsers.hx:162: characters 3-45
		$rows = $this->vicidialUsers();
		#src/model/admin/CreateUsers.hx:163: lines 163-192
		$_g = 0;
		while ($_g < $rows->length) {
			#src/model/admin/CreateUsers.hx:163: characters 8-12
			$iRow = ($rows->arr[$_g] ?? null);
			#src/model/admin/CreateUsers.hx:163: lines 163-192
			++$_g;
			#src/model/admin/CreateUsers.hx:165: lines 165-166
			if (Boot::equal(HxDynamicStr::wrap(Boot::dynamicField($iRow, 'user'))->indexOf("V"), 0)) {
				#src/model/admin/CreateUsers.hx:166: characters 5-13
				continue;
			}
			#src/model/admin/CreateUsers.hx:167: characters 4-41
			$contactId = $this->addContact($iRow);
			#src/model/admin/CreateUsers.hx:168: lines 168-171
			if ($contactId === null) {
				#src/model/admin/CreateUsers.hx:170: characters 5-27
				\S::exit(new HxAnon(["data" => "error"]));
			}
			#src/model/admin/CreateUsers.hx:172: characters 4-51
			$initialPass = \Random::string(13, "abcdefghijklmnopqrstuvwxyz_ยง!%ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
			#src/model/admin/CreateUsers.hx:173: characters 4-40
			$external_text = $this->row2jsonb($iRow);
			#src/model/admin/CreateUsers.hx:175: lines 175-182
			$sql = "\x0A" . ("WITH user_group AS (SELECT id FROM user_groups WHERE name='" . (\Std::string(Boot::dynamicField($iRow, 'user_group'))??'null') . "') \x0A") . ("INSERT INTO crm.users VALUES (DEFAULT, " . ($contactId??'null') . ", DEFAULT, CRYPT('" . ($initialPass??'null') . "', gen_salt('bf', 8)), " . (\Std::string(Boot::dynamicField($iRow, 'user'))??'null') . ", \x0A") . ("CASE WHEN '" . (\Std::string(Boot::dynamicField($iRow, 'active'))??'null') . "'='Y' THEN TRUE ELSE FALSE END, " . ($sysadmin??'null') . ", DEFAULT,\x0A") . ("jsonb_object('{\"initialPass\", \"" . ($initialPass??'null') . "\"}'), \x0A") . ("jsonb_build_object('1', jsonb_object('{" . ($external_text??'null') . "}')::jsonb), (SELECT * FROM user_group), TRUE)  \x0A") . ("ON CONFLICT (user_name) DO UPDATE SET contact=" . ($contactId??'null') . " \x0A") . "";
			#src/model/admin/CreateUsers.hx:183: characters 4-9
			(Log::$trace)($sql, new HxAnon([
				"fileName" => "src/model/admin/CreateUsers.hx",
				"lineNumber" => 183,
				"className" => "model.admin.CreateUsers",
				"methodName" => "importExternal",
			]));
			#src/model/admin/CreateUsers.hx:184: characters 4-44
			$res = \S::$dbh->query($sql);
			#src/model/admin/CreateUsers.hx:185: lines 185-189
			if ($res->errorCode() !== "0000") {
				#src/model/admin/CreateUsers.hx:187: characters 5-10
				(Log::$trace)(\S::$dbh->errorInfo(), new HxAnon([
					"fileName" => "src/model/admin/CreateUsers.hx",
					"lineNumber" => 187,
					"className" => "model.admin.CreateUsers",
					"methodName" => "importExternal",
				]));
				#src/model/admin/CreateUsers.hx:188: characters 5-27
				\S::exit(new HxAnon(["data" => "error"]));
			}
			#src/model/admin/CreateUsers.hx:190: characters 4-9
			(Log::$trace)("Inserted " . (\Std::string(Boot::dynamicField($iRow, 'user_group'))??'null') . ": " . ($res->rowCount()??'null'), new HxAnon([
				"fileName" => "src/model/admin/CreateUsers.hx",
				"lineNumber" => 190,
				"className" => "model.admin.CreateUsers",
				"methodName" => "importExternal",
			]));
		}
		#src/model/admin/CreateUsers.hx:197: characters 3-22
		\S::exit(new HxAnon(["data" => "OK"]));
	}

	/**
	 * @return \Array_hx
	 */
	public function vicidialUsers () {
		#src/model/admin/CreateUsers.hx:202: characters 3-43
		$ini = (\S::$conf->data["ini"] ?? null);
		#src/model/admin/CreateUsers.hx:203: characters 3-40
		$vD = $ini["vicidial"];
		#src/model/admin/CreateUsers.hx:204: characters 3-8
		(Log::$trace)($ini, new HxAnon([
			"fileName" => "src/model/admin/CreateUsers.hx",
			"lineNumber" => 204,
			"className" => "model.admin.CreateUsers",
			"methodName" => "vicidialUsers",
		]));
		#src/model/admin/CreateUsers.hx:205: characters 3-8
		(Log::$trace)($vD, new HxAnon([
			"fileName" => "src/model/admin/CreateUsers.hx",
			"lineNumber" => 205,
			"className" => "model.admin.CreateUsers",
			"methodName" => "vicidialUsers",
		]));
		#src/model/admin/CreateUsers.hx:206: characters 3-8
		(Log::$trace)(\S::$vicidialUser, new HxAnon([
			"fileName" => "src/model/admin/CreateUsers.hx",
			"lineNumber" => 206,
			"className" => "model.admin.CreateUsers",
			"methodName" => "vicidialUsers",
		]));
		#src/model/admin/CreateUsers.hx:207: characters 3-63
		$url = $ini['vicidial']['url'];
		#src/model/admin/CreateUsers.hx:208: characters 3-8
		(Log::$trace)(($url??'null') . ("?className=AdminApi&action=vicidial_users&user=" . (\Std::string(($this->param->data["user_name"] ?? null))??'null') . "}&pass=xxx"), new HxAnon([
			"fileName" => "src/model/admin/CreateUsers.hx",
			"lineNumber" => 208,
			"className" => "model.admin.CreateUsers",
			"methodName" => "vicidialUsers",
		]));
		#src/model/admin/CreateUsers.hx:210: characters 3-168
		$res = file_get_contents(("" . ($url??'null') . "?className=AdminApi&action=vicidial_users&user=" . (\Std::string(($this->param->data["user_name"] ?? null))??'null') . "}&pass=" . (\Std::string(($this->param->data["pass"] ?? null))??'null') . "}&active=Y"));
		#src/model/admin/CreateUsers.hx:211: characters 3-8
		(Log::$trace)(mb_substr($res, 0, 18), new HxAnon([
			"fileName" => "src/model/admin/CreateUsers.hx",
			"lineNumber" => 211,
			"className" => "model.admin.CreateUsers",
			"methodName" => "vicidialUsers",
		]));
		#src/model/admin/CreateUsers.hx:212: characters 3-30
		return Boot::dynamicField(Json::phpJsonDecode($res), 'rows');
	}
}

Boot::registerClass(CreateUsers::class, 'model.admin.CreateUsers');
