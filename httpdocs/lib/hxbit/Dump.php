<?php
/**
 * Generated by Haxe 4.0.0-rc.5+4a745347f
 * Haxe source file: /opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx
 */

namespace hxbit;

use \haxe\io\_BytesData\Container;
use \php\_Boot\HxAnon;
use \php\Boot;
use \haxe\Log;
use \sys\io\File;
use \haxe\io\Error;
use \haxe\Json;
use \php\_Boot\HxString;
use \haxe\ds\IntMap;
use \haxe\ds\StringMap;
use \php\_Boot\HxException;
use \haxe\io\Bytes;

class Dump extends Serializer {
	/**
	 * @var StringMap
	 */
	public $cachedEnum;
	/**
	 * @var IntMap
	 */
	public $drefs;
	/**
	 * @var StringMap
	 */
	public $hclasses;
	/**
	 * @var IntMap
	 */
	public $hhashed;
	/**
	 * @var IntMap
	 */
	public $hids;

	/**
	 * @param Bytes $data
	 * 
	 * @return void
	 */
	public function __construct ($data) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:12: characters 3-10
		parent::__construct();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:13: characters 3-20
		$this->setInput($data, 0);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:14: characters 3-20
		$this->drefs = new IntMap();
	}

	/**
	 * @param string $file
	 * 
	 * @return void
	 */
	public function dump ($file = "dump.json") {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:56: characters 3-70
		if ($file === null) {
			$file = "dump.json";
		}
		File::saveContent($file, Json::phpJsonEncode($this->dumpObj(), null, "\x09"));
	}

	/**
	 * @return mixed
	 */
	public function dumpAnyRef () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:60: characters 12-20
		$v = ord($this->input->b->s[$this->inPos++]);
		if ($v === 128) {
			$_this = $this->input;
			$pos = $this->inPos;
			$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
			$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
			$this->inPos += 4;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:60: characters 3-21
		$id = $v;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:61: lines 61-62
		if ($id === 0) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:62: characters 4-15
			return null;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:63: lines 63-64
		if (($this->drefs->data[$id] ?? null) !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:64: characters 4-17
			return "@" . ($id??'null');
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:65: characters 3-25
		$clidx = (ord($this->input->b->s[$this->inPos++]) << 8) | ord($this->input->b->s[$this->inPos++]);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:66: characters 3-24
		$cl = ($this->hids->data[$clidx] ?? null);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:67: characters 3-39
		$o = new HxAnon([
			"_" => $cl->name,
			"__uid" => $id,
		]);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:68: characters 3-16
		$this->drefs->data[$id] = $o;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:69: characters 3-30
		$this->dumpRefFields($o, $cl->schema);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:70: characters 3-11
		return $o;
	}

	/**
	 * @return object
	 */
	public function dumpObj () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:18: characters 7-18
		$v = ord($this->input->b->s[$this->inPos++]);
		if ($v === 128) {
			$_this = $this->input;
			$pos = $this->inPos;
			$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
			$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
			$this->inPos += 4;
		}
		$len = $v;
		$tmp = null;
		if ($len === 0) {
			$tmp = null;
		} else {
			--$len;
			$_this1 = $this->input;
			$pos1 = $this->inPos;
			$s = null;
			if (($pos1 < 0) || ($len < 0) || (($pos1 + $len) > $_this1->length)) {
				throw new HxException(Error::OutsideBounds());
			} else {
				$s = substr($_this1->b->s, $pos1, $len);
			}
			$this->inPos += $len;
			$tmp = $s;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:18: lines 18-19
		if ($tmp !== "HXS") {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:19: characters 4-9
			throw new HxException("Invalid HXS data");
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:20: characters 3-27
		$version = ord($this->input->b->s[$this->inPos++]);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:21: lines 21-22
		if ($version !== 1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:22: characters 4-9
			throw new HxException("Unsupported HXS version " . ($version??'null'));
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:24: characters 3-32
		$classes = new \Array_hx();
		$cobjs = new \Array_hx();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:25: characters 3-23
		$this->hclasses = new StringMap();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:26: characters 3-19
		$this->hids = new IntMap();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:27: characters 3-22
		$this->hhashed = new IntMap();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:28: characters 3-25
		$this->cachedEnum = new StringMap();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:29: lines 29-40
		while (true) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:30: characters 17-28
			$v2 = ord($this->input->b->s[$this->inPos++]);
			if ($v2 === 128) {
				$_this2 = $this->input;
				$pos2 = $this->inPos;
				$v11 = ord($_this2->b->s[$pos2]) | (ord($_this2->b->s[$pos2 + 1]) << 8) | (ord($_this2->b->s[$pos2 + 2]) << 16) | (ord($_this2->b->s[$pos2 + 3]) << 24);
				$v2 = (($v11 & ((int)-2147483648)) !== 0 ? $v11 | ((int)-2147483648) : $v11);
				$this->inPos += 4;
			}
			$len1 = $v2;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:30: characters 4-29
			$clname = null;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:30: characters 17-28
			if ($len1 === 0) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:30: characters 4-29
				$clname = null;
			} else {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:30: characters 17-28
				--$len1;
				$_this11 = $this->input;
				$pos11 = $this->inPos;
				$s1 = null;
				if (($pos11 < 0) || ($len1 < 0) || (($pos11 + $len1) > $_this11->length)) {
					throw new HxException(Error::OutsideBounds());
				} else {
					$s1 = substr($_this11->b->s, $pos11, $len1);
				}
				$this->inPos += $len1;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:30: characters 4-29
				$clname = $s1;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:31: characters 4-30
			if ($clname === null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:31: characters 25-30
				break;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:32: characters 4-26
			$index = (ord($this->input->b->s[$this->inPos++]) << 8) | ord($this->input->b->s[$this->inPos++]);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:33: characters 14-24
			$_this3 = $this->input;
			$pos3 = $this->inPos;
			$v3 = ord($_this3->b->s[$pos3]) | (ord($_this3->b->s[$pos3 + 1]) << 8) | (ord($_this3->b->s[$pos3 + 2]) << 16) | (ord($_this3->b->s[$pos3 + 3]) << 24);
			$v12 = (($v3 & ((int)-2147483648)) !== 0 ? $v3 | ((int)-2147483648) : $v3);
			$this->inPos += 4;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:33: characters 4-25
			$crc = $v12;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:34: characters 4-61
			$cl = new HxAnon([
				"name" => $clname,
				"index" => $index,
				"schema" => null,
			]);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:35: characters 4-20
			$classes->arr[$classes->length] = $cl;
			++$classes->length;

			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:36: characters 4-28
			$this->hclasses->data[$clname] = $cl;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:37: characters 4-23
			$this->hids->data[$index] = $cl;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:38: characters 4-44
			$this1 = $this->hhashed;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:38: characters 16-39
			$v4 = 1;
			$_g = 0;
			$_g1 = mb_strlen($clname);
			while ($_g < $_g1) {
				$i = $_g++;
				$v4 = (int)(($v4 * 223 + \StringTools::fastCodeAt($clname, $i)));
			}

			$v4 = 1 + (($v4 & 1073741823) % 65423);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:38: characters 4-44
			$this1->data[$v4] = $cl;

			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:39: characters 4-64
			$x = new HxAnon([
				"name" => $clname,
				"crc" => \StringTools::hex($crc, 8),
			]);
			$cobjs->arr[$cobjs->length] = $x;
			++$cobjs->length;

		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:42: characters 24-32
		$v5 = ord($this->input->b->s[$this->inPos++]);
		if ($v5 === 128) {
			$_this4 = $this->input;
			$pos4 = $this->inPos;
			$v13 = ord($_this4->b->s[$pos4]) | (ord($_this4->b->s[$pos4 + 1]) << 8) | (ord($_this4->b->s[$pos4 + 2]) << 16) | (ord($_this4->b->s[$pos4 + 3]) << 24);
			$v5 = (($v13 & ((int)-2147483648)) !== 0 ? $v13 | ((int)-2147483648) : $v13);
			$this->inPos += 4;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:42: characters 3-33
		$schemaDataSize = $v5;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:43: lines 43-44
		$_g2 = 0;
		while ($_g2 < $classes->length) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:43: characters 8-9
			$c = ($classes->arr[$_g2] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:43: lines 43-44
			++$_g2;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:44: characters 15-34
			$c1 = Boot::getClass(Schema::class);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:44: characters 4-34
			$c->schema = $this->getRef($c1, Boot::dynamicField($c1, '__clid'));
		}

		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:46: characters 3-17
		$objs = new \Array_hx();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:47: lines 47-51
		while (true) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:48: characters 4-25
			$o = $this->dumpAnyRef();
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:49: characters 4-25
			if ($o === null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:49: characters 20-25
				break;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:50: characters 4-16
			$objs->arr[$objs->length] = $o;
			++$objs->length;

		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:52: characters 3-61
		return new HxAnon([
			"version" => $version,
			"classes" => $cobjs,
			"objs" => $objs,
		]);
	}

	/**
	 * @param string $clname
	 * @param Schema $s
	 * 
	 * @return mixed
	 */
	public function dumpRef ($clname, $s) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:74: characters 12-20
		$v = ord($this->input->b->s[$this->inPos++]);
		if ($v === 128) {
			$_this = $this->input;
			$pos = $this->inPos;
			$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
			$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
			$this->inPos += 4;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:74: characters 3-21
		$id = $v;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:75: characters 3-28
		if ($id === 0) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:75: characters 17-28
			return null;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:76: lines 76-77
		if (($this->drefs->data[$id] ?? null) !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:77: characters 4-17
			return "@" . ($id??'null');
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:78: lines 78-84
		if (!$s->isFinal) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:79: characters 4-28
			$realIdx = (ord($this->input->b->s[$this->inPos++]) << 8) | ord($this->input->b->s[$this->inPos++]);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:80: characters 4-33
			$c = ($this->hhashed->data[$realIdx] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:81: characters 4-25
			if ($c === null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:81: characters 20-25
				throw new HxException("Missing class " . ($realIdx??'null') . "(" . (\Std::string((Serializer::$CL_BYID->arr[$realIdx] ?? null))??'null') . ")");
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:82: characters 4-16
			$s = $c->schema;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:83: characters 4-19
			$clname = $c->name;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:85: characters 3-38
		$o = new HxAnon([
			"_" => $clname,
			"__uid" => $id,
		]);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:86: characters 3-16
		$this->drefs->data[$id] = $o;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:87: characters 3-22
		$this->dumpRefFields($o, $s);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:88: characters 3-11
		return $o;
	}

	/**
	 * @param mixed $o
	 * @param Schema $schema
	 * 
	 * @return void
	 */
	public function dumpRefFields ($o, $schema) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:93: lines 93-98
		$_g = 0;
		$_g1 = $schema->fieldsNames->length;
		while ($_g < $_g1) {
			$i = $_g++;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:94: characters 4-34
			$n = ($schema->fieldsNames->arr[$i] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:95: characters 4-34
			$t = ($schema->fieldsTypes->arr[$i] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:96: characters 4-35
			$v = $this->readValue($t);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:97: characters 4-29
			\Reflect::setField($o, $n, $v);
		}
	}

	/**
	 * @param PropTypeDesc $t
	 * 
	 * @return mixed
	 */
	public function readValue ($t) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:102: lines 102-153
		$__hx__switch = ($t->index);
		if ($__hx__switch === 4) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:137: characters 16-26
			$v = ord($this->input->b->s[$this->inPos++]);
			if ($v === 128) {
				$_this = $this->input;
				$pos = $this->inPos;
				$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
				$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
				$this->inPos += 4;
			}
			$len = $v;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:137: characters 4-27
			$bytes = null;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:137: characters 16-26
			if ($len === 0) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:137: characters 4-27
				$bytes = null;
			} else {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:137: characters 16-26
				--$len;
				$_this1 = $this->input;
				$pos1 = $this->inPos;
				$s = null;
				if (($pos1 < 0) || ($len < 0) || (($pos1 + $len) > $_this1->length)) {
					throw new HxException(Error::OutsideBounds());
				} else {
					$s = new Bytes($len, new Container(substr($_this1->b->s, $pos1, $len)));
				}
				$this->inPos += $len;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:137: characters 4-27
				$bytes = $s;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:138: lines 138-139
			if ($bytes === null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:139: characters 5-16
				return null;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:140: lines 140-141
			if ($bytes->length < 64) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:141: characters 5-32
				return "0x" . (bin2hex($bytes->b->s)??'null');
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:142: characters 14-41
			$b1 = new Container(md5($bytes->b->s, true));
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:142: characters 4-50
			$crc = bin2hex((new Bytes(strlen($b1->s), $b1))->b->s);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:143: characters 4-46
			File::saveBytes(($crc??'null') . ".bin", $bytes);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:144: characters 4-26
			return "<" . ($crc??'null') . ">";
		} else if ($__hx__switch === 5) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:103: characters 22-26
			$name = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:104: characters 4-31
			$c = ($this->hclasses->data[$name] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:105: lines 105-112
			if ($c === null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:106: characters 5-65
				$cl = \Type::resolveClass($name);
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:107: lines 107-108
				if ($cl === null) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:108: characters 6-11
					throw new HxException("Could not find class " . ($name??'null'));
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:109: characters 5-10
				(Log::$trace)("*** Class " . ($name??'null') . " was not listed in schemas! ***", new HxAnon([
					"fileName" => "hxbit/Dump.hx",
					"lineNumber" => 109,
					"className" => "hxbit.Dump",
					"methodName" => "readValue",
				]));
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:110: characters 5-96
				$c = new HxAnon([
					"name" => $name,
					"schema" => \Type::createEmptyInstance($cl)->getSerializeSchema(),
					"index" => -1,
				]);
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:111: characters 5-26
				$this->hclasses->data[$name] = $c;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:113: characters 4-35
			return $this->dumpRef($c->name, $c->schema);
		} else if ($__hx__switch === 6) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:114: characters 14-18
			$name1 = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:115: characters 4-26
			$index = ord($this->input->b->s[$this->inPos++]);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:116: lines 116-117
			if ($index === 0) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:117: characters 5-16
				return null;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:118: characters 4-11
			--$index;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:119: characters 4-33
			$s1 = ($this->cachedEnum->data[$name1] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:120: lines 120-125
			if ($s1 === null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:121: characters 5-89
				$ser = \Type::resolveClass("hxbit.enumSer." . (HxString::split($name1, ".")->join("_")??'null'));
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:122: characters 5-28
				if ($ser === null) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:122: characters 23-28
					throw new HxException("No enum unserializer found for " . ($name1??'null'));
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:123: characters 5-24
				$s1 = $ser->getSchema();
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:124: characters 5-28
				$this->cachedEnum->data[$name1] = $s1;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:126: characters 4-36
			$name2 = ($s1->fieldsNames->arr[$index] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:127: characters 4-33
			$t1 = ($s1->fieldsTypes->arr[$index] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:128: lines 128-129
			if ($name2 === null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:129: characters 5-27
				return "????@" . ($index??'null');
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:130: lines 130-131
			if ($t1 === null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:131: characters 5-16
				return $name2;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:132: characters 4-107
			$args = null;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:132: characters 15-106
			if ($t1->index === 9) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:132: characters 39-41
				$fl = $t1->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:132: characters 44-78
				$_g = new \Array_hx();
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:132: characters 45-77
				$_g1 = 0;
				while ($_g1 < $fl->length) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:132: characters 50-51
					$f = ($fl->arr[$_g1] ?? null);
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:132: characters 45-77
					++$_g1;
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:132: characters 60-77
					$x = $this->readValue($f->type);
					$_g->arr[$_g->length] = $x;
					++$_g->length;

				}

				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:132: characters 4-107
				$args = $_g;
			} else {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:132: characters 89-94
				throw new HxException("assert");
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:133: characters 4-25
			$o = new HxAnon(["_" => $args]);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:134: characters 4-33
			\Reflect::setField($o, $name2, "");
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:135: characters 4-12
			return $o;
		} else if ($__hx__switch === 7) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:145: characters 13-14
			$_g3 = $t->params[1];
			$_g2 = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:146: characters 4-59
			$m = parent::readValue($t);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:147: characters 4-15
			$o1 = new HxAnon();
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:148: characters 14-22
			$i = $m->keys();
			while ($i->hasNext()) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:148: lines 148-149
				$i1 = $i->next();
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:149: characters 5-42
				\Reflect::setField($o1, "" . ($i1??'null'), $m->get($i1));
			}

			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:150: characters 4-12
			return $o1;
		} else {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Dump.hx:152: characters 4-29
			return parent::readValue($t);
		}
	}
}

Boot::registerClass(Dump::class, 'hxbit.Dump');
