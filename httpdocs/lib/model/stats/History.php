<?php
/**
 * Generated by Haxe 4.1.1
 * Haxe source file: src/model/stats/History.hx
 */

namespace model\stats;

use \php\_Boot\HxAnon;
use \php\Boot;
use \haxe\Log;
use \haxe\ds\StringMap;

/**
 * ...
 * @author axel@cunity.me
 */
class History extends \Model {
	/**
	 * @param StringMap $param
	 * 
	 * @return void
	 */
	public function __construct ($param = null) {
		#src/model/stats/History.hx:31: characters 3-15
		parent::__construct($param);
		#src/model/stats/History.hx:32: characters 3-7
		$this->go();
	}

	/**
	 * @return void
	 */
	public function get () {
		#src/model/stats/History.hx:49: characters 3-79
		$filter = (($this->param->data["filter"] ?? null) !== null ? "WHERE " . (\Std::string(($this->param->data["filter"] ?? null))??'null') : "");
		#src/model/stats/History.hx:50: lines 50-54
		$sql1 = "\x0A" . "SELECT COUNT(*),  date(date_trunc('month',Termin)), SUM(Betrag) \x0A" . ("FROM bank_transfers " . ($filter??'null') . " GROUP BY  date(date_trunc('month',Termin)) \x0A") . "ORDER BY date(date_trunc('month',Termin))\x0A" . "";
		#src/model/stats/History.hx:55: characters 3-27
		\S::$dbh->beginTransaction();
		#src/model/stats/History.hx:56: lines 56-58
		$sql = "\x0A" . "CREATE TEMPORARY TABLE m_bank ON COMMIT DROP AS SELECT * FROM bank_transfers;;\x0A" . "";
		#src/model/stats/History.hx:59: characters 3-44
		$stmt = \S::$dbh->query($sql);
		#src/model/stats/History.hx:60: lines 60-64
		if (\S::$dbh->errorCode() !== "00000") {
			#src/model/stats/History.hx:62: characters 4-9
			(Log::$trace)(\S::$dbh->errorInfo(), new HxAnon([
				"fileName" => "src/model/stats/History.hx",
				"lineNumber" => 62,
				"className" => "model.stats.History",
				"methodName" => "get",
			]));
		}
		#src/model/stats/History.hx:65: characters 3-34
		$sql = "\x0A" . "UPDATE m_bank SET termin = date_trunc('month',termin + interval '6 days')\x0A" . "WHERE date_part('day', termin) >25;\x0A" . "";
		#src/model/stats/History.hx:69: characters 3-44
		$stmt = \S::$dbh->query($sql);
		#src/model/stats/History.hx:70: lines 70-74
		if (\S::$dbh->errorCode() !== "00000") {
			#src/model/stats/History.hx:72: characters 4-9
			(Log::$trace)(\S::$dbh->errorInfo(), new HxAnon([
				"fileName" => "src/model/stats/History.hx",
				"lineNumber" => 72,
				"className" => "model.stats.History",
				"methodName" => "get",
			]));
		}
		#src/model/stats/History.hx:75: characters 3-21
		$stmt->closeCursor();
		#src/model/stats/History.hx:76: characters 3-35
		$sql = "\x0A" . "SELECT COUNT(*),  date(date_trunc('month',Termin)), SUM(Betrag) \x0A" . "FROM m_bank WHERE termin<date_trunc('month', CURRENT_DATE) GROUP BY  date(date_trunc('month',Termin)) \x0A" . "ORDER BY date(date_trunc('month',Termin))\x0A" . "";
		#src/model/stats/History.hx:81: characters 3-8
		(Log::$trace)($sql, new HxAnon([
			"fileName" => "src/model/stats/History.hx",
			"lineNumber" => 81,
			"className" => "model.stats.History",
			"methodName" => "get",
		]));
		#src/model/stats/History.hx:82: characters 3-47
		$hData = $this->fetchAll($sql, \S::$dbh, null, null, new HxAnon([
			"fileName" => "src/model/stats/History.hx",
			"lineNumber" => 82,
			"className" => "model.stats.History",
			"methodName" => "get",
		]));
		#src/model/stats/History.hx:83: characters 3-17
		\S::$dbh->commit();
		#src/model/stats/History.hx:84: characters 21-61
		$_g = new StringMap();
		$value = \Array_hx::wrap($hData)->length;
		$_g->data["count"] = $value;
		#src/model/stats/History.hx:84: characters 3-61
		$this->dbData->dataInfo = $_g;
		#src/model/stats/History.hx:85: characters 3-18
		$this->sendRows($hData);
	}

	/**
	 * @return void
	 */
	public function go () {
		#src/model/stats/History.hx:36: characters 3-8
		(Log::$trace)($this->action, new HxAnon([
			"fileName" => "src/model/stats/History.hx",
			"lineNumber" => 36,
			"className" => "model.stats.History",
			"methodName" => "go",
		]));
		#src/model/stats/History.hx:37: characters 10-16
		if ($this->action === "get") {
			#src/model/stats/History.hx:39: characters 5-10
			$this->get();
		} else {
			#src/model/stats/History.hx:41: characters 5-10
			$this->run();
		}
	}
}

Boot::registerClass(History::class, 'model.stats.History');
