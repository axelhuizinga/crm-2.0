<?php
/**
 * Generated by Haxe 4.1.1
 * Haxe source file: src/model/admin/SyncExternalDeals.hx
 */

namespace model\admin;

use \php\_Boot\HxAnon;
use \php\Boot;
use \haxe\Exception;
use \haxe\Log;
use \php\Lib;
use \shared\DbData;
use \haxe\ds\StringMap;
use \php\_NativeIndexedArray\NativeIndexedArrayIterator;

class SyncExternalDeals extends \Model {
	/**
	 * @var \Array_hx
	 */
	static public $dKeys;

	/**
	 * @var \Array_hx
	 */
	public $keys;
	/**
	 * @var int
	 */
	public $synced;

	/**
	 * @param \PDO $dbh
	 * @param DbData $dbData
	 * @param mixed $deals
	 * 
	 * @return void
	 */
	public static function importDeals ($dbh, $dbData, $deals) {
		#src/model/admin/SyncExternalDeals.hx:192: characters 3-43
		$dealsRows = count($deals);
		#src/model/admin/SyncExternalDeals.hx:193: lines 193-195
		if ($dealsRows === 0) {
			#src/model/admin/SyncExternalDeals.hx:194: characters 22-37
			$_g = new StringMap();
			$_g->data["imported"] = 0;
			#src/model/admin/SyncExternalDeals.hx:194: characters 4-38
			\S::sendInfo($dbData, $_g);
		}
		#src/model/admin/SyncExternalDeals.hx:197: characters 3-8
		(Log::$trace)("dealsRows:" . ($dealsRows??'null'), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalDeals.hx",
			"lineNumber" => 197,
			"className" => "model.admin.SyncExternalDeals",
			"methodName" => "importDeals",
		]));
		#src/model/admin/SyncExternalDeals.hx:199: characters 3-65
		$dD = \Util::map2fields($deals[0], SyncExternalDeals::$dKeys);
		#src/model/admin/SyncExternalDeals.hx:200: characters 36-59
		$_g = new \Array_hx();
		#src/model/admin/SyncExternalDeals.hx:200: characters 46-55
		$k = new NativeIndexedArrayIterator(array_values(array_map("strval", array_keys($dD->data))));
		while ($k->hasNext()) {
			#src/model/admin/SyncExternalDeals.hx:200: characters 37-58
			$k1 = $k->next();
			#src/model/admin/SyncExternalDeals.hx:200: characters 57-58
			$_g->arr[$_g->length++] = $k1;
		}
		#src/model/admin/SyncExternalDeals.hx:200: characters 9-60
		$dNames = $_g;
		#src/model/admin/SyncExternalDeals.hx:201: characters 38-58
		$_g = new \Array_hx();
		#src/model/admin/SyncExternalDeals.hx:201: characters 39-57
		$_g1 = 0;
		while ($_g1 < $dNames->length) {
			#src/model/admin/SyncExternalDeals.hx:201: characters 43-44
			$k = ($dNames->arr[$_g1] ?? null);
			#src/model/admin/SyncExternalDeals.hx:201: characters 39-57
			++$_g1;
			#src/model/admin/SyncExternalDeals.hx:201: characters 56-57
			$_g->arr[$_g->length++] = $k;
		}
		#src/model/admin/SyncExternalDeals.hx:201: characters 38-89
		$result = [];
		$data = $_g->arr;
		$_g_current = 0;
		$_g_length = count($data);
		$_g_data = $data;
		while ($_g_current < $_g_length) {
			$item = $_g_data[$_g_current++];
			$result[] = (":" . ($item??'null'));
		}
		#src/model/admin/SyncExternalDeals.hx:201: characters 3-90
		$dPlaceholders = \Array_hx::wrap($result);
		#src/model/admin/SyncExternalDeals.hx:202: lines 202-204
		$_g = new \Array_hx();
		#src/model/admin/SyncExternalDeals.hx:203: characters 4-56
		$_g1 = 0;
		#src/model/admin/SyncExternalDeals.hx:203: characters 13-53
		$result = [];
		$data = $dNames->arr;
		$_g_current = 0;
		$_g_length = count($data);
		$_g_data = $data;
		while ($_g_current < $_g_length) {
			$item = $_g_data[$_g_current++];
			if ($item !== "id") {
				$result[] = $item;
			}
		}
		#src/model/admin/SyncExternalDeals.hx:203: characters 4-56
		$_g2 = \Array_hx::wrap($result);
		while ($_g1 < $_g2->length) {
			#src/model/admin/SyncExternalDeals.hx:203: characters 8-9
			$k = ($_g2->arr[$_g1] ?? null);
			#src/model/admin/SyncExternalDeals.hx:203: characters 4-56
			++$_g1;
			#src/model/admin/SyncExternalDeals.hx:203: characters 55-56
			$_g->arr[$_g->length++] = $k;
		}
		#src/model/admin/SyncExternalDeals.hx:202: lines 202-204
		$result = [];
		$data = $_g->arr;
		$_g_current = 0;
		$_g_length = count($data);
		$_g_data = $data;
		while ($_g_current < $_g_length) {
			$item = $_g_data[$_g_current++];
			$result[] = (" \"" . ($item??'null') . "\"=:" . ($item??'null'));
		}
		$dSet = \Array_hx::wrap($result)->join(",");
		#src/model/admin/SyncExternalDeals.hx:205: lines 205-210
		$sql = "\x0A" . ("INSERT INTO deals (" . ($dNames->join(",")??'null') . ")\x0A") . ("VALUES (" . ($dPlaceholders->join(",")??'null') . ")\x0A") . "ON CONFLICT (id) DO UPDATE\x0A" . ("SET " . ($dSet??'null') . " returning id;\x0A") . "";
		#src/model/admin/SyncExternalDeals.hx:211: characters 3-8
		(Log::$trace)($sql, new HxAnon([
			"fileName" => "src/model/admin/SyncExternalDeals.hx",
			"lineNumber" => 211,
			"className" => "model.admin.SyncExternalDeals",
			"methodName" => "importDeals",
		]));
		#src/model/admin/SyncExternalDeals.hx:212: characters 3-65
		$stmt = \S::$dbh->prepare($sql, ((array)(null)));
		#src/model/admin/SyncExternalDeals.hx:213: characters 3-22
		$synced = 0;
		#src/model/admin/SyncExternalDeals.hx:214: characters 14-30
		$data = array_values($deals);
		$_g6_current = 0;
		$_g6_length = count($data);
		$_g6_data = $data;
		#src/model/admin/SyncExternalDeals.hx:214: lines 214-226
		while ($_g6_current < $_g6_length) {
			$row = $_g6_data[$_g6_current++];
			#src/model/admin/SyncExternalDeals.hx:216: characters 4-48
			\Util::bindClientData("deals", $stmt, $row, $dbData);
			#src/model/admin/SyncExternalDeals.hx:217: lines 217-223
			if (!$stmt->execute()) {
				#src/model/admin/SyncExternalDeals.hx:218: characters 5-10
				(Log::$trace)($row, new HxAnon([
					"fileName" => "src/model/admin/SyncExternalDeals.hx",
					"lineNumber" => 218,
					"className" => "model.admin.SyncExternalDeals",
					"methodName" => "importDeals",
				]));
				#src/model/admin/SyncExternalDeals.hx:219: characters 5-10
				(Log::$trace)($stmt->errorInfo(), new HxAnon([
					"fileName" => "src/model/admin/SyncExternalDeals.hx",
					"lineNumber" => 219,
					"className" => "model.admin.SyncExternalDeals",
					"methodName" => "importDeals",
				]));
				#src/model/admin/SyncExternalDeals.hx:220: lines 220-222
				$_g = new StringMap();
				$value = Lib::hashOfAssociativeArray($stmt->errorInfo());
				$_g->data["execute"] = $value;
				$_g->data["sql"] = $sql;
				$value1 = \Std::string($row['id']);
				$_g->data["id"] = $value1;
				\S::sendErrors($dbData, $_g, new HxAnon([
					"fileName" => "src/model/admin/SyncExternalDeals.hx",
					"lineNumber" => 220,
					"className" => "model.admin.SyncExternalDeals",
					"methodName" => "importDeals",
				]));
			}
			#src/model/admin/SyncExternalDeals.hx:225: characters 4-12
			++$synced;
		}
		#src/model/admin/SyncExternalDeals.hx:227: characters 9-14
		(Log::$trace)("done", new HxAnon([
			"fileName" => "src/model/admin/SyncExternalDeals.hx",
			"lineNumber" => 227,
			"className" => "model.admin.SyncExternalDeals",
			"methodName" => "importDeals",
		]));
		#src/model/admin/SyncExternalDeals.hx:228: characters 3-76
		$this1 = $dbData->dataInfo;
		$v = \Std::parseInt((\S::$params->data["offset"] ?? null)) + $synced;
		$this1->data["offset"] = $v;
		#src/model/admin/SyncExternalDeals.hx:229: characters 3-8
		(Log::$trace)(($dbData->dataInfo === null ? "null" : $dbData->dataInfo->toString()), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalDeals.hx",
			"lineNumber" => 229,
			"className" => "model.admin.SyncExternalDeals",
			"methodName" => "importDeals",
		]));
		#src/model/admin/SyncExternalDeals.hx:231: characters 21-58
		$_g = new StringMap();
		$value = "OK:" . ($stmt->rowCount()??'null');
		$_g->data["imported"] = $value;
		#src/model/admin/SyncExternalDeals.hx:231: characters 3-59
		\S::sendInfo($dbData, $_g);
	}

	/**
	 * @param StringMap $param
	 * 
	 * @return void
	 */
	public function __construct ($param) {
		#src/model/admin/SyncExternalDeals.hx:20: characters 3-15
		parent::__construct($param);
		#src/model/admin/SyncExternalDeals.hx:22: lines 22-26
		if (array_key_exists("synced", $param->data)) {
			#src/model/admin/SyncExternalDeals.hx:24: characters 4-33
			$this->synced = ($param->data["synced"] ?? null);
		} else {
			#src/model/admin/SyncExternalDeals.hx:26: characters 8-18
			$this->synced = 0;
		}
		#src/model/admin/SyncExternalDeals.hx:27: characters 3-32
		$this->keys = \S::tableFields("deals");
		#src/model/admin/SyncExternalDeals.hx:28: characters 9-14
		(Log::$trace)("calling " . ($this->action??'null'), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalDeals.hx",
			"lineNumber" => 28,
			"className" => "model.admin.SyncExternalDeals",
			"methodName" => "new",
		]));
		#src/model/admin/SyncExternalDeals.hx:29: characters 3-8
		(Log::$trace)($this->action, new HxAnon([
			"fileName" => "src/model/admin/SyncExternalDeals.hx",
			"lineNumber" => 29,
			"className" => "model.admin.SyncExternalDeals",
			"methodName" => "new",
		]));
		#src/model/admin/SyncExternalDeals.hx:31: characters 10-16
		if ($this->action === "importAll") {
			#src/model/admin/SyncExternalDeals.hx:33: characters 5-16
			$this->importAll();
		} else {
			#src/model/admin/SyncExternalDeals.hx:42: characters 5-10
			$this->run();
		}
	}

	/**
	 * @return void
	 */
	public function importAll () {
		#src/model/admin/SyncExternalDeals.hx:51: characters 3-43
		$min_id = (\S::$params->data["offset"] ?? null);
		#src/model/admin/SyncExternalDeals.hx:52: characters 3-19
		$got = 0;
		#src/model/admin/SyncExternalDeals.hx:53: characters 3-100
		$stmt = \S::$dbh->query("SELECT MAX(id)max_deal, COUNT(*)previous_count FROM deals");
		#src/model/admin/SyncExternalDeals.hx:54: characters 3-38
		$rO = $stmt->fetch(\PDO::FETCH_OBJ);
		#src/model/admin/SyncExternalDeals.hx:55: characters 3-20
		$onlyNew = "";
		#src/model/admin/SyncExternalDeals.hx:56: lines 56-60
		if (((\S::$params->data["onlyNew"] ?? null) === "true") && ($rO->max_deal > $min_id)) {
			#src/model/admin/SyncExternalDeals.hx:58: characters 4-11
			$onlyNew = "AND d.id IS NULL ";
			#src/model/admin/SyncExternalDeals.hx:59: characters 4-10
			$min_id = $rO->max_deal;
		}
		#src/model/admin/SyncExternalDeals.hx:62: characters 3-8
		(Log::$trace)("max_deal:" . ($rO->max_deal??'null'), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalDeals.hx",
			"lineNumber" => 62,
			"className" => "model.admin.SyncExternalDeals",
			"methodName" => "importAll",
		]));
		#src/model/admin/SyncExternalDeals.hx:63: characters 3-31
		\Util::copy2map($this->dbData->dataInfo, $rO);
		#src/model/admin/SyncExternalDeals.hx:66: characters 3-61
		$action = (\Std::string((\S::$params->data["classPath"] ?? null))??'null') . "." . (\Std::string((\S::$params->data["action"] ?? null))??'null');
		#src/model/admin/SyncExternalDeals.hx:67: lines 67-68
		$cleared = \S::$dbh->exec("DELETE FROM ext_ids WHERE auth_user=" . (\S::$dbQuery->dbUser->id??'null') . " AND action='" . ($action??'null') . "' AND table_name='deals'");
		#src/model/admin/SyncExternalDeals.hx:72: lines 72-76
		$sql = "\x0A\x09\x09(SELECT pay_plan_id FROM pay_plan \x0A\x09\x09WHERE pay_plan_id>" . ($min_id??'null') . " LIMIT 1000)\x0A\x09\x09UNION\x0A\x09\x09(SELECT MAX(pay_plan_id) FROM pay_plan)";
		#src/model/admin/SyncExternalDeals.hx:78: characters 3-26
		$start = microtime(true);
		#src/model/admin/SyncExternalDeals.hx:79: characters 9-13
		$stmt = \S::$syncDbh->query($sql);
		#src/model/admin/SyncExternalDeals.hx:81: characters 3-58
		\S::checkStmt(\S::$syncDbh, $stmt, "getMissing-pay_plan_ids", new HxAnon([
			"fileName" => "src/model/admin/SyncExternalDeals.hx",
			"lineNumber" => 81,
			"className" => "model.admin.SyncExternalDeals",
			"methodName" => "importAll",
		]));
		#src/model/admin/SyncExternalDeals.hx:83: characters 3-95
		$cids = \Array_hx::wrap(($stmt->execute() ? $stmt->fetchAll(\PDO::FETCH_NUM) : null));
		#src/model/admin/SyncExternalDeals.hx:84: lines 84-85
		if ($cids !== null) {
			#src/model/admin/SyncExternalDeals.hx:85: characters 4-9
			(Log::$trace)($cids->length, new HxAnon([
				"fileName" => "src/model/admin/SyncExternalDeals.hx",
				"lineNumber" => 85,
				"className" => "model.admin.SyncExternalDeals",
				"methodName" => "importAll",
			]));
		}
		#src/model/admin/SyncExternalDeals.hx:86: characters 3-61
		$maxCid = null;
		#src/model/admin/SyncExternalDeals.hx:86: characters 16-60
		if ($cids->length === 1) {
			#src/model/admin/SyncExternalDeals.hx:86: characters 3-61
			$maxCid = ($cids->arr[0] ?? null)[0];
		} else {
			#src/model/admin/SyncExternalDeals.hx:86: characters 46-56
			if ($cids->length > 0) {
				$cids->length--;
			}
			#src/model/admin/SyncExternalDeals.hx:86: characters 3-61
			$maxCid = array_pop($cids->arr)[0];
		}
		#src/model/admin/SyncExternalDeals.hx:88: characters 3-8
		(Log::$trace)(($maxCid??'null') . " took:" . (microtime(true) - $start), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalDeals.hx",
			"lineNumber" => 88,
			"className" => "model.admin.SyncExternalDeals",
			"methodName" => "importAll",
		]));
		#src/model/admin/SyncExternalDeals.hx:89: characters 3-8
		$start = microtime(true);
		#src/model/admin/SyncExternalDeals.hx:90: lines 90-107
		$_g = 0;
		while ($_g < $cids->length) {
			#src/model/admin/SyncExternalDeals.hx:90: characters 7-10
			$cid = ($cids->arr[$_g] ?? null);
			#src/model/admin/SyncExternalDeals.hx:90: lines 90-107
			++$_g;
			#src/model/admin/SyncExternalDeals.hx:92: characters 4-103
			$sti = \S::$dbh->prepare("INSERT INTO ext_ids VALUES(?,?,?,?) ON CONFLICT DO NOTHING");
			#src/model/admin/SyncExternalDeals.hx:93: lines 93-98
			if ($sti === false) {
				#src/model/admin/SyncExternalDeals.hx:95: characters 5-10
				(Log::$trace)(Boot::getInstanceClosure(\S::$dbh, 'errorInfo'), new HxAnon([
					"fileName" => "src/model/admin/SyncExternalDeals.hx",
					"lineNumber" => 95,
					"className" => "model.admin.SyncExternalDeals",
					"methodName" => "importAll",
				]));
				#src/model/admin/SyncExternalDeals.hx:96: characters 5-10
				(Log::$trace)("INSERT INTO ext_ids VALUES(" . ($cid[0]??'null') . ", " . (\S::$dbQuery->dbUser->id??'null') . ", '" . ($action??'null') . "','deals')", new HxAnon([
					"fileName" => "src/model/admin/SyncExternalDeals.hx",
					"lineNumber" => 96,
					"className" => "model.admin.SyncExternalDeals",
					"methodName" => "importAll",
				]));
				#src/model/admin/SyncExternalDeals.hx:97: characters 5-23
				\S::exit(new HxAnon(["oops" => 666]));
			}
			#src/model/admin/SyncExternalDeals.hx:100: lines 100-106
			if (!$sti->execute(array($cid[0],\S::$dbQuery->dbUser->id,$action,"deals"))) {
				#src/model/admin/SyncExternalDeals.hx:103: characters 5-10
				(Log::$trace)(\S::$dbh->errorInfo(), new HxAnon([
					"fileName" => "src/model/admin/SyncExternalDeals.hx",
					"lineNumber" => 103,
					"className" => "model.admin.SyncExternalDeals",
					"methodName" => "importAll",
				]));
				#src/model/admin/SyncExternalDeals.hx:104: characters 5-10
				(Log::$trace)($sti->errorInfo(), new HxAnon([
					"fileName" => "src/model/admin/SyncExternalDeals.hx",
					"lineNumber" => 104,
					"className" => "model.admin.SyncExternalDeals",
					"methodName" => "importAll",
				]));
				#src/model/admin/SyncExternalDeals.hx:105: characters 5-23
				\S::exit(new HxAnon(["oops" => 666]));
			}
		}
		#src/model/admin/SyncExternalDeals.hx:108: characters 3-8
		(Log::$trace)(($cids->length??'null') . " storing took:" . (microtime(true) - $start), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalDeals.hx",
			"lineNumber" => 108,
			"className" => "model.admin.SyncExternalDeals",
			"methodName" => "importAll",
		]));
		#src/model/admin/SyncExternalDeals.hx:109: characters 3-8
		$start = microtime(true);
		#src/model/admin/SyncExternalDeals.hx:110: characters 3-6
		$sql = "\x0A" . "SELECT ARRAY_TO_STRING(array_agg(eid.ext_id),',') from ext_ids eid\x0A" . "left join \x0A" . "(SELECT 1 as gg,id from deals) d\x0A" . "ON eid.ext_id=d.id\x0A" . "WHERE eid.table_name='deals'\x0A" . ("" . ($onlyNew??'null') . "\x0A") . ("AND eid.action='" . (\Std::string((\S::$params->data["classPath"] ?? null))??'null') . "." . (\Std::string((\S::$params->data["action"] ?? null))??'null') . "'\x09\x09\x0A") . "GROUP BY gg;\x0A" . "";
		#src/model/admin/SyncExternalDeals.hx:120: characters 3-7
		$stmt = \S::$dbh->query($sql);
		#src/model/admin/SyncExternalDeals.hx:121: characters 3-8
		(Log::$trace)($sql, new HxAnon([
			"fileName" => "src/model/admin/SyncExternalDeals.hx",
			"lineNumber" => 121,
			"className" => "model.admin.SyncExternalDeals",
			"methodName" => "importAll",
		]));
		#src/model/admin/SyncExternalDeals.hx:122: characters 3-43
		\S::checkStmt(\S::$dbh, $stmt, "getMissingIDs ", new HxAnon([
			"fileName" => "src/model/admin/SyncExternalDeals.hx",
			"lineNumber" => 122,
			"className" => "model.admin.SyncExternalDeals",
			"methodName" => "importAll",
		]));
		#src/model/admin/SyncExternalDeals.hx:124: characters 3-73
		$ids = ($stmt->execute() ? $stmt->fetch(\PDO::FETCH_COLUMN, 0) : null);
		#src/model/admin/SyncExternalDeals.hx:126: characters 3-8
		(Log::$trace)((mb_substr($ids, 0, 24)??'null') . "took:" . (microtime(true) - $start), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalDeals.hx",
			"lineNumber" => 126,
			"className" => "model.admin.SyncExternalDeals",
			"methodName" => "importAll",
		]));
		#src/model/admin/SyncExternalDeals.hx:127: characters 3-8
		$start = microtime(true);
		#src/model/admin/SyncExternalDeals.hx:130: characters 3-6
		$sql = "\x0A" . "SELECT pay_plan_id id,pay_plan.client_id contact,pay_plan.creation_date,pay_source_id,target_id,start_day,start_date,buchungs_tag,cycle,amount,IF(product='K',2,3) product ,agent,agency_project project,pay_plan_state,pay_method,end_date,end_reason,repeat_date,cycle_start_date, cl.old_active from pay_plan \x0A" . "INNER JOIN clients cl\x0A" . "ON cl.client_id=pay_plan.client_id \x0A" . ("WHERE pay_plan_id IN(" . ($ids??'null') . ")\x0A") . "ORDER BY pay_plan_id  \x0A" . "";
		#src/model/admin/SyncExternalDeals.hx:138: characters 9-13
		$stmt = \S::$syncDbh->query($sql);
		#src/model/admin/SyncExternalDeals.hx:139: lines 139-143
		if ($stmt === false) {
			#src/model/admin/SyncExternalDeals.hx:141: characters 4-9
			(Log::$trace)(mb_substr($sql, 0, 1100), new HxAnon([
				"fileName" => "src/model/admin/SyncExternalDeals.hx",
				"lineNumber" => 141,
				"className" => "model.admin.SyncExternalDeals",
				"methodName" => "importAll",
			]));
			#src/model/admin/SyncExternalDeals.hx:142: characters 17-23
			$tmp = $this->dbData;
			#src/model/admin/SyncExternalDeals.hx:142: characters 25-76
			$_g = new StringMap();
			$value = \S::$syncDbh->errorInfo();
			$_g->data["getMissingCrmData deals:"] = $value;
			#src/model/admin/SyncExternalDeals.hx:142: characters 4-77
			\S::sendErrors($tmp, $_g, new HxAnon([
				"fileName" => "src/model/admin/SyncExternalDeals.hx",
				"lineNumber" => 142,
				"className" => "model.admin.SyncExternalDeals",
				"methodName" => "importAll",
			]));
		}
		#src/model/admin/SyncExternalDeals.hx:144: lines 144-147
		if ($stmt->errorCode() !== "00000") {
			#src/model/admin/SyncExternalDeals.hx:146: characters 17-23
			$tmp = $this->dbData;
			#src/model/admin/SyncExternalDeals.hx:146: characters 24-69
			$_g = new StringMap();
			$value = $stmt->errorInfo();
			$_g->data["getMissingCrmData deals"] = $value;
			#src/model/admin/SyncExternalDeals.hx:146: characters 4-70
			\S::sendErrors($tmp, $_g, new HxAnon([
				"fileName" => "src/model/admin/SyncExternalDeals.hx",
				"lineNumber" => 146,
				"className" => "model.admin.SyncExternalDeals",
				"methodName" => "importAll",
			]));
		}
		#src/model/admin/SyncExternalDeals.hx:148: characters 3-66
		$res = ($stmt->execute() ? $stmt->fetchAll(\PDO::FETCH_ASSOC) : null);
		#src/model/admin/SyncExternalDeals.hx:149: characters 3-53
		$missing = ($res !== null ? count($res) : 0);
		#src/model/admin/SyncExternalDeals.hx:150: lines 150-152
		if ($missing === 0) {
			#src/model/admin/SyncExternalDeals.hx:151: characters 15-21
			$tmp = $this->dbData;
			#src/model/admin/SyncExternalDeals.hx:151: characters 22-73
			$_g = new StringMap();
			$value = mb_substr($sql, 0, 1100);
			$_g->data["OK? found 0 missing deals "] = $value;
			#src/model/admin/SyncExternalDeals.hx:151: characters 4-74
			\S::sendInfo($tmp, $_g);
		}
		#src/model/admin/SyncExternalDeals.hx:153: characters 3-8
		(Log::$trace)(($missing??'null') . " took:" . (microtime(true) - $start), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalDeals.hx",
			"lineNumber" => 153,
			"className" => "model.admin.SyncExternalDeals",
			"methodName" => "importAll",
		]));
		#src/model/admin/SyncExternalDeals.hx:154: characters 3-69
		$last_import_cid = $res[($missing - 1)]['id'];
		#src/model/admin/SyncExternalDeals.hx:155: characters 3-58
		$this->dbData->dataInfo->data["last_import_cid"] = $last_import_cid;
		#src/model/admin/SyncExternalDeals.hx:156: characters 3-8
		$start = microtime(true);
		#src/model/admin/SyncExternalDeals.hx:159: characters 14-28
		$data = array_values($res);
		$_g1_current = 0;
		$_g1_length = count($data);
		$_g1_data = $data;
		#src/model/admin/SyncExternalDeals.hx:159: lines 159-180
		while ($_g1_current < $_g1_length) {
			$row = $_g1_data[$_g1_current++];
			#src/model/admin/SyncExternalDeals.hx:163: characters 4-44
			$stmt = $this->upsertDeal($row);
			#src/model/admin/SyncExternalDeals.hx:164: lines 164-179
			try {
				#src/model/admin/SyncExternalDeals.hx:166: characters 5-53
				$res = $stmt->fetch(\PDO::FETCH_NUM);
				#src/model/admin/SyncExternalDeals.hx:167: characters 5-10
				++$got;
				#src/model/admin/SyncExternalDeals.hx:168: lines 168-169
				if ($got < 3) {
					#src/model/admin/SyncExternalDeals.hx:169: characters 5-10
					(Log::$trace)("got " . ($got??'null') . " missing :)" . (\Std::string($res)??'null'), new HxAnon([
						"fileName" => "src/model/admin/SyncExternalDeals.hx",
						"lineNumber" => 169,
						"className" => "model.admin.SyncExternalDeals",
						"methodName" => "importAll",
					]));
				}
			} catch(\Throwable $_g) {
				$e = Exception::caught($_g)->unwrap();
				#src/model/admin/SyncExternalDeals.hx:174: characters 19-25
				$tmp = $this->dbData;
				#src/model/admin/SyncExternalDeals.hx:174: lines 174-178
				$_g1 = new StringMap();
				$value = \S::$dbh->errorInfo();
				$_g1->data["dbError"] = $value;
				$value1 = \S::errorInfo($row, new HxAnon([
					"fileName" => "src/model/admin/SyncExternalDeals.hx",
					"lineNumber" => 176,
					"className" => "model.admin.SyncExternalDeals",
					"methodName" => "importAll",
				]));
				$_g1->data["upsertDeal"] = $value1;
				$_g1->data["exception"] = $e;
				\S::sendErrors($tmp, $_g1, new HxAnon([
					"fileName" => "src/model/admin/SyncExternalDeals.hx",
					"lineNumber" => 174,
					"className" => "model.admin.SyncExternalDeals",
					"methodName" => "importAll",
				]));
			}
		}
		#src/model/admin/SyncExternalDeals.hx:181: characters 3-8
		(Log::$trace)("done took:" . (microtime(true) - $start), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalDeals.hx",
			"lineNumber" => 181,
			"className" => "model.admin.SyncExternalDeals",
			"methodName" => "importAll",
		]));
		#src/model/admin/SyncExternalDeals.hx:184: characters 3-8
		(Log::$trace)(($this->dbData->dataInfo === null ? "null" : $this->dbData->dataInfo->toString()), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalDeals.hx",
			"lineNumber" => 184,
			"className" => "model.admin.SyncExternalDeals",
			"methodName" => "importAll",
		]));
		#src/model/admin/SyncExternalDeals.hx:186: characters 14-20
		$tmp = $this->dbData;
		#src/model/admin/SyncExternalDeals.hx:186: characters 21-83
		$_g = new StringMap();
		$_g->data["missing"] = $missing;
		$_g->data["got"] = $got;
		$_g->data["max_client_id"] = $maxCid;
		#src/model/admin/SyncExternalDeals.hx:186: characters 3-84
		\S::sendInfo($tmp, $_g);
	}

	/**
	 * @param mixed $rD
	 * 
	 * @return \PDOStatement
	 */
	public function upsertDeal ($rD) {
		#src/model/admin/SyncExternalDeals.hx:236: characters 3-58
		$cD = \Util::map2fields($rD, $this->keys);
		#src/model/admin/SyncExternalDeals.hx:237: characters 30-53
		$_g = new \Array_hx();
		#src/model/admin/SyncExternalDeals.hx:237: characters 40-49
		$k = new NativeIndexedArrayIterator(array_values(array_map("strval", array_keys($cD->data))));
		while ($k->hasNext()) {
			#src/model/admin/SyncExternalDeals.hx:237: characters 31-52
			$k1 = $k->next();
			#src/model/admin/SyncExternalDeals.hx:237: characters 51-52
			$_g->arr[$_g->length++] = $k1;
		}
		#src/model/admin/SyncExternalDeals.hx:237: characters 3-54
		$cNames = $_g;
		#src/model/admin/SyncExternalDeals.hx:239: characters 38-58
		$_g = new \Array_hx();
		#src/model/admin/SyncExternalDeals.hx:239: characters 39-57
		$_g1 = 0;
		while ($_g1 < $cNames->length) {
			#src/model/admin/SyncExternalDeals.hx:239: characters 43-44
			$k = ($cNames->arr[$_g1] ?? null);
			#src/model/admin/SyncExternalDeals.hx:239: characters 39-57
			++$_g1;
			#src/model/admin/SyncExternalDeals.hx:239: characters 56-57
			$_g->arr[$_g->length++] = $k;
		}
		#src/model/admin/SyncExternalDeals.hx:239: characters 38-89
		$result = [];
		$data = $_g->arr;
		$_g_current = 0;
		$_g_length = count($data);
		$_g_data = $data;
		while ($_g_current < $_g_length) {
			$item = $_g_data[$_g_current++];
			$result[] = (":" . ($item??'null'));
		}
		#src/model/admin/SyncExternalDeals.hx:239: characters 3-90
		$cPlaceholders = \Array_hx::wrap($result);
		#src/model/admin/SyncExternalDeals.hx:240: lines 240-242
		$_g = new \Array_hx();
		#src/model/admin/SyncExternalDeals.hx:241: characters 4-56
		$_g1 = 0;
		#src/model/admin/SyncExternalDeals.hx:241: characters 13-53
		$result = [];
		$data = $cNames->arr;
		$_g_current = 0;
		$_g_length = count($data);
		$_g_data = $data;
		while ($_g_current < $_g_length) {
			$item = $_g_data[$_g_current++];
			if ($item !== "id") {
				$result[] = $item;
			}
		}
		#src/model/admin/SyncExternalDeals.hx:241: characters 4-56
		$_g2 = \Array_hx::wrap($result);
		while ($_g1 < $_g2->length) {
			#src/model/admin/SyncExternalDeals.hx:241: characters 8-9
			$k = ($_g2->arr[$_g1] ?? null);
			#src/model/admin/SyncExternalDeals.hx:241: characters 4-56
			++$_g1;
			#src/model/admin/SyncExternalDeals.hx:241: characters 55-56
			$_g->arr[$_g->length++] = $k;
		}
		#src/model/admin/SyncExternalDeals.hx:240: lines 240-242
		$result = [];
		$data = $_g->arr;
		$_g_current = 0;
		$_g_length = count($data);
		$_g_data = $data;
		while ($_g_current < $_g_length) {
			$item = $_g_data[$_g_current++];
			$result[] = (" \"" . ($item??'null') . "\"=:" . ($item??'null'));
		}
		$cSet = \Array_hx::wrap($result)->join(",");
		#src/model/admin/SyncExternalDeals.hx:244: lines 244-249
		$sql = "\x0A" . ("INSERT INTO deals (" . ($cNames->join(",")??'null') . ")\x0A") . ("VALUES (" . ($cPlaceholders->join(",")??'null') . ")\x0A") . "ON CONFLICT (id) DO UPDATE\x0A" . ("SET " . ($cSet??'null') . " returning id;\x0A") . "";
		#src/model/admin/SyncExternalDeals.hx:251: characters 3-65
		$stmt = \S::$dbh->prepare($sql, ((array)(null)));
		#src/model/admin/SyncExternalDeals.hx:252: characters 3-46
		\Util::bindClientData("deals", $stmt, $rD, $this->dbData);
		#src/model/admin/SyncExternalDeals.hx:253: lines 253-259
		if (!$stmt->execute()) {
			#src/model/admin/SyncExternalDeals.hx:254: characters 4-9
			(Log::$trace)($rD, new HxAnon([
				"fileName" => "src/model/admin/SyncExternalDeals.hx",
				"lineNumber" => 254,
				"className" => "model.admin.SyncExternalDeals",
				"methodName" => "upsertDeal",
			]));
			#src/model/admin/SyncExternalDeals.hx:255: characters 4-9
			(Log::$trace)($stmt->errorInfo(), new HxAnon([
				"fileName" => "src/model/admin/SyncExternalDeals.hx",
				"lineNumber" => 255,
				"className" => "model.admin.SyncExternalDeals",
				"methodName" => "upsertDeal",
			]));
			#src/model/admin/SyncExternalDeals.hx:256: characters 17-23
			$tmp = $this->dbData;
			#src/model/admin/SyncExternalDeals.hx:256: lines 256-258
			$_g = new StringMap();
			$value = Lib::hashOfAssociativeArray($stmt->errorInfo());
			$_g->data["execute"] = $value;
			$_g->data["sql"] = $sql;
			$value = \Std::string($rD['id']);
			$_g->data["id"] = $value;
			\S::sendErrors($tmp, $_g, new HxAnon([
				"fileName" => "src/model/admin/SyncExternalDeals.hx",
				"lineNumber" => 256,
				"className" => "model.admin.SyncExternalDeals",
				"methodName" => "upsertDeal",
			]));
		}
		#src/model/admin/SyncExternalDeals.hx:260: characters 3-11
		$this->synced++;
		#src/model/admin/SyncExternalDeals.hx:261: characters 3-14
		return $stmt;
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$dKeys = \S::tableFields("deals");
	}
}

Boot::registerClass(SyncExternalDeals::class, 'model.admin.SyncExternalDeals');
SyncExternalDeals::__hx__init();
