<?php
/**
 * Generated by Haxe 4.1.1
 * Haxe source file: src/model/auth/User.hx
 */

namespace model\auth;

use \php\Boot;
use \shared\DbData;
use \php\_Boot\HxEnum;

class UserAuth extends HxEnum {
	/**
	 * @return UserAuth
	 */
	static public function AuthNoEmail () {
		static $inst = null;
		if (!$inst) $inst = new UserAuth('AuthNoEmail', 1, []);
		return $inst;
	}

	/**
	 * @param DbData $dbData
	 * 
	 * @return UserAuth
	 */
	static public function AuthOK ($dbData) {
		return new UserAuth('AuthOK', 0, [$dbData]);
	}

	/**
	 * @return UserAuth
	 */
	static public function NotOK () {
		static $inst = null;
		if (!$inst) $inst = new UserAuth('NotOK', 3, []);
		return $inst;
	}

	/**
	 * @param DbData $dbData
	 * 
	 * @return UserAuth
	 */
	static public function PassChangeRequired ($dbData) {
		return new UserAuth('PassChangeRequired', 2, [$dbData]);
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			1 => 'AuthNoEmail',
			0 => 'AuthOK',
			3 => 'NotOK',
			2 => 'PassChangeRequired',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'AuthNoEmail' => 0,
			'AuthOK' => 1,
			'NotOK' => 0,
			'PassChangeRequired' => 1,
		];
	}
}

Boot::registerClass(UserAuth::class, 'model.auth.UserAuth');
