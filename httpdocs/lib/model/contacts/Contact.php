<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d59b
 */

namespace model\contacts;

use \php\Boot;
use \php\_Boot\HxString;
use \haxe\ds\StringMap;

/**
 * ...
 * @author axel@cunity.me
 */
class Contact extends \Model {
	/**
	 * @var \Array_hx
	 */
	static public $contact_fields;
	/**
	 * @var StringMap
	 */
	static public $custom_fields_map;
	/**
	 * @var \Array_hx
	 */
	static public $vicdial_list_fields;

	/**
	 * @param StringMap $param
	 * 
	 * @return void
	 */
	static public function create ($param) {
		#model/contacts/Contact.hx:45: characters 3-41
		$self = new Contact($param);
		#model/contacts/Contact.hx:49: characters 3-77
		\Reflect::callMethod($self, \Reflect::field($self, ($param->data["action"] ?? null)), \Array_hx::wrap([$param]));
	}

	/**
	 * @return void
	 */
	static public function syncFromCRM1 () {
	}

	/**
	 * @param StringMap $param
	 * 
	 * @return void
	 */
	public function __construct ($param = null) {
		#model/contacts/Contact.hx:30: lines 30-78
		parent::__construct($param);
	}

	/**
	 * @param StringMap $param
	 * 
	 * @return void
	 */
	public function edit ($param) {
		#model/contacts/Contact.hx:56: characters 4-17
		$this->json_encode();
	}

	/**
	 * @param int $lead_id
	 * 
	 * @return mixed
	 */
	public function getRecordings ($lead_id) {
		#model/contacts/Contact.hx:61: lines 61-63
		return $this->query("SELECT location, start_time, length_in_sec FROM recording_log WHERE lead_id = " . ($lead_id??'null') . " AND length_in_sec>60 ORDER BY start_time DESC");
	}

	/**
	 * @param StringMap $q
	 * 
	 * @return bool
	 */
	public function save ($q) {
		#model/contacts/Contact.hx:68: characters 3-37
		$clientID = ($q->data["client_id"] ?? null);
		#model/contacts/Contact.hx:70: characters 3-15
		return false;
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$vicdial_list_fields = HxString::split("lead_id,entry_date,modify_date,status,user,vendor_lead_code,source_id,list_id,gmt_offset_now,called_since_last_reset,phone_code,phone_number,title,first_name,middle_initial,last_name,address1,address2,address3,city,state,province,postal_code,country_code,gender,date_of_birth,alt_phone,email,security_phrase,comments,called_count,last_local_call_time,rank,owner,entry_list_id", ",");
		self::$contact_fields = HxString::split("client_id,lead_id,creation_date,state,use_email,register_on,register_off,register_off_to,teilnahme_beginn,title,anrede,namenszusatz,co_field,storno_grund,birth_date,old_active", ",");
		$_g = new StringMap();
		$_g->data["title"] = "anrede";
		$_g->data["geburts_datum"] = "birth_date";
		self::$custom_fields_map = $_g;
	}
}

Boot::registerClass(Contact::class, 'model.contacts.Contact');
Contact::__hx__init();
