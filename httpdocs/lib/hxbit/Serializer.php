<?php
/**
 * Generated by Haxe 4.1.1
 * Haxe source file: /opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx
 */

namespace hxbit;

use \php\_Boot\HxAnon;
use \haxe\io\_BytesData\Container;
use \haxe\_Int64\___Int64;
use \php\Boot;
use \haxe\ds\ObjectMap;
use \haxe\Exception;
use \haxe\io\BytesBuffer;
use \haxe\io\Error;
use \haxe\io\FPHelper;
use \haxe\rtti\Meta;
use \php\_Boot\HxString;
use \haxe\ds\IntMap;
use \haxe\IMap;
use \haxe\ds\StringMap;
use \haxe\ds\EnumValueMap;
use \haxe\ds\_Vector\PhpVectorData;
use \haxe\io\Bytes;
use \php\_NativeIndexedArray\NativeIndexedArrayIterator;

class Serializer {
	/**
	 * @var int
	 */
	const SEQ_BITS = 8;
	/**
	 * @var int
	 */
	const SEQ_MASK = 16777215;

	/**
	 * @var \Array_hx
	 */
	static public $CLASSES;
	/**
	 * @var \Array_hx
	 */
	static public $CLIDS = null;
	/**
	 * @var \Array_hx
	 */
	static public $CL_BYID = null;
	/**
	 * @var StringMap
	 */
	static public $ENUM_CLASSES;
	/**
	 * @var int
	 */
	static public $SEQ = 0;
	/**
	 * @var int
	 */
	static public $UID = 0;
	/**
	 * @var Bytes
	 */
	static public $__SIGN = null;

	/**
	 * @var \Array_hx
	 */
	public $convert;
	/**
	 * @var int
	 */
	public $inPos;
	/**
	 * @var Bytes
	 */
	public $input;
	/**
	 * @var \Array_hx
	 */
	public $knownStructs;
	/**
	 * @var \Array_hx
	 */
	public $mapIndexes;
	/**
	 * @var \Array_hx
	 */
	public $newObjects;
	/**
	 * @var BytesBuffer
	 */
	public $out;
	/**
	 * @var IntMap
	 */
	public $refs;
	/**
	 * @var ObjectMap
	 */
	public $remapObjs;
	/**
	 * @var \Array_hx
	 */
	public $usedClasses;

	/**
	 * @return int
	 */
	public static function allocUID () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:39: characters 3-44
		return (Serializer::$SEQ << 24) | ++Serializer::$UID;
	}

	/**
	 * @return Bytes
	 */
	public static function getSignature () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:90: characters 3-37
		if (Serializer::$__SIGN !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:90: characters 24-37
			return Serializer::$__SIGN;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:91: characters 3-28
		$s = new Serializer();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:92: characters 3-12
		$s->begin();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:93: characters 3-27
		$v = Serializer::$CLASSES->length;
		if (($v >= 0) && ($v < 128)) {
			$_this = $s->out;
			$_this->b = ($_this->b . chr($v));
		} else {
			$_this = $s->out;
			$_this->b = ($_this->b . chr(128));
			$s->out->addInt32($v);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:94: characters 13-17
		$_g = 0;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:94: characters 17-31
		$_g1 = Serializer::$CLASSES->length;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:94: lines 94-97
		while ($_g < $_g1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:94: characters 13-31
			$i = $_g++;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:95: characters 4-22
			$v = (Serializer::$CLIDS->arr[$i] ?? null);
			if (($v >= 0) && ($v < 128)) {
				$_this = $s->out;
				$_this->b = ($_this->b . chr($v));
			} else {
				$_this1 = $s->out;
				$_this1->b = ($_this1->b . chr(128));
				$s->out->addInt32($v);
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:96: characters 4-99
			$v1 = \Type::createEmptyInstance((Serializer::$CLASSES->arr[$i] ?? null))->getSerializeSchema()->get_checkSum();
			$s->out->addInt32($v1);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:98: characters 19-48
		$b = new Container(md5($s->end()->b->s, true));
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:98: characters 3-48
		return Serializer::$__SIGN = new Bytes(strlen($b->s), $b);
	}

	/**
	 * @param string $name
	 * 
	 * @return int
	 */
	public static function hash ($name) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:53: characters 3-13
		$v = 1;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:54: characters 13-17
		$_g = 0;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:54: characters 17-28
		$_g1 = mb_strlen($name);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:54: lines 54-55
		while ($_g < $_g1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:54: characters 13-28
			$i = $_g++;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:55: characters 8-57
			$v = (int)(($v * 223 + \StringTools::fastCodeAt($name, $i)));
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:57: characters 3-37
		$v = 1 + (($v & 1073741823) % 65423);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:59: characters 3-11
		return $v;
	}

	/**
	 * @return void
	 */
	public static function initClassIDS () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:63: characters 3-20
		$cl = Serializer::$CLASSES;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:64: characters 20-39
		$_g = new \Array_hx();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:64: characters 21-38
		$_g1 = 0;
		while ($_g1 < $cl->length) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:64: characters 26-27
			$c = ($cl->arr[$_g1] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:64: characters 21-38
			++$_g1;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:64: characters 36-38
			$_g->arr[$_g->length++] = new \Array_hx();
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:64: characters 3-40
		$subClasses = $_g;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:65: characters 3-18
		$isSub = new \Array_hx();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:66: characters 13-17
		$_g = 0;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:66: characters 17-26
		$_g1 = $cl->length;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:66: lines 66-76
		while ($_g < $_g1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:66: characters 13-26
			$i = $_g++;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:67: characters 4-18
			$c = ($cl->arr[$i] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:68: lines 68-75
			while (true) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:69: characters 5-30
				$c = \Type::getSuperClass($c);
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:70: characters 5-26
				if ($c === null) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:70: characters 21-26
					break;
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:71: characters 5-29
				$idx = $cl->indexOf($c);
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:72: characters 5-24
				if ($idx < 0) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:72: characters 19-24
					break;
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:73: characters 5-28
				$_this = ($subClasses->arr[$idx] ?? null);
				$_this->arr[$_this->length++] = $i;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:74: characters 5-20
				$isSub->offsetSet($i, true);
			}
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:78: characters 11-126
		$_g = new \Array_hx();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:78: characters 22-26
		$_g1 = 0;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:78: characters 26-40
		$_g2 = Serializer::$CLASSES->length;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:78: characters 12-125
		while ($_g1 < $_g2) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:78: characters 22-40
			$i = $_g1++;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:78: characters 43-125
			if ((($subClasses->arr[$i] ?? null)->length === 0) && !($isSub->arr[$i] ?? null)) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:78: characters 88-89
				$_g->arr[$_g->length++] = 0;
			} else {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:78: characters 95-125
				$name = \Type::getClassName(($cl->arr[$i] ?? null));
				$v = 1;
				$_g3 = 0;
				$_g4 = mb_strlen($name);
				while ($_g3 < $_g4) {
					$i1 = $_g3++;
					$v = (int)(($v * 223 + \StringTools::fastCodeAt($name, $i1)));
				}
				$v = 1 + (($v & 1073741823) % 65423);
				$_g->arr[$_g->length++] = $v;
			}
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:78: characters 3-126
		Serializer::$CLIDS = $_g;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:79: characters 3-15
		Serializer::$CL_BYID = new \Array_hx();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:80: characters 13-17
		$_g = 0;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:80: characters 17-29
		$_g1 = Serializer::$CLIDS->length;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:80: lines 80-85
		while ($_g < $_g1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:80: characters 13-29
			$i = $_g++;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:81: characters 4-23
			$cid = (Serializer::$CLIDS->arr[$i] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:82: characters 4-27
			if ($cid === 0) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:82: characters 19-27
				continue;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:83: characters 4-36
			if ((Serializer::$CL_BYID->arr[$cid] ?? null) !== null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:83: characters 31-36
				throw Exception::thrown("Conflicting CLID between " . (\Type::getClassName((Serializer::$CL_BYID->arr[$cid] ?? null))??'null') . " and " . (\Type::getClassName(($cl->arr[$i] ?? null))??'null'));
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:84: characters 4-24
			Serializer::$CL_BYID->offsetSet($cid, ($cl->arr[$i] ?? null));
		}
	}

	/**
	 * @param int $index
	 * 
	 * @return bool
	 */
	public static function isClassFinal ($index) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:102: characters 3-27
		return (Serializer::$CLIDS->arr[$index] ?? null) === 0;
	}

	/**
	 * @param Bytes $bytes
	 * @param Class $cl
	 * 
	 * @return mixed
	 */
	public static function load ($bytes, $cl) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:971: characters 3-28
		$s = new Serializer();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:972: characters 3-21
		$s->beginLoad($bytes);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:973: characters 3-33
		$value = $s->getRef($cl, Boot::dynamicField($cl, '__clid'));
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:974: characters 3-14
		$s->endLoad();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:975: characters 3-15
		return $value;
	}

	/**
	 * @param Class $c
	 * 
	 * @return int
	 */
	public static function registerClass ($c) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:46: characters 3-28
		if (Serializer::$CLIDS !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:46: characters 23-28
			throw Exception::thrown("Too late to register class");
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:47: characters 3-28
		$idx = Serializer::$CLASSES->length;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:48: characters 3-18
		$_this = Serializer::$CLASSES;
		$_this->arr[$_this->length++] = $c;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:49: characters 3-13
		return $idx;
	}

	/**
	 * @return void
	 */
	public static function resetCounters () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:34: characters 3-10
		Serializer::$UID = 0;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:35: characters 3-10
		Serializer::$SEQ = 0;
	}

	/**
	 * @param Serializable $value
	 * 
	 * @return Bytes
	 */
	public static function save ($value) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:964: characters 3-28
		$s = new Serializer();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:965: characters 3-16
		$s->beginSave();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:966: characters 3-23
		$s->addKnownRef($value);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:967: characters 3-21
		return $s->endSave();
	}

	/**
	 * @return void
	 */
	public function __construct () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:117: characters 34-36
		$this->usedClasses = new \Array_hx();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:123: characters 3-37
		if (Serializer::$CLIDS === null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:123: characters 23-37
			Serializer::initClassIDS();
		}
	}

	/**
	 * @param Serializable $s
	 * 
	 * @return void
	 */
	public function addAnyRef ($s) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:505: lines 505-508
		if ($s === null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:506: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . chr(0));
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:507: characters 4-10
			return;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:509: characters 3-26
		if ($this->remapObjs !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:509: characters 18-26
			$this->remap($s);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:510: characters 3-15
		$this->addObjRef($s);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:511: lines 511-512
		if (($this->refs->data[$s->__uid] ?? null) !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:512: characters 4-10
			return;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:513: characters 3-20
		$this->refs->data[$s->__uid] = $s;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:514: characters 3-27
		$index = $s->getCLID();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:515: characters 3-28
		$this->usedClasses->offsetSet($index, true);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:516: characters 3-17
		$_this = $this->out;
		$_this->b = ($_this->b . chr($index >> 8));
		$_this = $this->out;
		$_this->b = ($_this->b . chr($index & 255));
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:517: characters 3-20
		$s->serialize($this);
	}

	/**
	 * @param \Array_hx $a
	 * @param \Closure $f
	 * 
	 * @return void
	 */
	public function addArray ($a, $f) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:211: lines 211-214
		if ($a === null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:212: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . chr(0));
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:213: characters 4-10
			return;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:215: characters 3-23
		$v = $a->length + 1;
		if (($v >= 0) && ($v < 128)) {
			$_this = $this->out;
			$_this->b = ($_this->b . chr($v));
		} else {
			$_this = $this->out;
			$_this->b = ($_this->b . chr(128));
			$this->out->addInt32($v);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:216: lines 216-217
		$_g = 0;
		while ($_g < $a->length) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:216: characters 8-9
			$v = ($a->arr[$_g] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:216: lines 216-217
			++$_g;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:217: characters 4-8
			$f($v);
		}
	}

	/**
	 * @param bool $v
	 * 
	 * @return void
	 */
	public function addBool ($v) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:207: characters 3-17
		$_this = $this->out;
		$_this->b = ($_this->b . chr(($v ? 1 : 0)));
	}

	/**
	 * @param int $v
	 * 
	 * @return void
	 */
	public function addByte ($v) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:178: characters 3-17
		$_this = $this->out;
		$_this->b = ($_this->b . chr($v));
	}

	/**
	 * @param Bytes $b
	 * 
	 * @return void
	 */
	public function addBytes ($b) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:330: lines 330-335
		if ($b === null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:331: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . chr(0));
		} else {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:333: characters 4-24
			$v = $b->length + 1;
			if (($v >= 0) && ($v < 128)) {
				$_this = $this->out;
				$_this->b = ($_this->b . chr($v));
			} else {
				$_this = $this->out;
				$_this->b = ($_this->b . chr(128));
				$this->out->addInt32($v);
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:334: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . $b->b->s);
		}
	}

	/**
	 * @param Bytes $b
	 * @param int $pos
	 * @param int $len
	 * 
	 * @return void
	 */
	public function addBytesSub ($b, $pos, $len) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:339: lines 339-344
		if ($b === null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:340: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . chr(0));
		} else {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:342: characters 4-19
			$v = $len + 1;
			if (($v >= 0) && ($v < 128)) {
				$_this = $this->out;
				$_this->b = ($_this->b . chr($v));
			} else {
				$_this = $this->out;
				$_this->b = ($_this->b . chr(128));
				$this->out->addInt32($v);
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:343: characters 4-29
			$_this = $this->out;
			if (($pos < 0) || ($len < 0) || (($pos + $len) > $b->length)) {
				throw Exception::thrown(Error::OutsideBounds());
			} else {
				$left = $_this->b;
				$this_s = substr($b->b->s, $pos, $len);
				$_this->b = ($left . $this_s);
			}
		}
	}

	/**
	 * @param int $clid
	 * 
	 * @return void
	 */
	public function addCLID ($clid) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:440: characters 3-21
		$_this = $this->out;
		$_this->b = ($_this->b . chr($clid >> 8));
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:441: characters 3-23
		$_this = $this->out;
		$_this->b = ($_this->b . chr($clid & 255));
	}

	/**
	 * @param float $v
	 * 
	 * @return void
	 */
	public function addDouble ($v) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:203: characters 3-19
		$this->out->addInt64(FPHelper::doubleToI64($v));
	}

	/**
	 * @param mixed $v
	 * 
	 * @return void
	 */
	public function addDynamic ($v) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:396: lines 396-399
		if ($v === null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:397: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . chr(0));
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:398: characters 4-10
			return;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:400: characters 11-25
		$_g = \Type::typeof($v);
		$__hx__switch = ($_g->index);
		if ($__hx__switch === 1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:404: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . chr(3));
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:405: characters 4-13
			$v1 = $v;
			if (($v1 >= 0) && ($v1 < 128)) {
				$_this = $this->out;
				$_this->b = ($_this->b . chr($v1));
			} else {
				$_this = $this->out;
				$_this->b = ($_this->b . chr(128));
				$this->out->addInt32($v1);
			}
		} else if ($__hx__switch === 2) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:407: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . chr(4));
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:408: characters 4-15
			$this->out->addInt32(unpack("l", pack("f", $v))[1]);
		} else if ($__hx__switch === 3) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:402: characters 4-29
			$_this = $this->out;
			$_this->b = ($_this->b . chr(($v ? 2 : 1)));
		} else if ($__hx__switch === 4) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:410: characters 4-35
			$fields = \Reflect::fields($v);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:411: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . chr(5));
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:412: characters 4-25
			$v1 = $fields->length;
			if (($v1 >= 0) && ($v1 < 128)) {
				$_this = $this->out;
				$_this->b = ($_this->b . chr($v1));
			} else {
				$_this = $this->out;
				$_this->b = ($_this->b . chr(128));
				$this->out->addInt32($v1);
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:413: lines 413-416
			$_g1 = 0;
			while ($_g1 < $fields->length) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:413: characters 9-10
				$f = ($fields->arr[$_g1] ?? null);
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:413: lines 413-416
				++$_g1;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:414: characters 5-17
				if ($f === null) {
					$_this = $this->out;
					$_this->b = ($_this->b . chr(0));
				} else {
					$b = strlen($f);
					$b1 = new Bytes($b, new Container($f));
					$v1 = $b1->length + 1;
					if (($v1 >= 0) && ($v1 < 128)) {
						$_this1 = $this->out;
						$_this1->b = ($_this1->b . chr($v1));
					} else {
						$_this2 = $this->out;
						$_this2->b = ($_this2->b . chr(128));
						$this->out->addInt32($v1);
					}
					$_this3 = $this->out;
					$_this3->b = ($_this3->b . $b1->b->s);
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:415: characters 5-36
				$this->addDynamic(\Reflect::field($v, $f));
			}
		} else if ($__hx__switch === 6) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:417: characters 15-16
			$c = $_g->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:418: lines 418-433
			if ($c === Boot::getClass(\Array_hx::class)) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:423: characters 5-15
				$_this = $this->out;
				$_this->b = ($_this->b . chr(7));
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:424: characters 5-32
				$a = $v;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:425: characters 5-21
				$v1 = $a->length;
				if (($v1 >= 0) && ($v1 < 128)) {
					$_this = $this->out;
					$_this->b = ($_this->b . chr($v1));
				} else {
					$_this = $this->out;
					$_this->b = ($_this->b . chr(128));
					$this->out->addInt32($v1);
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:426: lines 426-427
				$_g1 = 0;
				while ($_g1 < $a->length) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:426: characters 10-11
					$v1 = ($a->arr[$_g1] ?? null);
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:426: lines 426-427
					++$_g1;
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:427: characters 6-19
					$this->addDynamic($v1);
				}
			} else if ($c === Boot::getClass('String')) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:420: characters 5-15
				$_this = $this->out;
				$_this->b = ($_this->b . chr(6));
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:421: characters 5-17
				$s = $v;
				if ($s === null) {
					$_this = $this->out;
					$_this->b = ($_this->b . chr(0));
				} else {
					$b = strlen($s);
					$b1 = new Bytes($b, new Container($s));
					$v1 = $b1->length + 1;
					if (($v1 >= 0) && ($v1 < 128)) {
						$_this = $this->out;
						$_this->b = ($_this->b . chr($v1));
					} else {
						$_this = $this->out;
						$_this->b = ($_this->b . chr(128));
						$this->out->addInt32($v1);
					}
					$_this = $this->out;
					$_this->b = ($_this->b . $b1->b->s);
				}
			} else if ($c === Boot::getClass(Bytes::class)) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:429: characters 5-15
				$_this = $this->out;
				$_this->b = ($_this->b . chr(8));
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:430: characters 5-16
				$b = $v;
				if ($b === null) {
					$_this = $this->out;
					$_this->b = ($_this->b . chr(0));
				} else {
					$v = $b->length + 1;
					if (($v >= 0) && ($v < 128)) {
						$_this = $this->out;
						$_this->b = ($_this->b . chr($v));
					} else {
						$_this = $this->out;
						$_this->b = ($_this->b . chr(128));
						$this->out->addInt32($v);
					}
					$_this = $this->out;
					$_this->b = ($_this->b . $b->b->s);
				}
			} else {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:432: characters 5-10
				throw Exception::thrown("Unsupported dynamic " . (\Std::string($c)??'null'));
			}
		} else {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:434: characters 8-9
			$t = $_g;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:435: characters 4-9
			throw Exception::thrown("Unsupported dynamic " . (\Std::string($t)??'null'));
		}
	}

	/**
	 * @param float $v
	 * 
	 * @return void
	 */
	public function addFloat ($v) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:199: characters 3-18
		$this->out->addInt32(unpack("l", pack("f", $v))[1]);
	}

	/**
	 * @param int $v
	 * 
	 * @return void
	 */
	public function addInt ($v) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:182: lines 182-187
		if (($v >= 0) && ($v < 128)) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:183: characters 4-18
			$_this = $this->out;
			$_this->b = ($_this->b . chr($v));
		} else {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:185: characters 4-21
			$_this = $this->out;
			$_this->b = ($_this->b . chr(128));
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:186: characters 4-19
			$this->out->addInt32($v);
		}
	}

	/**
	 * @param int $v
	 * 
	 * @return void
	 */
	public function addInt32 ($v) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:191: characters 3-18
		$this->out->addInt32($v);
	}

	/**
	 * @param ___Int64 $v
	 * 
	 * @return void
	 */
	public function addInt64 ($v) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:195: characters 3-18
		$this->out->addInt64($v);
	}

	/**
	 * @param Serializable $s
	 * 
	 * @return void
	 */
	public function addKnownRef ($s) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:521: lines 521-524
		if ($s === null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:522: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . chr(0));
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:523: characters 4-10
			return;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:525: characters 3-26
		if ($this->remapObjs !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:525: characters 18-26
			$this->remap($s);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:526: characters 3-15
		$this->addObjRef($s);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:527: lines 527-528
		if (($this->refs->data[$s->__uid] ?? null) !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:528: characters 4-10
			return;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:529: characters 3-20
		$this->refs->data[$s->__uid] = $s;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:530: characters 3-27
		$index = $s->getCLID();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:531: characters 3-28
		$this->usedClasses->offsetSet($index, true);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:532: characters 3-27
		$clid = (Serializer::$CLIDS->arr[$index] ?? null);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:533: lines 533-534
		if ($clid !== 0) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:534: characters 4-17
			$_this = $this->out;
			$_this->b = ($_this->b . chr($clid >> 8));
			$_this = $this->out;
			$_this->b = ($_this->b . chr($clid & 255));
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:535: characters 3-20
		$s->serialize($this);
	}

	/**
	 * @param IMap $a
	 * @param \Closure $fk
	 * @param \Closure $ft
	 * 
	 * @return void
	 */
	public function addMap ($a, $fk, $ft) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:253: lines 253-256
		if ($a === null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:254: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . chr(0));
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:255: characters 4-10
			return;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:257: characters 14-37
		$_g = new \Array_hx();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:257: characters 25-33
		$k = $a->keys();
		while ($k->hasNext()) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:257: characters 15-36
			$k1 = $k->next();
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:257: characters 35-36
			$_g->arr[$_g->length++] = $k1;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:257: characters 3-38
		$keys = $_g;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:258: characters 3-26
		$v = $keys->length + 1;
		if (($v >= 0) && ($v < 128)) {
			$_this = $this->out;
			$_this->b = ($_this->b . chr($v));
		} else {
			$_this = $this->out;
			$_this->b = ($_this->b . chr(128));
			$this->out->addInt32($v);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:259: lines 259-262
		$_g = 0;
		while ($_g < $keys->length) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:259: characters 8-9
			$k = ($keys->arr[$_g] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:259: lines 259-262
			++$_g;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:260: characters 4-9
			$fk($k);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:261: characters 4-16
			$ft($a->get($k));
		}
	}

	/**
	 * @param Serializable $s
	 * 
	 * @return void
	 */
	public function addObjRef ($s) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:497: characters 3-18
		$v = $s->__uid;
		if (($v >= 0) && ($v < 128)) {
			$_this = $this->out;
			$_this->b = ($_this->b . chr($v));
		} else {
			$_this = $this->out;
			$_this->b = ($_this->b . chr(128));
			$this->out->addInt32($v);
		}
	}

	/**
	 * @param string $s
	 * 
	 * @return void
	 */
	public function addString ($s) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:320: lines 320-326
		if ($s === null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:321: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . chr(0));
		} else {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:323: characters 12-37
			$b = strlen($s);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:323: characters 4-38
			$b1 = new Bytes($b, new Container($s));
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:324: characters 4-24
			$v = $b1->length + 1;
			if (($v >= 0) && ($v < 128)) {
				$_this = $this->out;
				$_this->b = ($_this->b . chr($v));
			} else {
				$_this = $this->out;
				$_this->b = ($_this->b . chr(128));
				$this->out->addInt32($v);
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:325: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . $b1->b->s);
		}
	}

	/**
	 * @param StructSerializable $s
	 * 
	 * @return void
	 */
	public function addStruct ($s) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:449: lines 449-452
		if ($s === null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:450: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . chr(0));
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:451: characters 4-10
			return;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:453: characters 3-66
		$c = (($s instanceof Serializable) ? $s : null);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:454: lines 454-458
		if ($c !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:455: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . chr(1));
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:456: characters 4-16
			$this->addAnyRef($c);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:457: characters 4-10
			return;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:459: characters 3-39
		$index = $this->knownStructs->indexOf($s);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:460: lines 460-464
		if ($index >= 0) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:461: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . chr(2));
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:462: characters 4-17
			if (($index >= 0) && ($index < 128)) {
				$_this = $this->out;
				$_this->b = ($_this->b . chr($index));
			} else {
				$_this = $this->out;
				$_this->b = ($_this->b . chr(128));
				$this->out->addInt32($index);
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:463: characters 4-10
			return;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:465: characters 3-23
		$_this = $this->knownStructs;
		$_this->arr[$_this->length++] = $s;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:466: characters 3-13
		$_this = $this->out;
		$_this->b = ($_this->b . chr(3));
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:467: characters 3-28
		$c = \Type::getClass($s);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:468: characters 3-24
		if ($c === null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:468: characters 19-24
			throw Exception::thrown((\Std::string($s)??'null') . " does not have a class ?");
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:469: characters 3-34
		$s1 = \Type::getClassName($c);
		if ($s1 === null) {
			$_this = $this->out;
			$_this->b = ($_this->b . chr(0));
		} else {
			$b = strlen($s1);
			$b1 = new Bytes($b, new Container($s1));
			$v = $b1->length + 1;
			if (($v >= 0) && ($v < 128)) {
				$_this = $this->out;
				$_this->b = ($_this->b . chr($v));
			} else {
				$_this = $this->out;
				$_this->b = ($_this->b . chr(128));
				$this->out->addInt32($v);
			}
			$_this = $this->out;
			$_this->b = ($_this->b . $b1->b->s);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:470: characters 19-42
		$s->customSerialize($this);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:471: characters 3-16
		$_this = $this->out;
		$_this->b = ($_this->b . chr(255));
	}

	/**
	 * @param PhpVectorData $a
	 * @param \Closure $f
	 * 
	 * @return void
	 */
	public function addVector ($a, $f) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:221: lines 221-224
		if ($a === null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:222: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . chr(0));
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:223: characters 4-10
			return;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:225: characters 3-23
		$v = $a->length + 1;
		if (($v >= 0) && ($v < 128)) {
			$_this = $this->out;
			$_this->b = ($_this->b . chr($v));
		} else {
			$_this = $this->out;
			$_this->b = ($_this->b . chr(128));
			$this->out->addInt32($v);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:226: lines 226-227
		$_g = 0;
		while ($_g < $a->length) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:226: characters 8-9
			$v = ($a->data[$_g] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:226: lines 226-227
			++$_g;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:227: characters 4-8
			$f($v);
		}
	}

	/**
	 * @return void
	 */
	public function begin () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:140: characters 3-34
		$this->out = new BytesBuffer();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:141: characters 3-19
		$this->refs = new IntMap();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:142: characters 3-20
		$this->knownStructs = new \Array_hx();
	}

	/**
	 * @param Bytes $bytes
	 * @param int $position
	 * 
	 * @return void
	 */
	public function beginLoad ($bytes, $position = 0) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:636: lines 636-690
		if ($position === null) {
			$position = 0;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:638: characters 3-28
		$this->setInput($bytes, $position);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:640: characters 21-30
		$this1 = [];
		$classByName_data = $this1;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:641: characters 3-20
		$schemas = new \Array_hx();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:642: characters 3-23
		$mapIndexes = new \Array_hx();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:643: characters 3-20
		$indexes = new \Array_hx();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:644: characters 3-27
		$needConvert = false;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:645: characters 3-27
		$needReindex = false;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:646: characters 13-17
		$_g = 0;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:646: characters 17-31
		$_g1 = Serializer::$CLASSES->length;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:646: lines 646-649
		while ($_g < $_g1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:646: characters 13-31
			$i = $_g++;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:647: characters 4-53
			$classByName_data[\Type::getClassName(Serializer::$CLASSES[$i])] = $i;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:648: characters 4-17
			$mapIndexes->offsetSet($i, $i);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:650: characters 7-18
		$v = ord($this->input->b->s[$this->inPos++]);
		if ($v === 128) {
			$_this = $this->input;
			$pos = $this->inPos;
			$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
			$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
			$this->inPos += 4;
		}
		$len = $v;
		$tmp = null;
		if ($len === 0) {
			$tmp = null;
		} else {
			--$len;
			$_this = $this->input;
			$pos = $this->inPos;
			$s = null;
			if (($pos < 0) || ($len < 0) || (($pos + $len) > $_this->length)) {
				throw Exception::thrown(Error::OutsideBounds());
			} else {
				$s = substr($_this->b->s, $pos, $len);
			}
			$this->inPos += $len;
			$tmp = $s;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:650: lines 650-651
		if ($tmp !== "HXS") {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:651: characters 4-9
			throw Exception::thrown("Invalid HXS data");
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:652: characters 3-27
		$version = ord($this->input->b->s[$this->inPos++]);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:653: lines 653-654
		if ($version !== 1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:654: characters 4-9
			throw Exception::thrown("Unsupported HXS version " . ($version??'null'));
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:656: lines 656-673
		while (true) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:657: characters 17-28
			$v = ord($this->input->b->s[$this->inPos++]);
			if ($v === 128) {
				$_this = $this->input;
				$pos = $this->inPos;
				$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
				$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
				$this->inPos += 4;
			}
			$len = $v;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:657: characters 4-29
			$clname = null;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:657: characters 17-28
			if ($len === 0) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:657: characters 4-29
				$clname = null;
			} else {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:657: characters 17-28
				--$len;
				$_this1 = $this->input;
				$pos1 = $this->inPos;
				$s = null;
				if (($pos1 < 0) || ($len < 0) || (($pos1 + $len) > $_this1->length)) {
					throw Exception::thrown(Error::OutsideBounds());
				} else {
					$s = substr($_this1->b->s, $pos1, $len);
				}
				$this->inPos += $len;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:657: characters 4-29
				$clname = $s;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:658: characters 4-30
			if ($clname === null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:658: characters 25-30
				break;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:659: characters 4-26
			$index = (ord($this->input->b->s[$this->inPos++]) << 8) | ord($this->input->b->s[$this->inPos++]);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:660: characters 14-24
			$_this2 = $this->input;
			$pos2 = $this->inPos;
			$v2 = ord($_this2->b->s[$pos2]) | (ord($_this2->b->s[$pos2 + 1]) << 8) | (ord($_this2->b->s[$pos2 + 2]) << 16) | (ord($_this2->b->s[$pos2 + 3]) << 24);
			$v3 = (($v2 & ((int)-2147483648)) !== 0 ? $v2 | ((int)-2147483648) : $v2);
			$this->inPos += 4;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:660: characters 4-25
			$crc = $v3;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:661: characters 4-48
			$ourClassIndex = ($classByName_data[$clname] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:662: characters 4-37
			if ($ourClassIndex === null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:662: characters 32-37
				throw Exception::thrown("Missing class " . ($clname??'null') . " found in HXS data");
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:663: characters 4-107
			$ourSchema = \Type::createEmptyInstance((Serializer::$CLASSES->arr[$ourClassIndex] ?? null))->getSerializeSchema();
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:664: lines 664-667
			if ($ourSchema->get_checkSum() !== $crc) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:665: characters 5-16
				$needConvert = true;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:666: characters 5-19
				$schemas->offsetSet($index, $ourSchema);
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:668: lines 668-671
			if ($index !== $ourClassIndex) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:669: characters 5-16
				$needReindex = true;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:670: characters 5-22
				$mapIndexes->offsetSet($index, $ourClassIndex);
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:672: characters 4-23
			$indexes->arr[$indexes->length++] = $index;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:674: characters 24-32
		$v = ord($this->input->b->s[$this->inPos++]);
		if ($v === 128) {
			$_this = $this->input;
			$pos = $this->inPos;
			$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
			$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
			$this->inPos += 4;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:674: characters 3-33
		$schemaDataSize = $v;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:675: lines 675-687
		if ($needConvert) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:676: characters 4-11
			$this->convert = new \Array_hx();
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:677: lines 677-683
			$_g = 0;
			while ($_g < $indexes->length) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:677: characters 9-14
				$index = ($indexes->arr[$_g] ?? null);
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:677: lines 677-683
				++$_g;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:678: characters 5-36
				$ourSchema = ($schemas->arr[$index] ?? null);
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:679: characters 18-37
				$c = Boot::getClass(Schema::class);
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:679: characters 5-38
				$schema = $this->getRef($c, Boot::dynamicField($c, '__clid'));
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:680: characters 5-30
				$this->refs->remove($schema->__uid);
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:681: lines 681-682
				if ($ourSchema !== null) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:682: characters 6-32
					$this->convert->offsetSet(($mapIndexes->arr[$index] ?? null), new Convert(\Type::getClassName((Serializer::$CLASSES->arr[($mapIndexes->arr[$index] ?? null)] ?? null)), $ourSchema, $schema));
				}
			}
		} else {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:686: characters 4-27
			$this->inPos += $schemaDataSize;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:688: lines 688-689
		if ($needReindex) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:689: characters 4-19
			$this->mapIndexes = $mapIndexes;
		}
	}

	/**
	 * @return void
	 */
	public function beginSave () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:599: characters 3-10
		$this->begin();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:600: characters 3-19
		$this->usedClasses = new \Array_hx();
	}

	/**
	 * @param Serializable $i
	 * @param Convert $c
	 * 
	 * @return void
	 */
	public function convertRef ($i, $c) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:699: characters 16-58
		$values_length = $c->read->length;
		$this1 = [];
		$values_data = $this1;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:700: characters 3-20
		$writePos = 0;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:701: lines 701-702
		$_g = 0;
		$_g1 = $c->read;
		while ($_g < $_g1->length) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:701: characters 8-9
			$r = ($_g1->arr[$_g] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:701: lines 701-702
			++$_g;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:702: characters 4-39
			$values_data[$r->index] = $this->readValue($r->from);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:703: characters 3-25
		$oldOut = $this->out;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:704: characters 3-6
		$this->out = new BytesBuffer();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:705: lines 705-721
		$_g = 0;
		$_g1 = $c->write;
		while ($_g < $_g1->length) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:705: characters 8-9
			$w = ($_g1->arr[$_g] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:705: lines 705-721
			++$_g;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:706: characters 4-20
			$v = null;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:707: lines 707-719
			if ($w->from === null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:708: characters 5-6
				$v = $w->defaultValue;
			} else {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:710: characters 9-24
				$v = ($values_data[$w->index] ?? null);
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:711: lines 711-718
				if (!$w->same) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:712: lines 712-717
					if ($v === null) {
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:713: characters 7-8
						$v = $w->defaultValue;
					} else if ($w->conv !== null) {
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:715: characters 7-8
						$v = ($w->conv)($v);
					} else {
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:717: characters 7-8
						$v = $this->convertValue($w->path, $v, $w->from, $w->to);
					}
				}
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:720: characters 4-23
			$this->writeValue($v, $w->to);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:722: characters 3-30
		$bytes = $this->out->getBytes();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:723: characters 3-6
		$this->out = $oldOut;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:724: characters 3-21
		$oldIn = $this->input;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:725: characters 3-22
		$oldPos = $this->inPos;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:726: characters 3-21
		$this->setInput($bytes, 0);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:727: characters 3-22
		$i->unserialize($this);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:728: characters 3-26
		$this->setInput($oldIn, $oldPos);
	}

	/**
	 * @param string $path
	 * @param mixed $v
	 * @param PropTypeDesc $from
	 * @param PropTypeDesc $to
	 * 
	 * @return mixed
	 */
	public function convertValue ($path, $v, $from, $to) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:740: lines 740-741
		if ($v === null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:741: characters 4-33
			return Convert::getDefault($to);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:743: lines 743-744
		if (Convert::sameType($from, $to)) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:744: characters 4-12
			return $v;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:746: characters 3-63
		$conv = (Convert::$convFuns->data[$path] ?? null);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:747: lines 747-748
		if ($conv !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:748: characters 4-18
			return $conv($v);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:750: lines 750-793
		$__hx__switch = ($from->index);
		if ($__hx__switch === 0) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:750: characters 18-20
			$__hx__switch = ($to->index);
			if ($__hx__switch === 1) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:775: characters 4-24
				return $v * 1.0;
			} else if ($__hx__switch === 10) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:790: characters 18-20
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:791: characters 4-42
				return $this->convertValue($path, $v, $from, $to1);
			} else if ($__hx__switch === 12) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:772: characters 17-19
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:773: characters 4-42
				return $this->convertValue($path, $v, $from, $to1);
			} else {
			}
		} else if ($__hx__switch === 1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:750: characters 18-20
			$__hx__switch = ($to->index);
			if ($__hx__switch === 0) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:781: characters 4-21
				return (int)($v);
			} else if ($__hx__switch === 10) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:790: characters 18-20
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:791: characters 4-42
				return $this->convertValue($path, $v, $from, $to1);
			} else if ($__hx__switch === 12) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:772: characters 17-19
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:773: characters 4-42
				return $this->convertValue($path, $v, $from, $to1);
			} else {
			}
		} else if ($__hx__switch === 2) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:750: characters 18-20
			$__hx__switch = ($to->index);
			if ($__hx__switch === 0) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:777: characters 11-27
				if ($v) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:777: characters 22-23
					return 1;
				} else {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:777: characters 26-27
					return 0;
				}
			} else if ($__hx__switch === 1) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:779: characters 11-29
				if ($v) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:779: characters 22-24
					return 1.;
				} else {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:779: characters 27-29
					return 0.;
				}
			} else if ($__hx__switch === 10) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:790: characters 18-20
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:791: characters 4-42
				return $this->convertValue($path, $v, $from, $to1);
			} else if ($__hx__switch === 12) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:772: characters 17-19
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:773: characters 4-42
				return $this->convertValue($path, $v, $from, $to1);
			} else {
			}
		} else if ($__hx__switch === 5) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:782: characters 23-24
			$_g = $from->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:750: characters 18-20
			$__hx__switch = ($to->index);
			if ($__hx__switch === 5) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:782: characters 40-42
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:783: characters 23-85
				$value = $v;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:783: characters 4-86
				$v2 = (Boot::isOfType($value, \Type::resolveClass($to1)) ? $value : null);
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:784: characters 4-30
				if ($v2 !== null) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:784: characters 21-30
					return $v2;
				}
			} else if ($__hx__switch === 10) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:790: characters 18-20
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:791: characters 4-42
				return $this->convertValue($path, $v, $from, $to1);
			} else if ($__hx__switch === 12) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:772: characters 17-19
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:773: characters 4-42
				return $this->convertValue($path, $v, $from, $to1);
			} else {
			}
		} else if ($__hx__switch === 8) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:785: characters 16-20
			$_g = $from->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:750: characters 18-20
			$__hx__switch = ($to->index);
			if ($__hx__switch === 8) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:785: characters 16-20
				$from1 = $_g;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:785: characters 29-31
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:786: characters 4-33
				$arr = $v;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:787: characters 11-63
				$_g = new \Array_hx();
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:787: characters 12-62
				$_g1 = 0;
				while ($_g1 < $arr->length) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:787: characters 17-18
					$v1 = ($arr->arr[$_g1] ?? null);
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:787: characters 12-62
					++$_g1;
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:787: characters 28-62
					$x = $this->convertValue(($path??'null') . "[]", $v1, $from1, $to1);
					$_g->arr[$_g->length++] = $x;
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:787: characters 11-63
				return $_g;
			} else if ($__hx__switch === 10) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:790: characters 18-20
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:791: characters 4-42
				return $this->convertValue($path, $v, $from, $to1);
			} else if ($__hx__switch === 12) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:772: characters 17-19
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:773: characters 4-42
				return $this->convertValue($path, $v, $from, $to1);
			} else {
			}
		} else if ($__hx__switch === 9) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:751: characters 14-18
			$_g = $from->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:750: characters 18-20
			$__hx__switch = ($to->index);
			if ($__hx__switch === 9) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:751: characters 14-18
				$obj1 = $_g;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:751: characters 26-30
				$obj2 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:752: characters 4-16
				$v2 = new HxAnon();
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:753: lines 753-768
				$_g = 0;
				while ($_g < $obj2->length) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:753: characters 9-10
					$f = ($obj2->arr[$_g] ?? null);
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:753: lines 753-768
					++$_g;
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:754: characters 5-23
					$found = false;
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:755: characters 5-32
					$field = null;
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:756: lines 756-761
					$_g1 = 0;
					while ($_g1 < $obj1->length) {
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:756: characters 10-12
						$f2 = ($obj1->arr[$_g1] ?? null);
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:756: lines 756-761
						++$_g1;
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:757: lines 757-761
						if ($f2->name === $f->name) {
							#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:758: characters 7-19
							$found = true;
							#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:759: characters 7-89
							$field = $this->convertValue(($path??'null') . "." . ($f2->name??'null'), \Reflect::field($v, $f2->name), $f2->type, $f->type);
							#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:760: characters 7-12
							break;
						}
					}
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:762: lines 762-766
					if (!$found) {
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:763: characters 6-26
						if ($f->opt) {
							#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:763: characters 18-26
							continue;
						}
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:764: characters 6-40
						$field = Convert::getDefault($f->type);
					} else if (($field === null) && $f->opt) {
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:766: characters 6-14
						continue;
					}
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:767: characters 5-40
					\Reflect::setField($v2, $f->name, $field);
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:769: characters 4-13
				return $v2;
			} else if ($__hx__switch === 10) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:790: characters 18-20
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:791: characters 4-42
				return $this->convertValue($path, $v, $from, $to1);
			} else if ($__hx__switch === 12) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:772: characters 17-19
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:773: characters 4-42
				return $this->convertValue($path, $v, $from, $to1);
			} else {
			}
		} else if ($__hx__switch === 10) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:788: characters 16-20
			$_g = $from->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:750: characters 18-20
			$__hx__switch = ($to->index);
			if ($__hx__switch === 10) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:790: characters 18-20
				$_g1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:788: characters 16-20
				$from1 = $_g;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:789: characters 4-42
				return $this->convertValue($path, $v, $from1, $to);
			} else if ($__hx__switch === 12) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:772: characters 17-19
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:773: characters 4-42
				return $this->convertValue($path, $v, $from, $to1);
			} else {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:788: characters 16-20
				$from1 = $_g;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:789: characters 4-42
				return $this->convertValue($path, $v, $from1, $to);
			}
		} else if ($__hx__switch === 12) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:770: characters 15-19
			$from1 = $from->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:771: characters 4-42
			return $this->convertValue($path, $v, $from1, $to);
		} else {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:750: characters 18-20
			$__hx__switch = ($to->index);
			if ($__hx__switch === 10) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:790: characters 18-20
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:791: characters 4-42
				return $this->convertValue($path, $v, $from, $to1);
			} else if ($__hx__switch === 12) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:772: characters 17-19
				$to1 = $to->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:773: characters 4-42
				return $this->convertValue($path, $v, $from, $to1);
			} else {
			}
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:795: characters 3-8
		throw Exception::thrown("Cannot convert " . ($path??'null') . "(" . (\Std::string($v)??'null') . ") from " . (\Std::string($from)??'null') . " to " . (\Std::string($to)??'null'));
	}

	/**
	 * @return Bytes
	 */
	public function end () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:146: characters 3-30
		$bytes = $this->out->getBytes();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:147: characters 3-13
		$this->out = null;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:148: characters 3-14
		$this->refs = null;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:149: characters 3-22
		$this->knownStructs = null;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:150: characters 3-15
		return $bytes;
	}

	/**
	 * @return void
	 */
	public function endLoad () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:693: characters 3-17
		$this->convert = null;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:694: characters 3-20
		$this->mapIndexes = null;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:695: characters 3-20
		$this->setInput(null, 0);
	}

	/**
	 * @param int $savePosition
	 * 
	 * @return Bytes
	 */
	public function endSave ($savePosition = 0) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:603: lines 603-634
		if ($savePosition === null) {
			$savePosition = 0;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:604: characters 3-23
		$content = $this->end();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:605: characters 3-10
		$this->begin();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:606: characters 3-20
		$classes = new \Array_hx();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:607: characters 3-20
		$schemas = new \Array_hx();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:608: characters 3-38
		$sidx = Serializer::$CLASSES->indexOf(Boot::getClass(Schema::class));
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:609: characters 13-17
		$_g = 0;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:609: characters 17-35
		$_g1 = $this->usedClasses->length;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:609: lines 609-617
		while ($_g < $_g1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:609: characters 13-35
			$i = $_g++;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:610: characters 4-47
			if (!($this->usedClasses->arr[$i] ?? null) || ($i === $sidx)) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:610: characters 39-47
				continue;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:611: characters 4-23
			$c = (Serializer::$CLASSES->arr[$i] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:612: characters 4-83
			$schema = \Type::createEmptyInstance($c)->getSerializeSchema();
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:613: characters 4-24
			$schemas->arr[$schemas->length++] = $schema;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:614: characters 4-19
			$classes->arr[$classes->length++] = $i;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:615: characters 4-23
			$this->addKnownRef($schema);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:616: characters 4-29
			$this->refs->remove($schema->__uid);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:618: characters 3-26
		$schemaData = $this->end();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:619: characters 3-10
		$this->begin();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:620: characters 3-41
		$_this = $this->out;
		if (($savePosition < 0) || ($savePosition > $content->length)) {
			throw Exception::thrown(Error::OutsideBounds());
		} else {
			$left = $_this->b;
			$this_s = substr($content->b->s, 0, $savePosition);
			$_this->b = ($left . $this_s);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:621: characters 3-19
		$b = strlen("HXS");
		$b1 = new Bytes($b, new Container("HXS"));
		$v = $b1->length + 1;
		if (($v >= 0) && ($v < 128)) {
			$_this = $this->out;
			$_this->b = ($_this->b . chr($v));
		} else {
			$_this = $this->out;
			$_this->b = ($_this->b . chr(128));
			$this->out->addInt32($v);
		}
		$_this = $this->out;
		$_this->b = ($_this->b . $b1->b->s);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:622: characters 3-13
		$_this = $this->out;
		$_this->b = ($_this->b . chr(1));
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:623: characters 13-17
		$_g = 0;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:623: characters 17-31
		$_g1 = $classes->length;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:623: lines 623-628
		while ($_g < $_g1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:623: characters 13-31
			$i = $_g++;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:624: characters 4-27
			$index = ($classes->arr[$i] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:625: characters 4-48
			$s = \Type::getClassName((Serializer::$CLASSES->arr[$index] ?? null));
			if ($s === null) {
				$_this = $this->out;
				$_this->b = ($_this->b . chr(0));
			} else {
				$b = strlen($s);
				$b1 = new Bytes($b, new Container($s));
				$v = $b1->length + 1;
				if (($v >= 0) && ($v < 128)) {
					$_this1 = $this->out;
					$_this1->b = ($_this1->b . chr($v));
				} else {
					$_this2 = $this->out;
					$_this2->b = ($_this2->b . chr(128));
					$this->out->addInt32($v);
				}
				$_this3 = $this->out;
				$_this3->b = ($_this3->b . $b1->b->s);
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:626: characters 4-18
			$_this4 = $this->out;
			$_this4->b = ($_this4->b . chr($index >> 8));
			$_this5 = $this->out;
			$_this5->b = ($_this5->b . chr($index & 255));
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:627: characters 4-33
			$v1 = ($schemas->arr[$i] ?? null)->get_checkSum();
			$this->out->addInt32($v1);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:629: characters 3-18
		$s = null;
		if ($s === null) {
			$_this = $this->out;
			$_this->b = ($_this->b . chr(0));
		} else {
			$b = strlen($s);
			$b1 = new Bytes($b, new Container($s));
			$v = $b1->length + 1;
			if (($v >= 0) && ($v < 128)) {
				$_this = $this->out;
				$_this->b = ($_this->b . chr($v));
			} else {
				$_this = $this->out;
				$_this->b = ($_this->b . chr(128));
				$this->out->addInt32($v);
			}
			$_this = $this->out;
			$_this->b = ($_this->b . $b1->b->s);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:630: characters 3-28
		$v = $schemaData->length;
		if (($v >= 0) && ($v < 128)) {
			$_this = $this->out;
			$_this->b = ($_this->b . chr($v));
		} else {
			$_this = $this->out;
			$_this->b = ($_this->b . chr(128));
			$this->out->addInt32($v);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:631: characters 3-22
		$_this = $this->out;
		$_this->b = ($_this->b . $schemaData->b->s);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:632: characters 3-67
		$_this = $this->out;
		$len = $content->length - $savePosition;
		if (($savePosition < 0) || ($len < 0) || (($savePosition + $len) > $content->length)) {
			throw Exception::thrown(Error::OutsideBounds());
		} else {
			$left = $_this->b;
			$this_s = substr($content->b->s, $savePosition, $len);
			$_this->b = ($left . $this_s);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:633: characters 3-15
		return $this->end();
	}

	/**
	 * @return Serializable
	 */
	public function getAnyRef () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:539: characters 3-24
		$id = $this->getObjRef();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:540: characters 3-28
		if ($id === 0) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:540: characters 17-28
			return null;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:541: lines 541-542
		if (($this->refs->data[$id] ?? null) !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:542: characters 4-24
			return ($this->refs->data[$id] ?? null);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:543: characters 3-27
		$rid = $id & 16777215;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:544: characters 3-28
		if (Serializer::$UID < $rid) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:544: characters 19-28
			Serializer::$UID = $rid;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:545: characters 3-25
		$clidx = (ord($this->input->b->s[$this->inPos++]) << 8) | ord($this->input->b->s[$this->inPos++]);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:546: characters 3-53
		if ($this->mapIndexes !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:546: characters 28-53
			$clidx = ($this->mapIndexes->arr[$clidx] ?? null);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:547: characters 3-67
		$i = \Type::createEmptyInstance((Serializer::$CLASSES->arr[$clidx] ?? null));
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:548: characters 3-46
		if ($this->newObjects !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:548: characters 28-46
			$_this = $this->newObjects;
			$_this->arr[$_this->length++] = $i;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:549: characters 3-15
		$i->__uid = $id;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:550: characters 3-22
		$i->unserializeInit();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:551: characters 3-15
		$this->refs->data[$id] = $i;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:552: lines 552-555
		if (($this->convert !== null) && (($this->convert->arr[$clidx] ?? null) !== null)) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:553: characters 4-33
			$this->convertRef($i, ($this->convert->arr[$clidx] ?? null));
		} else {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:555: characters 4-23
			$i->unserialize($this);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:556: characters 3-11
		return $i;
	}

	/**
	 * @param \Closure $f
	 * 
	 * @return \Array_hx
	 */
	public function getArray ($f) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:231: characters 13-21
		$v = ord($this->input->b->s[$this->inPos++]);
		if ($v === 128) {
			$_this = $this->input;
			$pos = $this->inPos;
			$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
			$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
			$this->inPos += 4;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:231: characters 3-22
		$len = $v;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:232: lines 232-233
		if ($len === 0) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:233: characters 4-15
			return null;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:234: characters 3-8
		--$len;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:235: characters 3-14
		$a = new \Array_hx();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:236: characters 13-17
		$_g = 0;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:236: characters 17-20
		$_g1 = $len;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:236: lines 236-237
		while ($_g < $_g1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:236: characters 13-20
			$i = $_g++;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:237: characters 4-14
			$a->offsetSet($i, $f());
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:238: characters 3-11
		return $a;
	}

	/**
	 * @return bool
	 */
	public function getBool () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:279: characters 3-24
		return ord($this->input->b->s[$this->inPos++]) !== 0;
	}

	/**
	 * @return int
	 */
	public function getByte () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:174: characters 10-28
		return ord($this->input->b->s[$this->inPos++]);
	}

	/**
	 * @return Bytes
	 */
	public function getBytes () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:358: characters 13-21
		$v = ord($this->input->b->s[$this->inPos++]);
		if ($v === 128) {
			$_this = $this->input;
			$pos = $this->inPos;
			$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
			$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
			$this->inPos += 4;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:358: characters 3-22
		$len = $v;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:359: lines 359-360
		if ($len === 0) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:360: characters 4-15
			return null;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:361: characters 3-8
		--$len;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:362: characters 11-32
		$_this = $this->input;
		$pos = $this->inPos;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:362: characters 3-33
		$s = null;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:362: characters 11-32
		if (($pos < 0) || ($len < 0) || (($pos + $len) > $_this->length)) {
			throw Exception::thrown(Error::OutsideBounds());
		} else {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:362: characters 3-33
			$s = new Bytes($len, new Container(substr($_this->b->s, $pos, $len)));
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:363: characters 3-15
		$this->inPos += $len;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:364: characters 3-11
		return $s;
	}

	/**
	 * @return int
	 */
	public function getCLID () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:445: characters 3-38
		return (ord($this->input->b->s[$this->inPos++]) << 8) | ord($this->input->b->s[$this->inPos++]);
	}

	/**
	 * @return float
	 */
	public function getDouble () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:308: characters 3-34
		$v = $this->input->getDouble($this->inPos);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:309: characters 3-13
		$this->inPos += 8;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:310: characters 3-11
		return $v;
	}

	/**
	 * @return mixed
	 */
	public function getDynamic () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:368: characters 11-20
		$_g = ord($this->input->b->s[$this->inPos++]);
		if ($_g === 0) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:370: characters 4-15
			return null;
		} else if ($_g === 1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:372: characters 4-16
			return false;
		} else if ($_g === 2) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:374: characters 4-15
			return true;
		} else if ($_g === 3) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:376: characters 11-19
			$v = ord($this->input->b->s[$this->inPos++]);
			if ($v === 128) {
				$_this = $this->input;
				$pos = $this->inPos;
				$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
				$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
				$this->inPos += 4;
			}
			return $v;
		} else if ($_g === 4) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:378: characters 11-21
			$v = $this->input->getFloat($this->inPos);
			$this->inPos += 4;
			return $v;
		} else if ($_g === 5) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:380: characters 4-15
			$o = new HxAnon();
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:381: characters 14-18
			$_g1 = 0;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:381: characters 18-26
			$v = ord($this->input->b->s[$this->inPos++]);
			if ($v === 128) {
				$_this = $this->input;
				$pos = $this->inPos;
				$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
				$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
				$this->inPos += 4;
			}
			$_g2 = $v;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:381: lines 381-382
			while ($_g1 < $_g2) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:381: characters 14-26
				$i = $_g1++;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:382: characters 25-36
				$v = ord($this->input->b->s[$this->inPos++]);
				if ($v === 128) {
					$_this = $this->input;
					$pos = $this->inPos;
					$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
					$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
					$this->inPos += 4;
				}
				$len = $v;
				$tmp = null;
				if ($len === 0) {
					$tmp = null;
				} else {
					--$len;
					$_this1 = $this->input;
					$pos1 = $this->inPos;
					$s = null;
					if (($pos1 < 0) || ($len < 0) || (($pos1 + $len) > $_this1->length)) {
						throw Exception::thrown(Error::OutsideBounds());
					} else {
						$s = substr($_this1->b->s, $pos1, $len);
					}
					$this->inPos += $len;
					$tmp = $s;
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:382: characters 5-51
				\Reflect::setField($o, $tmp, $this->getDynamic());
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:383: characters 4-12
			return $o;
		} else if ($_g === 6) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:385: characters 11-22
			$v = ord($this->input->b->s[$this->inPos++]);
			if ($v === 128) {
				$_this = $this->input;
				$pos = $this->inPos;
				$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
				$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
				$this->inPos += 4;
			}
			$len = $v;
			if ($len === 0) {
				return null;
			} else {
				--$len;
				$_this = $this->input;
				$pos = $this->inPos;
				$s = null;
				if (($pos < 0) || ($len < 0) || (($pos + $len) > $_this->length)) {
					throw Exception::thrown(Error::OutsideBounds());
				} else {
					$s = substr($_this->b->s, $pos, $len);
				}
				$this->inPos += $len;
				return $s;
			}
		} else if ($_g === 7) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:387: characters 11-50
			$_g1 = new \Array_hx();
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:387: characters 22-26
			$_g2 = 0;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:387: characters 26-34
			$v = ord($this->input->b->s[$this->inPos++]);
			if ($v === 128) {
				$_this = $this->input;
				$pos = $this->inPos;
				$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
				$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
				$this->inPos += 4;
			}
			$_g3 = $v;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:387: characters 12-49
			while ($_g2 < $_g3) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:387: characters 22-34
				$i = $_g2++;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:387: characters 37-49
				$x = $this->getDynamic();
				$_g1->arr[$_g1->length++] = $x;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:387: characters 11-50
			return $_g1;
		} else if ($_g === 8) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:389: characters 11-21
			$v = ord($this->input->b->s[$this->inPos++]);
			if ($v === 128) {
				$_this = $this->input;
				$pos = $this->inPos;
				$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
				$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
				$this->inPos += 4;
			}
			$len = $v;
			if ($len === 0) {
				return null;
			} else {
				--$len;
				$_this = $this->input;
				$pos = $this->inPos;
				$s = null;
				if (($pos < 0) || ($len < 0) || (($pos + $len) > $_this->length)) {
					throw Exception::thrown(Error::OutsideBounds());
				} else {
					$s = new Bytes($len, new Container(substr($_this->b->s, $pos, $len)));
				}
				$this->inPos += $len;
				return $s;
			}
		} else {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:390: characters 8-9
			$x = $_g;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:391: characters 4-9
			throw Exception::thrown("Invalid dynamic prefix " . ($x??'null'));
		}
	}

	/**
	 * @param string $name
	 * 
	 * @return mixed
	 */
	public function getEnumClass ($name) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:800: characters 3-35
		$cl = (Serializer::$ENUM_CLASSES->data[$name] ?? null);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:801: characters 3-29
		if ($cl !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:801: characters 20-29
			return $cl;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:802: characters 3-40
		$path = HxString::split($name, ".")->join("_");
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:803: characters 3-55
		$path = (mb_strtoupper(mb_substr($path, 0, 1))??'null') . (mb_substr($path, 1, null)??'null');
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:804: characters 3-50
		$cl = \Type::resolveClass("hxbit.enumSer." . ($path??'null'));
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:805: characters 3-45
		if ($cl !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:805: characters 20-45
			Serializer::$ENUM_CLASSES->data[$name] = $cl;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:806: characters 3-12
		return $cl;
	}

	/**
	 * @return float
	 */
	public function getFloat () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:314: characters 3-33
		$v = $this->input->getFloat($this->inPos);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:315: characters 3-13
		$this->inPos += 4;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:316: characters 3-11
		return $v;
	}

	/**
	 * @return int
	 */
	public function getInt () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:283: characters 3-21
		$v = ord($this->input->b->s[$this->inPos++]);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:284: lines 284-287
		if ($v === 128) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:285: characters 8-29
			$_this = $this->input;
			$pos = $this->inPos;
			$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
			$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:286: characters 4-14
			$this->inPos += 4;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:288: characters 3-11
		return $v;
	}

	/**
	 * @return int
	 */
	public function getInt32 () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:296: characters 11-32
		$_this = $this->input;
		$pos = $this->inPos;
		$v = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:296: characters 3-33
		$v1 = (($v & ((int)-2147483648)) !== 0 ? $v | ((int)-2147483648) : $v);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:297: characters 3-13
		$this->inPos += 4;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:298: characters 3-11
		return $v1;
	}

	/**
	 * @return ___Int64
	 */
	public function getInt64 () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:302: characters 11-32
		$_this = $this->input;
		$pos = $this->inPos;
		$pos1 = $pos + 4;
		$v = ord($_this->b->s[$pos1]) | (ord($_this->b->s[$pos1 + 1]) << 8) | (ord($_this->b->s[$pos1 + 2]) << 16) | (ord($_this->b->s[$pos1 + 3]) << 24);
		$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
		$this1 = new ___Int64((($v & ((int)-2147483648)) !== 0 ? $v | ((int)-2147483648) : $v), (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1));
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:302: characters 3-33
		$v = $this1;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:303: characters 3-13
		$this->inPos += 8;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:304: characters 3-11
		return $v;
	}

	/**
	 * @param Class $c
	 * 
	 * @return mixed
	 */
	public function getKnownRef ($c) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:595: characters 3-39
		return $this->getRef($c, Boot::dynamicField($c, '__clid'));
	}

	/**
	 * @return int
	 */
	public function getObjRef () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:501: characters 10-18
		$v = ord($this->input->b->s[$this->inPos++]);
		if ($v === 128) {
			$_this = $this->input;
			$pos = $this->inPos;
			$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
			$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
			$this->inPos += 4;
		}
		return $v;
	}

	/**
	 * @param Class $c
	 * @param int $clidx
	 * 
	 * @return mixed
	 */
	public function getRef ($c, $clidx) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:560: characters 3-24
		$id = $this->getObjRef();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:561: characters 3-28
		if ($id === 0) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:561: characters 17-28
			return null;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:562: lines 562-563
		if (($this->refs->data[$id] ?? null) !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:563: characters 4-24
			return ($this->refs->data[$id] ?? null);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:564: characters 3-27
		$rid = $id & 16777215;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:565: characters 3-28
		if (Serializer::$UID < $rid) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:565: characters 19-28
			Serializer::$UID = $rid;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:566: lines 566-581
		if (($this->convert !== null) && (($this->convert->arr[$clidx] ?? null) !== null)) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:567: characters 4-30
			$conv = ($this->convert->arr[$clidx] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:568: lines 568-574
			if ($conv->hadCID) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:569: characters 5-29
				$realIdx = (ord($this->input->b->s[$this->inPos++]) << 8) | ord($this->input->b->s[$this->inPos++]);
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:570: lines 570-573
				if ($conv->hasCID) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:571: characters 6-31
					$c = (Serializer::$CL_BYID->arr[$realIdx] ?? null);
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:572: characters 6-32
					$clidx = Boot::dynamicField($c, '__clid');
				}
			}
		} else if ((Serializer::$CLIDS->arr[$clidx] ?? null) !== 0) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:577: characters 5-29
			$realIdx = (ord($this->input->b->s[$this->inPos++]) << 8) | ord($this->input->b->s[$this->inPos++]);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:578: characters 5-30
			$c = (Serializer::$CL_BYID->arr[$realIdx] ?? null);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:579: characters 5-53
			if ($this->convert !== null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:579: characters 27-53
				$clidx = Boot::dynamicField($c, '__clid');
			}
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:582: characters 3-43
		$i = \Type::createEmptyInstance($c);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:583: characters 3-46
		if ($this->newObjects !== null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:583: characters 28-46
			$_this = $this->newObjects;
			$_this->arr[$_this->length++] = $i;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:584: characters 3-15
		$i->__uid = $id;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:585: characters 3-22
		$i->unserializeInit();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:586: characters 3-15
		$this->refs->data[$id] = $i;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:587: lines 587-590
		if (($this->convert !== null) && (($this->convert->arr[$clidx] ?? null) !== null)) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:588: characters 4-33
			$this->convertRef($i, ($this->convert->arr[$clidx] ?? null));
		} else {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:590: characters 4-23
			$i->unserialize($this);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:591: characters 3-11
		return $i;
	}

	/**
	 * @return string
	 */
	public function getString () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:348: characters 13-21
		$v = ord($this->input->b->s[$this->inPos++]);
		if ($v === 128) {
			$_this = $this->input;
			$pos = $this->inPos;
			$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
			$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
			$this->inPos += 4;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:348: characters 3-22
		$len = $v;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:349: lines 349-350
		if ($len === 0) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:350: characters 4-15
			return null;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:351: characters 3-8
		--$len;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:352: characters 11-38
		$_this = $this->input;
		$pos = $this->inPos;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:352: characters 3-39
		$s = null;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:352: characters 11-38
		if (($pos < 0) || ($len < 0) || (($pos + $len) > $_this->length)) {
			throw Exception::thrown(Error::OutsideBounds());
		} else {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:352: characters 3-39
			$s = substr($_this->b->s, $pos, $len);
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:353: characters 3-15
		$this->inPos += $len;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:354: characters 3-11
		return $s;
	}

	/**
	 * @return mixed
	 */
	public function getStruct () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:475: characters 11-20
		$__hx__switch = (ord($this->input->b->s[$this->inPos++]));
		if ($__hx__switch === 0) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:477: characters 4-15
			return null;
		} else if ($__hx__switch === 1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:479: characters 4-32
			return $this->getAnyRef();
		} else if ($__hx__switch === 2) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:481: characters 16-28
			$tmp = $this->knownStructs;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:481: characters 29-37
			$v = ord($this->input->b->s[$this->inPos++]);
			if ($v === 128) {
				$_this = $this->input;
				$pos = $this->inPos;
				$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
				$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
				$this->inPos += 4;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:481: characters 4-38
			return ($tmp->arr[$v] ?? null);
		} else if ($__hx__switch === 3) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:483: characters 16-27
			$v = ord($this->input->b->s[$this->inPos++]);
			if ($v === 128) {
				$_this = $this->input;
				$pos = $this->inPos;
				$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
				$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
				$this->inPos += 4;
			}
			$len = $v;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:483: characters 4-28
			$cname = null;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:483: characters 16-27
			if ($len === 0) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:483: characters 4-28
				$cname = null;
			} else {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:483: characters 16-27
				--$len;
				$_this = $this->input;
				$pos = $this->inPos;
				$s = null;
				if (($pos < 0) || ($len < 0) || (($pos + $len) > $_this->length)) {
					throw Exception::thrown(Error::OutsideBounds());
				} else {
					$s = substr($_this->b->s, $pos, $len);
				}
				$this->inPos += $len;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:483: characters 4-28
				$cname = $s;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:484: characters 4-38
			$cl = \Type::resolveClass($cname);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:485: characters 4-26
			if ($cl === null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:485: characters 21-26
				throw Exception::thrown("Missing struct class " . ($cname??'null'));
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:486: characters 4-62
			$s = \Type::createEmptyInstance($cl);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:487: characters 4-24
			$_this = $this->knownStructs;
			$_this->arr[$_this->length++] = $s;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:488: characters 20-45
			$s->customUnserialize($this);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:489: characters 4-33
			if (ord($this->input->b->s[$this->inPos++]) !== 255) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:489: characters 28-33
				throw Exception::thrown("Invalid customUnserialize for " . (\Std::string($s)??'null'));
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:490: characters 4-17
			return $s;
		} else {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:492: characters 4-9
			throw Exception::thrown("assert");
		}
	}

	/**
	 * @param \Closure $f
	 * 
	 * @return PhpVectorData
	 */
	public function getVector ($f) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:242: characters 13-21
		$v = ord($this->input->b->s[$this->inPos++]);
		if ($v === 128) {
			$_this = $this->input;
			$pos = $this->inPos;
			$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
			$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
			$this->inPos += 4;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:242: characters 3-22
		$len = $v;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:243: lines 243-244
		if ($len === 0) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:244: characters 4-15
			return null;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:245: characters 3-8
		--$len;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:246: characters 11-37
		$this1 = new PhpVectorData($len);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:246: characters 3-38
		$a = $this1;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:247: characters 13-17
		$_g = 0;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:247: characters 17-20
		$_g1 = $len;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:247: lines 247-248
		while ($_g < $_g1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:247: characters 13-20
			$i = $_g++;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:248: characters 4-14
			$val = $f();
			$a->data[$i] = $val;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:249: characters 3-11
		return $a;
	}

	/**
	 * @return bool
	 */
	public function get_remapIds () {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:131: characters 33-57
		return $this->remapObjs !== null;
	}

	/**
	 * @param PropTypeDesc $t
	 * 
	 * @return bool
	 */
	public function isNullable ($t) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:732: lines 732-735
		$__hx__switch = ($t->index);
		if ($__hx__switch === 0 || $__hx__switch === 1 || $__hx__switch === 2) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:733: characters 29-34
			return false;
		} else {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:734: characters 12-16
			return true;
		}
	}

	/**
	 * @param PropTypeDesc $t
	 * 
	 * @return mixed
	 */
	public function readValue ($t) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:809: lines 809-877
		$_gthis = $this;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:810: lines 810-876
		$__hx__switch = ($t->index);
		if ($__hx__switch === 0) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:812: characters 14-22
			$v = ord($this->input->b->s[$this->inPos++]);
			if ($v === 128) {
				$_this = $this->input;
				$pos = $this->inPos;
				$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
				$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
				$this->inPos += 4;
			}
			return $v;
		} else if ($__hx__switch === 1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:813: characters 16-26
			$v = $this->input->getFloat($this->inPos);
			$this->inPos += 4;
			return $v;
		} else if ($__hx__switch === 2) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:815: characters 15-24
			return ord($this->input->b->s[$this->inPos++]) !== 0;
		} else if ($__hx__switch === 3) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:816: characters 17-28
			$v = ord($this->input->b->s[$this->inPos++]);
			if ($v === 128) {
				$_this = $this->input;
				$pos = $this->inPos;
				$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
				$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
				$this->inPos += 4;
			}
			$len = $v;
			if ($len === 0) {
				return null;
			} else {
				--$len;
				$_this = $this->input;
				$pos = $this->inPos;
				$s = null;
				if (($pos < 0) || ($len < 0) || (($pos + $len) > $_this->length)) {
					throw Exception::thrown(Error::OutsideBounds());
				} else {
					$s = substr($_this->b->s, $pos, $len);
				}
				$this->inPos += $len;
				return $s;
			}
		} else if ($__hx__switch === 4) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:819: characters 16-26
			$v = ord($this->input->b->s[$this->inPos++]);
			if ($v === 128) {
				$_this = $this->input;
				$pos = $this->inPos;
				$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
				$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
				$this->inPos += 4;
			}
			$len = $v;
			if ($len === 0) {
				return null;
			} else {
				--$len;
				$_this = $this->input;
				$pos = $this->inPos;
				$s = null;
				if (($pos < 0) || ($len < 0) || (($pos + $len) > $_this->length)) {
					throw Exception::thrown(Error::OutsideBounds());
				} else {
					$s = new Bytes($len, new Container(substr($_this->b->s, $pos, $len)));
				}
				$this->inPos += $len;
				return $s;
			}
		} else if ($__hx__switch === 5) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:833: characters 22-26
			$name = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:833: characters 29-70
			$c = \Type::resolveClass($name);
			return $this->getRef($c, Boot::dynamicField($c, '__clid'));
		} else if ($__hx__switch === 6) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:820: characters 14-18
			$name = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:821: characters 4-43
			$ser = $this->getEnumClass($name);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:822: lines 822-831
			if ($ser === null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:823: characters 5-36
				$e = \Type::resolveEnum($name);
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:826: lines 826-829
				if (($e !== null) && \Reflect::hasField(Meta::getType($e), "skipSerialize")) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:827: characters 6-14
					$v = ord($this->input->b->s[$this->inPos++]);
					if ($v === 128) {
						$_this = $this->input;
						$pos = $this->inPos;
						$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
						$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
						$this->inPos += 4;
					}
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:828: characters 6-17
					return null;
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:830: characters 5-10
				throw Exception::thrown("No enum unserializer found for " . ($name??'null'));
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:832: characters 4-34
			return $ser->doUnserialize($this);
		} else if ($__hx__switch === 7) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:848: characters 16-17
			$v = $t->params[1];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:848: characters 13-14
			$k = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:849: lines 849-867
			$__hx__switch = ($k->index);
			if ($__hx__switch === 0) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:851: characters 6-76
				$v1 = ord($this->input->b->s[$this->inPos++]);
				if ($v1 === 128) {
					$_this = $this->input;
					$pos = $this->inPos;
					$v2 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
					$v1 = (($v2 & ((int)-2147483648)) !== 0 ? $v2 | ((int)-2147483648) : $v2);
					$this->inPos += 4;
				}
				$len = $v1;
				$tmp = null;
				if ($len === 0) {
					$tmp = null;
				} else {
					$m = new IntMap();
					while (--$len > 0) {
						$k1 = $_gthis->readValue($k);
						$v1 = $_gthis->readValue($v);
						$m->data[$k1] = $v1;
					}
					$tmp = $m;
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:851: characters 5-96
				return $tmp;
			} else if ($__hx__switch === 3) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:853: characters 6-76
				$v1 = ord($this->input->b->s[$this->inPos++]);
				if ($v1 === 128) {
					$_this = $this->input;
					$pos = $this->inPos;
					$v2 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
					$v1 = (($v2 & ((int)-2147483648)) !== 0 ? $v2 | ((int)-2147483648) : $v2);
					$this->inPos += 4;
				}
				$len = $v1;
				$tmp = null;
				if ($len === 0) {
					$tmp = null;
				} else {
					$m = new StringMap();
					while (--$len > 0) {
						$k1 = $_gthis->readValue($k);
						$v1 = $_gthis->readValue($v);
						$m->data[$k1] = $v1;
					}
					$tmp = $m;
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:853: characters 5-99
				return $tmp;
			} else if ($__hx__switch === 6) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:854: characters 15-16
				$_g = $k->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:855: characters 15-23
				$v1 = ord($this->input->b->s[$this->inPos++]);
				if ($v1 === 128) {
					$_this = $this->input;
					$pos = $this->inPos;
					$v2 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
					$v1 = (($v2 & ((int)-2147483648)) !== 0 ? $v2 | ((int)-2147483648) : $v2);
					$this->inPos += 4;
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:855: characters 5-24
				$len = $v1;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:856: lines 856-857
				if ($len === 0) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:857: characters 6-17
					return null;
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:858: characters 5-57
				$m = new EnumValueMap();
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:859: lines 859-863
				while (--$len > 0) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:860: characters 6-27
					$k1 = $this->readValue($k);
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:861: characters 6-27
					$v1 = $this->readValue($v);
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:862: characters 6-17
					$m->set($k1, $v1);
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:864: characters 5-13
				return $m;
			} else {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:866: characters 6-76
				$v1 = ord($this->input->b->s[$this->inPos++]);
				if ($v1 === 128) {
					$_this = $this->input;
					$pos = $this->inPos;
					$v2 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
					$v1 = (($v2 & ((int)-2147483648)) !== 0 ? $v2 | ((int)-2147483648) : $v2);
					$this->inPos += 4;
				}
				$len = $v1;
				$tmp = null;
				if ($len === 0) {
					$tmp = null;
				} else {
					$m = new ObjectMap();
					while (--$len > 0) {
						$k1 = $_gthis->readValue($k);
						$v1 = $_gthis->readValue($v);
						$m->set($k1, $v1);
					}
					$tmp = $m;
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:866: characters 5-95
				return $tmp;
			}
		} else if ($__hx__switch === 8) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:817: characters 15-16
			$t1 = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:817: characters 19-59
			$v = ord($this->input->b->s[$this->inPos++]);
			if ($v === 128) {
				$_this = $this->input;
				$pos = $this->inPos;
				$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
				$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
				$this->inPos += 4;
			}
			$len = $v;
			if ($len === 0) {
				return null;
			} else {
				--$len;
				$a = new \Array_hx();
				$_g = 0;
				$_g1 = $len;
				while ($_g < $_g1) {
					$i = $_g++;
					$a->offsetSet($i, $_gthis->readValue($t1));
				}
				return $a;
			}
		} else if ($__hx__switch === 9) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:835: characters 13-19
			$fields = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:836: characters 15-23
			$v = ord($this->input->b->s[$this->inPos++]);
			if ($v === 128) {
				$_this = $this->input;
				$pos = $this->inPos;
				$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
				$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
				$this->inPos += 4;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:836: characters 4-24
			$bits = $v;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:837: lines 837-838
			if ($bits === 0) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:838: characters 5-16
				return null;
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:839: characters 4-15
			$o = new HxAnon();
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:840: characters 4-10
			--$bits;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:841: characters 20-67
			$_g = new \Array_hx();
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:841: characters 21-66
			$_g1 = 0;
			while ($_g1 < $fields->length) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:841: characters 26-27
				$f = ($fields->arr[$_g1] ?? null);
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:841: characters 21-66
				++$_g1;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:841: characters 40-66
				if ($this->isNullable($f->type)) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:841: characters 65-66
					$_g->arr[$_g->length++] = $f;
				}
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:841: characters 4-68
			$nullables = $_g;
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:842: lines 842-846
			$_g = 0;
			while ($_g < $fields->length) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:842: characters 9-10
				$f = ($fields->arr[$_g] ?? null);
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:842: lines 842-846
				++$_g;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:843: characters 5-37
				$nidx = $nullables->indexOf($f);
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:844: characters 5-56
				if (($nidx >= 0) && (($bits & (1 << $nidx)) === 0)) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:844: characters 48-56
					continue;
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:845: characters 5-51
				\Reflect::setField($o, $f->name, $this->readValue($f->type));
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:847: characters 4-12
			return $o;
		} else if ($__hx__switch === 10) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:814: characters 15-16
			$t1 = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:814: characters 19-31
			return $this->readValue($t1);
		} else if ($__hx__switch === 11) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:818: characters 16-17
			$t1 = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:818: characters 20-61
			$v = ord($this->input->b->s[$this->inPos++]);
			if ($v === 128) {
				$_this = $this->input;
				$pos = $this->inPos;
				$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
				$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
				$this->inPos += 4;
			}
			$len = $v;
			if ($len === 0) {
				return null;
			} else {
				--$len;
				$this1 = new PhpVectorData($len);
				$a = $this1;
				$_g = 0;
				$_g1 = $len;
				while ($_g < $_g1) {
					$i = $_g++;
					$val = $_gthis->readValue($t1);
					$a->data[$i] = $val;
				}
				return $a;
			}
		} else if ($__hx__switch === 12) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:834: characters 14-15
			$t1 = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:834: characters 18-54
			if (ord($this->input->b->s[$this->inPos++]) === 0) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:834: characters 35-39
				return null;
			} else {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:834: characters 42-54
				return $this->readValue($t1);
			}
		} else if ($__hx__switch === 13) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:875: characters 4-9
			throw Exception::thrown("assert");
		} else if ($__hx__switch === 14) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:869: characters 4-16
			return $this->getDynamic();
		} else if ($__hx__switch === 15) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:811: characters 16-26
			$_this = $this->input;
			$pos = $this->inPos;
			$pos1 = $pos + 4;
			$v = ord($_this->b->s[$pos1]) | (ord($_this->b->s[$pos1 + 1]) << 8) | (ord($_this->b->s[$pos1 + 2]) << 16) | (ord($_this->b->s[$pos1 + 3]) << 24);
			$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
			$this1 = new ___Int64((($v & ((int)-2147483648)) !== 0 ? $v | ((int)-2147483648) : $v), (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1));
			$v = $this1;
			$this->inPos += 8;
			return $v;
		} else if ($__hx__switch === 16) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:870: characters 15-16
			$_g = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:871: characters 4-12
			$v = ord($this->input->b->s[$this->inPos++]);
			if ($v === 128) {
				$_this = $this->input;
				$pos = $this->inPos;
				$v1 = ord($_this->b->s[$pos]) | (ord($_this->b->s[$pos + 1]) << 8) | (ord($_this->b->s[$pos + 2]) << 16) | (ord($_this->b->s[$pos + 3]) << 24);
				$v = (($v1 & ((int)-2147483648)) !== 0 ? $v1 | ((int)-2147483648) : $v1);
				$this->inPos += 4;
			}
			return $v;
		} else if ($__hx__switch === 17) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:873: characters 4-15
			return $this->getStruct();
		}
	}

	/**
	 * @param Serializable $s
	 * 
	 * @return void
	 */
	public function remap ($s) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:134: characters 3-35
		if ($this->remapObjs->exists($s)) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:134: characters 29-35
			return;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:135: characters 3-28
		$this->remapObjs->set($s, $s->__uid);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:136: characters 3-23
		$s->__uid = (Serializer::$SEQ << 24) | ++Serializer::$UID;
	}

	/**
	 * @param Serializable $s
	 * 
	 * @return Bytes
	 */
	public function serialize ($s) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:161: characters 3-10
		$this->begin();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:162: characters 3-17
		$this->addKnownRef($s);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:163: characters 3-24
		return $this->out->getBytes();
	}

	/**
	 * @param Bytes $data
	 * @param int $pos
	 * 
	 * @return void
	 */
	public function setInput ($data, $pos) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:154: characters 3-15
		$this->input = $data;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:155: characters 3-14
		$this->inPos = $pos;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:156: characters 3-38
		if ($this->refs === null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:156: characters 22-38
			$this->refs = new IntMap();
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:157: characters 3-47
		if ($this->knownStructs === null) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:157: characters 30-47
			$this->knownStructs = new \Array_hx();
		}
	}

	/**
	 * @param bool $b
	 * 
	 * @return bool
	 */
	public function set_remapIds ($b) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:127: characters 3-35
		$this->remapObjs = ($b ? new ObjectMap() : null);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:128: characters 3-11
		return $b;
	}

	/**
	 * @param int $size
	 * 
	 * @return void
	 */
	public function skip ($size) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:292: characters 3-16
		$this->inPos += $size;
	}

	/**
	 * @param Bytes $data
	 * @param Class $c
	 * @param int $startPos
	 * 
	 * @return mixed
	 */
	public function unserialize ($data, $c, $startPos = 0) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:166: lines 166-171
		if ($startPos === null) {
			$startPos = 0;
		}
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:167: characters 3-19
		$this->refs = new IntMap();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:168: characters 3-20
		$this->knownStructs = new \Array_hx();
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:169: characters 3-27
		$this->setInput($data, $startPos);
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:170: characters 3-24
		return $this->getRef($c, Boot::dynamicField($c, '__clid'));
	}

	/**
	 * @param mixed $v
	 * @param PropTypeDesc $t
	 * 
	 * @return void
	 */
	public function writeValue ($v, $t) {
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:879: lines 879-961
		$_gthis = $this;
		#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:880: lines 880-960
		$__hx__switch = ($t->index);
		if ($__hx__switch === 0) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:884: characters 4-13
			$v1 = $v;
			if (($v1 >= 0) && ($v1 < 128)) {
				$_this = $this->out;
				$_this->b = ($_this->b . chr($v1));
			} else {
				$_this = $this->out;
				$_this->b = ($_this->b . chr(128));
				$this->out->addInt32($v1);
			}
		} else if ($__hx__switch === 1) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:886: characters 4-15
			$this->out->addInt32(unpack("l", pack("f", $v))[1]);
		} else if ($__hx__switch === 2) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:890: characters 4-14
			$_this = $this->out;
			$_this->b = ($_this->b . chr(($v ? 1 : 0)));
		} else if ($__hx__switch === 3) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:892: characters 4-16
			$s = $v;
			if ($s === null) {
				$_this = $this->out;
				$_this->b = ($_this->b . chr(0));
			} else {
				$b = strlen($s);
				$b1 = new Bytes($b, new Container($s));
				$v1 = $b1->length + 1;
				if (($v1 >= 0) && ($v1 < 128)) {
					$_this = $this->out;
					$_this->b = ($_this->b . chr($v1));
				} else {
					$_this = $this->out;
					$_this->b = ($_this->b . chr(128));
					$this->out->addInt32($v1);
				}
				$_this = $this->out;
				$_this->b = ($_this->b . $b1->b->s);
			}
		} else if ($__hx__switch === 4) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:898: characters 4-15
			$b = $v;
			if ($b === null) {
				$_this = $this->out;
				$_this->b = ($_this->b . chr(0));
			} else {
				$v1 = $b->length + 1;
				if (($v1 >= 0) && ($v1 < 128)) {
					$_this = $this->out;
					$_this->b = ($_this->b . chr($v1));
				} else {
					$_this = $this->out;
					$_this->b = ($_this->b . chr(128));
					$this->out->addInt32($v1);
				}
				$_this = $this->out;
				$_this->b = ($_this->b . $b->b->s);
			}
		} else if ($__hx__switch === 5) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:903: characters 22-23
			$_g = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:904: characters 4-18
			$this->addKnownRef($v);
		} else if ($__hx__switch === 6) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:899: characters 14-18
			$name = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:900: characters 4-43
			$ser = $this->getEnumClass($name);
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:901: characters 4-27
			if ($ser === null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:901: characters 22-27
				throw Exception::thrown("No enum unserializer found for " . ($name??'null'));
			}
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:902: characters 4-27
			$ser->doSerialize($this, $v);
		} else if ($__hx__switch === 7) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:928: characters 16-17
			$t1 = $t->params[1];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:928: characters 13-14
			$k = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:929: lines 929-951
			$__hx__switch = ($k->index);
			if ($__hx__switch === 0) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:931: characters 5-34
				$v1 = $v;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:932: characters 5-74
				if ($v1 === null) {
					$_this = $this->out;
					$_this->b = ($_this->b . chr(0));
				} else {
					$_g = new \Array_hx();
					$k1 = new NativeIndexedArrayIterator(array_keys($v1->data));
					while ($k1->hasNext()) {
						$k2 = $k1->next();
						$_g->arr[$_g->length++] = $k2;
					}
					$keys = $_g;
					$v2 = $keys->length + 1;
					if (($v2 >= 0) && ($v2 < 128)) {
						$_this = $this->out;
						$_this->b = ($_this->b . chr($v2));
					} else {
						$_this = $this->out;
						$_this->b = ($_this->b . chr(128));
						$this->out->addInt32($v2);
					}
					$_g = 0;
					while ($_g < $keys->length) {
						$k1 = ($keys->arr[$_g] ?? null);
						++$_g;
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:932: characters 27-43
						$_gthis->writeValue($k1, $k);
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:932: characters 57-73
						$_gthis->writeValue(($v1->data[$k1] ?? null), $t1);
					}
				}
			} else if ($__hx__switch === 3) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:934: characters 5-37
				$v1 = $v;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:935: characters 5-74
				if ($v1 === null) {
					$_this = $this->out;
					$_this->b = ($_this->b . chr(0));
				} else {
					$_g = new \Array_hx();
					$k1 = new NativeIndexedArrayIterator(array_values(array_map("strval", array_keys($v1->data))));
					while ($k1->hasNext()) {
						$k2 = $k1->next();
						$_g->arr[$_g->length++] = $k2;
					}
					$keys = $_g;
					$v2 = $keys->length + 1;
					if (($v2 >= 0) && ($v2 < 128)) {
						$_this = $this->out;
						$_this->b = ($_this->b . chr($v2));
					} else {
						$_this = $this->out;
						$_this->b = ($_this->b . chr(128));
						$this->out->addInt32($v2);
					}
					$_g = 0;
					while ($_g < $keys->length) {
						$k1 = ($keys->arr[$_g] ?? null);
						++$_g;
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:935: characters 27-43
						$_gthis->writeValue($k1, $k);
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:935: characters 57-73
						$_gthis->writeValue(($v1->data[$k1] ?? null), $t1);
					}
				}
			} else if ($__hx__switch === 6) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:936: characters 15-16
				$_g = $k->params[0];
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:937: characters 5-55
				$v1 = $v;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:938: lines 938-941
				if ($v1 === null) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:939: characters 6-16
					$_this = $this->out;
					$_this->b = ($_this->b . chr(0));
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:940: characters 6-12
					return;
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:942: characters 16-39
				$_g = new \Array_hx();
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:942: characters 27-35
				$k1 = $v1->keys();
				while ($k1->hasNext()) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:942: characters 17-38
					$k2 = $k1->next();
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:942: characters 37-38
					$_g->arr[$_g->length++] = $k2;
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:942: characters 5-40
				$keys = $_g;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:943: characters 5-28
				$v2 = $keys->length + 1;
				if (($v2 >= 0) && ($v2 < 128)) {
					$_this = $this->out;
					$_this->b = ($_this->b . chr($v2));
				} else {
					$_this = $this->out;
					$_this->b = ($_this->b . chr(128));
					$this->out->addInt32($v2);
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:944: lines 944-947
				$_g = 0;
				while ($_g < $keys->length) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:944: characters 10-12
					$vk = ($keys->arr[$_g] ?? null);
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:944: lines 944-947
					++$_g;
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:945: characters 6-23
					$this->writeValue($vk, $k);
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:946: characters 6-30
					$this->writeValue($v1->get($vk), $t1);
				}
			} else {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:949: characters 5-33
				$v1 = $v;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:950: characters 5-74
				if ($v1 === null) {
					$_this = $this->out;
					$_this->b = ($_this->b . chr(0));
				} else {
					$_g = new \Array_hx();
					$k1 = new NativeIndexedArrayIterator(array_values($v1->_keys));
					while ($k1->hasNext()) {
						$k2 = $k1->next();
						$_g->arr[$_g->length++] = $k2;
					}
					$keys = $_g;
					$v2 = $keys->length + 1;
					if (($v2 >= 0) && ($v2 < 128)) {
						$_this = $this->out;
						$_this->b = ($_this->b . chr($v2));
					} else {
						$_this = $this->out;
						$_this->b = ($_this->b . chr(128));
						$this->out->addInt32($v2);
					}
					$_g = 0;
					while ($_g < $keys->length) {
						$k1 = ($keys->arr[$_g] ?? null);
						++$_g;
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:950: characters 27-43
						$_gthis->writeValue($k1, $k);
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:950: characters 57-73
						$_gthis->writeValue($v1->get($k1), $t1);
					}
				}
			}
		} else if ($__hx__switch === 8) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:893: characters 15-16
			$t1 = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:894: characters 4-51
			$a = $v;
			if ($a === null) {
				$_this = $this->out;
				$_this->b = ($_this->b . chr(0));
			} else {
				$v1 = $a->length + 1;
				if (($v1 >= 0) && ($v1 < 128)) {
					$_this = $this->out;
					$_this->b = ($_this->b . chr($v1));
				} else {
					$_this = $this->out;
					$_this->b = ($_this->b . chr(128));
					$this->out->addInt32($v1);
				}
				$_g = 0;
				while ($_g < $a->length) {
					$v1 = ($a->arr[$_g] ?? null);
					++$_g;
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:894: characters 35-50
					$_gthis->writeValue($v1, $t1);
				}
			}
		} else if ($__hx__switch === 9) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:912: characters 13-19
			$fields = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:913: lines 913-927
			if ($v === null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:914: characters 5-15
				$_this = $this->out;
				$_this->b = ($_this->b . chr(0));
			} else {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:916: characters 5-19
				$fbits = 0;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:917: characters 21-68
				$_g = new \Array_hx();
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:917: characters 22-67
				$_g1 = 0;
				while ($_g1 < $fields->length) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:917: characters 27-28
					$f = ($fields->arr[$_g1] ?? null);
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:917: characters 22-67
					++$_g1;
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:917: characters 41-67
					if ($this->isNullable($f->type)) {
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:917: characters 66-67
						$_g->arr[$_g->length++] = $f;
					}
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:917: characters 5-69
				$nullables = $_g;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:918: characters 15-19
				$_g = 0;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:918: characters 19-35
				$_g1 = $nullables->length;
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:918: lines 918-920
				while ($_g < $_g1) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:918: characters 15-35
					$i = $_g++;
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:919: lines 919-920
					if (\Reflect::field($v, ($nullables->arr[$i] ?? null)->name) !== null) {
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:920: characters 7-22
						$fbits |= 1 << $i;
					}
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:921: characters 5-22
				$v1 = $fbits + 1;
				if (($v1 >= 0) && ($v1 < 128)) {
					$_this = $this->out;
					$_this->b = ($_this->b . chr($v1));
				} else {
					$_this = $this->out;
					$_this->b = ($_this->b . chr(128));
					$this->out->addInt32($v1);
				}
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:922: lines 922-926
				$_g = 0;
				while ($_g < $fields->length) {
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:922: characters 10-11
					$f = ($fields->arr[$_g] ?? null);
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:922: lines 922-926
					++$_g;
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:923: characters 6-38
					$nidx = $nullables->indexOf($f);
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:924: characters 6-58
					if (($nidx >= 0) && (($fbits & (1 << $nidx)) === 0)) {
						#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:924: characters 50-58
						continue;
					}
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:925: characters 6-50
					$this->writeValue(\Reflect::field($v, $f->name), $f->type);
				}
			}
		} else if ($__hx__switch === 10) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:887: characters 15-16
			$t1 = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:888: characters 4-19
			$this->writeValue($v, $t1);
		} else if ($__hx__switch === 11) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:895: characters 16-17
			$t1 = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:896: characters 4-52
			$a = $v;
			if ($a === null) {
				$_this = $this->out;
				$_this->b = ($_this->b . chr(0));
			} else {
				$v1 = $a->length + 1;
				if (($v1 >= 0) && ($v1 < 128)) {
					$_this = $this->out;
					$_this->b = ($_this->b . chr($v1));
				} else {
					$_this = $this->out;
					$_this->b = ($_this->b . chr(128));
					$this->out->addInt32($v1);
				}
				$_g = 0;
				while ($_g < $a->length) {
					$v1 = ($a->data[$_g] ?? null);
					++$_g;
					#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:896: characters 36-51
					$_gthis->writeValue($v1, $t1);
				}
			}
		} else if ($__hx__switch === 12) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:905: characters 14-15
			$t1 = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:906: lines 906-911
			if ($v === null) {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:907: characters 5-15
				$_this = $this->out;
				$_this->b = ($_this->b . chr(0));
			} else {
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:909: characters 5-15
				$_this = $this->out;
				$_this->b = ($_this->b . chr(1));
				#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:910: characters 5-21
				$this->writeValue($v, $t1);
			}
		} else if ($__hx__switch === 13) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:959: characters 4-9
			throw Exception::thrown("assert");
		} else if ($__hx__switch === 14) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:953: characters 4-17
			$this->addDynamic($v);
		} else if ($__hx__switch === 15) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:882: characters 4-15
			$this->out->addInt64($v);
		} else if ($__hx__switch === 16) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:954: characters 15-16
			$_g = $t->params[0];
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:955: characters 4-13
			$v1 = $v;
			if (($v1 >= 0) && ($v1 < 128)) {
				$_this = $this->out;
				$_this->b = ($_this->b . chr($v1));
			} else {
				$_this = $this->out;
				$_this->b = ($_this->b . chr(128));
				$this->out->addInt32($v1);
			}
		} else if ($__hx__switch === 17) {
			#/opt/src/crm-2.0/server/.haxelib/hxbit/1,5,0/hxbit/Serializer.hx:957: characters 4-16
			$this->addStruct($v);
		}
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$CLASSES = new \Array_hx();
		self::$ENUM_CLASSES = new StringMap();
	}
}

Boot::registerClass(Serializer::class, 'hxbit.Serializer');
Boot::registerGetters('hxbit\\Serializer', [
	'remapIds' => true
]);
Boot::registerSetters('hxbit\\Serializer', [
	'remapIds' => true
]);
Serializer::__hx__init();
