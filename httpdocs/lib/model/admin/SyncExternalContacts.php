<?php
/**
 * Generated by Haxe 4.1.1
 * Haxe source file: src/model/admin/SyncExternalContacts.hx
 */

namespace model\admin;

use \php\_Boot\HxAnon;
use \php\Boot;
use \haxe\Exception;
use \haxe\Log;
use \php\Lib;
use \shared\DbData;
use \haxe\ds\StringMap;
use \php\_NativeIndexedArray\NativeIndexedArrayIterator;

/**
 * ...
 * @author axel@bi4.me
 */
class SyncExternalContacts extends \Model {
	/**
	 * @var \Array_hx
	 */
	public $keys;
	/**
	 * @var int
	 */
	public $synced;

	/**
	 * @param StringMap $param
	 * 
	 * @return void
	 */
	public function __construct ($param) {
		#src/model/admin/SyncExternalContacts.hx:40: characters 3-15
		parent::__construct($param);
		#src/model/admin/SyncExternalContacts.hx:42: lines 42-46
		if (array_key_exists("synced", $param->data)) {
			#src/model/admin/SyncExternalContacts.hx:44: characters 4-33
			$this->synced = ($param->data["synced"] ?? null);
		} else {
			#src/model/admin/SyncExternalContacts.hx:46: characters 8-18
			$this->synced = 0;
		}
		#src/model/admin/SyncExternalContacts.hx:47: characters 3-35
		$this->keys = \S::tableFields("contacts");
		#src/model/admin/SyncExternalContacts.hx:48: characters 9-14
		(Log::$trace)("calling " . ($this->action??'null'), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 48,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "new",
		]));
		#src/model/admin/SyncExternalContacts.hx:49: characters 3-8
		(Log::$trace)($this->action, new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 49,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "new",
		]));
		#src/model/admin/SyncExternalContacts.hx:51: characters 10-16
		$__hx__switch = ($this->action);
		if ($__hx__switch === "importAll") {
			#src/model/admin/SyncExternalContacts.hx:53: characters 5-17
			$this->getMissing();
		} else if ($__hx__switch === "mergeContacts") {
			#src/model/admin/SyncExternalContacts.hx:60: characters 5-20
			$this->mergeContacts();
		} else if ($__hx__switch === "syncAll") {
			#src/model/admin/SyncExternalContacts.hx:55: characters 5-14
			$this->syncAll();
		} else if ($__hx__switch === "syncImportDeals") {
			#src/model/admin/SyncExternalContacts.hx:58: characters 5-22
			$this->syncImportDeals();
		} else {
			#src/model/admin/SyncExternalContacts.hx:62: characters 5-10
			$this->run();
		}
	}

	/**
	 * @param int $min_id
	 * 
	 * @return mixed
	 */
	public function getCrmData ($min_id = 9999999) {
		#src/model/admin/SyncExternalContacts.hx:418: lines 418-475
		if ($min_id === null) {
			$min_id = 9999999;
		}
		#src/model/admin/SyncExternalContacts.hx:419: characters 3-8
		(Log::$trace)($min_id, new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 419,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "getCrmData",
		]));
		#src/model/admin/SyncExternalContacts.hx:421: characters 3-48
		$firstBatch = ($this->param->data["offset"] ?? null) === "0";
		#src/model/admin/SyncExternalContacts.hx:422: characters 3-36
		$selectTotalCount = "";
		#src/model/admin/SyncExternalContacts.hx:423: lines 423-428
		if (\Std::parseInt(($this->param->data["limit"] ?? null)) > 10000) {
			#src/model/admin/SyncExternalContacts.hx:425: characters 4-53
			ini_set('max_execution_time',3600);
			#src/model/admin/SyncExternalContacts.hx:426: characters 4-47
			ini_set('memory_limit','1G');
			#src/model/admin/SyncExternalContacts.hx:427: characters 4-9
			(Log::$trace)(ini_get('memory_limit'), new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 427,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "getCrmData",
			]));
		}
		#src/model/admin/SyncExternalContacts.hx:429: characters 3-8
		(Log::$trace)("offset:" . (\Std::string(($this->param->data["offset"] ?? null))??'null') . " firstBatch:" . (\Std::string($firstBatch)??'null') . " ", new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 429,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "getCrmData",
		]));
		#src/model/admin/SyncExternalContacts.hx:430: lines 430-433
		if ($firstBatch) {
			#src/model/admin/SyncExternalContacts.hx:432: characters 4-44
			$selectTotalCount = "SQL_CALC_FOUND_ROWS";
		}
		#src/model/admin/SyncExternalContacts.hx:434: lines 434-451
		$sql = "\x0D\x0A\x09\x09SELECT " . ($selectTotalCount??'null') . " cl.client_id id,cl.lead_id,cl.creation_date,cl.state,cl.use_email,cl.register_on,cl.register_off,cl.register_off_to,cl.teilnahme_beginn,cl.title title_pro,cl.anrede title,cl.namenszusatz,cl.co_field,cl.storno_grund,IF(TO_DAYS(STR_TO_DATE(cl.birth_date, '%Y-%m-%d'))>500000 ,cl.birth_date,null) date_of_birth,IF(cl.old_active=1,'true','false')old_active,\x0D\x0App.pay_plan_id,pp.creation_date,pp.pay_source_id,pp.target_id,pp.start_day,pp.start_date,pp.buchungs_tag,pp.cycle,pp.amount,IF(pp.product='K',2,3) product ,pp.agent,pp.agency_project project,pp.pay_plan_state,pp.pay_method,pp.end_date,pp.end_reason,pp.repeat_date,pp.cycle_start_date,\x0D\x0A ps.pay_source_id,ps.debtor,ps.bank_name,ps.account,ps.blz,ps.iban,ps.sign_date,ps.pay_source_state,ps.creation_date account_creation_date,\x0D\x0Avl.entry_date,vl.modify_date,vl.status,vl.user,vl.source_id,vl.list_id,vl.phone_code,vl.phone_number,'' fax,vl.first_name,vl.last_name,vl.address1 address,vl.address2 address_2,vl.city,vl.postal_code,vl.country_code,IF(vl.gender='U','',vl.gender) gender,\x0D\x0AIF( vl.alt_phone LIKE '1%',vl.alt_phone,'')mobile,vl.email,vl.comments,vl.last_local_call_time,vl.owner,vl.entry_list_id, 1 mandator, 100 edited_by, '' company_name\x0D\x0A, cl.client_id contact,target_id target_account\x0D\x0AFROM clients cl\x0D\x0AINNER JOIN pay_plan pp\x0D\x0AON pp.client_id=cl.client_id\x0D\x0AINNER JOIN pay_source ps\x0D\x0AON ps.client_id=cl.client_id\x0D\x0AINNER JOIN asterisk.vicidial_list vl\x0D\x0AON vl.vendor_lead_code=cl.client_id\x0D\x0AWHERE cl.client_id>" . ($min_id??'null') . "\x0D\x0AORDER BY cl.client_id \x0D\x0ALIMIT \x0D\x0A";
		#src/model/admin/SyncExternalContacts.hx:453: characters 3-8
		(Log::$trace)("" . ($sql??'null') . " " . (\Std::parseInt(($this->param->data["limit"] ?? null))??'null') . " OFFSET " . (\Std::parseInt(($this->param->data["offset"] ?? null))??'null'), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 453,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "getCrmData",
		]));
		#src/model/admin/SyncExternalContacts.hx:454: characters 9-129
		$stmt = \S::$syncDbh->query("" . ($sql??'null') . " " . (\Std::parseInt(($this->param->data["limit"] ?? null))??'null') . " OFFSET " . (\Std::parseInt(($this->param->data["offset"] ?? null))??'null'));
		#src/model/admin/SyncExternalContacts.hx:455: characters 3-8
		(Log::$trace)("loading  " . (\Std::parseInt(($this->param->data["limit"] ?? null))??'null') . " OFFSET " . (\Std::parseInt(($this->param->data["offset"] ?? null))??'null'), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 455,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "getCrmData",
		]));
		#src/model/admin/SyncExternalContacts.hx:456: lines 456-460
		if ($stmt === false) {
			#src/model/admin/SyncExternalContacts.hx:458: characters 4-9
			(Log::$trace)("" . ($sql??'null') . " " . (\Std::parseInt(($this->param->data["limit"] ?? null))??'null'), new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 458,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "getCrmData",
			]));
			#src/model/admin/SyncExternalContacts.hx:459: characters 17-23
			$tmp = $this->dbData;
			#src/model/admin/SyncExternalContacts.hx:459: characters 25-69
			$_g = new StringMap();
			$value = \S::$syncDbh->errorInfo();
			$_g->data["getCrmData query:"] = $value;
			#src/model/admin/SyncExternalContacts.hx:459: characters 4-70
			\S::sendErrors($tmp, $_g, new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 459,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "getCrmData",
			]));
		}
		#src/model/admin/SyncExternalContacts.hx:461: lines 461-464
		if ($stmt->errorCode() !== "00000") {
			#src/model/admin/SyncExternalContacts.hx:463: characters 4-9
			(Log::$trace)($stmt->errorInfo(), new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 463,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "getCrmData",
			]));
		}
		#src/model/admin/SyncExternalContacts.hx:465: characters 3-78
		$res = ($stmt->execute() ? $stmt->fetchAll(\PDO::FETCH_ASSOC) : null);
		#src/model/admin/SyncExternalContacts.hx:467: lines 467-473
		if ($firstBatch) {
			#src/model/admin/SyncExternalContacts.hx:469: characters 4-49
			$stmt = \S::$syncDbh->query("SELECT FOUND_ROWS()");
			#src/model/admin/SyncExternalContacts.hx:470: characters 4-38
			$totalRes = $stmt->fetchColumn();
			#src/model/admin/SyncExternalContacts.hx:471: characters 4-9
			(Log::$trace)($totalRes, new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 471,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "getCrmData",
			]));
			#src/model/admin/SyncExternalContacts.hx:472: characters 4-46
			$this->dbData->dataInfo->data["totalRecords"] = $totalRes;
		}
		#src/model/admin/SyncExternalContacts.hx:474: characters 3-13
		return $res;
	}

	/**
	 * @return void
	 */
	public function getMissing () {
		#src/model/admin/SyncExternalContacts.hx:74: characters 3-29
		$min_id = \Util::minId();
		#src/model/admin/SyncExternalContacts.hx:75: characters 3-19
		$got = 0;
		#src/model/admin/SyncExternalContacts.hx:76: characters 3-106
		$stmt = \S::$dbh->query("SELECT MAX(id)max_contact, COUNT(*)previous_count FROM contacts");
		#src/model/admin/SyncExternalContacts.hx:77: characters 3-38
		$rO = $stmt->fetch(\PDO::FETCH_OBJ);
		#src/model/admin/SyncExternalContacts.hx:78: lines 78-79
		if ($rO->max_contact > $min_id) {
			#src/model/admin/SyncExternalContacts.hx:79: characters 4-10
			$min_id = $rO->max_contact;
		}
		#src/model/admin/SyncExternalContacts.hx:80: characters 3-8
		(Log::$trace)("max_contact:" . ($rO->max_contact??'null'), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 80,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "getMissing",
		]));
		#src/model/admin/SyncExternalContacts.hx:81: characters 3-31
		\Util::copy2map($this->dbData->dataInfo, $rO);
		#src/model/admin/SyncExternalContacts.hx:84: characters 3-61
		$action = (\Std::string((\S::$params->data["classPath"] ?? null))??'null') . "." . (\Std::string((\S::$params->data["action"] ?? null))??'null');
		#src/model/admin/SyncExternalContacts.hx:85: lines 85-86
		$cleared = \S::$dbh->exec("DELETE FROM ext_ids WHERE auth_user=" . (\S::$dbQuery->dbUser->id??'null') . " AND action='" . ($action??'null') . "' AND table_name='contacts'");
		#src/model/admin/SyncExternalContacts.hx:87: characters 3-8
		(Log::$trace)("DELETE FROM ext_ids WHERE auth_user=" . (\S::$dbQuery->dbUser->id??'null') . " AND action='" . ($action??'null') . "' AND table_name='contacts'", new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 87,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "getMissing",
		]));
		#src/model/admin/SyncExternalContacts.hx:91: lines 91-95
		$sql = "\x0D\x0A\x09\x09(SELECT client_id FROM clients \x0D\x0A\x09\x09WHERE client_id>" . ($min_id??'null') . " LIMIT 1000)\x0D\x0A\x09\x09UNION\x0D\x0A\x09\x09(SELECT MAX(client_id) FROM clients)";
		#src/model/admin/SyncExternalContacts.hx:96: characters 3-8
		(Log::$trace)($sql, new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 96,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "getMissing",
		]));
		#src/model/admin/SyncExternalContacts.hx:97: characters 3-26
		$start = microtime(true);
		#src/model/admin/SyncExternalContacts.hx:98: characters 9-13
		$stmt = \S::$syncDbh->query($sql);
		#src/model/admin/SyncExternalContacts.hx:100: characters 3-60
		\S::checkStmt(\S::$syncDbh, $stmt, "getMissing-get-client_ids", new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 100,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "getMissing",
		]));
		#src/model/admin/SyncExternalContacts.hx:102: characters 3-95
		$cids = \Array_hx::wrap(($stmt->execute() ? $stmt->fetchAll(\PDO::FETCH_NUM) : null));
		#src/model/admin/SyncExternalContacts.hx:103: lines 103-104
		if ($cids !== null) {
			#src/model/admin/SyncExternalContacts.hx:104: characters 4-9
			(Log::$trace)($cids->length, new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 104,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "getMissing",
			]));
		}
		#src/model/admin/SyncExternalContacts.hx:105: characters 3-61
		$maxCid = null;
		#src/model/admin/SyncExternalContacts.hx:105: characters 16-60
		if ($cids->length === 1) {
			#src/model/admin/SyncExternalContacts.hx:105: characters 3-61
			$maxCid = ($cids->arr[0] ?? null)[0];
		} else {
			#src/model/admin/SyncExternalContacts.hx:105: characters 46-56
			if ($cids->length > 0) {
				$cids->length--;
			}
			#src/model/admin/SyncExternalContacts.hx:105: characters 3-61
			$maxCid = array_pop($cids->arr)[0];
		}
		#src/model/admin/SyncExternalContacts.hx:107: characters 3-8
		(Log::$trace)(($maxCid??'null') . " took:" . (microtime(true) - $start), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 107,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "getMissing",
		]));
		#src/model/admin/SyncExternalContacts.hx:108: characters 3-8
		$start = microtime(true);
		#src/model/admin/SyncExternalContacts.hx:109: lines 109-126
		$_g = 0;
		while ($_g < $cids->length) {
			#src/model/admin/SyncExternalContacts.hx:109: characters 7-10
			$cid = ($cids->arr[$_g] ?? null);
			#src/model/admin/SyncExternalContacts.hx:109: lines 109-126
			++$_g;
			#src/model/admin/SyncExternalContacts.hx:111: characters 4-103
			$sti = \S::$dbh->prepare("INSERT INTO ext_ids VALUES(?,?,?,?) ON CONFLICT DO NOTHING");
			#src/model/admin/SyncExternalContacts.hx:112: lines 112-117
			if ($sti === false) {
				#src/model/admin/SyncExternalContacts.hx:114: characters 5-10
				(Log::$trace)(Boot::getInstanceClosure(\S::$dbh, 'errorInfo'), new HxAnon([
					"fileName" => "src/model/admin/SyncExternalContacts.hx",
					"lineNumber" => 114,
					"className" => "model.admin.SyncExternalContacts",
					"methodName" => "getMissing",
				]));
				#src/model/admin/SyncExternalContacts.hx:115: characters 5-10
				(Log::$trace)("INSERT INTO ext_ids VALUES(" . ($cid[0]??'null') . ", " . (\S::$dbQuery->dbUser->id??'null') . ", '" . ($action??'null') . "','contacts')", new HxAnon([
					"fileName" => "src/model/admin/SyncExternalContacts.hx",
					"lineNumber" => 115,
					"className" => "model.admin.SyncExternalContacts",
					"methodName" => "getMissing",
				]));
				#src/model/admin/SyncExternalContacts.hx:116: characters 5-23
				\S::exit(new HxAnon(["oops" => 666]));
			}
			#src/model/admin/SyncExternalContacts.hx:119: lines 119-125
			if (!$sti->execute(array($cid[0],\S::$dbQuery->dbUser->id,$action,"contacts"))) {
				#src/model/admin/SyncExternalContacts.hx:122: characters 5-10
				(Log::$trace)(\S::$dbh->errorInfo(), new HxAnon([
					"fileName" => "src/model/admin/SyncExternalContacts.hx",
					"lineNumber" => 122,
					"className" => "model.admin.SyncExternalContacts",
					"methodName" => "getMissing",
				]));
				#src/model/admin/SyncExternalContacts.hx:123: characters 5-10
				(Log::$trace)($sti->errorInfo(), new HxAnon([
					"fileName" => "src/model/admin/SyncExternalContacts.hx",
					"lineNumber" => 123,
					"className" => "model.admin.SyncExternalContacts",
					"methodName" => "getMissing",
				]));
				#src/model/admin/SyncExternalContacts.hx:124: characters 5-23
				\S::exit(new HxAnon(["oops" => 666]));
			}
		}
		#src/model/admin/SyncExternalContacts.hx:127: characters 3-8
		(Log::$trace)(($cids->length??'null') . " storing took:" . (microtime(true) - $start), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 127,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "getMissing",
		]));
		#src/model/admin/SyncExternalContacts.hx:128: characters 3-8
		$start = microtime(true);
		#src/model/admin/SyncExternalContacts.hx:129: characters 3-6
		$sql = "\x0D\x0A" . "SELECT ARRAY_TO_STRING(array_agg(eid.ext_id),',') from ext_ids eid\x0D\x0A" . "left join \x0D\x0A" . "(SELECT 1 as gg,id from contacts) c\x0D\x0A" . "ON eid.ext_id=c.id\x0D\x0A" . "where c.id IS NULL\x0D\x0A" . "AND eid.table_name='contacts'\x0D\x0A" . ("AND eid.action='" . (\Std::string((\S::$params->data["classPath"] ?? null))??'null') . "." . (\Std::string((\S::$params->data["action"] ?? null))??'null') . "'\x09\x09\x0D\x0A") . "GROUP BY gg;\x0D\x0A" . "";
		#src/model/admin/SyncExternalContacts.hx:139: characters 3-7
		$stmt = \S::$dbh->query($sql);
		#src/model/admin/SyncExternalContacts.hx:141: characters 3-43
		\S::checkStmt(\S::$dbh, $stmt, "getMissingIDs ", new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 141,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "getMissing",
		]));
		#src/model/admin/SyncExternalContacts.hx:143: characters 3-73
		$ids = ($stmt->execute() ? $stmt->fetch(\PDO::FETCH_COLUMN, 0) : null);
		#src/model/admin/SyncExternalContacts.hx:145: characters 3-8
		(Log::$trace)((mb_substr($ids, 0, 24)??'null') . "took:" . (microtime(true) - $start), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 145,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "getMissing",
		]));
		#src/model/admin/SyncExternalContacts.hx:146: characters 3-8
		$start = microtime(true);
		#src/model/admin/SyncExternalContacts.hx:149: characters 3-6
		$sql = "\x0D\x0A\x09\x09SELECT cl.client_id id,cl.lead_id,cl.creation_date,cl.state,cl.use_email,cl.register_on,cl.register_off,cl.register_off_to,cl.teilnahme_beginn,cl.title title_pro,cl.anrede title,cl.namenszusatz,cl.co_field,cl.storno_grund,IF(TO_DAYS(STR_TO_DATE(cl.birth_date, '%Y-%m-%d'))>500000,cl.birth_date,null)date_of_birth,IF(cl.old_active=1,'true','false')old_active,\x0D\x0A\x09\x09vl.entry_date,vl.modify_date,vl.status,vl.user,vl.source_id,vl.list_id,vl.phone_code,vl.phone_number,'' fax,vl.first_name,vl.last_name,vl.address1 address,vl.address2 address_2,vl.city,vl.postal_code,vl.country_code,IF(vl.gender='U','',vl.gender) gender,\x0D\x0A\x09\x09IF( vl.alt_phone LIKE '1%',vl.alt_phone,'')mobile,vl.email,vl.comments,vl.last_local_call_time,vl.owner,vl.entry_list_id, " . (\Std::string((\S::$params->data["mandator"] ?? null))??'null') . " mandator, 100 edited_by, '' company_name\x0D\x0A\x09\x09FROM clients cl\x0D\x0AINNER JOIN asterisk.vicidial_list vl\x0D\x0AON (vl.lead_id=cl.lead_id )\x0D\x0AWHERE cl.client_id IN(" . ($ids??'null') . ")\x0D\x0AORDER BY cl.client_id  \x0D\x0A";
		#src/model/admin/SyncExternalContacts.hx:160: characters 9-13
		$stmt = \S::$syncDbh->query($sql);
		#src/model/admin/SyncExternalContacts.hx:161: lines 161-165
		if ($stmt === false) {
			#src/model/admin/SyncExternalContacts.hx:163: characters 4-9
			(Log::$trace)(mb_substr($sql, 0, 1100), new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 163,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "getMissing",
			]));
			#src/model/admin/SyncExternalContacts.hx:164: characters 17-23
			$tmp = $this->dbData;
			#src/model/admin/SyncExternalContacts.hx:164: characters 25-76
			$_g = new StringMap();
			$value = \S::$syncDbh->errorInfo();
			$_g->data["getMissingCrmData query:"] = $value;
			#src/model/admin/SyncExternalContacts.hx:164: characters 4-77
			\S::sendErrors($tmp, $_g, new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 164,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "getMissing",
			]));
		}
		#src/model/admin/SyncExternalContacts.hx:166: lines 166-169
		if ($stmt->errorCode() !== "00000") {
			#src/model/admin/SyncExternalContacts.hx:168: characters 17-23
			$tmp = $this->dbData;
			#src/model/admin/SyncExternalContacts.hx:168: characters 24-63
			$_g = new StringMap();
			$value = $stmt->errorInfo();
			$_g->data["getMissingCrmData"] = $value;
			#src/model/admin/SyncExternalContacts.hx:168: characters 4-64
			\S::sendErrors($tmp, $_g, new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 168,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "getMissing",
			]));
		}
		#src/model/admin/SyncExternalContacts.hx:170: characters 3-66
		$res = ($stmt->execute() ? $stmt->fetchAll(\PDO::FETCH_ASSOC) : null);
		#src/model/admin/SyncExternalContacts.hx:171: characters 3-53
		$missing = ($res !== null ? count($res) : 0);
		#src/model/admin/SyncExternalContacts.hx:172: lines 172-174
		if ($missing === 0) {
			#src/model/admin/SyncExternalContacts.hx:173: characters 15-21
			$tmp = $this->dbData;
			#src/model/admin/SyncExternalContacts.hx:173: characters 22-67
			$_g = new StringMap();
			$value = mb_substr($sql, 0, 1100);
			$_g->data["OK? found 0 missing "] = $value;
			#src/model/admin/SyncExternalContacts.hx:173: characters 4-68
			\S::sendInfo($tmp, $_g);
		}
		#src/model/admin/SyncExternalContacts.hx:175: characters 3-8
		(Log::$trace)(($missing??'null') . " took:" . (microtime(true) - $start), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 175,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "getMissing",
		]));
		#src/model/admin/SyncExternalContacts.hx:176: characters 3-69
		$last_import_cid = $res[($missing - 1)]['id'];
		#src/model/admin/SyncExternalContacts.hx:177: characters 3-58
		$this->dbData->dataInfo->data["last_import_cid"] = $last_import_cid;
		#src/model/admin/SyncExternalContacts.hx:178: characters 3-8
		$start = microtime(true);
		#src/model/admin/SyncExternalContacts.hx:181: characters 14-28
		$data = array_values($res);
		$_g1_current = 0;
		$_g1_length = count($data);
		$_g1_data = $data;
		#src/model/admin/SyncExternalContacts.hx:181: lines 181-202
		while ($_g1_current < $_g1_length) {
			$row = $_g1_data[$_g1_current++];
			#src/model/admin/SyncExternalContacts.hx:185: characters 4-47
			$stmt = $this->upsertContact($row);
			#src/model/admin/SyncExternalContacts.hx:186: lines 186-201
			try {
				#src/model/admin/SyncExternalContacts.hx:188: characters 5-53
				$res = $stmt->fetch(\PDO::FETCH_NUM);
				#src/model/admin/SyncExternalContacts.hx:189: characters 5-10
				++$got;
				#src/model/admin/SyncExternalContacts.hx:190: lines 190-191
				if ($got < 3) {
					#src/model/admin/SyncExternalContacts.hx:191: characters 5-10
					(Log::$trace)("got " . ($got??'null') . " missing :)" . (\Std::string($res)??'null'), new HxAnon([
						"fileName" => "src/model/admin/SyncExternalContacts.hx",
						"lineNumber" => 191,
						"className" => "model.admin.SyncExternalContacts",
						"methodName" => "getMissing",
					]));
				}
			} catch(\Throwable $_g) {
				$e = Exception::caught($_g)->unwrap();
				#src/model/admin/SyncExternalContacts.hx:196: characters 19-25
				$tmp = $this->dbData;
				#src/model/admin/SyncExternalContacts.hx:196: lines 196-200
				$_g1 = new StringMap();
				$value = \S::$dbh->errorInfo();
				$_g1->data["dbError"] = $value;
				$value1 = \S::errorInfo($row, new HxAnon([
					"fileName" => "src/model/admin/SyncExternalContacts.hx",
					"lineNumber" => 198,
					"className" => "model.admin.SyncExternalContacts",
					"methodName" => "getMissing",
				]));
				$_g1->data["upsertContact"] = $value1;
				$_g1->data["exception"] = $e;
				\S::sendErrors($tmp, $_g1, new HxAnon([
					"fileName" => "src/model/admin/SyncExternalContacts.hx",
					"lineNumber" => 196,
					"className" => "model.admin.SyncExternalContacts",
					"methodName" => "getMissing",
				]));
			}
		}
		#src/model/admin/SyncExternalContacts.hx:203: characters 3-8
		(Log::$trace)("done took:" . (microtime(true) - $start), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 203,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "getMissing",
		]));
		#src/model/admin/SyncExternalContacts.hx:206: characters 3-8
		(Log::$trace)(($this->dbData->dataInfo === null ? "null" : $this->dbData->dataInfo->toString()), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 206,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "getMissing",
		]));
		#src/model/admin/SyncExternalContacts.hx:208: characters 14-20
		$tmp = $this->dbData;
		#src/model/admin/SyncExternalContacts.hx:208: characters 21-83
		$_g = new StringMap();
		$_g->data["missing"] = $missing;
		$_g->data["got"] = $got;
		$_g->data["max_client_id"] = $maxCid;
		#src/model/admin/SyncExternalContacts.hx:208: characters 3-84
		\S::sendInfo($tmp, $_g);
	}

	/**
	 * @return void
	 */
	public function importAll () {
		#src/model/admin/SyncExternalContacts.hx:67: lines 67-70
		if ((\S::$params->data["onlyNew"] ?? null)) {
			#src/model/admin/SyncExternalContacts.hx:69: characters 4-16
			$this->getMissing();
		}
	}

	/**
	 * @return void
	 */
	public function importCrmData () {
		#src/model/admin/SyncExternalContacts.hx:300: characters 9-46
		$cData = $this->getCrmData();
		#src/model/admin/SyncExternalContacts.hx:303: characters 14-30
		$data = array_values($cData);
		$_g_current = 0;
		$_g_length = count($data);
		$_g_data = $data;
		#src/model/admin/SyncExternalContacts.hx:303: lines 303-320
		while ($_g_current < $_g_length) {
			$row = $_g_data[$_g_current++];
			#src/model/admin/SyncExternalContacts.hx:307: characters 4-47
			$stmt = $this->upsertContact($row);
			#src/model/admin/SyncExternalContacts.hx:308: lines 308-319
			try {
				#src/model/admin/SyncExternalContacts.hx:309: characters 5-58
				$res = $stmt->fetchAll(\PDO::FETCH_ASSOC);
			} catch(\Throwable $_g) {
				$e = Exception::caught($_g)->unwrap();
				#src/model/admin/SyncExternalContacts.hx:314: characters 19-25
				$tmp = $this->dbData;
				#src/model/admin/SyncExternalContacts.hx:314: lines 314-318
				$_g1 = new StringMap();
				$value = \S::$dbh->errorInfo();
				$_g1->data["dbError"] = $value;
				$value1 = \S::errorInfo($row, new HxAnon([
					"fileName" => "src/model/admin/SyncExternalContacts.hx",
					"lineNumber" => 316,
					"className" => "model.admin.SyncExternalContacts",
					"methodName" => "importCrmData",
				]));
				$_g1->data["upsertContact"] = $value1;
				$_g1->data["exception"] = $e;
				\S::sendErrors($tmp, $_g1, new HxAnon([
					"fileName" => "src/model/admin/SyncExternalContacts.hx",
					"lineNumber" => 314,
					"className" => "model.admin.SyncExternalContacts",
					"methodName" => "importCrmData",
				]));
			}
		}
		#src/model/admin/SyncExternalContacts.hx:321: characters 9-14
		(Log::$trace)("done", new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 321,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "importCrmData",
		]));
		#src/model/admin/SyncExternalContacts.hx:322: characters 3-55
		$this1 = $this->dbData->dataInfo;
		$v = ($this->param->data["offset"] ?? null) + $this->synced;
		$this1->data["offset"] = $v;
		#src/model/admin/SyncExternalContacts.hx:323: characters 3-8
		(Log::$trace)(($this->dbData->dataInfo === null ? "null" : $this->dbData->dataInfo->toString()), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 323,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "importCrmData",
		]));
		#src/model/admin/SyncExternalContacts.hx:324: characters 9-33
		\S::sendData($this->dbData, null);
	}

	/**
	 * @return void
	 */
	public function importDealData2 () {
		#src/model/admin/SyncExternalContacts.hx:329: characters 9-46
		$cData = $this->getCrmData();
		#src/model/admin/SyncExternalContacts.hx:332: characters 14-30
		$data = array_values($cData);
		$_g_current = 0;
		$_g_length = count($data);
		$_g_data = $data;
		#src/model/admin/SyncExternalContacts.hx:332: lines 332-349
		while ($_g_current < $_g_length) {
			$row = $_g_data[$_g_current++];
			#src/model/admin/SyncExternalContacts.hx:336: characters 4-47
			$stmt = $this->upsertContact($row);
			#src/model/admin/SyncExternalContacts.hx:337: lines 337-348
			try {
				#src/model/admin/SyncExternalContacts.hx:338: characters 5-58
				$res = $stmt->fetchAll(\PDO::FETCH_ASSOC);
			} catch(\Throwable $_g) {
				$e = Exception::caught($_g)->unwrap();
				#src/model/admin/SyncExternalContacts.hx:343: characters 19-25
				$tmp = $this->dbData;
				#src/model/admin/SyncExternalContacts.hx:343: lines 343-347
				$_g1 = new StringMap();
				$value = \S::$dbh->errorInfo();
				$_g1->data["dbError"] = $value;
				$value1 = \S::errorInfo($row, new HxAnon([
					"fileName" => "src/model/admin/SyncExternalContacts.hx",
					"lineNumber" => 345,
					"className" => "model.admin.SyncExternalContacts",
					"methodName" => "importDealData2",
				]));
				$_g1->data["upsertContact"] = $value1;
				$_g1->data["exception"] = $e;
				\S::sendErrors($tmp, $_g1, new HxAnon([
					"fileName" => "src/model/admin/SyncExternalContacts.hx",
					"lineNumber" => 343,
					"className" => "model.admin.SyncExternalContacts",
					"methodName" => "importDealData2",
				]));
			}
		}
		#src/model/admin/SyncExternalContacts.hx:350: characters 9-14
		(Log::$trace)("done", new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 350,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "importDealData2",
		]));
		#src/model/admin/SyncExternalContacts.hx:351: characters 3-55
		$this1 = $this->dbData->dataInfo;
		$v = ($this->param->data["offset"] ?? null) + $this->synced;
		$this1->data["offset"] = $v;
		#src/model/admin/SyncExternalContacts.hx:352: characters 3-8
		(Log::$trace)(($this->dbData->dataInfo === null ? "null" : $this->dbData->dataInfo->toString()), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 352,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "importDealData2",
		]));
		#src/model/admin/SyncExternalContacts.hx:353: characters 9-33
		\S::sendData($this->dbData, null);
	}

	/**
	 * @return void
	 */
	public function mergeContacts () {
		#src/model/admin/SyncExternalContacts.hx:234: lines 234-235
		$sql = "SELECT array_to_string(array(SELECT unnest(merged) from contacts group by merged), ',')";
		#src/model/admin/SyncExternalContacts.hx:236: characters 3-44
		$stmt = \S::$dbh->query($sql);
		#src/model/admin/SyncExternalContacts.hx:237: lines 237-241
		if ($stmt === false) {
			#src/model/admin/SyncExternalContacts.hx:239: characters 4-9
			(Log::$trace)("" . ($sql??'null') . " " . (\Std::parseInt(($this->param->data["limit"] ?? null))??'null'), new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 239,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "mergeContacts",
			]));
			#src/model/admin/SyncExternalContacts.hx:240: characters 17-23
			$tmp = $this->dbData;
			#src/model/admin/SyncExternalContacts.hx:240: characters 25-67
			$_g = new StringMap();
			$value = \S::$dbh->errorInfo();
			$_g->data["getMergedIDs query:"] = $value;
			#src/model/admin/SyncExternalContacts.hx:240: characters 4-68
			\S::sendErrors($tmp, $_g, new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 240,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "mergeContacts",
			]));
		}
		#src/model/admin/SyncExternalContacts.hx:242: lines 242-245
		if ($stmt->errorCode() !== "00000") {
			#src/model/admin/SyncExternalContacts.hx:244: characters 4-9
			(Log::$trace)($stmt->errorInfo(), new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 244,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "mergeContacts",
			]));
		}
		#src/model/admin/SyncExternalContacts.hx:246: characters 3-80
		$merged_ids = ($stmt->execute() ? $stmt->fetch(\PDO::FETCH_COLUMN, 0) : null);
		#src/model/admin/SyncExternalContacts.hx:247: characters 3-8
		(Log::$trace)((mb_substr($merged_ids, 0, 40)??'null') . "...", new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 247,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "mergeContacts",
		]));
		#src/model/admin/SyncExternalContacts.hx:248: characters 3-33
		$sql = "\x0D\x0A" . ("UPDATE contacts SET state='merged' WHERE id IN(" . ($merged_ids??'null') . ")\x0D\x0A") . "";
		#src/model/admin/SyncExternalContacts.hx:251: characters 3-26
		$stmt = \S::$dbh->query($sql);
		#src/model/admin/SyncExternalContacts.hx:252: lines 252-256
		if ($stmt === false) {
			#src/model/admin/SyncExternalContacts.hx:254: characters 4-9
			(Log::$trace)("" . ($sql??'null'), new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 254,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "mergeContacts",
			]));
			#src/model/admin/SyncExternalContacts.hx:255: characters 17-23
			$tmp = $this->dbData;
			#src/model/admin/SyncExternalContacts.hx:255: characters 25-70
			$_g = new StringMap();
			$value = \S::$dbh->errorInfo();
			$_g->data["updateMergedIDs query:"] = $value;
			#src/model/admin/SyncExternalContacts.hx:255: characters 4-71
			\S::sendErrors($tmp, $_g, new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 255,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "mergeContacts",
			]));
		}
		#src/model/admin/SyncExternalContacts.hx:257: lines 257-260
		if ($stmt->errorCode() !== "00000") {
			#src/model/admin/SyncExternalContacts.hx:259: characters 4-9
			(Log::$trace)($stmt->errorInfo(), new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 259,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "mergeContacts",
			]));
		}
		#src/model/admin/SyncExternalContacts.hx:261: characters 3-41
		$updated_ids = $stmt->execute();
		#src/model/admin/SyncExternalContacts.hx:262: characters 3-8
		(Log::$trace)(($updated_ids ? "OK:" . ($stmt->rowCount()??'null') : "" . ($sql??'null')), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 262,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "mergeContacts",
		]));
		#src/model/admin/SyncExternalContacts.hx:264: characters 3-67
		$sql = "SELECT id, merged from contacts WHERE merged IS NOT NULL";
		#src/model/admin/SyncExternalContacts.hx:265: characters 3-26
		$stmt = \S::$dbh->query($sql);
		#src/model/admin/SyncExternalContacts.hx:266: lines 266-270
		if ($stmt === false) {
			#src/model/admin/SyncExternalContacts.hx:268: characters 4-9
			(Log::$trace)("" . ($sql??'null') . " " . (\Std::parseInt(($this->param->data["limit"] ?? null))??'null'), new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 268,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "mergeContacts",
			]));
			#src/model/admin/SyncExternalContacts.hx:269: characters 17-23
			$tmp = $this->dbData;
			#src/model/admin/SyncExternalContacts.hx:269: characters 25-67
			$_g = new StringMap();
			$value = \S::$dbh->errorInfo();
			$_g->data["getMergedIDs query:"] = $value;
			#src/model/admin/SyncExternalContacts.hx:269: characters 4-68
			\S::sendErrors($tmp, $_g, new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 269,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "mergeContacts",
			]));
		}
		#src/model/admin/SyncExternalContacts.hx:271: lines 271-275
		if ($stmt->errorCode() !== "00000") {
			#src/model/admin/SyncExternalContacts.hx:273: characters 4-9
			(Log::$trace)($stmt->errorInfo(), new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 273,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "mergeContacts",
			]));
			#src/model/admin/SyncExternalContacts.hx:274: characters 17-23
			$tmp = $this->dbData;
			#src/model/admin/SyncExternalContacts.hx:274: characters 25-66
			$_g = new StringMap();
			$value = $stmt->errorInfo();
			$_g->data["getMergedIDs query:"] = $value;
			#src/model/admin/SyncExternalContacts.hx:274: characters 4-67
			\S::sendErrors($tmp, $_g, new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 274,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "mergeContacts",
			]));
		}
		#src/model/admin/SyncExternalContacts.hx:276: characters 3-78
		$res = ($stmt->execute() ? $stmt->fetchAll(\PDO::FETCH_ASSOC) : null);
		#src/model/admin/SyncExternalContacts.hx:277: characters 3-8
		(Log::$trace)((\Array_hx::wrap($res)->arr[0] ?? null), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 277,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "mergeContacts",
		]));
		#src/model/admin/SyncExternalContacts.hx:278: characters 14-20
		$tmp = $this->dbData;
		#src/model/admin/SyncExternalContacts.hx:278: characters 21-45
		$_g = new StringMap();
		$value = $stmt->rowCount();
		$_g->data["OK"] = $value;
		#src/model/admin/SyncExternalContacts.hx:278: characters 3-46
		\S::sendInfo($tmp, $_g);
	}

	/**
	 * @return DbData
	 */
	public function saveClientDetails () {
		#src/model/admin/SyncExternalContacts.hx:394: characters 9-29
		$updated = 0;
		#src/model/admin/SyncExternalContacts.hx:396: characters 9-38
		$stmt = null;
		#src/model/admin/SyncExternalContacts.hx:397: characters 15-56
		$tmp = ($this->dbData->dataRows->arr[$this->dbData->dataRows->length - 2] ?? null);
		#src/model/admin/SyncExternalContacts.hx:397: characters 9-14
		(Log::$trace)(($tmp === null ? "null" : $tmp->toString()), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 397,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "saveClientDetails",
		]));
		#src/model/admin/SyncExternalContacts.hx:398: lines 398-411
		$_g = 0;
		$_g1 = $this->dbData->dataRows;
		while ($_g < $_g1->length) {
			#src/model/admin/SyncExternalContacts.hx:398: characters 13-15
			$dR = ($_g1->arr[$_g] ?? null);
			#src/model/admin/SyncExternalContacts.hx:398: lines 398-411
			++$_g;
			#src/model/admin/SyncExternalContacts.hx:400: characters 13-105
			$external_text = $this->row2jsonb(Lib::objectOfAssociativeArray($dR->data));
			#src/model/admin/SyncExternalContacts.hx:401: lines 401-403
			$sql = "\x0D\x0A" . ("UPDATE crm.users SET active='" . (($dR->data["active"] ?? null)??'null') . "',edited_by=101, external = jsonb_object('{" . ($external_text??'null') . "}')::jsonb WHERE user_name='" . (($dR->data["user"] ?? null)??'null') . "'\x0D\x0A") . "";
			#src/model/admin/SyncExternalContacts.hx:405: characters 13-68
			$q = \S::$dbh->query($sql);
			#src/model/admin/SyncExternalContacts.hx:406: lines 406-410
			if (!$q) {
				#src/model/admin/SyncExternalContacts.hx:408: characters 16-78
				$this1 = $this->dbData->dataErrors;
				$k = "" . ($this->action??'null');
				$v = \Std::string(\S::$dbh->errorInfo());
				$this1->data[$k] = $v;
				#src/model/admin/SyncExternalContacts.hx:409: characters 16-29
				return $this->dbData;
			}
		}
		#src/model/admin/SyncExternalContacts.hx:412: characters 27-94
		$_g = new StringMap();
		$_g->data["saveClientDetails"] = "OK";
		$value = \Std::string($updated);
		$_g->data["updatedRows"] = $value;
		#src/model/admin/SyncExternalContacts.hx:412: characters 9-94
		$this->dbData->dataInfo = $_g;
		#src/model/admin/SyncExternalContacts.hx:413: characters 9-14
		(Log::$trace)(($this->dbData->dataInfo === null ? "null" : $this->dbData->dataInfo->toString()), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 413,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "saveClientDetails",
		]));
		#src/model/admin/SyncExternalContacts.hx:414: characters 3-16
		return $this->dbData;
	}

	/**
	 * @return void
	 */
	public function syncAll () {
		#src/model/admin/SyncExternalContacts.hx:282: characters 3-8
		(Log::$trace)(($this->param === null ? "null" : $this->param->toString()), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 282,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "syncAll",
		]));
		#src/model/admin/SyncExternalContacts.hx:283: characters 3-15
		$this->getMissing();
		#src/model/admin/SyncExternalContacts.hx:285: lines 285-286
		if (($this->param->data["offset"] ?? null) === null) {
			#src/model/admin/SyncExternalContacts.hx:286: characters 4-25
			$this->param->data["offset"] = "0";
		}
		#src/model/admin/SyncExternalContacts.hx:287: lines 287-288
		if (($this->param->data["limit"] ?? null) === null) {
			#src/model/admin/SyncExternalContacts.hx:288: characters 4-27
			$this->param->data["limit"] = "1000";
		}
		#src/model/admin/SyncExternalContacts.hx:289: lines 289-292
		if ((\Std::parseInt(($this->param->data["offset"] ?? null)) + \Std::parseInt(($this->param->data["limit"] ?? null))) > \Std::parseInt(($this->param->data["maxImport"] ?? null))) {
			#src/model/admin/SyncExternalContacts.hx:291: characters 4-97
			$this1 = $this->param;
			$v = \Std::string(\Std::parseInt(($this->param->data["maxImport"] ?? null)) - \Std::parseInt(($this->param->data["offset"] ?? null)));
			$this1->data["limit"] = $v;
		}
		#src/model/admin/SyncExternalContacts.hx:293: characters 3-8
		(Log::$trace)(($this->param === null ? "null" : $this->param->toString()), new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 293,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "syncAll",
		]));
		#src/model/admin/SyncExternalContacts.hx:294: characters 3-18
		$this->importCrmData();
		#src/model/admin/SyncExternalContacts.hx:295: characters 16-22
		$tmp = $this->dbData;
		#src/model/admin/SyncExternalContacts.hx:295: characters 23-43
		$_g = new StringMap();
		$_g->data["syncAll"] = "NOTOK";
		#src/model/admin/SyncExternalContacts.hx:295: characters 3-44
		\S::sendErrors($tmp, $_g, new HxAnon([
			"fileName" => "src/model/admin/SyncExternalContacts.hx",
			"lineNumber" => 295,
			"className" => "model.admin.SyncExternalContacts",
			"methodName" => "syncAll",
		]));
	}

	/**
	 * @return void
	 */
	public function syncImportDeals () {
		#src/model/admin/SyncExternalContacts.hx:212: characters 3-25
		$max_id = null;
		#src/model/admin/SyncExternalContacts.hx:213: lines 213-229
		if (($this->param->data["onlyNew"] ?? null)) {
			#src/model/admin/SyncExternalContacts.hx:214: characters 4-54
			$sql = "SELECT MAX(contact) FROM deals";
			#src/model/admin/SyncExternalContacts.hx:215: characters 4-45
			$stmt = \S::$dbh->query($sql);
			#src/model/admin/SyncExternalContacts.hx:216: lines 216-220
			if ($stmt === false) {
				#src/model/admin/SyncExternalContacts.hx:218: characters 5-10
				(Log::$trace)("" . ($sql??'null'), new HxAnon([
					"fileName" => "src/model/admin/SyncExternalContacts.hx",
					"lineNumber" => 218,
					"className" => "model.admin.SyncExternalContacts",
					"methodName" => "syncImportDeals",
				]));
				#src/model/admin/SyncExternalContacts.hx:219: characters 18-24
				$tmp = $this->dbData;
				#src/model/admin/SyncExternalContacts.hx:219: characters 26-73
				$_g = new StringMap();
				$value = \S::$dbh->errorInfo();
				$_g->data["syncImportDeals onlyNew:"] = $value;
				#src/model/admin/SyncExternalContacts.hx:219: characters 5-74
				\S::sendErrors($tmp, $_g, new HxAnon([
					"fileName" => "src/model/admin/SyncExternalContacts.hx",
					"lineNumber" => 219,
					"className" => "model.admin.SyncExternalContacts",
					"methodName" => "syncImportDeals",
				]));
			}
			#src/model/admin/SyncExternalContacts.hx:221: lines 221-225
			if ($stmt->errorCode() !== "00000") {
				#src/model/admin/SyncExternalContacts.hx:223: characters 5-10
				(Log::$trace)($stmt->errorInfo(), new HxAnon([
					"fileName" => "src/model/admin/SyncExternalContacts.hx",
					"lineNumber" => 223,
					"className" => "model.admin.SyncExternalContacts",
					"methodName" => "syncImportDeals",
				]));
				#src/model/admin/SyncExternalContacts.hx:224: characters 18-24
				$tmp = $this->dbData;
				#src/model/admin/SyncExternalContacts.hx:224: characters 26-72
				$_g = new StringMap();
				$value = $stmt->errorInfo();
				$_g->data["syncImportDeals onlyNew:"] = $value;
				#src/model/admin/SyncExternalContacts.hx:224: characters 5-73
				\S::sendErrors($tmp, $_g, new HxAnon([
					"fileName" => "src/model/admin/SyncExternalContacts.hx",
					"lineNumber" => 224,
					"className" => "model.admin.SyncExternalContacts",
					"methodName" => "syncImportDeals",
				]));
			}
			#src/model/admin/SyncExternalContacts.hx:226: characters 29-59
			$max_id = ($stmt->execute() ? $stmt->fetch(\PDO::FETCH_COLUMN, 0) : null);
			#src/model/admin/SyncExternalContacts.hx:227: characters 4-9
			(Log::$trace)("imported deals max_id: " . ($max_id??'null'), new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 227,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "syncImportDeals",
			]));
		}
		#src/model/admin/SyncExternalContacts.hx:230: characters 3-67
		SyncExternalDeals::importDeals(\S::$dbh, $this->dbData, $this->getCrmData($max_id));
	}

	/**
	 * @param mixed $v
	 * 
	 * @return bool
	 */
	public function testValue ($v) {
		#src/model/admin/SyncExternalContacts.hx:356: characters 47-60
		return $v;
	}

	/**
	 * @param mixed $rD
	 * 
	 * @return \PDOStatement
	 */
	public function upsertContact ($rD) {
		#src/model/admin/SyncExternalContacts.hx:361: characters 3-58
		$cD = \Util::map2fields($rD, $this->keys);
		#src/model/admin/SyncExternalContacts.hx:362: characters 36-59
		$_g = new \Array_hx();
		#src/model/admin/SyncExternalContacts.hx:362: characters 46-55
		$k = new NativeIndexedArrayIterator(array_values(array_map("strval", array_keys($cD->data))));
		while ($k->hasNext()) {
			#src/model/admin/SyncExternalContacts.hx:362: characters 37-58
			$k1 = $k->next();
			#src/model/admin/SyncExternalContacts.hx:362: characters 57-58
			$_g->arr[$_g->length++] = $k1;
		}
		#src/model/admin/SyncExternalContacts.hx:362: characters 9-60
		$cNames = $_g;
		#src/model/admin/SyncExternalContacts.hx:364: characters 38-58
		$_g = new \Array_hx();
		#src/model/admin/SyncExternalContacts.hx:364: characters 39-57
		$_g1 = 0;
		while ($_g1 < $cNames->length) {
			#src/model/admin/SyncExternalContacts.hx:364: characters 43-44
			$k = ($cNames->arr[$_g1] ?? null);
			#src/model/admin/SyncExternalContacts.hx:364: characters 39-57
			++$_g1;
			#src/model/admin/SyncExternalContacts.hx:364: characters 56-57
			$_g->arr[$_g->length++] = $k;
		}
		#src/model/admin/SyncExternalContacts.hx:364: characters 38-89
		$result = [];
		$data = $_g->arr;
		$_g_current = 0;
		$_g_length = count($data);
		$_g_data = $data;
		while ($_g_current < $_g_length) {
			$item = $_g_data[$_g_current++];
			$result[] = (":" . ($item??'null'));
		}
		#src/model/admin/SyncExternalContacts.hx:364: characters 3-90
		$cPlaceholders = \Array_hx::wrap($result);
		#src/model/admin/SyncExternalContacts.hx:365: lines 365-367
		$_g = new \Array_hx();
		#src/model/admin/SyncExternalContacts.hx:366: characters 4-56
		$_g1 = 0;
		#src/model/admin/SyncExternalContacts.hx:366: characters 13-53
		$result = [];
		$data = $cNames->arr;
		$_g_current = 0;
		$_g_length = count($data);
		$_g_data = $data;
		while ($_g_current < $_g_length) {
			$item = $_g_data[$_g_current++];
			if ($item !== "id") {
				$result[] = $item;
			}
		}
		#src/model/admin/SyncExternalContacts.hx:366: characters 4-56
		$_g2 = \Array_hx::wrap($result);
		while ($_g1 < $_g2->length) {
			#src/model/admin/SyncExternalContacts.hx:366: characters 8-9
			$k = ($_g2->arr[$_g1] ?? null);
			#src/model/admin/SyncExternalContacts.hx:366: characters 4-56
			++$_g1;
			#src/model/admin/SyncExternalContacts.hx:366: characters 55-56
			$_g->arr[$_g->length++] = $k;
		}
		#src/model/admin/SyncExternalContacts.hx:365: lines 365-367
		$result = [];
		$data = $_g->arr;
		$_g_current = 0;
		$_g_length = count($data);
		$_g_data = $data;
		while ($_g_current < $_g_length) {
			$item = $_g_data[$_g_current++];
			$result[] = (" \"" . ($item??'null') . "\"=:" . ($item??'null'));
		}
		$cSet = \Array_hx::wrap($result)->join(",");
		#src/model/admin/SyncExternalContacts.hx:369: lines 369-374
		$sql = "\x0D\x0A" . ("INSERT INTO contacts (" . ($cNames->join(",")??'null') . ")\x0D\x0A") . ("VALUES (" . ($cPlaceholders->join(",")??'null') . ")\x0D\x0A") . "ON CONFLICT (id) DO UPDATE\x0D\x0A" . ("SET " . ($cSet??'null') . " returning id;\x0D\x0A") . "";
		#src/model/admin/SyncExternalContacts.hx:376: characters 3-65
		$stmt = \S::$dbh->prepare($sql, ((array)(null)));
		#src/model/admin/SyncExternalContacts.hx:377: characters 3-49
		\Util::bindClientData("contacts", $stmt, $rD, $this->dbData);
		#src/model/admin/SyncExternalContacts.hx:378: lines 378-384
		if (!$stmt->execute()) {
			#src/model/admin/SyncExternalContacts.hx:379: characters 4-9
			(Log::$trace)($rD, new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 379,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "upsertContact",
			]));
			#src/model/admin/SyncExternalContacts.hx:380: characters 4-9
			(Log::$trace)($stmt->errorInfo(), new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 380,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "upsertContact",
			]));
			#src/model/admin/SyncExternalContacts.hx:381: characters 17-23
			$tmp = $this->dbData;
			#src/model/admin/SyncExternalContacts.hx:381: lines 381-383
			$_g = new StringMap();
			$value = Lib::hashOfAssociativeArray($stmt->errorInfo());
			$_g->data["execute"] = $value;
			$_g->data["sql"] = $sql;
			$value = \Std::string($rD['id']);
			$_g->data["id"] = $value;
			\S::sendErrors($tmp, $_g, new HxAnon([
				"fileName" => "src/model/admin/SyncExternalContacts.hx",
				"lineNumber" => 381,
				"className" => "model.admin.SyncExternalContacts",
				"methodName" => "upsertContact",
			]));
		}
		#src/model/admin/SyncExternalContacts.hx:387: characters 3-11
		$this->synced++;
		#src/model/admin/SyncExternalContacts.hx:388: characters 3-14
		return $stmt;
	}
}

Boot::registerClass(SyncExternalContacts::class, 'model.admin.SyncExternalContacts');
