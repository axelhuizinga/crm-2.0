<?php
/**
 * Generated by Haxe 4.1.1
 * Haxe source file: src/model/admin/CreateHistoryTrigger.hx
 */

namespace model\admin;

use \php\_Boot\HxAnon;
use \php\Boot;
use \haxe\Log;
use \php\_Boot\HxString;
use \haxe\ds\StringMap;

/**
 * ...
 * @author axel@bi4.me
 */
class CreateHistoryTrigger extends \Model {
	/**
	 * @param StringMap $param
	 * 
	 * @return void
	 */
	public static function _create ($param) {
		#src/model/admin/CreateHistoryTrigger.hx:25: characters 3-67
		$self = new CreateHistoryTrigger($param);
		#src/model/admin/CreateHistoryTrigger.hx:28: characters 10-21
		if ($self->action === "run") {
			#src/model/admin/CreateHistoryTrigger.hx:30: characters 5-15
			$self->run();
		} else {
			#src/model/admin/CreateHistoryTrigger.hx:33: characters 5-10
			(Log::$trace)($self->action, new HxAnon([
				"fileName" => "src/model/admin/CreateHistoryTrigger.hx",
				"lineNumber" => 33,
				"className" => "model.admin.CreateHistoryTrigger",
				"methodName" => "_create",
			]));
		}
	}

	/**
	 * @param StringMap $param
	 * 
	 * @return void
	 */
	public function __construct ($param = null) {
		#src/model/admin/CreateHistoryTrigger.hx:21: lines 21-100
		parent::__construct($param);
	}

	/**
	 * @param string $tableName
	 * 
	 * @return void
	 */
	public function createTrigger ($tableName) {
		#src/model/admin/CreateHistoryTrigger.hx:87: lines 87-89
		$activateTrigger = "\x0A" . ("SELECT audit.audit_table('" . ($tableName??'null') . "');\x0A") . "";
		#src/model/admin/CreateHistoryTrigger.hx:91: characters 3-8
		(Log::$trace)($activateTrigger, new HxAnon([
			"fileName" => "src/model/admin/CreateHistoryTrigger.hx",
			"lineNumber" => 91,
			"className" => "model.admin.CreateHistoryTrigger",
			"methodName" => "createTrigger",
		]));
		#src/model/admin/CreateHistoryTrigger.hx:92: characters 3-30
		\S::$dbh->exec($activateTrigger);
		#src/model/admin/CreateHistoryTrigger.hx:93: lines 93-97
		if (\S::$dbh->errorCode() !== "00000") {
			#src/model/admin/CreateHistoryTrigger.hx:95: characters 4-9
			(Log::$trace)(\S::$dbh->errorInfo(), new HxAnon([
				"fileName" => "src/model/admin/CreateHistoryTrigger.hx",
				"lineNumber" => 95,
				"className" => "model.admin.CreateHistoryTrigger",
				"methodName" => "createTrigger",
			]));
			#src/model/admin/CreateHistoryTrigger.hx:96: characters 4-15
			exit(0);
		}
	}

	/**
	 * @return void
	 */
	public function run () {
		#src/model/admin/CreateHistoryTrigger.hx:39: lines 39-43
		$sql = "\x0A" . "SELECT string_agg(table_name, ',')\x0A" . "FROM information_schema.tables \x0A" . "WHERE table_schema LIKE 'crm' GROUP BY (table_schema)\x0A" . "";
		#src/model/admin/CreateHistoryTrigger.hx:45: characters 3-53
		$getTableNames = \S::$dbh->query($sql);
		#src/model/admin/CreateHistoryTrigger.hx:46: lines 46-50
		if (!$getTableNames) {
			#src/model/admin/CreateHistoryTrigger.hx:48: characters 4-9
			(Log::$trace)(\S::$dbh->errorInfo(), new HxAnon([
				"fileName" => "src/model/admin/CreateHistoryTrigger.hx",
				"lineNumber" => 48,
				"className" => "model.admin.CreateHistoryTrigger",
				"methodName" => "run",
			]));
			#src/model/admin/CreateHistoryTrigger.hx:49: characters 4-15
			exit(0);
		}
		#src/model/admin/CreateHistoryTrigger.hx:51: characters 3-30
		$getTableNames->execute(null);
		#src/model/admin/CreateHistoryTrigger.hx:52: characters 3-8
		(Log::$trace)(Boot::getInstanceClosure($getTableNames, 'rowCount'), new HxAnon([
			"fileName" => "src/model/admin/CreateHistoryTrigger.hx",
			"lineNumber" => 52,
			"className" => "model.admin.CreateHistoryTrigger",
			"methodName" => "run",
		]));
		#src/model/admin/CreateHistoryTrigger.hx:54: characters 3-73
		$tableNames = HxString::split($getTableNames->fetchColumn(), ",");
		#src/model/admin/CreateHistoryTrigger.hx:55: lines 55-61
		$getActiveTriggerTables = \S::$dbh->query("\x0A\x09\x09select string_agg(tbl.relname, ',') as trigger_tables\x0AFROM pg_trigger trg JOIN pg_class tbl on trg.tgrelid = tbl.oid\x0AWHERE trg.tgname = 'audit_trigger_row' AND  trg.tgenabled='O'\x0AGROUP BY(trg.tgname);\x0A\x09\x09");
		#src/model/admin/CreateHistoryTrigger.hx:62: characters 3-39
		$getActiveTriggerTables->execute(null);
		#src/model/admin/CreateHistoryTrigger.hx:63: characters 3-82
		$actTTNames = HxString::split($getActiveTriggerTables->fetchColumn(), ",");
		#src/model/admin/CreateHistoryTrigger.hx:64: lines 64-80
		$_g = 0;
		while ($_g < $tableNames->length) {
			#src/model/admin/CreateHistoryTrigger.hx:64: characters 8-12
			$name = ($tableNames->arr[$_g] ?? null);
			#src/model/admin/CreateHistoryTrigger.hx:64: lines 64-80
			++$_g;
			#src/model/admin/CreateHistoryTrigger.hx:66: lines 66-78
			if (\Lambda::has($actTTNames, $name)) {
				#src/model/admin/CreateHistoryTrigger.hx:68: characters 5-10
				(Log::$trace)("HistoryTrigger on Table " . ($name??'null') . " is active", new HxAnon([
					"fileName" => "src/model/admin/CreateHistoryTrigger.hx",
					"lineNumber" => 68,
					"className" => "model.admin.CreateHistoryTrigger",
					"methodName" => "run",
				]));
				#src/model/admin/CreateHistoryTrigger.hx:70: characters 5-68
				array_push($this->data->rows,("" . ($name??'null') . " ist aktiv"));
			} else {
				#src/model/admin/CreateHistoryTrigger.hx:74: characters 5-10
				(Log::$trace)($name, new HxAnon([
					"fileName" => "src/model/admin/CreateHistoryTrigger.hx",
					"lineNumber" => 74,
					"className" => "model.admin.CreateHistoryTrigger",
					"methodName" => "run",
				]));
				#src/model/admin/CreateHistoryTrigger.hx:75: characters 5-24
				$this->createTrigger($name);
				#src/model/admin/CreateHistoryTrigger.hx:77: characters 5-67
				array_push($this->data->rows,("" . ($name??'null') . " erstellt"));
			}
		}
		#src/model/admin/CreateHistoryTrigger.hx:81: characters 3-8
		(Log::$trace)(count($this->data->rows), new HxAnon([
			"fileName" => "src/model/admin/CreateHistoryTrigger.hx",
			"lineNumber" => 81,
			"className" => "model.admin.CreateHistoryTrigger",
			"methodName" => "run",
		]));
		#src/model/admin/CreateHistoryTrigger.hx:82: characters 3-16
		$this->json_encode();
	}
}

Boot::registerClass(CreateHistoryTrigger::class, 'model.admin.CreateHistoryTrigger');
